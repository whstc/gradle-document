From: <Saved by Blink>
Subject: Jetty : The Definitive Reference
Date: Thu, 25 Jan 2017 03:55:17 -0000
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--kNTC2G33TKXM0ZeBhbnnHiSRImEoCfPtQPV8fXqcOt----"

------MultipartBoundary--kNTC2G33TKXM0ZeBhbnnHiSRImEoCfPtQPV8fXqcOt----
Content-Type: text/html
Content-ID: <frame-293-20c7c6d9-1c5b-4eaf-89ff-8cea111e0db4@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html

<!DOCTYPE html><html lang=3D"en"><head><meta http-equiv=3D"Content-Type" co=
ntent=3D"text/html; charset=3DUTF-8">

<!--[if IE]><meta http-equiv=3D"X-UA-Compatible" content=3D"IE=3Dedge"><![e=
ndif]-->
<meta name=3D"viewport" content=3D"width=3Ddevice-width, initial-scale=3D1.=
0">
<meta name=3D"generator" content=3D"Asciidoctor 1.5.5">
<title>Jetty : The Definitive Reference</title>
<link rel=3D"stylesheet" href=3D"https://fonts.googleapis.com/css?family=3D=
Open+Sans:300,300italic,400,400italic,600,600italic%7CNoto+Serif:400,400ita=
lic,700,700italic%7CDroid+Sans+Mono:400,700">
<style>
/* Asciidoctor default stylesheet | MIT License | http://asciidoctor.org */
/* Remove comment around @import statement below when using as a custom sty=
lesheet */
/*@import "https://fonts.googleapis.com/css?family=3DOpen+Sans:300,300itali=
c,400,400italic,600,600italic%7CNoto+Serif:400,400italic,700,700italic%7CDr=
oid+Sans+Mono:400,700";*/
article,aside,details,figcaption,figure,footer,header,hgroup,main,nav,secti=
on,summary{display:block}
audio,canvas,video{display:inline-block}
audio:not([controls]){display:none;height:0}
[hidden],template{display:none}
script{display:none!important}
html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adj=
ust:100%}
a{background:transparent}
a:focus{outline:thin dotted}
a:active,a:hover{outline:0}
h1{font-size:2em;margin:.67em 0}
abbr[title]{border-bottom:1px dotted}
b,strong{font-weight:bold}
dfn{font-style:italic}
hr{-moz-box-sizing:content-box;box-sizing:content-box;height:0}
mark{background:#ff0;color:#000}
code,kbd,pre,samp{font-family:monospace;font-size:1em}
pre{white-space:pre-wrap}
q{quotes:"\201C" "\201D" "\2018" "\2019"}
small{font-size:80%}
sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseli=
ne}
sup{top:-.5em}
sub{bottom:-.25em}
img{border:0}
svg:not(:root){overflow:hidden}
figure{margin:0}
fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}
legend{border:0;padding:0}
button,input,select,textarea{font-family:inherit;font-size:100%;margin:0}
button,input{line-height:normal}
button,select{text-transform:none}
button,html input[type=3D"button"],input[type=3D"reset"],input[type=3D"subm=
it"]{-webkit-appearance:button;cursor:pointer}
button[disabled],html input[disabled]{cursor:default}
input[type=3D"checkbox"],input[type=3D"radio"]{box-sizing:border-box;paddin=
g:0}
input[type=3D"search"]{-webkit-appearance:textfield;-moz-box-sizing:content=
-box;-webkit-box-sizing:content-box;box-sizing:content-box}
input[type=3D"search"]::-webkit-search-cancel-button,input[type=3D"search"]=
::-webkit-search-decoration{-webkit-appearance:none}
button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}
textarea{overflow:auto;vertical-align:top}
table{border-collapse:collapse;border-spacing:0}
*,*:before,*:after{-moz-box-sizing:border-box;-webkit-box-sizing:border-box=
;box-sizing:border-box}
html,body{font-size:100%}
body{background:#fff;color:rgba(0,0,0,.8);padding:0;margin:0;font-family:"N=
oto Serif","DejaVu Serif",serif;font-weight:400;font-style:normal;line-heig=
ht:1;position:relative;cursor:auto;tab-size:4;-moz-osx-font-smoothing:grays=
cale;-webkit-font-smoothing:antialiased}
a:hover{cursor:pointer}
img,object,embed{max-width:100%;height:auto}
object,embed{height:100%}
img{-ms-interpolation-mode:bicubic}
.left{float:left!important}
.right{float:right!important}
.text-left{text-align:left!important}
.text-right{text-align:right!important}
.text-center{text-align:center!important}
.text-justify{text-align:justify!important}
.hide{display:none}
img,object,svg{display:inline-block;vertical-align:middle}
textarea{height:auto;min-height:50px}
select{width:100%}
.center{margin-left:auto;margin-right:auto}
.spread{width:100%}
p.lead,.paragraph.lead>p,#preamble>.sectionbody>.paragraph:first-of-type p{=
font-size:1.21875em;line-height:1.6}
.subheader,.admonitionblock td.content>.title,.audioblock>.title,.examplebl=
ock>.title,.imageblock>.title,.listingblock>.title,.literalblock>.title,.st=
emblock>.title,.openblock>.title,.paragraph>.title,.quoteblock>.title,table=
.tableblock>.title,.verseblock>.title,.videoblock>.title,.dlist>.title,.oli=
st>.title,.ulist>.title,.qlist>.title,.hdlist>.title{line-height:1.45;color=
:#7a2518;font-weight:400;margin-top:0;margin-bottom:.25em}
div,dl,dt,dd,ul,ol,li,h1,h2,h3,#toctitle,.sidebarblock>.content>.title,h4,h=
5,h6,pre,form,p,blockquote,th,td{margin:0;padding:0;direction:ltr}
a{color:#2156a5;text-decoration:underline;line-height:inherit}
a:hover,a:focus{color:#1d4b8f}
a img{border:none}
p{font-family:inherit;font-weight:400;font-size:1em;line-height:1.6;margin-=
bottom:1.25em;text-rendering:optimizeLegibility}
p aside{font-size:.875em;line-height:1.35;font-style:italic}
h1,h2,h3,#toctitle,.sidebarblock>.content>.title,h4,h5,h6{font-family:"Open=
 Sans","DejaVu Sans",sans-serif;font-weight:300;font-style:normal;color:#ba=
3925;text-rendering:optimizeLegibility;margin-top:1em;margin-bottom:.5em;li=
ne-height:1.0125em}
h1 small,h2 small,h3 small,#toctitle small,.sidebarblock>.content>.title sm=
all,h4 small,h5 small,h6 small{font-size:60%;color:#e99b8f;line-height:0}
h1{font-size:2.125em}
h2{font-size:1.6875em}
h3,#toctitle,.sidebarblock>.content>.title{font-size:1.375em}
h4,h5{font-size:1.125em}
h6{font-size:1em}
hr{border:solid #ddddd8;border-width:1px 0 0;clear:both;margin:1.25em 0 1.1=
875em;height:0}
em,i{font-style:italic;line-height:inherit}
strong,b{font-weight:bold;line-height:inherit}
small{font-size:60%;line-height:inherit}
code{font-family:"Droid Sans Mono","DejaVu Sans Mono",monospace;font-weight=
:400;color:rgba(0,0,0,.9)}
ul,ol,dl{font-size:1em;line-height:1.6;margin-bottom:1.25em;list-style-posi=
tion:outside;font-family:inherit}
ul,ol,ul.no-bullet,ol.no-bullet{margin-left:1.5em}
ul li ul,ul li ol{margin-left:1.25em;margin-bottom:0;font-size:1em}
ul.square li ul,ul.circle li ul,ul.disc li ul{list-style:inherit}
ul.square{list-style-type:square}
ul.circle{list-style-type:circle}
ul.disc{list-style-type:disc}
ul.no-bullet{list-style:none}
ol li ul,ol li ol{margin-left:1.25em;margin-bottom:0}
dl dt{margin-bottom:.3125em;font-weight:bold}
dl dd{margin-bottom:1.25em}
abbr,acronym{text-transform:uppercase;font-size:90%;color:rgba(0,0,0,.8);bo=
rder-bottom:1px dotted #ddd;cursor:help}
abbr{text-transform:none}
blockquote{margin:0 0 1.25em;padding:.5625em 1.25em 0 1.1875em;border-left:=
1px solid #ddd}
blockquote cite{display:block;font-size:.9375em;color:rgba(0,0,0,.6)}
blockquote cite:before{content:"\2014 \0020"}
blockquote cite a,blockquote cite a:visited{color:rgba(0,0,0,.6)}
blockquote,blockquote p{line-height:1.6;color:rgba(0,0,0,.85)}
@media only screen and (min-width:768px){h1,h2,h3,#toctitle,.sidebarblock>.=
content>.title,h4,h5,h6{line-height:1.2}
h1{font-size:2.75em}
h2{font-size:2.3125em}
h3,#toctitle,.sidebarblock>.content>.title{font-size:1.6875em}
h4{font-size:1.4375em}}
table{background:#fff;margin-bottom:1.25em;border:solid 1px #dedede}
table thead,table tfoot{background:#f7f8f7;font-weight:bold}
table thead tr th,table thead tr td,table tfoot tr th,table tfoot tr td{pad=
ding:.5em .625em .625em;font-size:inherit;color:rgba(0,0,0,.8);text-align:l=
eft}
table tr th,table tr td{padding:.5625em .625em;font-size:inherit;color:rgba=
(0,0,0,.8)}
table tr.even,table tr.alt,table tr:nth-of-type(even){background:#f8f8f7}
table thead tr th,table tfoot tr th,table tbody tr td,table tr td,table tfo=
ot tr td{display:table-cell;line-height:1.6}
h1,h2,h3,#toctitle,.sidebarblock>.content>.title,h4,h5,h6{line-height:1.2;w=
ord-spacing:-.05em}
h1 strong,h2 strong,h3 strong,#toctitle strong,.sidebarblock>.content>.titl=
e strong,h4 strong,h5 strong,h6 strong{font-weight:400}
.clearfix:before,.clearfix:after,.float-group:before,.float-group:after{con=
tent:" ";display:table}
.clearfix:after,.float-group:after{clear:both}
*:not(pre)>code{font-size:.9375em;font-style:normal!important;letter-spacin=
g:0;padding:.1em .5ex;word-spacing:-.15em;background-color:#f7f7f8;-webkit-=
border-radius:4px;border-radius:4px;line-height:1.45;text-rendering:optimiz=
eSpeed;word-wrap:break-word}
*:not(pre)>code.nobreak{word-wrap:normal}
*:not(pre)>code.nowrap{white-space:nowrap}
pre,pre>code{line-height:1.45;color:rgba(0,0,0,.9);font-family:"Droid Sans =
Mono","DejaVu Sans Mono",monospace;font-weight:400;text-rendering:optimizeS=
peed}
em em{font-style:normal}
strong strong{font-weight:400}
.keyseq{color:rgba(51,51,51,.8)}
kbd{font-family:"Droid Sans Mono","DejaVu Sans Mono",monospace;display:inli=
ne-block;color:rgba(0,0,0,.8);font-size:.65em;line-height:1.45;background-c=
olor:#f7f7f7;border:1px solid #ccc;-webkit-border-radius:3px;border-radius:=
3px;-webkit-box-shadow:0 1px 0 rgba(0,0,0,.2),0 0 0 .1em white inset;box-sh=
adow:0 1px 0 rgba(0,0,0,.2),0 0 0 .1em #fff inset;margin:0 .15em;padding:.2=
em .5em;vertical-align:middle;position:relative;top:-.1em;white-space:nowra=
p}
.keyseq kbd:first-child{margin-left:0}
.keyseq kbd:last-child{margin-right:0}
.menuseq,.menu{color:rgba(0,0,0,.8)}
b.button:before,b.button:after{position:relative;top:-1px;font-weight:400}
b.button:before{content:"[";padding:0 3px 0 2px}
b.button:after{content:"]";padding:0 2px 0 3px}
p a>code:hover{color:rgba(0,0,0,.9)}
#header,#content,#footnotes,#footer{width:100%;margin-left:auto;margin-righ=
t:auto;margin-top:0;margin-bottom:0;max-width:62.5em;*zoom:1;position:relat=
ive;padding-left:.9375em;padding-right:.9375em}
#header:before,#header:after,#content:before,#content:after,#footnotes:befo=
re,#footnotes:after,#footer:before,#footer:after{content:" ";display:table}
#header:after,#content:after,#footnotes:after,#footer:after{clear:both}
#content{margin-top:1.25em}
#content:before{content:none}
#header>h1:first-child{color:rgba(0,0,0,.85);margin-top:2.25rem;margin-bott=
om:0}
#header>h1:first-child+#toc{margin-top:8px;border-top:1px solid #ddddd8}
#header>h1:only-child,body.toc2 #header>h1:nth-last-child(2){border-bottom:=
1px solid #ddddd8;padding-bottom:8px}
#header .details{border-bottom:1px solid #ddddd8;line-height:1.45;padding-t=
op:.25em;padding-bottom:.25em;padding-left:.25em;color:rgba(0,0,0,.6);displ=
ay:-ms-flexbox;display:-webkit-flex;display:flex;-ms-flex-flow:row wrap;-we=
bkit-flex-flow:row wrap;flex-flow:row wrap}
#header .details span:first-child{margin-left:-.125em}
#header .details span.email a{color:rgba(0,0,0,.85)}
#header .details br{display:none}
#header .details br+span:before{content:"\00a0\2013\00a0"}
#header .details br+span.author:before{content:"\00a0\22c5\00a0";color:rgba=
(0,0,0,.85)}
#header .details br+span#revremark:before{content:"\00a0|\00a0"}
#header #revnumber{text-transform:capitalize}
#header #revnumber:after{content:"\00a0"}
#content>h1:first-child:not([class]){color:rgba(0,0,0,.85);border-bottom:1p=
x solid #ddddd8;padding-bottom:8px;margin-top:0;padding-top:1rem;margin-bot=
tom:1.25rem}
#toc{border-bottom:1px solid #efefed;padding-bottom:.5em}
#toc>ul{margin-left:.125em}
#toc ul.sectlevel0>li>a{font-style:italic}
#toc ul.sectlevel0 ul.sectlevel1{margin:.5em 0}
#toc ul{font-family:"Open Sans","DejaVu Sans",sans-serif;list-style-type:no=
ne}
#toc li{line-height:1.3334;margin-top:.3334em}
#toc a{text-decoration:none}
#toc a:active{text-decoration:underline}
#toctitle{color:#7a2518;font-size:1.2em}
@media only screen and (min-width:768px){#toctitle{font-size:1.375em}
body.toc2{padding-left:15em;padding-right:0}
#toc.toc2{margin-top:0!important;background-color:#f8f8f7;position:fixed;wi=
dth:15em;left:0;top:0;border-right:1px solid #efefed;border-top-width:0!imp=
ortant;border-bottom-width:0!important;z-index:1000;padding:1.25em 1em;heig=
ht:100%;overflow:auto}
#toc.toc2 #toctitle{margin-top:0;margin-bottom:.8rem;font-size:1.2em}
#toc.toc2>ul{font-size:.9em;margin-bottom:0}
#toc.toc2 ul ul{margin-left:0;padding-left:1em}
#toc.toc2 ul.sectlevel0 ul.sectlevel1{padding-left:0;margin-top:.5em;margin=
-bottom:.5em}
body.toc2.toc-right{padding-left:0;padding-right:15em}
body.toc2.toc-right #toc.toc2{border-right-width:0;border-left:1px solid #e=
fefed;left:auto;right:0}}
@media only screen and (min-width:1280px){body.toc2{padding-left:20em;paddi=
ng-right:0}
#toc.toc2{width:20em}
#toc.toc2 #toctitle{font-size:1.375em}
#toc.toc2>ul{font-size:.95em}
#toc.toc2 ul ul{padding-left:1.25em}
body.toc2.toc-right{padding-left:0;padding-right:20em}}
#content #toc{border-style:solid;border-width:1px;border-color:#e0e0dc;marg=
in-bottom:1.25em;padding:1.25em;background:#f8f8f7;-webkit-border-radius:4p=
x;border-radius:4px}
#content #toc>:first-child{margin-top:0}
#content #toc>:last-child{margin-bottom:0}
#footer{max-width:100%;background-color:rgba(0,0,0,.8);padding:1.25em}
#footer-text{color:rgba(255,255,255,.8);line-height:1.44}
.sect1{padding-bottom:.625em}
@media only screen and (min-width:768px){.sect1{padding-bottom:1.25em}}
.sect1+.sect1{border-top:1px solid #efefed}
#content h1>a.anchor,h2>a.anchor,h3>a.anchor,#toctitle>a.anchor,.sidebarblo=
ck>.content>.title>a.anchor,h4>a.anchor,h5>a.anchor,h6>a.anchor{position:ab=
solute;z-index:1001;width:1.5ex;margin-left:-1.5ex;display:block;text-decor=
ation:none!important;visibility:hidden;text-align:center;font-weight:400}
#content h1>a.anchor:before,h2>a.anchor:before,h3>a.anchor:before,#toctitle=
>a.anchor:before,.sidebarblock>.content>.title>a.anchor:before,h4>a.anchor:=
before,h5>a.anchor:before,h6>a.anchor:before{content:"\00A7";font-size:.85e=
m;display:block;padding-top:.1em}
#content h1:hover>a.anchor,#content h1>a.anchor:hover,h2:hover>a.anchor,h2>=
a.anchor:hover,h3:hover>a.anchor,#toctitle:hover>a.anchor,.sidebarblock>.co=
ntent>.title:hover>a.anchor,h3>a.anchor:hover,#toctitle>a.anchor:hover,.sid=
ebarblock>.content>.title>a.anchor:hover,h4:hover>a.anchor,h4>a.anchor:hove=
r,h5:hover>a.anchor,h5>a.anchor:hover,h6:hover>a.anchor,h6>a.anchor:hover{v=
isibility:visible}
#content h1>a.link,h2>a.link,h3>a.link,#toctitle>a.link,.sidebarblock>.cont=
ent>.title>a.link,h4>a.link,h5>a.link,h6>a.link{color:#ba3925;text-decorati=
on:none}
#content h1>a.link:hover,h2>a.link:hover,h3>a.link:hover,#toctitle>a.link:h=
over,.sidebarblock>.content>.title>a.link:hover,h4>a.link:hover,h5>a.link:h=
over,h6>a.link:hover{color:#a53221}
.audioblock,.imageblock,.literalblock,.listingblock,.stemblock,.videoblock{=
margin-bottom:1.25em}
.admonitionblock td.content>.title,.audioblock>.title,.exampleblock>.title,=
.imageblock>.title,.listingblock>.title,.literalblock>.title,.stemblock>.ti=
tle,.openblock>.title,.paragraph>.title,.quoteblock>.title,table.tableblock=
>.title,.verseblock>.title,.videoblock>.title,.dlist>.title,.olist>.title,.=
ulist>.title,.qlist>.title,.hdlist>.title{text-rendering:optimizeLegibility=
;text-align:left;font-family:"Noto Serif","DejaVu Serif",serif;font-size:1r=
em;font-style:italic}
table.tableblock>caption.title{white-space:nowrap;overflow:visible;max-widt=
h:0}
.paragraph.lead>p,#preamble>.sectionbody>.paragraph:first-of-type p{color:r=
gba(0,0,0,.85)}
table.tableblock #preamble>.sectionbody>.paragraph:first-of-type p{font-siz=
e:inherit}
.admonitionblock>table{border-collapse:separate;border:0;background:none;wi=
dth:100%}
.admonitionblock>table td.icon{text-align:center;width:80px}
.admonitionblock>table td.icon img{max-width:none}
.admonitionblock>table td.icon .title{font-weight:bold;font-family:"Open Sa=
ns","DejaVu Sans",sans-serif;text-transform:uppercase}
.admonitionblock>table td.content{padding-left:1.125em;padding-right:1.25em=
;border-left:1px solid #ddddd8;color:rgba(0,0,0,.6)}
.admonitionblock>table td.content>:last-child>:last-child{margin-bottom:0}
.exampleblock>.content{border-style:solid;border-width:1px;border-color:#e6=
e6e6;margin-bottom:1.25em;padding:1.25em;background:#fff;-webkit-border-rad=
ius:4px;border-radius:4px}
.exampleblock>.content>:first-child{margin-top:0}
.exampleblock>.content>:last-child{margin-bottom:0}
.sidebarblock{border-style:solid;border-width:1px;border-color:#e0e0dc;marg=
in-bottom:1.25em;padding:1.25em;background:#f8f8f7;-webkit-border-radius:4p=
x;border-radius:4px}
.sidebarblock>:first-child{margin-top:0}
.sidebarblock>:last-child{margin-bottom:0}
.sidebarblock>.content>.title{color:#7a2518;margin-top:0;text-align:center}
.exampleblock>.content>:last-child>:last-child,.exampleblock>.content .olis=
t>ol>li:last-child>:last-child,.exampleblock>.content .ulist>ul>li:last-chi=
ld>:last-child,.exampleblock>.content .qlist>ol>li:last-child>:last-child,.=
sidebarblock>.content>:last-child>:last-child,.sidebarblock>.content .olist=
>ol>li:last-child>:last-child,.sidebarblock>.content .ulist>ul>li:last-chil=
d>:last-child,.sidebarblock>.content .qlist>ol>li:last-child>:last-child{ma=
rgin-bottom:0}
.literalblock pre,.listingblock pre:not(.highlight),.listingblock pre[class=
=3D"highlight"],.listingblock pre[class^=3D"highlight "],.listingblock pre.=
CodeRay,.listingblock pre.prettyprint{background:#f7f7f8}
.sidebarblock .literalblock pre,.sidebarblock .listingblock pre:not(.highli=
ght),.sidebarblock .listingblock pre[class=3D"highlight"],.sidebarblock .li=
stingblock pre[class^=3D"highlight "],.sidebarblock .listingblock pre.CodeR=
ay,.sidebarblock .listingblock pre.prettyprint{background:#f2f1f1}
.literalblock pre,.literalblock pre[class],.listingblock pre,.listingblock =
pre[class]{-webkit-border-radius:4px;border-radius:4px;word-wrap:break-word=
;padding:1em;font-size:.8125em}
.literalblock pre.nowrap,.literalblock pre[class].nowrap,.listingblock pre.=
nowrap,.listingblock pre[class].nowrap{overflow-x:auto;white-space:pre;word=
-wrap:normal}
@media only screen and (min-width:768px){.literalblock pre,.literalblock pr=
e[class],.listingblock pre,.listingblock pre[class]{font-size:.90625em}}
@media only screen and (min-width:1280px){.literalblock pre,.literalblock p=
re[class],.listingblock pre,.listingblock pre[class]{font-size:1em}}
.literalblock.output pre{color:#f7f7f8;background-color:rgba(0,0,0,.9)}
.listingblock pre.highlightjs{padding:0}
.listingblock pre.highlightjs>code{padding:1em;-webkit-border-radius:4px;bo=
rder-radius:4px}
.listingblock pre.prettyprint{border-width:0}
.listingblock>.content{position:relative}
.listingblock code[data-lang]:before{display:none;content:attr(data-lang);p=
osition:absolute;font-size:.75em;top:.425rem;right:.5rem;line-height:1;text=
-transform:uppercase;color:#999}
.listingblock:hover code[data-lang]:before{display:block}
.listingblock.terminal pre .command:before{content:attr(data-prompt);paddin=
g-right:.5em;color:#999}
.listingblock.terminal pre .command:not([data-prompt]):before{content:"$"}
table.pyhltable{border-collapse:separate;border:0;margin-bottom:0;backgroun=
d:none}
table.pyhltable td{vertical-align:top;padding-top:0;padding-bottom:0;line-h=
eight:1.45}
table.pyhltable td.code{padding-left:.75em;padding-right:0}
pre.pygments .lineno,table.pyhltable td:not(.code){color:#999;padding-left:=
0;padding-right:.5em;border-right:1px solid #ddddd8}
pre.pygments .lineno{display:inline-block;margin-right:.25em}
table.pyhltable .linenodiv{background:none!important;padding-right:0!import=
ant}
.quoteblock{margin:0 1em 1.25em 1.5em;display:table}
.quoteblock>.title{margin-left:-1.5em;margin-bottom:.75em}
.quoteblock blockquote,.quoteblock blockquote p{color:rgba(0,0,0,.85);font-=
size:1.15rem;line-height:1.75;word-spacing:.1em;letter-spacing:0;font-style=
:italic;text-align:justify}
.quoteblock blockquote{margin:0;padding:0;border:0}
.quoteblock blockquote:before{content:"\201c";float:left;font-size:2.75em;f=
ont-weight:bold;line-height:.6em;margin-left:-.6em;color:#7a2518;text-shado=
w:0 1px 2px rgba(0,0,0,.1)}
.quoteblock blockquote>.paragraph:last-child p{margin-bottom:0}
.quoteblock .attribution{margin-top:.5em;margin-right:.5ex;text-align:right=
}
.quoteblock .quoteblock{margin-left:0;margin-right:0;padding:.5em 0;border-=
left:3px solid rgba(0,0,0,.6)}
.quoteblock .quoteblock blockquote{padding:0 0 0 .75em}
.quoteblock .quoteblock blockquote:before{display:none}
.verseblock{margin:0 1em 1.25em 1em}
.verseblock pre{font-family:"Open Sans","DejaVu Sans",sans;font-size:1.15re=
m;color:rgba(0,0,0,.85);font-weight:300;text-rendering:optimizeLegibility}
.verseblock pre strong{font-weight:400}
.verseblock .attribution{margin-top:1.25rem;margin-left:.5ex}
.quoteblock .attribution,.verseblock .attribution{font-size:.9375em;line-he=
ight:1.45;font-style:italic}
.quoteblock .attribution br,.verseblock .attribution br{display:none}
.quoteblock .attribution cite,.verseblock .attribution cite{display:block;l=
etter-spacing:-.025em;color:rgba(0,0,0,.6)}
.quoteblock.abstract{margin:0 0 1.25em 0;display:block}
.quoteblock.abstract blockquote,.quoteblock.abstract blockquote p{text-alig=
n:left;word-spacing:0}
.quoteblock.abstract blockquote:before,.quoteblock.abstract blockquote p:fi=
rst-of-type:before{display:none}
table.tableblock{max-width:100%;border-collapse:separate}
table.tableblock td>.paragraph:last-child p>p:last-child,table.tableblock t=
h>p:last-child,table.tableblock td>p:last-child{margin-bottom:0}
table.tableblock,th.tableblock,td.tableblock{border:0 solid #dedede}
table.grid-all th.tableblock,table.grid-all td.tableblock{border-width:0 1p=
x 1px 0}
table.grid-all tfoot>tr>th.tableblock,table.grid-all tfoot>tr>td.tableblock=
{border-width:1px 1px 0 0}
table.grid-cols th.tableblock,table.grid-cols td.tableblock{border-width:0 =
1px 0 0}
table.grid-all *>tr>.tableblock:last-child,table.grid-cols *>tr>.tableblock=
:last-child{border-right-width:0}
table.grid-rows th.tableblock,table.grid-rows td.tableblock{border-width:0 =
0 1px 0}
table.grid-all tbody>tr:last-child>th.tableblock,table.grid-all tbody>tr:la=
st-child>td.tableblock,table.grid-all thead:last-child>tr>th.tableblock,tab=
le.grid-rows tbody>tr:last-child>th.tableblock,table.grid-rows tbody>tr:las=
t-child>td.tableblock,table.grid-rows thead:last-child>tr>th.tableblock{bor=
der-bottom-width:0}
table.grid-rows tfoot>tr>th.tableblock,table.grid-rows tfoot>tr>td.tableblo=
ck{border-width:1px 0 0 0}
table.frame-all{border-width:1px}
table.frame-sides{border-width:0 1px}
table.frame-topbot{border-width:1px 0}
th.halign-left,td.halign-left{text-align:left}
th.halign-right,td.halign-right{text-align:right}
th.halign-center,td.halign-center{text-align:center}
th.valign-top,td.valign-top{vertical-align:top}
th.valign-bottom,td.valign-bottom{vertical-align:bottom}
th.valign-middle,td.valign-middle{vertical-align:middle}
table thead th,table tfoot th{font-weight:bold}
tbody tr th{display:table-cell;line-height:1.6;background:#f7f8f7}
tbody tr th,tbody tr th p,tfoot tr th,tfoot tr th p{color:rgba(0,0,0,.8);fo=
nt-weight:bold}
p.tableblock>code:only-child{background:none;padding:0}
p.tableblock{font-size:1em}
td>div.verse{white-space:pre}
ol{margin-left:1.75em}
ul li ol{margin-left:1.5em}
dl dd{margin-left:1.125em}
dl dd:last-child,dl dd:last-child>:last-child{margin-bottom:0}
ol>li p,ul>li p,ul dd,ol dd,.olist .olist,.ulist .ulist,.ulist .olist,.olis=
t .ulist{margin-bottom:.625em}
ul.unstyled,ol.unnumbered,ul.checklist,ul.none{list-style-type:none}
ul.unstyled,ol.unnumbered,ul.checklist{margin-left:.625em}
ul.checklist li>p:first-child>.fa-square-o:first-child,ul.checklist li>p:fi=
rst-child>.fa-check-square-o:first-child{width:1em;font-size:.85em}
ul.checklist li>p:first-child>input[type=3D"checkbox"]:first-child{width:1e=
m;position:relative;top:1px}
ul.inline{margin:0 auto .625em auto;margin-left:-1.375em;margin-right:0;pad=
ding:0;list-style:none;overflow:hidden}
ul.inline>li{list-style:none;float:left;margin-left:1.375em;display:block}
ul.inline>li>*{display:block}
.unstyled dl dt{font-weight:400;font-style:normal}
ol.arabic{list-style-type:decimal}
ol.decimal{list-style-type:decimal-leading-zero}
ol.loweralpha{list-style-type:lower-alpha}
ol.upperalpha{list-style-type:upper-alpha}
ol.lowerroman{list-style-type:lower-roman}
ol.upperroman{list-style-type:upper-roman}
ol.lowergreek{list-style-type:lower-greek}
.hdlist>table,.colist>table{border:0;background:none}
.hdlist>table>tbody>tr,.colist>table>tbody>tr{background:none}
td.hdlist1,td.hdlist2{vertical-align:top;padding:0 .625em}
td.hdlist1{font-weight:bold;padding-bottom:1.25em}
.literalblock+.colist,.listingblock+.colist{margin-top:-.5em}
.colist>table tr>td:first-of-type{padding:0 .75em;line-height:1}
.colist>table tr>td:last-of-type{padding:.25em 0}
.thumb,.th{line-height:0;display:inline-block;border:solid 4px #fff;-webkit=
-box-shadow:0 0 0 1px #ddd;box-shadow:0 0 0 1px #ddd}
.imageblock.left,.imageblock[style*=3D"float: left"]{margin:.25em .625em 1.=
25em 0}
.imageblock.right,.imageblock[style*=3D"float: right"]{margin:.25em 0 1.25e=
m .625em}
.imageblock>.title{margin-bottom:0}
.imageblock.thumb,.imageblock.th{border-width:6px}
.imageblock.thumb>.title,.imageblock.th>.title{padding:0 .125em}
.image.left,.image.right{margin-top:.25em;margin-bottom:.25em;display:inlin=
e-block;line-height:0}
.image.left{margin-right:.625em}
.image.right{margin-left:.625em}
a.image{text-decoration:none;display:inline-block}
a.image object{pointer-events:none}
sup.footnote,sup.footnoteref{font-size:.875em;position:static;vertical-alig=
n:super}
sup.footnote a,sup.footnoteref a{text-decoration:none}
sup.footnote a:active,sup.footnoteref a:active{text-decoration:underline}
#footnotes{padding-top:.75em;padding-bottom:.75em;margin-bottom:.625em}
#footnotes hr{width:20%;min-width:6.25em;margin:-.25em 0 .75em 0;border-wid=
th:1px 0 0 0}
#footnotes .footnote{padding:0 .375em 0 .225em;line-height:1.3334;font-size=
:.875em;margin-left:1.2em;text-indent:-1.05em;margin-bottom:.2em}
#footnotes .footnote a:first-of-type{font-weight:bold;text-decoration:none}
#footnotes .footnote:last-of-type{margin-bottom:0}
#content #footnotes{margin-top:-.625em;margin-bottom:0;padding:.75em 0}
.gist .file-data>table{border:0;background:#fff;width:100%;margin-bottom:0}
.gist .file-data>table td.line-data{width:99%}
div.unbreakable{page-break-inside:avoid}
.big{font-size:larger}
.small{font-size:smaller}
.underline{text-decoration:underline}
.overline{text-decoration:overline}
.line-through{text-decoration:line-through}
.aqua{color:#00bfbf}
.aqua-background{background-color:#00fafa}
.black{color:#000}
.black-background{background-color:#000}
.blue{color:#0000bf}
.blue-background{background-color:#0000fa}
.fuchsia{color:#bf00bf}
.fuchsia-background{background-color:#fa00fa}
.gray{color:#606060}
.gray-background{background-color:#7d7d7d}
.green{color:#006000}
.green-background{background-color:#007d00}
.lime{color:#00bf00}
.lime-background{background-color:#00fa00}
.maroon{color:#600000}
.maroon-background{background-color:#7d0000}
.navy{color:#000060}
.navy-background{background-color:#00007d}
.olive{color:#606000}
.olive-background{background-color:#7d7d00}
.purple{color:#600060}
.purple-background{background-color:#7d007d}
.red{color:#bf0000}
.red-background{background-color:#fa0000}
.silver{color:#909090}
.silver-background{background-color:#bcbcbc}
.teal{color:#006060}
.teal-background{background-color:#007d7d}
.white{color:#bfbfbf}
.white-background{background-color:#fafafa}
.yellow{color:#bfbf00}
.yellow-background{background-color:#fafa00}
span.icon>.fa{cursor:default}
.admonitionblock td.icon [class^=3D"fa icon-"]{font-size:2.5em;text-shadow:=
1px 1px 2px rgba(0,0,0,.5);cursor:default}
.admonitionblock td.icon .icon-note:before{content:"\f05a";color:#19407c}
.admonitionblock td.icon .icon-tip:before{content:"\f0eb";text-shadow:1px 1=
px 2px rgba(155,155,0,.8);color:#111}
.admonitionblock td.icon .icon-warning:before{content:"\f071";color:#bf6900=
}
.admonitionblock td.icon .icon-caution:before{content:"\f06d";color:#bf3400=
}
.admonitionblock td.icon .icon-important:before{content:"\f06a";color:#bf00=
00}
.conum[data-value]{display:inline-block;color:#fff!important;background-col=
or:rgba(0,0,0,.8);-webkit-border-radius:100px;border-radius:100px;text-alig=
n:center;font-size:.75em;width:1.67em;height:1.67em;line-height:1.67em;font=
-family:"Open Sans","DejaVu Sans",sans-serif;font-style:normal;font-weight:=
bold}
.conum[data-value] *{color:#fff!important}
.conum[data-value]+b{display:none}
.conum[data-value]:after{content:attr(data-value)}
pre .conum[data-value]{position:relative;top:-.125em}
b.conum *{color:inherit!important}
.conum:not([data-value]):empty{display:none}
dt,th.tableblock,td.content,div.footnote{text-rendering:optimizeLegibility}
h1,h2,p,td.content,span.alt{letter-spacing:-.01em}
p strong,td.content strong,div.footnote strong{letter-spacing:-.005em}
p,blockquote,dt,td.content,span.alt{font-size:1.0625rem}
p{margin-bottom:1.25rem}
.sidebarblock p,.sidebarblock dt,.sidebarblock td.content,p.tableblock{font=
-size:1em}
.exampleblock>.content{background-color:#fffef7;border-color:#e0e0dc;-webki=
t-box-shadow:0 1px 4px #e0e0dc;box-shadow:0 1px 4px #e0e0dc}
.print-only{display:none!important}
@media print{@page{margin:1.25cm .75cm}
*{-webkit-box-shadow:none!important;box-shadow:none!important;text-shadow:n=
one!important}
a{color:inherit!important;text-decoration:underline!important}
a.bare,a[href^=3D"#"],a[href^=3D"mailto:"]{text-decoration:none!important}
a[href^=3D"http:"]:not(.bare):after,a[href^=3D"https:"]:not(.bare):after{co=
ntent:"(" attr(href) ")";display:inline-block;font-size:.875em;padding-left=
:.25em}
abbr[title]:after{content:" (" attr(title) ")"}
pre,blockquote,tr,img,object,svg{page-break-inside:avoid}
thead{display:table-header-group}
svg{max-width:100%}
p,blockquote,dt,td.content{font-size:1em;orphans:3;widows:3}
h2,h3,#toctitle,.sidebarblock>.content>.title{page-break-after:avoid}
#toc,.sidebarblock,.exampleblock>.content{background:none!important}
#toc{border-bottom:1px solid #ddddd8!important;padding-bottom:0!important}
.sect1{padding-bottom:0!important}
.sect1+.sect1{border:0!important}
#header>h1:first-child{margin-top:1.25rem}
body.book #header{text-align:center}
body.book #header>h1:first-child{border:0!important;margin:2.5em 0 1em 0}
body.book #header .details{border:0!important;display:block;padding:0!impor=
tant}
body.book #header .details span:first-child{margin-left:0!important}
body.book #header .details br{display:block}
body.book #header .details br+span:before{content:none!important}
body.book #toc{border:0!important;text-align:left!important;padding:0!impor=
tant;margin:0!important}
body.book #toc,body.book #preamble,body.book h1.sect0,body.book .sect1>h2{p=
age-break-before:always}
.listingblock code[data-lang]:before{display:block}
#footer{background:none!important;padding:0 .9375em}
#footer-text{color:rgba(0,0,0,.6)!important;font-size:.9em}
.hide-on-print{display:none!important}
.print-only{display:block!important}
.hide-for-print{display:none!important}
.show-for-print{display:inherit!important}}
</style>
</head>
<body class=3D"article">
<div id=3D"header">
<h1>Jetty : The Definitive Reference</h1>
<div class=3D"details">
<span id=3D"revnumber">version {VERSION}</span>
</div>
</div>
<div id=3D"content">
<h1 id=3D"quick-start" class=3D"sect0">Getting Started With Jetty</h1>
<div class=3D"sect1">
<h2 id=3D"introduction">Introducing Jetty</h2>
<div class=3D"sectionbody">
<div class=3D"sect2">
<h3 id=3D"what-is-jetty">What is Jetty?</h3>
<div class=3D"paragraph">
<p>Jetty is an open-source project providing an HTTP server, HTTP client, a=
nd javax.servlet container.</p>
</div>
<div class=3D"paragraph">
<p>This guide is broken up in to five parts:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>The <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty=
-9.4.x/jetty-documentation/src/main/asciidoc/index.html#quick-start">first =
section</a> emphasizes beginning to use Jetty.
It provides information about what Jetty is and where you can download it, =
and where to find Jetty in repositories like Central Maven.
It also provides a Quick Start guide on how to get Jetty up and running as =
well as an overview of how and what to configure in Jetty.</p>
</li>
<li>
<p>The <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty=
-9.4.x/jetty-documentation/src/main/asciidoc/index.html#jetty-config-guide"=
>second section</a> of the guide deals with configuring Jetty at a more gra=
nular level.
It explains how to use Jetty to deploy web applications, configure contexts=
 and connects, and how to implement SSL and other security measures.</p>
</li>
<li>
<p>Administration of Jetty is the focus of the <a href=3D"file:///home/tian=
/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main=
/asciidoc/index.html#jetty-admin-guide">third section</a> of the guide.
From server startup to session management, logging, HTTP/2 support and Jett=
y optimization, these chapters will help administrators get the most out of=
 their Jetty server instances.
This section also covers configuring many of the most common servlet contai=
ner features such as JNDI and JMX.</p>
</li>
<li>
<p>Aimed at advanced users of Jetty, the <a href=3D"file:///home/tian/Downl=
oads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/ascii=
doc/index.html#jetty-dev-guide">fourth section</a> of the guide focuses on =
Jetty development.
A large portion of this section is focused on using Jetty as an embedded se=
rver in existing applications.
It contains several examples and how-to guides for making the most out of t=
he Jetty framework.
This section also includes a guide on using the Jetty Maven plugin as well =
as information on debugging Jetty.</p>
</li>
<li>
<p>The <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty=
-9.4.x/jetty-documentation/src/main/asciidoc/index.html#jetty-ref-guide">fi=
nal section</a> of the guide is a reference section.
Included there are guides on Jetty architecture and Jetty XML syntax, alter=
nate distributions of Jetty and even troubleshooting of common issues.
There is also a chapter on getting involved in the Jetty community includin=
g information on how to contribute code and how to find help.</p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>Feedback is always welcome!
Additionally, if you are interested in how to contribute to the open source=
 project there is a <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.=
project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#commun=
ity">section on that as well!</a></p>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"what-jetty-version">What Version Do I Use?</h3>
<div class=3D"paragraph">
<p>Jetty 9 is the most recent version of Jetty and has a great many improve=
ments over previous versions.
This documentation which focuses on Jetty 9.
While many people continue to use older versions of Jetty, we generally rec=
ommend using Jetty 9 as it represents the version of Jetty that we will act=
ively maintain and improve over the next few years.</p>
</div>
<table class=3D"tableblock frame-all grid-all spread">
<caption class=3D"title">Table 1. Jetty Versions</caption>
<colgroup>
<col style=3D"width: 12%;">
<col style=3D"width: 9%;">
<col style=3D"width: 15%;">
<col style=3D"width: 6%;">
<col style=3D"width: 21%;">
<col style=3D"width: 10%;">
<col style=3D"width: 6%;">
<col style=3D"width: 21%;">
</colgroup>
<thead>
<tr>
<th class=3D"tableblock halign-left valign-top">Version</th>
<th class=3D"tableblock halign-left valign-top">Year</th>
<th class=3D"tableblock halign-left valign-top">Home</th>
<th class=3D"tableblock halign-left valign-top">JVM</th>
<th class=3D"tableblock halign-left valign-top">Protocols</th>
<th class=3D"tableblock halign-left valign-top">Servlet</th>
<th class=3D"tableblock halign-left valign-top">JSP</th>
<th class=3D"tableblock halign-left valign-top">Status</th>
</tr>
</thead>
<tbody>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">9.4=
</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">201=
6</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Ecl=
ipse</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">1.8=
</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">HTT=
P/1.1 (RFC 7230), HTTP/2 (RFC 7540), WebSocket (RFC 6455, JSR 356), FastCGI=
</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">3.1=
</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">2.3=
</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Sta=
ble</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">9.3=
</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">201=
5</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Ecl=
ipse</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">1.8=
</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">HTT=
P/1.1 (RFC 7230), HTTP/2 (RFC 7540), WebSocket (RFC 6455, JSR 356), FastCGI=
</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">3.1=
</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">2.3=
</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Sta=
ble</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">9.2=
</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">201=
4</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Ecl=
ipse</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">1.7=
</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">HTT=
P/1.1 RFC2616, javax.websocket, SPDY v3</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">3.1=
</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">2.3=
</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Sta=
ble</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">8</=
p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">200=
9-2014</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Ecl=
ipse/Codehaus</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">1.6=
</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">HTT=
P/1.1 RFC2616, WebSocket RFC 6455, SPDY v3</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">3.0=
</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">2.2=
</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Dep=
recated</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">7</=
p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">200=
8-2014</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Ecl=
ipse/Codehaus</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">1.5=
</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">HTT=
P/1.1 RFC2616, WebSocket RFC 6455, SPDY v3</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">2.5=
</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">2.1=
</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Dep=
recated</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">6</=
p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">200=
6-2010</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Cod=
ehaus</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">1.4=
-1.5</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">HTT=
P/1.1 RFC2616</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">2.5=
</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">2.0=
</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Dep=
recated</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">5</=
p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">200=
3-2009</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Sou=
rceforge</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">1.2=
-1.5</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">HTT=
P/1.1 RFC2616</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">2.4=
</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">2.0=
</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Dep=
recated</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">4</=
p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">200=
1-2006</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Sou=
rceforge</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">1.2=
, J2ME</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">HTT=
P/1.1 RFC2616</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">2.3=
</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">1.2=
</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Anc=
ient</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">3</=
p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">199=
9-2002</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Sou=
rceforge</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">1.2=
</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">HTT=
P/1.1 RFC2068</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">2.2=
</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">1.1=
</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Fos=
silized</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">2</=
p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">199=
8-2000</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Mor=
tbay</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">1.1=
</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">HTT=
P/1.0 RFC1945</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">2.1=
</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">1.0=
</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Leg=
endary</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">1</=
p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">199=
5-1998</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Mor=
tbay</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">1.0=
</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">HTT=
P/1.0 RFC1945</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">-</=
p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">-</=
p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Myt=
hical</p></td>
</tr>
</tbody>
</table>
</div>
<div class=3D"sect2">
<h3 id=3D"jetty-javaee">Jetty and Java EE Web Profile</h3>
<div class=3D"paragraph">
<p>Jetty implements aspects of the Java EE specification, primarily the Ser=
vlet Specification.
Recent releases of the Java EE platform have introduced a Web Profile, reco=
gnizing that many developers need only a subset of the many technologies un=
der the Java EE umbrella.</p>
</div>
<div class=3D"paragraph">
<p>While Jetty itself does not ship all of the Web Profile technologies, Je=
tty architecture is such that you can plug in third party implementations t=
o produce a container customized to your exact needs.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"jetty-javaee-7">Java EE 7 Web Profile</h4>
<div class=3D"paragraph">
<p>In the forthcoming Java EE-7 specification, the Web Profile reflects upd=
ates in its component specifications and adds some new ones:</p>
</div>
<table class=3D"tableblock frame-all grid-all spread">
<caption class=3D"title">Table 2. JavaEE7 Web Profile</caption>
<colgroup>
<col style=3D"width: 25%;">
<col style=3D"width: 25%;">
<col style=3D"width: 25%;">
<col style=3D"width: 25%;">
</colgroup>
<thead>
<tr>
<th class=3D"tableblock halign-left valign-top">JSR</th>
<th class=3D"tableblock halign-left valign-top">Name</th>
<th class=3D"tableblock halign-left valign-top">Included with jetty-9.1.x</=
th>
<th class=3D"tableblock halign-left valign-top">Pluggable</th>
</tr>
</thead>
<tbody>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><a =
href=3D"http://jcp.org/en/jsr/detail?id=3D340">JSR 340</a></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Ser=
vlet Specification API 3.1</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Yes=
</p></td>
<td class=3D"tableblock halign-left valign-top"></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><a =
href=3D"http://jcp.org/en/jsr/detail?id=3D344">JSR 344</a></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Jav=
a Server Faces 2.2 (JSF)</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">No<=
/p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Yes=
, <a href=3D"https://javaserverfaces.java.net/">Mojarra</a> or <a href=3D"h=
ttp://myfaces.apache.org/">MyFaces</a></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><a =
href=3D"http://jcp.org/en/jsr/detail?id=3D245">JSR 245</a> / <a href=3D"htt=
p://jcp.org/en/jsr/detail?id=3D341">JSR 341</a></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Jav=
a Server Pages 2.3/Java Expression Language 3.0 (JSP/EL)</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Yes=
</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Yes=
</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><a =
href=3D"http://jcp.org/en/jsr/detail?id=3D52">JSR 52</a></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Jav=
a Standard Tag Library 1.2 (JSTL)</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Yes=
</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Yes=
</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><a =
href=3D"http://jcp.org/en/jsr/detail?id=3D45">JSR 45</a></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Deb=
ugging Support for Other Languages 1.0</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Yes=
 (via JSP)</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Yes=
 (via JSP)</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><a =
href=3D"http://jcp.org/en/jsr/detail?id=3D346">JSR 346</a></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Con=
texts and Dependency Injection for the JavaEE Platform 1.1 (Web Beans)</p><=
/td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">No<=
/p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Yes=
, <a href=3D"http://seamframework.org/Weld">Weld</a></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><a =
href=3D"http://jcp.org/en/jsr/detail?id=3D330">JSR 330</a></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Dep=
endency Injection for Java 1.0</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">No<=
/p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Yes=
 as part of a CDI implementation, <a href=3D"http://seamframework.org/Weld"=
>Weld</a></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><a =
href=3D"http://jcp.org/en/jsr/detail?id=3D316">JSR 316</a></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Man=
aged Beans 1.0</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">No<=
/p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Yes=
, as part of another technology</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><a =
href=3D"http://jcp.org/en/jsr/detail?id=3D345">JSR 345</a></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Ent=
erprise JavaBeans 3.2 Lite</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">No<=
/p></td>
<td class=3D"tableblock halign-left valign-top"></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><a =
href=3D"http://jcp.org/en/jsr/detail?id=3D338">JSR 338</a></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Jav=
a Persistance 2.1 (JPA)</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">No<=
/p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Yes=
, eg <a href=3D"http://www.hibernate.org/">Hibernate</a></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><a =
href=3D"http://jcp.org/en/jsr/detail?id=3D250">JSR 250</a></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Com=
mon Annotations for the Java Platform 1.2</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Yes=
</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Par=
tially (for non-core Servlet Spec annotations)</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><a =
href=3D"http://jcp.org/en/jsr/detail?id=3D907">JSR 907</a></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Jav=
a Transaction API 1.2 (JTA)</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Yes=
</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Yes=
</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><a =
href=3D"http://jcp.org/en/jsr/detail?id=3D349">JSR 349</a></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Bea=
n Validation 1.1</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">No<=
/p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Yes=
 as part of another technology eg JSF, or a stand-alone implementation such=
 as <a href=3D"http://www.hibernate.org/subprojects/validator/docs.html">Hi=
berate
Validator</a></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><a =
href=3D"http://jcp.org/en/jsr/detail?id=3D339">JSR 339</a></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Jav=
a API for RESTful Web Services 2.0 (JAX-RS)</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">No<=
/p></td>
<td class=3D"tableblock halign-left valign-top"></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><a =
href=3D"http://jcp.org/en/jsr/detail?id=3D356">JSR 356</a></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Jav=
a API for Websocket 1.0</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Yes=
</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">No<=
/p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><a =
href=3D"http://jcp.org/en/jsr/detail?id=3D353">JSR 353</a></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Jav=
a API for JSON Processing 1.0 (JSON-P)</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">No<=
/p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Yes=
, eg JSON-P <a href=3D"https://java.net/projects/jsonp/">reference implemen=
tation</a></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><a =
href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jet=
ty-documentation/src/main/asciidoc/jcp.org/en/jsr/detail?id=3D318">JSR 318<=
/a></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Int=
erceptors 1.2</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">No<=
/p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Yes=
 as part of a CDI implementation</p></td>
</tr>
</tbody>
</table>
</div>
<div class=3D"sect3">
<h4 id=3D"jetty-javaee-6">Jetty EE 6 Web Profile</h4>
<div class=3D"paragraph">
<p>Here is the matrix of JSRs for Java EE 6 Web Profile, and how they relat=
e to Jetty:</p>
</div>
<table class=3D"tableblock frame-all grid-all spread">
<caption class=3D"title">Table 3. Java EE 6 Web Profile</caption>
<colgroup>
<col style=3D"width: 25%;">
<col style=3D"width: 25%;">
<col style=3D"width: 25%;">
<col style=3D"width: 25%;">
</colgroup>
<thead>
<tr>
<th class=3D"tableblock halign-left valign-top">JSR</th>
<th class=3D"tableblock halign-left valign-top">Name</th>
<th class=3D"tableblock halign-left valign-top">Included with jetty-9.0.x</=
th>
<th class=3D"tableblock halign-left valign-top">Pluggable</th>
</tr>
</thead>
<tbody>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><a =
href=3D"http://jcp.org/en/jsr/detail?id=3D315">JSR 315</a></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Ser=
vlet Specification API 3.0</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Yes=
</p></td>
<td class=3D"tableblock halign-left valign-top"></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><a =
href=3D"http://jcp.org/en/jsr/detail?id=3D314">JSR 314</a></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Jav=
aServer Faces 2.0 (JSF)</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">No<=
/p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Yes=
, for example, <a href=3D"https://javaserverfaces.java.net/">Mojarra</a> or=
 <a href=3D"http://myfaces.apache.org/">MyFaces</a></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><a =
href=3D"http://jcp.org/en/jsr/detail?id=3D245">JSR 245</a></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Jav=
aServer Pages 2.2/Java Expression Language 2.2 (JSP/EL)</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Yes=
</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Yes=
</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><a =
href=3D"http://jcp.org/en/jsr/detail?id=3D52">JSR 52</a></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Jav=
a Standard Tag Library 1.2 (JSTL)</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Yes=
</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Yes=
</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><a =
href=3D"http://jcp.org/en/jsr/detail?id=3D45">JSR 45</a></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Deb=
ugging Support for Other Languages 1.0</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Yes=
 (via JSP)</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Yes=
 (via JSP)</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><a =
href=3D"http://jcp.org/en/jsr/detail?id=3D299">JSR 299</a></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Con=
texts and Dependency Injection for the Java EE Platform 1.0 (Web Beans)</p>=
</td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">No<=
/p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Yes=
, <a href=3D"http://seamframework.org/Weld">Weld</a> or <a href=3D"http://o=
penwebbeans.apache.org/">OpenWebBeans</a></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><a =
href=3D"http://jcp.org/en/jsr/detail?id=3D330">JSR 330</a></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Dep=
endency Injection for Java 1.0</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">No<=
/p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Yes=
 as part of a CDI implementation, <a href=3D"http://seamframework.org/Weld"=
>Weld</a></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><a =
href=3D"http://jcp.org/en/jsr/detail?id=3D316">JSR 316</a></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Man=
aged Beans 1.0</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">No<=
/p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Yes=
, as part of another technology.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><a =
href=3D"http://jcp.org/en/jsr/detail?id=3D318">JSR 318</a></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Ent=
erprise JavaBeans 3.1</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">No<=
/p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Yes=
, OpenEJB</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><a =
href=3D"http://jcp.org/en/jsr/detail?id=3D317">JSR 317</a></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Jav=
a Persistance 2.0 (JPA)</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">No<=
/p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Yes=
, <a href=3D"http://www.hibernate.org/">Hibernate</a></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><a =
href=3D"http://jcp.org/en/jsr/detail?id=3D250">JSR 250</a></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Com=
mon Annotations for the Java Platform</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Yes=
</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Par=
tially (for non-core Servlet Spec annotations)</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><a =
href=3D"http://jcp.org/en/jsr/detail?id=3D907">JSR 907</a></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Jav=
a Transaction API (JTA)</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Yes=
</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Imp=
lementations are pluggable, such as <a href=3D"http://www.atomikos.com/">At=
omikos</a>, <a href=3D"http://jotm.ow2.org/xwiki/bin/view/Main/WebHome">JOT=
M</a>, <a href=3D"http://jencks.codehaus.org/Transaction+Manager">Jencks (G=
eronimo Transaction Manager)</a></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><a =
href=3D"http://jcp.org/en/jsr/detail?id=3D303">JSR 303</a></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Bea=
n Validation 1.0</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">No<=
/p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Yes=
 as part of another technology (JSF), or a stand-alone implementation such =
as <a href=3D"http://www.hibernate.org/subprojects/validator/docs.html">Hib=
erate
Validator</a></p></td>
</tr>
</tbody>
</table>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"quickstart-jetty-coordinates">Finding Jetty in Maven</h3>
<div class=3D"sect3">
<h4 id=3D"_maven_coordinates">Maven Coordinates</h4>
<div class=3D"paragraph">
<p>Jetty has existed in Maven Central almost since its inception, though th=
e coordinates have changed over the years.
When Jetty was based at SourceForge and then The Codehaus it was located un=
der the <code>groupId</code> of <code>org.mortbay.jetty</code>.
With Jetty 7 the project moved to the Eclipse foundation and to a new <code=
>groupId</code> at that time to reflect its new home.</p>
</div>
<div class=3D"paragraph">
<p>The top level Project Object Model (POM) for the Jetty project is locate=
d under the following coordinates.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><de=
pendency>
  <groupid>org.eclipse.jetty</groupid>
  <artifactid>jetty-project</artifactid>
  <version>${project.version}</version>
</dependency></code></pre>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_changelogs_in_central">Changelogs in Central</h4>
<div class=3D"paragraph">
<p>The changes between versions of Jetty are tracked in a file called VERSI=
ONS.txt, which is under source control and is generated on release.
Those generated files are also uploaded into Maven Central during the relea=
se of the top level POM. You can find them as a classifier marked artifact.=
</p>
</div>
<div class=3D"paragraph">
<p><a href=3D"http://central.maven.org/maven2/org/eclipse/jetty/jetty-proje=
ct/" class=3D"bare">http://central.maven.org/maven2/org/eclipse/jetty/jetty=
-project/</a></p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><de=
pendency>
  <groupid>org.eclipse.jetty</groupid>
  <artifactid>jetty-project</artifactid>
  <version>${project.version}</version>
  <classifier>version</classifier>
  <type>txt</type>
</dependency></code></pre>
</div>
</div>
</div>
</div>
</div>
</div>
<div class=3D"sect1">
<h2 id=3D"quick-start-getting-started">Using Jetty</h2>
<div class=3D"sectionbody">
<div class=3D"paragraph">
<p>You can use Jetty in many different ways ranging from embedding Jetty in=
 applications, launching it from different build systems, from different JV=
M-based languages, or as a standalone distribution.
This guide covers the latter, a standalone distribution suitable for deploy=
ing web applications.</p>
</div>
<div class=3D"sect2">
<h3 id=3D"jetty-downloading">Downloading Jetty</h3>
<div class=3D"sect3">
<h4 id=3D"_downloading_the_jetty_distribution">Downloading the Jetty Distri=
bution</h4>
<div class=3D"paragraph">
<p>The standalone Jetty distribution is available for download from the Ecl=
ipse Foundation:</p>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"paragraph">
<p><strong>Jetty</strong>
<a href=3D"https://www.eclipse.org/jetty/download.html" class=3D"bare">http=
s://www.eclipse.org/jetty/download.html</a></p>
</div>
</blockquote>
</div>
<div class=3D"paragraph">
<p>It is available in both zip and gzip formats; download the one most appr=
opriate for your system.
When you download and unpack the binary, it is extracted into a directory c=
alled <code>jetty-distribution-VERSION.</code>
Put this directory in a convenient location.
The rest of the instructions in this documentation refer to this location a=
s either <code>JETTY_HOME</code> or as <code>$(jetty.home).</code></p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"distribution-content">Distribution Content</h4>
<div class=3D"paragraph">
<p>A summary of the distribution=E2=80=99s contents follows.
The top-level directory contains:</p>
</div>
<table class=3D"tableblock frame-all grid-all" style=3D"width: 80%;">
<caption class=3D"title">Table 4. Contents</caption>
<colgroup>
<col style=3D"width: 40%;">
<col style=3D"width: 60%;">
</colgroup>
<thead>
<tr>
<th class=3D"tableblock halign-left valign-top">Location</th>
<th class=3D"tableblock halign-left valign-top">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">lic=
ense-eplv10-aslv20.html</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Lic=
ense file for Jetty</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">REA=
DME.txt</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Use=
ful getting started information</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">VER=
SION.txt</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Rel=
ease information</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">bin=
/</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Uti=
lity shell scripts to help run Jetty on Unix systems</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">dem=
o-base/</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">A J=
etty base directory to run a Jetty server with demonstration webapps</p></t=
d>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">etc=
/</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Dir=
ectory for Jetty XML configuration files</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">lib=
/</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">All=
 the JAR files necessary to run Jetty</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">log=
s/</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Dir=
ectory for request logs</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">mod=
ules/</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Dir=
ectory of module definitions</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">not=
ice.html</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Lic=
ense information and exceptions</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">res=
ources/</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Dir=
ectory containing additional resources for classpath, activated via configu=
ration</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">sta=
rt.ini</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Fil=
e containing the arguments that are added to the effective command line (mo=
dules, properties and XML configuration files)</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">sta=
rt.jar</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Jar=
 that invokes Jetty (see also <a href=3D"file:///home/tian/Downloads/b60/eb=
ook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.h=
tml#quickstart-running-jetty">Running Jetty</a>)</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">web=
apps/</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Dir=
ectory containing webapps that run under the default configuration of Jetty=
</p></td>
</tr>
</tbody>
</table>
</div>
<div class=3D"sect3">
<h4 id=3D"jetty-home-downloading">Downloading the Jetty-Home Distribution</=
h4>
<div class=3D"paragraph">
<p>Jetty-Home is an alternate version of the distribution that contains onl=
y the necessary items to host a Jetty distribution.
It is intended for advanced users who are already familiar with Jetty and w=
ant to download a smaller distribution package.
Jetty-Home can be downloaded from the Maven Central repository:</p>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"paragraph">
<p><strong>Jetty-Home</strong>
<a href=3D"http://central.maven.org/maven2/org/eclipse/jetty/jetty-home/" c=
lass=3D"bare">http://central.maven.org/maven2/org/eclipse/jetty/jetty-home/=
</a></p>
</div>
</blockquote>
</div>
<div class=3D"paragraph">
<p>Like the main Jetty distribution, Jetty-Home is available in both zip an=
d gzip formats; download the one most appropriate for your system.
Notice that there are a number of other files with extensions of .sha or .m=
d5 which are checksum files.
When you download and unpack the binary, it is extracted into a directory c=
alled <code>jetty-home-VERSION.</code>
Put this directory in a convenient location.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"jetty-home-distribution-content">Distribution Content</h4>
<div class=3D"paragraph">
<p>A summary of the Jetty-Home=E2=80=99s distribution contents follows.
The top-level directory contains:</p>
</div>
<table class=3D"tableblock frame-all grid-all" style=3D"width: 80%;">
<caption class=3D"title">Table 5. Contents</caption>
<colgroup>
<col style=3D"width: 40%;">
<col style=3D"width: 60%;">
</colgroup>
<thead>
<tr>
<th class=3D"tableblock halign-left valign-top">Location</th>
<th class=3D"tableblock halign-left valign-top">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">lic=
ense-eplv10-aslv20.html</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Lic=
ense file for Jetty</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">VER=
SION.txt</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Rel=
ease information</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">etc=
/</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Dir=
ectory for Jetty XML configuration files</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">lib=
/</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">All=
 the JAR files necessary to run Jetty</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">mod=
ules/</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Dir=
ectory of module definitions</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">not=
ice.html</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Lic=
ense information and exceptions</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">sta=
rt.jar</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Jar=
 that invokes Jetty (see also <a href=3D"file:///home/tian/Downloads/b60/eb=
ook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.h=
tml#quickstart-running-jetty">Running Jetty</a>)</p></td>
</tr>
</tbody>
</table>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"quickstart-running-jetty">Running Jetty</h3>
<div class=3D"paragraph">
<p>To start Jetty on the default port of 8080, run the following command:</=
p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">&gt; cd $JETTY_HOME
&gt; java -jar start.jar

2015-06-04 10:50:44.806:INFO::main: Logging initialized @334ms
2015-06-04 10:50:44.858:WARN:oejs.HomeBaseWarning:main: This instance of Je=
tty is not running from a separate {jetty.base} directory, this is not reco=
mmended.  See documentation at http://www.eclipse.org/jetty/documentation/c=
urrent/startup.html
2015-06-04 10:50:44.995:INFO:oejs.Server:main: jetty-9.3.0.v20150601
2015-06-04 10:50:45.012:INFO:oejdp.ScanningAppProvider:main: Deployment mon=
itor [file:///opt/jetty-distribution-9.3.0.v20150601/webapps/] at interval =
1
2015-06-04 10:50:45.030:INFO:oejs.ServerConnector:main: Started ServerConne=
ctor@19dfb72a{HTTP/1.1,[http/1.1]}{0.0.0.0:8080}
2015-06-04 10:50:45.030:INFO:oejs.Server:main: Started @558ms</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>You can point a browser at this server at <a href=3D"http://localhost:80=
80/" class=3D"bare">http://localhost:8080</a>.
However, as there are no webapps deployed in the $JETTY_HOME directory, you=
 will see a 404 error page served by Jetty.
<strong>Note</strong> the HomeBase warning - it is <em>not</em> recommended=
 to run Jetty from the $JETTY_HOME directory.
Instead, see how to <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.=
project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#creati=
ng-jetty-base">create a Jetty Base</a> below.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"demo-webapps-base">Demo Base</h4>
<div class=3D"paragraph">
<p>Within the standard jetty distribution there is the <code>demo-base</cod=
e> directory, which demonstrates the recommended way to run Jetty in a dire=
ctory separately from $JETTY_HOME:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">&gt; cd $JETTY_HOME/demo-base/
&gt; java -jar $JETTY_HOME/start.jar

2015-06-04 10:55:24.161:INFO::main: Logging initialized @308ms
2015-06-04 10:55:24.431:WARN::main: demo test-realm is deployed. DO NOT USE=
 IN PRODUCTION!
2015-06-04 10:55:24.434:INFO:oejs.Server:main: jetty-9.3.0.v20150601
2015-06-04 10:55:24.457:INFO:oejdp.ScanningAppProvider:main: Deployment mon=
itor [file:///opt/jetty-distribution-9.3.0.v20150601/demo-base/webapps/] at=
 interval 1
2015-06-04 10:55:24.826:INFO:oejsh.ContextHandler:main: Started o.e.j.w.Web=
AppContext@c038203{/,file:///opt/jetty-distribution-9.3.0.v20150601/demo-ba=
se/webapps/ROOT/,AVAILABLE}{/ROOT}
2015-06-04 10:55:24.929:WARN::main: test-jaas webapp is deployed. DO NOT US=
E IN PRODUCTION!
2015-06-04 10:55:24.978:INFO:oejsh.ContextHandler:main: Started o.e.j.w.Web=
AppContext@46238e3f{/test-jaas,file:///tmp/jetty-0.0.0.0-8080-test-jaas.war=
-_test-jaas-any-9105214562680121772.dir/webapp/,AVAILABLE}{/test-jaas.war}
2015-06-04 10:55:25.162:WARN::main: async-rest webapp is deployed. DO NOT U=
SE IN PRODUCTION!
2015-06-04 10:55:25.208:INFO:oejsh.ContextHandler:main: Started o.e.j.w.Web=
AppContext@6b67034{/async-rest,[file:///tmp/jetty-0.0.0.0-8080-async-rest.w=
ar-_async-rest-any-1023939491558622183.dir/webapp/, jar:file:///tmp/jetty-0=
.0.0.0-8080-async-rest.war-_async-rest-any-1023939491558622183.dir/webapp/W=
EB-INF/lib/example-async-rest-jar-9.3.0.v20150601.jar!/META-INF/resources],=
AVAILABLE}{/async-rest.war}
2015-06-04 10:55:25.311:WARN::main: test-jndi webapp is deployed. DO NOT US=
E IN PRODUCTION!
2015-06-04 10:55:25.386:INFO:oejsh.ContextHandler:main: Started o.e.j.w.Web=
AppContext@8b96fde{/test-jndi,file:///tmp/jetty-0.0.0.0-8080-test-jndi.war-=
_test-jndi-any-1692053319754270133.dir/webapp/,AVAILABLE}{/test-jndi.war}
2015-06-04 10:55:25.508:WARN::main: test-spec webapp is deployed. DO NOT US=
E IN PRODUCTION!
2015-06-04 10:55:25.594:INFO:oejsh.ContextHandler:main: Started o.e.j.w.Web=
AppContext@69930714{/test-spec,[file:///tmp/jetty-0.0.0.0-8080-test-spec.wa=
r-_test-spec-any-5518740932795802823.dir/webapp/, jar:file:///tmp/jetty-0.0=
.0.0-8080-test-spec.war-_test-spec-any-5518740932795802823.dir/webapp/WEB-I=
NF/lib/test-web-fragment-9.3.0.v20150601.jar!/META-INF/resources],AVAILABLE=
}{/test-spec.war}
2015-06-04 10:55:25.781:INFO:oejsh.ContextHandler:main: Started o.e.j.w.Web=
AppContext@3eb7fc54{/proxy,file:///tmp/jetty-0.0.0.0-8080-xref-proxy.war-_x=
ref-proxy-any-3068657547009829038.dir/webapp/,AVAILABLE}{/xref-proxy.war}
2015-06-04 10:55:25.786:INFO:oejsh.ContextHandler:main: Started o.e.j.s.h.M=
ovedContextHandler@59662a0b{/oldContextPath,null,AVAILABLE}
2015-06-04 10:55:25.951:WARN::main: test webapp is deployed. DO NOT USE IN =
PRODUCTION!
2015-06-04 10:55:26.248:INFO:oejsh.ContextHandler:main: Started o.e.j.w.Web=
AppContext@4f83df68{/test,file:///tmp/jetty-0.0.0.0-8080-test.war-_test-any=
-5238659347611323540.dir/webapp/,AVAILABLE}{/test.war}
2015-06-04 10:55:26.255:INFO:oejs.ServerConnector:main: Started ServerConne=
ctor@5a9c4ad9{HTTP/1.1,[http/1.1]}{0.0.0.0:8080}
2015-06-04 10:55:26.259:INFO:oejus.SslContextFactory:main: x509=3D{jetty.ec=
lipse.org=3Djetty} wild=3D{} alias=3Dnull for SslContextFactory@23941fb4(fi=
le:///opt/jetty-distribution-9.3.0.v20150601/demo-base/etc/keystore,file://=
/opt/jetty-distribution-9.3.0.v20150601/demo-base/etc/keystore)
2015-06-04 10:55:26.269:INFO:oejs.ServerConnector:main: Started ServerConne=
ctor@5d908d47{SSL,[ssl, http/1.1]}{0.0.0.0:8443}
2015-06-04 10:55:26.270:INFO:oejs.Server:main: Started @2417ms</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>You can visit this demo server by pointing a browser at <a href=3D"http:=
//localhost:8080/" class=3D"bare">http://localhost:8080</a>, which will now=
 show a welcome page and several demo/test web applications.</p>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock warning">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Warning</div>
</td>
<td class=3D"content">
The demonstration web applications are not necessarily secure and should no=
t be deployed in production web servers.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
<div class=3D"paragraph">
<p>You can see the configuration of the demo-base by using the following co=
mmands:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">&gt; cd $JETTY_HOME/demo-base/
&gt; java -jar $JETTY_HOME/start.jar --list-modules
...

&gt; java -jar %JETTY_HOME/start.jar --list-config
...</code></pre>
</div>
</div>
<div class=3D"literalblock">
<div class=3D"content">
<pre>The `--list-modules` command will return a complete list of available =
and enabled modules for the server.
It will also display the location of the modules, how and in what order the=
y are implemented, dependent modules, and associated jar files.
The `--list-config` command displays a trove of  information about the serv=
er including the Java and Jetty environments, the configuration order, any =
JVM arguments or System Properties set, general server properties, a full l=
isting of the Jetty server class path, and active Jetty XML files.</pre>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"creating-jetty-base">Creating a new Jetty Base</h4>
<div class=3D"paragraph">
<p>The <code>demo-base</code> directory described above is an example of th=
e <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.=
x/jetty-documentation/src/main/asciidoc/index.html#startup-base-and-home">j=
etty.base</a> mechanism added in Jetty 9.1.
A Jetty base directory allows the configuration and web applications of a s=
erver instance to be stored separately from the Jetty distribution, so that=
 upgrades can be done with minimal disruption.
Jetty=E2=80=99s default configuration is based on two properties:</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">jetty.home</dt>
<dd>
<p>The property that defines the location of the jetty distribution, its li=
bs, default modules and default XML files (typically start.jar, lib, etc)</=
p>
</dd>
<dt class=3D"hdlist1">jetty.base</dt>
<dd>
<p>The property that defines the location of a specific instance of a jetty=
 server, its configuration, logs and web applications (typically start.ini,=
 start.d, logs and webapps)</p>
</dd>
</dl>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock important">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Important</div>
</td>
<td class=3D"content">
Your Jetty Home directory should be treated as a standard of truth and rema=
in unmodified or changed.
Changes or additions to your configuration should take place in the Jetty B=
ase directory.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
<div class=3D"paragraph">
<p>The <code>jetty.home</code> and <code>jetty.base</code> properties may b=
e explicitly set on the command line, or they can be inferred from the envi=
ronment if used with commands like:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">&gt; cd $JETTY_BASE
&gt; java -jar $JETTY_HOME/start.jar</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The following commands create a new base directory, enables both the HTT=
P connector and the web application deployer modules, and copies a demo web=
app to be deployed:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">&gt; JETTY_BASE=3D/tmp/mybase
&gt; mkdir $JETTY_BASE
&gt; cd $JETTY_BASE
&gt; java -jar $JETTY_HOME/start.jar

WARNING: Nothing to start, exiting ...

Usage: java -jar start.jar [options] [properties] [configs]
       java -jar start.jar --help  # for more information

&gt; java -jar $JETTY_HOME/start.jar --create-startd
INFO : Base directory was modified
&gt; java -jar $JETTY_HOME/start.jar --add-to-start=3Dhttp,deploy

INFO: server          initialised (transitively) in ${jetty.base}/start.d/s=
erver.ini
INFO: http            initialised in ${jetty.base}/start.d/http.ini
INFO: security        initialised (transitively) in ${jetty.base}/start.d/s=
ecurity.ini
INFO: servlet         initialised (transitively) in ${jetty.base}/start.d/s=
ervlet.ini
INFO: webapp          initialised (transitively) in ${jetty.base}/start.d/w=
ebapp.ini
INFO: deploy          initialised in ${jetty.base}/start.d/deploy.ini
MKDIR: ${jetty.base}/webapps
INFO: Base directory was modified

&gt; cp $JETTY_HOME/demo-base/webapps/async-rest.war webapps/ROOT.war
&gt; java -jar $JETTY_HOME/start.jar

2015-06-04 11:10:16.286:INFO::main: Logging initialized @274ms
2015-06-04 11:10:16.440:INFO:oejs.Server:main: jetty-9.3.0.v20150601
2015-06-04 11:10:16.460:INFO:oejdp.ScanningAppProvider:main: Deployment mon=
itor [file:///tmp/mybase/webapps/] at interval 1
2015-06-04 11:10:16.581:WARN::main: async-rest webapp is deployed. DO NOT U=
SE IN PRODUCTION!
2015-06-04 11:10:16.589:INFO:oejw.StandardDescriptorProcessor:main: NO JSP =
Support for /, did not find org.eclipse.jetty.jsp.JettyJspServlet
2015-06-04 11:10:16.628:INFO:oejsh.ContextHandler:main: Started o.e.j.w.Web=
AppContext@1a407d53{/,[file:///tmp/jetty-0.0.0.0-8080-ROOT.war-_-any-451022=
8025526425427.dir/webapp/, jar:file:///tmp/jetty-0.0.0.0-8080-ROOT.war-_-an=
y-4510228025526425427.dir/webapp/WEB-INF/lib/example-async-rest-jar-9.3.0.v=
20150601.jar!/META-INF/resources],AVAILABLE}{/ROOT.war}
2015-06-04 11:10:16.645:INFO:oejs.ServerConnector:main: Started ServerConne=
ctor@3abbfa04{HTTP/1.1,[http/1.1]}{0.0.0.0:8080}
2015-06-04 11:10:16.646:INFO:oejs.Server:main: Started @634ms</code></pre>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"quickstart-changing-jetty-port">Changing the Jetty Port</h4>
<div class=3D"paragraph">
<p>You can configure Jetty to run on a different port by setting the <code>=
jetty.http.port</code> Property on the command line:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">&gt; cd $JETTY_BASE
&gt; java -jar $JETTY_HOME/start.jar jetty.http.port=3D8081
...</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Alternatively, property values can be added to the effective command lin=
e built from either the <code>start.ini</code> file or <code>start.d/http.i=
ni</code> files.
By default, the Jetty distribution defines the <code>jetty.http.port</code>=
 property in the <code>start.d/http.ini</code> file, which may be edited to=
 set another value.</p>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Note</div>
</td>
<td class=3D"content">
<div class=3D"paragraph">
<p>The configuration by properties works via the following chain:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>The start.d/http.ini file is part of the effective command line and cont=
ains the --module=3Dhttp argument which activates the http module.</p>
</li>
<li>
<p>The modules/http.mod file defines the http module which specifies the et=
c/jetty-http.xml configuration file and the template ini properties it uses=
.</p>
</li>
<li>
<p>The jetty.http.port property is used by the Property XML element in etc/=
jetty.http.xml to inject the ServerConnector instance with the port.</p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>For more information see the <a href=3D"file:///home/tian/Downloads/b60/=
ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index=
.html#quick-start-configure">Quickstart Configuration Guide</a> and <a href=
=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-d=
ocumentation/src/main/asciidoc/index.html#configuring-connectors">Configuri=
ng Connectors</a>.</p>
</div>
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"quickstart-starting-https">Adding SSL for HTTPS &amp; HTTP2</h4>
<div class=3D"paragraph">
<p>To add HTTPS and HTTP2 connectors to a Jetty configuration, the modules =
can be activated by the following command:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">&gt; java -jar $JETTY_HOME/start.jar --add-to-start=3Dhttps,http2
[...]

&gt; java -jar $JETTY_HOME/start.jar
[...]

2015-06-04 13:52:01.933:INFO:oejs.ServerConnector:main: Started ServerConne=
ctor@6f1fba17{SSL,[ssl, alpn, h2, http/1.1]}{0.0.0.0:8443}
[...]</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The <code>--add-to-start</code> command sets up the effective command li=
ne in the ini files to run an ssl connection that supports the HTTPS and HT=
TP2 protocols as follows:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>creates <code>start.d/ssl.ini</code> that configures an SSL connector (e=
g port, keystore etc.) by adding <code>etc/jetty-ssl.xml</code> and <code>e=
tc/jetty-ssl-context.xml</code> to the effective command line.</p>
</li>
<li>
<p>creates <code>start.d/alpn.ini</code> that configures protocol negotiati=
on on the SSL connector by adding <code>etc/jetty-alpn.xml</code> to the ef=
fective command line.</p>
</li>
<li>
<p>creates <code>start.d/https.ini</code> that configures the HTTPS protoco=
l on the SSL connector by adding <code>etc/jetty-https.xml</code> to the ef=
fective command line.</p>
</li>
<li>
<p>creates <code>start.d/http2.ini</code> that configures the HTTP/2 protoc=
ol on the SSL connector by adding <code>etc/jetty-http2.xml</code> to the e=
ffective command line.</p>
</li>
<li>
<p>checks for the existence of a <code>etc/keystore</code> file and if not =
present, downloads a demonstration keystore file.</p>
</li>
</ul>
</div>
<div class=3D"sect4">
<h5 id=3D"quickstart-changing-https-port">Changing the Jetty HTTPS Port</h5=
>
<div class=3D"paragraph">
<p>You can configure the SSL connector to run on a different port by settin=
g the <code>jetty.ssl.port</code> property on the command line:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">&gt; cd $JETTY_BASE
&gt; java -jar $JETTY_HOME/start.jar jetty.ssl.port=3D8444</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Alternatively, property values can be added to the effective command lin=
e built from the <code>start.ini</code> file or <code>start.d/*.ini</code> =
files, depending on your set up.
Please see the section on <a href=3D"file:///home/tian/Downloads/b60/ebook/=
jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#=
start-vs-startd">Start.ini vs. Start.d</a> for more information.</p>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_more_start_jar_options">More start.jar options</h4>
<div class=3D"paragraph">
<p>The job of the <code>start.jar</code> is to interpret the command line, =
<code>start.ini</code> and <code>start.d</code> directory (and associated .=
ini files) to build a Java classpath and list of properties and configurati=
on files to pass to the main class of the Jetty XML configuration mechanism=
.
The <code>start.jar</code> mechanism has many options which are documented =
in the <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty=
-9.4.x/jetty-documentation/src/main/asciidoc/index.html#startup">Starting J=
etty</a> administration section and you can see them in summary by using th=
e command:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">&gt; java -jar $JETTY_HOME/start.jar --help</code></pre>
</div>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"quickstart-deploying-webapps">Deploying Web Applications</h3>
<div class=3D"paragraph">
<p>Jetty server instances that configure the deploy module will have a web =
application deployer that <a href=3D"file:///home/tian/Downloads/b60/ebook/=
jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#=
hot-deployment">hot deploys</a> files found in the <code>webapps</code> dir=
ectory.
Standard WAR files and Jetty configuration files that are placed in the <co=
de>webapps</code> directory are hot deployed to the server with the followi=
ng conventions:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>A directory called <code>example/</code> is deployed as a standard web a=
pplication if it contains a <code>WEB-INF/</code> subdirectory, otherwise i=
t is deployed as context of static content.
The context path is <code>/example</code> (that is, <code>http://localhost:=
8080/example/</code>) unless the base name is ROOT (case insensitive), in w=
hich case the context path is /.
If the directory name ends with ".d" it is ignored (but may be used by expl=
icit configuration).</p>
</li>
<li>
<p>A file called <code>example.war</code> is deployed as a standard web app=
lication with the context path <code>/example</code> (that is,
<code>http://localhost:8080/example/</code>).
If the base name is <code>ROOT</code> (case insensitive), the context path =
is <code>/</code>.
If <code>example.war</code> and <code>example/</code> exist, only the WAR i=
s deployed (which may use the directory as an unpack location).</p>
</li>
<li>
<p>An XML file like <code>example.xml</code> is deployed as a context whose=
 configuration is defined by the XML.
The configuration itself must set the context path.
If <code>example.xml</code> and <code>example.war</code> exists, only the X=
ML is deployed (which may use the WAR in its configuration).</p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>If you have a standard web application, you can hot deploy it into Jetty=
 by copying it into the <code>webapps</code> directory.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"_jetty_demonstration_web_applications">Jetty Demonstration Web Ap=
plications</h4>
<div class=3D"paragraph">
<p>The demo-base/webapps directory contains the following deployable and au=
xiliary files:</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1"><code>ROOT/</code></dt>
<dd>
<p>A directory of static content that is deployed to the root context / due=
 to it=E2=80=99s name.
Contains the Jetty demo welcome page.</p>
</dd>
<dt class=3D"hdlist1"><code>test.d</code></dt>
<dd>
<p>A directory containing additional configuration files used by <code>test=
.xml</code> to inject extra configuration into <code>test.war</code>.</p>
</dd>
<dt class=3D"hdlist1"><code>test.xml</code></dt>
<dd>
<p>A context configuration file that configures and deploys <code>test.war.=
</code>
The additional configuration includes the context path as well as setting a=
dditional descriptors found in the <code>test.d</code> directory.</p>
</dd>
<dt class=3D"hdlist1"><code>test.war</code></dt>
<dd>
<p>The demonstration web application that is configured and deployed by <co=
de>test.xml</code>.</p>
</dd>
<dt class=3D"hdlist1"><code>async-rest.war</code></dt>
<dd>
<p>A web application demonstration of asynchronous REST to eBay, automatica=
lly deployed to /async-rest based on the file name.</p>
</dd>
<dt class=3D"hdlist1"><code>test-jaas.war</code></dt>
<dd>
<p>A demonstration web application utilizing <a href=3D"file:///home/tian/D=
ownloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/a=
sciidoc/index.html#jaas-support">JAAS</a> for authentication.</p>
</dd>
<dt class=3D"hdlist1"><code>test-jaas.xml</code></dt>
<dd>
<p>A context configuration file that configures <code>test-jaas.war</code>.
Additional configuration includes setting up the <a href=3D"file:///home/ti=
an/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/ma=
in/asciidoc/index.html#configuring-login-service">LoginService</a> for auth=
entication and authorization.</p>
</dd>
<dt class=3D"hdlist1"><code>test-jndi.war</code></dt>
<dd>
<p>A demonstration web application showing the use of <a href=3D"file:///ho=
me/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/s=
rc/main/asciidoc/index.html#jndi">JNDI</a>.</p>
</dd>
<dt class=3D"hdlist1"><code>test-jndi.xml</code></dt>
<dd>
<p>A context configuration file that configures <code>test-jndi.war</code>.
Additional configuration includes defining objects in the naming space that=
 can be referenced from the webapp.</p>
</dd>
<dt class=3D"hdlist1"><code>test-spec.war</code></dt>
<dd>
<p>A demonstration web application that shows the use of annotations, fragm=
ents, <code>ServletContainerInitializers</code> and other Servlet Specifica=
tion 3.0/3.1 features.</p>
</dd>
<dt class=3D"hdlist1"><code>test-spec.xml</code></dt>
<dd>
<p>A context configuration file that configures <code>test-spec.war</code>.
Additional configuration includes setting up some objects in the naming spa=
ce that can be referenced by annotations.</p>
</dd>
<dt class=3D"hdlist1"><code>xref-proxy.war</code></dt>
<dd>
<p>A demonstration web application that uses a transparent proxy to serve t=
he Jetty source <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.proj=
ect-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJXURL%7D/">xref</a=
> from the <a href=3D"http://www.eclipse.org/jetty">Eclipse Jetty website</=
a>.</p>
</dd>
<dt class=3D"hdlist1"><code>example-moved.xml</code></dt>
<dd>
<p>A demonstration context configuration file that shows how to use the <a =
href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jet=
ty-documentation/src/main/asciidoc/index.html#moved-context-handler"><code>=
MovedContextHandler</code></a> to redirect from one path to another.</p>
</dd>
</dl>
</div>
</div>
</div>
</div>
</div>
<div class=3D"sect1">
<h2 id=3D"quick-start-configure">An Introduction to Jetty Configuration</h2=
>
<div class=3D"sectionbody">
<div class=3D"sect2">
<h3 id=3D"quickstart-config-how">How to Configure Jetty</h3>
<div class=3D"paragraph">
<p>To understand Jetty configuration, you need to understand the "How" and =
the "What".
This section covers how to configure Jetty in terms of what mechanisms exis=
t to perform configuration.
The <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.=
4.x/jetty-documentation/src/main/asciidoc/index.html#quickstart-config-what=
">next section</a> gives an overview of the action components and fields th=
at you can configure with these mechanisms.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"_jetty_pojo_configuration">Jetty POJO Configuration</h4>
<div class=3D"paragraph">
<p>The core components of Jetty are Plain Old Java Objects (<a href=3D"http=
://en.wikipedia.org/wiki/Plain_Old_Java_Object">POJOs</a>)
The process of configuring Jetty is mostly the process of instantiating, as=
sembling and setting fields on the Jetty POJOs.
This can be achieved by:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>Writing Java code to directly instantiate and assemble Jetty objects.
This is referred to as <a href=3D"file:///home/tian/Downloads/b60/ebook/jet=
ty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#emb=
edding-jetty">Embedding Jetty</a>.</p>
</li>
<li>
<p>Using Jetty XML configuration, which is an <a href=3D"http://en.wikipedi=
a.org/wiki/Inversion_of_Control">Inversion of Control (IoC)</a> framework, =
to instantiate and assemble Jetty objects as XML objects.
The <code>etc/jetty.xml</code> file is the main Jetty XML configuration fil=
e, but there are many other <code>etc/jetty-__feature__.xml</code> files in=
cluded in the Jetty distribution.</p>
</li>
<li>
<p>Using a third party <a href=3D"http://en.wikipedia.org/wiki/Inversion_of=
_Control">IoC</a> framework like <a href=3D"http://en.wikipedia.org/wiki/Sp=
ring_Framework">Spring</a>, to instantiate and assemble Jetty objects as Sp=
ring beans.</p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>Because the main Jetty configuration is done by IoC, the <a href=3D"file=
:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documenta=
tion/src/main/asciidoc/%7BJDURL%7D/">Jetty API documentation</a> is the ult=
imate configuration reference.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_jetty_start_configuration_files">Jetty Start Configuration Files=
</h4>
<div class=3D"paragraph">
<p>The Jetty distribution uses the following configuration files to instant=
iate, inject and start server via the <code>start.jar</code> mechanism.</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1"><code>ini</code> files</dt>
<dd>
<p>The Jetty Start mechanism uses the command line, the <code>$JETTY_BASE/s=
tart.ini</code> and/or <code>$JETTY_BASE/start.d/*.ini</code> files to crea=
te an effective command line of arguments.
Arguments may be:</p>
<div class=3D"ulist">
<ul>
<li>
<p>Module activations in the form <code>--module=3Dname</code></p>
</li>
<li>
<p>Properties in the form of <code>name=3Dvalue</code>, used to parameteriz=
e Jetty IoC XML</p>
</li>
<li>
<p>XML files in Jetty IoC (or Spring) XML format</p>
</li>
<li>
<p>A standard <a href=3D"http://en.wikipedia.org/wiki/Java_properties">Java=
 property file</a> containing additional start properties</p>
</li>
<li>
<p>Other start.jar options (see <code>java -jar start.jar --help</code>)</p=
>
</li>
<li>
<p>Some JVM options in combination with <code>--exec</code>, such as <code>=
-Xbootclasspath</code>.</p>
</li>
</ul>
</div>
</dd>
</dl>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Note</div>
</td>
<td class=3D"content">
<div class=3D"paragraph">
<p>It is the <code>ini</code> files located in the Jetty base directory (if=
 different from Jetty home) that are typically edited to change the configu=
ration (e.g. change ports).</p>
</div>
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1"><code>mod</code> files</dt>
<dd>
<p>The <code>$JETTY_HOME/modules/*.mod</code> files contain the definition =
of modules that can be activated by <code>--module=3Dname</code>.
Each <code>mod</code> file defines:</p>
<div class=3D"ulist">
<ul>
<li>
<p>Module dependencies for ordering and activation</p>
</li>
<li>
<p>The libraries needed by the module to be added to the classpath</p>
</li>
<li>
<p>The XML files needed by the module to be added to the effective command =
line</p>
</li>
<li>
<p>Files needed by the activated module</p>
</li>
<li>
<p>A template <code>ini</code> file to be used when activating the <code>--=
add-to-start=3Dname</code> option</p>
<div class=3D"paragraph">
<p>Typically module files are rarely edited and only then for significant s=
tructural changes.
The <code>*.mod</code> files are normally located in <code>$JETTY_HOME/modu=
les/</code>, but extra or edited modules may be added to <code>$JETTY_BASE/=
module</code>.
If module changes are required, it is best practice to copy the particular =
<code>*.mod</code> file from <code>$JETTY_HOME/modules/</code> to <code>$JE=
TTY_BASE/modules/</code> before being modified.</p>
</div>
</li>
</ul>
</div>
</dd>
<dt class=3D"hdlist1">XML files</dt>
<dd>
<p>XML files in <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.proj=
ect-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#jetty-xml-=
syntax">Jetty IoC XML format</a> or Spring IoC format are listed either on =
the command line, in <code>ini</code> files, or are added to the effective =
command line by a module definition.
The XML files instantiate and inject the actual Java objects that comprise =
the server, connectors and contexts.
Because Jetty IoC XML files use properties, most common configuration tasks=
 can be accomplished without editing these XML files and can instead be ach=
ieved by editing the property in the corresponding <code>ini</code> files.
XML files are normally located in <code>$JETTY_HOME/etc/</code>, but extra =
or edited XML files may be added to <code>$JETTY_BASE/etc/</code>.
<strong>Note</strong> If XML configuration changes are required, it is best=
 practice to copy the XML file from <code>$JETTY_HOME/etc/</code> to <code>=
$JETTY_BASE/etc/</code> before being modified.</p>
</dd>
</dl>
</div>
<div class=3D"paragraph">
<p>Below is an illustration of how the various Jetty configuration files (<=
code>ini</code>, <code>mod</code> and XML) are related:</p>
</div>
<div class=3D"paragraph">
<p><span class=3D"image"><img src=3D"file:///home/tian/Downloads/b60/ebook/=
jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/images/Jett=
y_Configuration_File_Relationships.png" alt=3D"image" width=3D"693"></span>=
</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_other_configuration_files">Other Configuration Files</h4>
<div class=3D"paragraph">
<p>In addition to the configuration files described above, the configuratio=
n of the server can use the following file types:</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">Context XML files</dt>
<dd>
<p>Any XML files in <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.=
project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#jetty-=
xml-syntax">Jetty IoC XML format</a> or Spring IoC format that is discovere=
d in the <code>/webapps</code> directory are used by the deploy module to i=
nstantiate and inject <code>HttpContext</code> instances to create a specif=
ic context.
These may be standard web applications or bespoke contexts created from spe=
cial purpose handlers.</p>
</dd>
<dt class=3D"hdlist1">web.xml</dt>
<dd>
<p>The <a href=3D"http://en.wikipedia.org/wiki/Servlet">Servlet</a> Specifi=
cation defines the <a href=3D"http://en.wikipedia.org/wiki/Web.xml"><code>w=
eb.xml</code></a> deployment descriptor that defines and configures the fil=
ters, servlets and resources a <a href=3D"http://en.wikipedia.org/wiki/Web_=
application">web application</a> uses.
The Jetty <code>WebAppContext</code> component uses this XML format to:</p>
<div class=3D"ulist">
<ul>
<li>
<p>Set up the default configuration of a web application context.</p>
</li>
<li>
<p>Interpret the application-specific configuration supplied with a web app=
lication in the <code>WEB-INF/web.xml</code> file.</p>
</li>
<li>
<p>Interpret descriptor fragments included in the <code>META-INF</code> dir=
ectory of Jar files within <code>WEB-INF/lib.</code></p>
<div class=3D"paragraph">
<p>Normally the <code>web.xml</code> file for a web application is found in=
 the <code>WEB-INF/web.xml</code> location within the war file/directory or=
 as <code>web.xml</code> fragments with <code>.jar</code> files found in <c=
ode>WEB-INF/lib</code>.
Jetty also supports multiple <code>web.xml</code> files so that a default d=
escriptor may be applied before <code>WEB-INF/web.xml</code> (typically set=
 to <code>etc/webdefault.xml</code> by the deploy module) and an override d=
escriptor may be applied after <code>WEB-INF/web.xml</code> (typically set =
by a context XML file see <code>test.xml</code>)</p>
</div>
</li>
</ul>
</div>
</dd>
<dt class=3D"hdlist1">Property Files</dt>
<dd>
<p>Standard <a href=3D"http://en.wikipedia.org/wiki/Java_properties">Java p=
roperty files</a> are also used for Jetty configuration in several ways:</p=
>
<div class=3D"ulist">
<ul>
<li>
<p>To parameterize Jetty IoC XML via the use of the <code>Property</code> e=
lement.</p>
</li>
<li>
<p>To configure the default logging mechanism (<code>StdErrLog</code>). Oth=
er logging frameworks can be utilized and also use property files (for exam=
ple, <code>log4j</code>).</p>
</li>
<li>
<p>As a simple database for login usernames and credentials.</p>
</li>
</ul>
</div>
</dd>
</dl>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_jetty_ioc_xml_format">Jetty IoC XML format</h4>
<div class=3D"paragraph">
<p>To understand the <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty=
.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#jetty=
-xml-syntax">Jetty IoC XML format</a>, consider the following example of an=
 embedded Jetty server instantiated and configured in Java:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">U=
nresolved directive in quick-start/configuring/how-to-configure.adoc - incl=
ude::{SRCDIR}/examples/embedded/src/main/java/org/eclipse/jetty/embedded/Ex=
ampleServer.java[]</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p><a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/index.html#jetty-xml-syntax">Jetty=
 IoC XML format</a> allows you to instantiate and configure the exact same =
server in XML without writing any java code:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml">Unr=
esolved directive in quick-start/configuring/how-to-configure.adoc - includ=
e::{SRCDIR}/examples/embedded/src/main/resources/exampleserver.xml[]</code>=
</pre>
</div>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"quickstart-config-what">What to Configure in Jetty</h3>
<div class=3D"paragraph">
<p>This section gives an overview of the components of Jetty you typically =
configure using the mechanisms outlined in the previous section.
<a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/=
jetty-documentation/src/main/asciidoc/index.html#basic-architecture">Jetty =
Architecture</a> describes the structure of a Jetty server, which is good b=
ackground reading to understand configuration, and is vital if you want to =
change the structure of the server as set up by the default configurations =
in the Jetty distribution.
However, for most purposes, configuration is a matter of identifying the co=
rrect configuration file and modifying existing configuration values.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"intro-jetty-configuration-server">Configuring the Server</h4>
<div class=3D"paragraph">
<p>The Server instance is the central coordination object of a Jetty server=
; it provides services and life cycle management for all other Jetty server=
 components.
In the standard Jetty distribution, the core server configuration is in <co=
de>etc/jetty.xml</code> file, but you can mix in other server configuration=
s which can include:</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">ThreadPool</dt>
<dd>
<p>The Server instance provides a ThreadPool instance that is the default E=
xecutor service other Jetty server components use.
The prime configuration of the thread pool is the maximum and minimum size =
and is set in <code>start.ini</code> or <code>start.d/server.ini</code>.</p=
>
</dd>
<dt class=3D"hdlist1">Handlers</dt>
<dd>
<p>A Jetty server can have only a single Handler instance to handle incomin=
g HTTP requests.
However a handler may be a container or wrapper of other handlers forming a=
 tree of handlers that typically
handle a request as a collaboration between the handlers from a branch of t=
he tree from root to leaf.
The default handler tree set up in the <code>etc/jetty.xml</code> file is a=
 Handler Collection containing a Context Handler Collection and the Default=
 Handler.
The Context Handler Collection selects the next handler by context path and=
 is where deployed Context Handler and Web Application Contexts are added t=
o the handler tree.
The Default Handler handles any requests not already handled and generates =
the standard 404 page.
Other configuration files may add handlers to this tree (for example, <code=
>jetty-rewrite.xml</code>, <code>jetty-requestlog.xml</code>) or configure =
components to hot deploy handlers (for example, <code>jetty-deploy.xml</cod=
e>).</p>
</dd>
<dt class=3D"hdlist1">Server Attributes</dt>
<dd>
<p>The server holds a generic attribute map of strings to objects so that o=
ther Jetty components can associate named objects with the server, and if t=
he value objects implement the LifeCycle interface, they are started and st=
opped with the server.
Typically server attributes hold server-wide default values.</p>
</dd>
<dt class=3D"hdlist1">Server fields</dt>
<dd>
<p>The server also has some specific configuration fields that you set in <=
code>start.ini</code>  or <code>start.d/server.ini</code> for controlling, =
among other things, the sending of dates and versions in HTTP responses.</p=
>
</dd>
<dt class=3D"hdlist1">Connectors</dt>
<dd>
<p>The server holds a collection of connectors that receive connections for=
 HTTP and the other protocols that Jetty supports.
The next section, <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.pr=
oject-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#intro-je=
tty-configuration-connectors">Configuring Connectors</a> describes configur=
ation of the connectors themselves.
For the server you can either set the collection of all connectors or add/r=
emove individual connectors.</p>
</dd>
<dt class=3D"hdlist1">Services</dt>
<dd>
<p>The server can hold additional service objects, sometimes as attributes,=
 but often as aggregated LifeCycle beans.
Examples of services are Login Services and DataSources, which you configur=
e at the server level and then inject into the web applications that use th=
em.</p>
</dd>
</dl>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"intro-jetty-configuration-connectors">Configuring Connectors</h4>
<div class=3D"paragraph">
<p>A Jetty Server Connector is a network end point that accepts connections=
 for one or more protocols which produce requests and/or messages for the J=
etty server.
In the standard Jetty server distribution, several provided configuration f=
iles add connectors to the server for various protocols and combinations of=
 protocols: <code>http.ini</code>, <code>https.ini</code> and <code>jetty-h=
ttp2.xml</code>.
The configuration needed for connectors is typically:</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">Port</dt>
<dd>
<p>The TCP/IP port on which the connector listens for connections is set us=
ing the the XML Property element which looks up the <code>jetty.http.port</=
code> (or <code>jetty.ssl.port</code>) property, and if not found defaults =
to 8080 (or 8443 for TLS).</p>
</dd>
<dt class=3D"hdlist1">Host</dt>
<dd>
<p>You can configure a host either as a host name or IP address to identify=
 a specific network interface on which to listen.
If not set, or set to the value of 0.0.0.0, the connector listens on all lo=
cal interfaces.
The XML Property element is used to look up the host value from the <code>j=
etty.host</code> property.</p>
</dd>
<dt class=3D"hdlist1">Idle Timeout</dt>
<dd>
<p>The time in milliseconds that a connection can be idle before the connec=
tor takes action to close the connection.</p>
</dd>
<dt class=3D"hdlist1">HTTP Configuration</dt>
<dd>
<p>Connector types that accept HTTP semantics (including HTTP, HTTPS and HT=
TP2) are configured with a <code>HttpConfiguration</code> instance that con=
tains common HTTP configuration that is independent of the specific wire pr=
otocol used.
Because these values are often common to multiple connector types, the stan=
dard Jetty Server distribution creates a single <code>HttpConfiguration</co=
de> in the <code>jetty.xml</code> file which is used via the XML Ref elemen=
t in the specific connector files.</p>
</dd>
<dt class=3D"hdlist1">SSL Context Factory</dt>
<dd>
<p>The TLS connector types (HTTPS and HTTP2) configure an SSL Context Facto=
ry with the location of the server keystore and truststore for obtaining se=
rver certificates.</p>
</dd>
</dl>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Note</div>
</td>
<td class=3D"content">
Virtual hosts are not configured on connectors. You must configure individu=
al contexts with the virtual hosts to which they respond.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Note</div>
</td>
<td class=3D"content">
Prior to Jetty 9, the type of the connector reflected both the protocol sup=
ported (HTTP, HTTPS, AJP, SPDY), and the nature of the implementation (NIO =
or BIO).
From Jetty 9 onwards there is only one prime Connector type (<code>ServerCo=
nnector</code>), which is NIO based and uses Connection Factories to handle=
 one or more protocols.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"intro-jetty-configuration-contexts">Configuring Contexts</h4>
<div class=3D"paragraph">
<p>A Jetty context is a handler that groups other handlers under a context =
path together with associated resources and is roughly equivalent to the st=
andard ServletContext API.
A context may contain either standard Jetty handlers or a custom applicatio=
n handler.</p>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Note</div>
</td>
<td class=3D"content">
The servlet specification defines a web application.
In Jetty a standard web application is a specialized context that uses a st=
andard layout and <code>WEB-INF/web.xml</code> to instantiate and configure=
 classpath, resource base and handlers for sessions, security, and servlets=
, plus servlets for JSPs and static content.
Standard web applications often need little or no additional configuration,=
 but you can also use the techniques for arbitrary contexts to refine or mo=
dify the configuration of standard web applications.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
<div class=3D"paragraph">
<p>Configuration values that are common to all contexts are:</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">contextPath</dt>
<dd>
<p>The contextPath is a URL prefix that identifies which context a HTTP req=
uest is destined for.
For example, if a context has a context path <code>/foo</code>, it handles =
requests to <code>/foo</code>, <code>/foo/index.html</code>,
<code>/foo/bar/</code>, and <code>/foo/bar/image.png</code> but it does not=
 handle requests like <code>/</code>, <code>/other/</code>, or <code>/favic=
on.ico</code>.
A context with a context path of / is called the root context.</p>
<div class=3D"paragraph">
<p>The context path can be set by default from the deployer (which uses the=
 filename as the basis for the context path); or in code; or it can be set =
by a Jetty IoC XML that is either applied by the deployer or found in the <=
code>WEB-INF/jetty-web.xml</code> file of a standard web app context.</p>
</div>
</dd>
<dt class=3D"hdlist1">virtualHost</dt>
<dd>
<p>A context may optionally have one or more virtual hosts set.
Unlike the host set on a connector (which selects the network interface on =
which to listen), a virtual host does not set any network parameters.
Instead a virtual host represents an alias assigned by a name service to an=
 IP address, which may have many aliases.
To determine which virtual host a request is intended for, the HTTP client =
(browser) includes in the request the name used to look up the network addr=
ess.
A context with a virtual host set only handles requests that have a matchin=
g virtual host in their request headers.</p>
</dd>
<dt class=3D"hdlist1">classPath</dt>
<dd>
<p>A context may optionally have a classpath, so that any thread that execu=
tes a handler within the context has a thread context classloader set with =
the classpath.
A standard web application has the classpath initialized by the <code>WEB-I=
NF/lib</code> and <code>WEB-INF/classes</code> directory and
has additional rules about delegating classloading to the parent classloade=
r.
All contexts may have additional classpath entries added.</p>
</dd>
<dt class=3D"hdlist1">attributes</dt>
<dd>
<p>Attributes are arbitrary named objects that are associated with a contex=
t and are frequently used to pass entities between a web application and it=
s container.
For example the attribute <code>javax.servlet.context.tempdir</code> is use=
d to pass the File instance that represents the assigned temporary director=
y for a web application.</p>
</dd>
<dt class=3D"hdlist1">resourceBase</dt>
<dd>
<p>The resource base is a directory (or collection of directories or URL) t=
hat contains the static resources for the context.
These can be images and HTML files ready to serve or JSP source files ready=
 to be compiled.
In traditional web servers this value is often called the docroot.</p>
</dd>
</dl>
</div>
<div class=3D"sect4">
<h5 id=3D"_context_configuration_by_api">Context Configuration by API</h5>
<div class=3D"paragraph">
<p>In an embedded server, you configure contexts by directly calling the <a=
 href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/je=
tty-documentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/server/ha=
ndler/ContextHandler.html">ContextHandler</a> API as in the following examp=
le:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">U=
nresolved directive in quick-start/configuring/what-to-configure.adoc - inc=
lude::{SRCDIR}/examples/embedded/src/main/java/org/eclipse/jetty/embedded/O=
neContext.java[]</code></pre>
</div>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_context_configuration_by_ioc_xml">Context Configuration by IoC X=
ML</h5>
<div class=3D"paragraph">
<p>You can create and configure a context entirely by IoC XML (either Jetty=
=E2=80=99s or Spring).
The deployer discovers and hot deploys context IoC descriptors like the fol=
lowing which creates a context to serve the Javadoc from the Jetty distribu=
tion:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><!-=
-?xml version=3D"1.0"  encoding=3D"UTF-8"?-->


<!--
  Configure a custom context for serving javadoc as static resources
-->

<configure class=3D"org.eclipse.jetty.server.handler.ContextHandler">
  <set name=3D"contextPath">/javadoc</set>
  <set name=3D"resourceBase"><systemproperty name=3D"jetty.home" default=3D=
".">/javadoc/</systemproperty></set>
  <set name=3D"handler">
    <new class=3D"org.eclipse.jetty.server.handler.ResourceHandler">
      <set name=3D"welcomeFiles">
        <array type=3D"String">
          <item>index.html</item>
        </array>
      </set>
      <set name=3D"cacheControl">max-age=3D3600,public</set>
    </new>
  </set>
</configure></code></pre>
</div>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"intro-jetty-configuration-webapps">Configuring Web Applications</=
h5>
<div class=3D"paragraph">
<p>The servlet specification defines a web application, which when packaged=
 as a zip is called WAR file (Web application ARchive).
Jetty implements both WAR files and unpacked web applications as a speciali=
zed context that is configured by means of:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>A standard layout which sets the location of the resourceBase (the root =
of the WAR) and initializes the classpath from jars found in <code>WEB-INF/=
lib</code> and classes found in <code>WEB-INF/classes</code>.</p>
</li>
<li>
<p>The standard <code>WEB-INF/web.xml</code> deployment descriptor which is=
 parsed to define and configure init parameters, filters, servlets, listene=
rs, security constraints, welcome files and resources to be injected.</p>
</li>
<li>
<p>A default <code>web.xml</code> format deployment descriptor provided eit=
her by Jetty or in configuration configures the JSP servlet and the default=
 servlet for handling static content.
The standard <code>web.xml</code> may override the default <code>web.xml</c=
ode>.</p>
</li>
<li>
<p>Annotations discovered on classes in Jars contained in <code>WEB-INF/lib=
</code> can declare additional filters, servlets and listeners.</p>
</li>
<li>
<p>Standard deployment descriptor fragments discovered in Jars contained in=
 <code>WEB-INF/lib</code> can declare additional init parameters, filters, =
servlets, listeners, security constraints, welcome files and resources to b=
e injected.</p>
</li>
<li>
<p>An optional <code>WEB-INF/jetty-web.xml</code> file may contain Jetty Io=
C configuration to configure the Jetty specific APIs of the context and han=
dlers.</p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>Because these configuration mechanisms are contained within the WAR file=
 (or unpacked web application), typically a web application contains much o=
f its own configuration and deploying a WAR is often just a matter of dropp=
ing the WAR file in to the webapps directory that is scanned by the <a href=
=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-d=
ocumentation/src/main/asciidoc/index.html#quickstart-config-deployer">Jetty=
 deployer</a>.</p>
</div>
<div class=3D"paragraph">
<p>If you need to configure something within a web application, often you d=
o so by unpacking the WAR file and editing the <code>web.xml</code> and oth=
er configuration files.
However, both the servlet standard and some Jetty features allow for other =
configuration to be applied to a web application externally from the WAR:</=
p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>Configured data sources and security realms in the server can be injecte=
d into a web application either explicitly or by name matching.</p>
</li>
<li>
<p>Jetty allows one or more override deployment descriptors, in <code>web.x=
ml</code> format, to be set on a context (via code or IoC XML) to amend the=
 configuration set by the default and standard <code>web.xml</code>.</p>
</li>
<li>
<p>The normal Jetty Java API may be called by code or IoC XML to amend the =
configuration of a web application.</p>
</li>
</ul>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_setting_the_context_path">Setting the Context Path</h5>
<div class=3D"paragraph">
<p>The web application standard provides no configuration mechanism for a w=
eb application or WAR file to set its own <code>contextPath</code>.
By default the deployer uses conventions to set the context path:
If you deploy a WAR file called <code>foobar.WAR</code>, the context path i=
s <code>/foobar</code>; if you deploy a WAR file called <code>ROOT.WAR</cod=
e> the context path is <code>/</code>.</p>
</div>
<div class=3D"paragraph">
<p>However, it is often desirable to explicitly set the context path so tha=
t information (for example, version numbers) may be included in the filenam=
e of the WAR.
Jetty allows the context Path of a WAR file to be set internally (by the WA=
R itself) or externally (by the deployer of the WAR).</p>
</div>
<div class=3D"paragraph">
<p>To set the contextPath from within the WAR file, you can include a <code=
>WEB-INF/jetty-web.xml</code> file which contains IoC XML to set the contex=
t path:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><!-=
-?xml version=3D"1.0"  encoding=3D"UTF-8"?-->


<configure class=3D"org.eclipse.jetty.webapp.WebAppContext">
    <set name=3D"contextPath">/contextpath</set>
</configure></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Alternately, you can configure the classpath externally without the need=
 to modify the WAR file itself.
Instead of allowing the WAR file to be discovered by the deployer, an IoC X=
ML file may be deployed that both sets the context path and declares the WA=
R file that it applies to:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><!-=
-?xml version=3D"1.0"  encoding=3D"UTF-8"?-->


<configure class=3D"org.eclipse.jetty.webapp.WebAppContext">
  <set name=3D"war"><systemproperty name=3D"jetty.home" default=3D".">/weba=
pps/test.war</systemproperty></set>
  <set name=3D"contextPath">/test</set>
</configure></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>An example of setting the context path is included with the Jetty distri=
bution in <code>$JETTY_HOME/webapps/test.xml</code>.</p>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"quickstart-config-deployer">Web Application Deployment</h5>
<div class=3D"paragraph">
<p>Jetty is capable of deploying a variety of Web Application formats.
This is accomplished via scans of the <code>${jetty.base}/webapps</code> di=
rectory for contexts to deploy.</p>
</div>
<div class=3D"paragraph">
<p>A Context can be any of the following:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>A standard WAR file. (must in "<code>.war</code>").</p>
</li>
<li>
<p>A directory containing an expanded WAR file. (must contain <code>{dir}/W=
EB-INF/web.xml</code> file).</p>
</li>
<li>
<p>A directory containing static content.</p>
</li>
<li>
<p>A XML descriptor in <a href=3D"file:///home/tian/Downloads/b60/ebook/jet=
ty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#jet=
ty-xml-syntax">Jetty XML Syntax</a> that configures a <a href=3D"file:///ho=
me/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/s=
rc/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/server/handler/ContextHandle=
r.html">ContextHandler</a> instance (Such as a
<a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/=
jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/webapp/=
WebAppContext.html">WebAppContext</a>).</p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>The new WebAppProvider will attempt to avoid double deployments during t=
he directory scan with the following heuristics:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>Hidden files (starting with <code>"."</code>) are ignored</p>
</li>
<li>
<p>Directories with names ending in <code>".d"</code> are ignored</p>
</li>
<li>
<p>If a directory and matching WAR file exist with the same base name (eg: =
<code>foo/</code> and <code>foo.war</code>), then the directory is assumed =
to be the unpacked WAR and only the WAR is deployed (which may reuse the un=
packed directory)</p>
</li>
<li>
<p>If a directory and matching XML file exists (eg: <code>foo/</code> and <=
code>foo.xml</code>), then the directory is assumed to be an unpacked WAR a=
nd only the XML is deployed (which may use the directory in its own configu=
ration)</p>
</li>
<li>
<p>If a WAR file and matching XML file exist (eg: <code>foo.war</code> and =
<code>foo.xml</code>), then the WAR is assumed to be configured by the XML =
and only the XML is deployed.</p>
</li>
</ul>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Note</div>
</td>
<td class=3D"content">
In prior versions of Jetty there was a separate ContextDeployer that provid=
ed XML-based deployment. As of Jetty 9 the ContextDeployer no longer exists=
 and its functionality has been merged with the new <a href=3D"file:///home=
/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src=
/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/deploy/providers/WebAppProvide=
r.html">WebAppProvider</a> to avoid double deployment scenarios.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_setting_an_authentication_realm">Setting an Authentication Realm=
</h5>
<div class=3D"paragraph">
<p>The authentication method and realm name for a standard web application =
may be set in the <code>web.xml</code> deployment descriptor with elements =
like:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml">...
<login-config>
  <auth-method>BASIC</auth-method>
  <realm-name>Test Realm</realm-name>
</login-config>
...</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>This example declares that the BASIC authentication mechanism will be us=
ed with credentials validated against a realm called "Test Realm."
However the standard does not describe how the realm itself is implemented =
or configured.
In Jetty, there are several realm implementations (called LoginServices) an=
d the simplest of these is the HashLoginService, which can read usernames a=
nd credentials from a Java properties file.</p>
</div>
<div class=3D"paragraph">
<p>To configure an instance of HashLoginService that matches the "Test Real=
m" configured above, the following <code>$JETTY_BASE/etc/test-realm.xml</co=
de> IoC XML file should be passed on the command line or set in <code>start=
.ini</code> or <code>start.d/server.ini</code>.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml">Unr=
esolved directive in quick-start/configuring/what-to-configure.adoc - inclu=
de::{SRCDIR}/tests/test-webapps/test-jetty-webapp/src/main/config/demo-base=
/etc/test-realm.xml[]</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>This creates and configures the LoginService as an aggregate bean on the=
 server.
When a web application is deployed that declares a realm called "Test Realm=
," the server beans are searched for a matching Login Service.</p>
</div>
</div>
</div>
</div>
</div>
</div>
<h1 id=3D"jetty-config-guide" class=3D"sect0">Jetty Configuration Guide</h1=
>
<div class=3D"sect1">
<h2 id=3D"configuring-deployment">Deploying to Jetty</h2>
<div class=3D"sectionbody">
<div class=3D"paragraph">
<p>This chapter discusses various ways to deploy applications with Jetty.
Topics range from deployment bindings to deploying third party products.
It also includes information about the Deployment Manager, WebApp Provider,=
 and Overlay Deployer.</p>
</div>
<div class=3D"sect2">
<h3 id=3D"anatomy-of-a-webapp">Anatomy of a Web Application</h3>
<div class=3D"paragraph">
<p>The standard Jetty distribution is capable of deploying standard Servlet=
 Spec Web Applications and Jetty internal ContextHandler deployment descrip=
tors, or even a mix of the two.</p>
</div>
<div class=3D"paragraph">
<p>Web Applications are deployable collections of dynamic (servlets, filter=
s, jsps, etc..) and static content, support libraries, and descriptive meta=
data that are bound to a specific context path on Jetty.</p>
</div>
<div class=3D"paragraph">
<p>Ultimately the format and layout are defined by the Servlet Spec, and th=
e official Servlet Spec documentation should be consulted for a more detail=
ed understanding of Web Application layout and structure; however, this wil=
l outline basics about how Jetty views these requirements.</p>
</div>
<div class=3D"paragraph">
<p>Web Applications can be bundled into a single Web Archive (WAR file) or =
as a directory tree.</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1"><code>/WEB-INF/</code></dt>
<dd>
<p>Special Servlet API defined directory used to store anything related to =
the Web Application that are not part of the public access of the Web Appli=
cation.
If there is content that is accessed by a Web Application internally, but t=
hat should also never be accessed directly by a web browser, this is the di=
rectory it would placed in.</p>
</dd>
<dt class=3D"hdlist1"><code>/WEB-INF/web.xml</code></dt>
<dd>
<p><strong>Required</strong> deployment descriptor defining various behavio=
r of the Web Application.</p>
</dd>
<dt class=3D"hdlist1"><code>/WEB-INF/classes/</code></dt>
<dd>
<p>Location for Web Application specific compiled java classes</p>
</dd>
<dt class=3D"hdlist1"><code>/WEB-INF/lib/</code></dt>
<dd>
<p>Directory for JAR files (libraries)</p>
</dd>
</dl>
</div>
<div class=3D"paragraph">
<p>The Jetty internal <code>WebAppClassloader</code> will load classes from=
 <code>/WEB-INF/classes/</code> first, then from jar files found in <code>/=
WEB-INF/lib/</code>.</p>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"automatic-webapp-deployment">Automatic Web Application Deployment=
</h3>
<div class=3D"paragraph">
<p>The most basic technique for deploying Web Applications is to put a WAR =
file or Exploded WAR directory into the <code>${jetty.base}/webapps/</code>=
 directory and let Jetty=E2=80=99s deployment scanner find it and deploy it=
 under a Context path of the same name.</p>
</div>
<div class=3D"paragraph">
<p>Only Web Applications that follow the Web Application Layout will be det=
ected by Jetty and deployed this way.</p>
</div>
<div class=3D"paragraph">
<p>The Context Path assigned to this automatic deployment is based the file=
name (or directory name) of the WAR.</p>
</div>
<table class=3D"tableblock frame-all grid-all spread">
<colgroup>
<col style=3D"width: 50%;">
<col style=3D"width: 50%;">
</colgroup>
<thead>
<tr>
<th class=3D"tableblock halign-left valign-top">File or Directory Name</th>
<th class=3D"tableblock halign-left valign-top">Assigned Context Path</th>
</tr>
</thead>
<tbody>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>/webapps/footrope.war</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><a =
href=3D"http://host/footrope/" class=3D"bare">http://host/footrope/</a></p>=
</td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>/webapps/baggywrinkle-1.0.war</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><a =
href=3D"http://host/baggywrinkle-1.0/" class=3D"bare">http://host/baggywrin=
kle-1.0/</a></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>/webapps/lazaret-2.1.3-SNAPSHOT.war</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><a =
href=3D"http://host/lazaret-2.1.3-SNAPSHOT/" class=3D"bare">http://host/laz=
aret-2.1.3-SNAPSHOT/</a></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>/webapps/belaying-pins/WEB-INF/web.xml</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><a =
href=3D"http://host/belaying-pins/" class=3D"bare">http://host/belaying-pin=
s/</a></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>/webapps/root.war</code> <em>(reserved name)</em></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><a =
href=3D"http://host/" class=3D"bare">http://host/</a></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>/webapps/root/WEB-INF/web.xml</code> <em>(reserved name)</em></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><a =
href=3D"http://host/" class=3D"bare">http://host/</a></p></td>
</tr>
</tbody>
</table>
</div>
<div class=3D"sect2">
<h3 id=3D"configuring-specific-webapp-deployment">Configuring a Specific We=
b Application Deployment</h3>
<div class=3D"paragraph">
<p>Using the Automatic Web Application Deployment model is quick and easy, =
but sometimes you might need to tune certain deployment properties (for exa=
mple, you want to deploy with a context path that is not based on the file =
name, or you want to define a special database connection pool just for thi=
s web application).
You can use a <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.projec=
t-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#deployable-d=
escriptor-file">Jetty Deployable Descriptor XML File</a> to accomplish such=
 tuning.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"deployable-descriptor-file">Jetty Deployable Descriptor XML File<=
/h4>
<div class=3D"paragraph">
<p>Jetty supports deploying Web Applications via XML files which will build=
 an instance of a <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.pr=
oject-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org/ecl=
ipse/jetty/server/handler/ContextHandler.html">ContextHandler</a> that Jett=
y can then deploy.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"using-basic-descriptor-files">Using Basic Descriptor Files</h4>
<div class=3D"paragraph">
<p>In a default Jetty installation, Jetty scans its <code>$JETTY_HOME/webap=
ps</code> directory for context deployment descriptor files.
To deploy a web application using such a file, simply place the file in tha=
t directory.</p>
</div>
<div class=3D"paragraph">
<p>The deployment descriptor file itself is an xml file that configures a <=
a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/j=
etty-documentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/webapp/W=
ebAppContext.html"><code>WebAppContext</code></a> class.
For a basic installation only two properties need configured:</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">war</dt>
<dd>
<p>The filesystem path to the web application file (or directory)</p>
</dd>
<dt class=3D"hdlist1">contextPath</dt>
<dd>
<p>The context path to use for the web application</p>
</dd>
</dl>
</div>
<div class=3D"paragraph">
<p>For example, here is a descriptor file that deploys the file <code>/opt/=
myapp/myapp.war</code> to the context path <code>/wiki</code>:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><!-=
-?xml version=3D"1.0" encoding=3D"UTF-8"?-->


<configure class=3D"org.eclipse.jetty.webapp.WebAppContext">
  <set name=3D"contextPath">/wiki</set>
  <set name=3D"war">/opt/myapp/myapp.war</set>
</configure></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Both <code>SystemProperty</code> and <code>Property</code> elements can =
be used in the descriptor file.
For example, if the system property is set to <code>myapp.home=3D/opt/myapp=
</code>, the previous example can be rewritten as:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><!-=
-?xml version=3D"1.0" encoding=3D"UTF-8"?-->


<configure class=3D"org.eclipse.jetty.webapp.WebAppContext">
  <set name=3D"contextPath">/wiki</set>
  <set name=3D"war"><systemproperty name=3D"myapp.home">/myapp.war</systemp=
roperty></set>
</configure></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>If the home path for an application needs altered, only the system prope=
rty needs changed.
This is useful if the version of an app is frequently changed.</p>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Note</div>
</td>
<td class=3D"content">
To ensure your <code>web.xml</code> files are validated, you will need to s=
et the <code>validateXml</code> attribute to true as described <a href=3D"f=
ile:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-docume=
ntation/src/main/asciidoc/index.html#jetty-xml-dtd">here.</a>
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"configuring-advanced-descriptor-files">Configuring Advanced Descr=
iptor Files</h4>
<div class=3D"paragraph">
<p>Official documentation for the for the <a href=3D"file:///home/tian/Down=
loads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asci=
idoc/%7BJDURL%7D/org/eclipse/jetty/webapp/WebAppContext.html"><code>WebAppC=
ontext</code></a> class lists all the properties that can be set.
Here are some examples that configure advanced options in the descriptor fi=
le.</p>
</div>
<div class=3D"paragraph">
<p>This first example tells Jetty not to expand the WAR file when deploying=
 it.
This can help make it clear that users should not make changes to the tempo=
rary unpacked WAR because such changes do not persist, and therefore do not=
 apply the next time the web application deploys.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><!-=
-?xml version=3D"1.0" encoding=3D"UTF-8"?-->


<configure class=3D"org.eclipse.jetty.webapp.WebAppContext">
  <set name=3D"contextPath">/wiki</set>
  <set name=3D"war"><systemproperty name=3D"myapp.home">/myapp.war</systemp=
roperty></set>
  <set name=3D"extractWAR">false</set>
</configure></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The next example retrieves the JavaEE Servlet context and sets an initia=
lization parameter on it.
The <code>setAttribute</code> method can also be used to set a Servlet cont=
ext attribute.
However, since the <code>web.xml</code> for the web application is processe=
d after the deployment descriptor, the <code>web.xml</code> values overwrit=
e identically named attributes from the deployment descriptor.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><!-=
-?xml version=3D"1.0" encoding=3D"UTF-8"?-->


<configure class=3D"org.eclipse.jetty.webapp.WebAppContext">
  <set name=3D"contextPath">/wiki</set>
  <set name=3D"war"><systemproperty name=3D"myapp.home">/myapp.war</systemp=
roperty></set>
  <get name=3D"ServletContext">
     <call name=3D"setInitParameter">
       <arg>myapp.config</arg>
       <arg><systemproperty name=3D"myapp.home">/config/app-config.xml</sys=
temproperty></arg>
    </call>
  </get>
</configure></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The following example sets a special <code>web.xml</code> override descr=
iptor.
This descriptor is processed after the web application=E2=80=99s <code>web.=
xml</code>, so it may override identically named attributes.
This feature is useful when adding parameters or additional Servlet mapping=
s without breaking open a packed WAR file.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><!-=
-?xml version=3D"1.0" encoding=3D"UTF-8"?-->


<configure class=3D"org.eclipse.jetty.webapp.WebAppContext">
  <set name=3D"contextPath">/wiki</set>
  <set name=3D"war"><systemproperty name=3D"myapp.home">/myapp.war</systemp=
roperty></set>
  <set name=3D"overrideDescriptor">/opt/myapp/overlay-web.xml</set>
</configure></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The next example configures not only the web application context, but al=
so a database connection pool (see <a href=3D"file:///home/tian/Downloads/b=
60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/in=
dex.html#jndi-datasource-examples">Datasource Examples</a>) that the applic=
ation can then use.
If the <code>web.xml</code> does not include a reference to this data sourc=
e, an override descriptor mechanism (as shown in the previous example) can =
be used to include it.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><!-=
-?xml version=3D"1.0" encoding=3D"UTF-8"?-->


<configure class=3D"org.eclipse.jetty.webapp.WebAppContext">
  <set name=3D"contextPath">/wiki</set>
  <set name=3D"war"><systemproperty name=3D"myapp.home">/myapp.war</systemp=
roperty></set>

  <new id=3D"DSTest" class=3D"org.eclipse.jetty.plus.jndi.Resource">
    <arg></arg>
    <arg>jdbc/DSTest</arg>
    <arg>
      <new class=3D"org.apache.commons.dbcp.BasicDataSource">
        <set name=3D"driverClassName">org.some.Driver</set>
        <set name=3D"url">jdbc.url</set>
        <set name=3D"username">jdbc.user</set>
        <set name=3D"password">jdbc.pass</set>
      </new>
    </arg>
  </new>
</configure></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>There are many other settings that can be changed in a <a href=3D"file:/=
//home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentati=
on/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/webapp/WebAppContext.htm=
l"><code>WebAppContext</code></a>.
The <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.=
4.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/web=
app/WebAppContext.html">javadoc</a> for <code>WebAppContext</code> is a goo=
d source of information.
Also see the documentation on <a href=3D"file:///home/tian/Downloads/b60/eb=
ook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.h=
tml#troubleshooting-zip-exceptions">avoiding zip file exceptions</a> for a =
description of <code>WebAppContext</code> settings that determine such thin=
gs as whether or not the war is automatically unpacked during deployment, o=
r whether certain sections of a webapp are copied to a temporary location.<=
/p>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"configuring-webapps">Deployment Processing of WebAppContexts</h3>
<div class=3D"paragraph">
<p>Web applications require a certain amount of processing before they can =
go into service: they may need to be unpacked, a special classloader create=
d for their jar files, <code>web.xml</code> and <code>web-fragment.xml</cod=
e> descriptors processed, and classes scanned for annotations amongst other=
 things.
As web applications have become more complex, Jetty has added ways to assis=
t with customization by either broadening or lessening the amount of proces=
sing that is done at deployment time.
This section will examine this processing and it can be tailored to fit ind=
ividual needs.</p>
</div>
<div class=3D"paragraph">
<p>If instead you=E2=80=99re looking for information on how to configure a =
specific <code>WebAppContext</code> - such as its context path, whether it =
should be unpacked or not - then you can find that in the section entitled =
<a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/=
jetty-documentation/src/main/asciidoc/index.html#configuring-specific-webap=
p-deployment">Configuring a Specific WebApp Deployment</a>.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"webapp-configurations">Configuration Classes</h4>
<div class=3D"paragraph">
<p>As a webapp is being deployed, a series of <a href=3D"file:///home/tian/=
Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/=
asciidoc/%7BJDURL%7D/org/eclipse/jetty/webapp/Configuration.html">org.eclip=
se.jetty.webapp.Configuration</a> classes are applied to it, each one perfo=
rming a specific function.
The ordering of these Configurations is significant as subsequent Configura=
tions tend to build on information extracted or setup in foregoing Configur=
ations.
These are the default list, in order, of Configurations that are applied to=
 each <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-=
9.4.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/w=
ebapp/WebAppContext.html">org.eclipse.jetty.webapp.WebAppContex</a>t:</p>
</div>
<table class=3D"tableblock frame-all grid-all spread">
<caption class=3D"title">Table 6. Default Configuration classes</caption>
<colgroup>
<col style=3D"width: 50%;">
<col style=3D"width: 50%;">
</colgroup>
<tbody>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><a =
href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jet=
ty-documentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/webapp/Web=
InfConfiguration.html">org.eclipse.jetty.webapp.WebInfConfiguration</a></p>=
</td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Ext=
racts war, orders jars and defines classpath</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><a =
href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jet=
ty-documentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/webapp/Web=
XmlConfiguration.html">org.eclipse.jetty.webapp.WebXmlConfiguration</a></p>=
</td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Pro=
cesses a WEB-INF/web.xml file</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><a =
href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jet=
ty-documentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/webapp/Met=
aInfConfiguration.html">org.eclipse.jetty.webapp.MetaInfConfiguration</a></=
p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Loo=
ks in container and webapp jars for META-INF/resources and
META-INF/web-fragment.xml</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><a =
href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jet=
ty-documentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/webapp/Fra=
gmentConfiguration.html">org.eclipse.jetty.webapp.FragmentConfiguration</a>=
</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Pro=
cesses all discovered META-INF/web-fragment.xml files</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><a =
href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jet=
ty-documentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/webapp/Jet=
tyWebXmlConfiguration.html">org.eclipse.jetty.webapp.JettyWebXmlConfigurati=
on</a></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Pro=
cesses a WEB-INF/jetty-web.xml file</p></td>
</tr>
</tbody>
</table>
<div class=3D"sect4">
<h5 id=3D"_anatomy_of_a_configuration_class">Anatomy of a Configuration Cla=
ss</h5>
<div class=3D"paragraph">
<p>A Configuration class is called 5 times in different phases of the <a hr=
ef=3D"http://download.eclipse.org/jetty/stable-9/apidocs/org/eclipse/jetty/=
webapp/WebAppContext.html"><code>WebAppContext's</code></a> lifecycle:</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">preConfigure</dt>
<dd>
<p>As the <code>WebAppContext</code> is starting up this phase is executed.
The <code>Configuration</code> should discover any of the resources it will=
 need during the subsequent phases.</p>
</dd>
<dt class=3D"hdlist1">configure</dt>
<dd>
<p>This phase is where the work of the class is done, usually using the res=
ources discovered during the <code>preConfigure</code> phase.</p>
</dd>
<dt class=3D"hdlist1">postConfigure</dt>
<dd>
<p>This phase allows the <code>Configuration</code> to clear down any resou=
rces that may have been created during the previous 2 phases that are not n=
eeded for the lifetime of the <code>WebAppContext</code>.</p>
</dd>
<dt class=3D"hdlist1">deconfigure</dt>
<dd>
<p>This phase occurs whenever a <code>WebAppContext</code> is being stopped=
 and allows the Configuration to undo any resources/metadata that it create=
d.
A <code>WebAppContext</code> should be able to be cleanly start/stopped mul=
tiple times without resources being held.</p>
</dd>
<dt class=3D"hdlist1">destroy</dt>
<dd>
<p>This phase is called when a <code>WebAppContext</code> is actually remov=
ed from service.
For example, the war file associated with it is deleted from the $JETTY_HOM=
E/webapps directory.</p>
</dd>
</dl>
</div>
<div class=3D"paragraph">
<p>Each phase is called on each <code>Configuration</code> class in the ord=
er in which the <code>Configuration</code> class is listed.
Using the default <code>Configuration</code> classes as an example, <code>p=
reConfigure()</code> will be called on <code>WebInfConfiguration</code>, <c=
ode>WebXmlConfiguration</code>, <code>MetaInfConfiguration</code>, <code>Fr=
agmentConfiguration</code> and then <code>JettyWebXmlConfiguration</code>.
The cycle begins again for the <code>configure()</code> phase and again for=
 the <code>postConfigure()</code> phases.
The cycle is repeated <em>in reverse order</em> for the <code>deconfigure()=
</code> and eventually the <code>destroy()</code> phases.</p>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_extending_container_support_by_creating_extra_configurations">Ex=
tending Container Support by Creating Extra Configurations</h5>
<div class=3D"paragraph">
<p>As shown, there is a default set of Configurations that support basic de=
ployment of a webapp.
JavaEE features such as JNDI and advanced servlet spec features such as ann=
otations have not been mentioned.
Jetty=E2=80=99s philosophy is to allow the user to tailor the container exa=
ctly to their needs.
If these features are not needed, then Jetty does not pay the price for the=
m - an important consideration because features such as annotations require=
 extensive and time-consuming scanning of <code>WEB-INF/lib</code> jars.
As modern webapps may have scores of these jars, it can be a source of sign=
ificant deployment delay.
We will see in the section <a href=3D"file:///home/tian/Downloads/b60/ebook=
/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html=
#webapp-context-attributes">Other Configuration</a> another helpful webapp =
facility that Jetty provides for cutting down the time spent analyzing jars=
.</p>
</div>
<div class=3D"paragraph">
<p>Jetty makes use of the flexibility of Configurations to make JNDI and an=
notation support pluggable.</p>
</div>
<div class=3D"paragraph">
<p>Firstly, lets look at how Configurations help enable JNDI.</p>
</div>
<div class=3D"sect5">
<h6 id=3D"jndi-configuration-classes">Example: JNDI Configurations</h6>
<div class=3D"paragraph">
<p>JNDI lookups within web applications require the container to hookup res=
ources defined in the container=E2=80=99s environment to that of the web ap=
plication.
To achieve that, we use 2 extra Configurations:</p>
</div>
<table class=3D"tableblock frame-all grid-all spread">
<caption class=3D"title">Table 7. JNDI Configuration classes</caption>
<colgroup>
<col style=3D"width: 50%;">
<col style=3D"width: 50%;">
</colgroup>
<tbody>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><a =
href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jet=
ty-documentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/plus/webap=
p/EnvConfiguration.html">org.eclipse.jetty.plus.webapp.EnvConfiguration</a>=
</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Cre=
ates <code>java:comp/env</code> for the webapp, applies a <code>WEB-INF/jet=
ty-env.xml</code> file</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><a =
href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jet=
ty-documentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/plus/webap=
p/PlusConfiguration.html">org.eclipse.jetty.plus.webapp.PlusConfiguration</=
a></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Pro=
cesses JNDI related aspects of <code>WEB-INF/web.xml</code> and hooks up na=
ming entries</p></td>
</tr>
</tbody>
</table>
<div class=3D"paragraph">
<p>These configurations must be added in <em>exactly</em> the order shown a=
bove and should be inserted <em>immediately before</em> the <a href=3D"file=
:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documenta=
tion/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/webapp/JettyWebXmlConf=
iguration.html">org.eclipse.jetty.webapp.JettyWebXmlConfiguration</a> class=
 in the list of configurations.
To fully support JNDI additional configuration is required, full details of=
 which can be found <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.=
project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#jndi">=
here</a>.</p>
</div>
</div>
<div class=3D"sect5">
<h6 id=3D"_example_annotation_configurations">Example: Annotation Configura=
tions</h6>
<div class=3D"paragraph">
<p>We need just one extra Configuration class to help provide servlet annot=
ation scanning:</p>
</div>
<table class=3D"tableblock frame-all grid-all spread">
<caption class=3D"title">Table 8. Annotation Configuration classes</caption=
>
<colgroup>
<col style=3D"width: 50%;">
<col style=3D"width: 50%;">
</colgroup>
<tbody>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><a =
href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jet=
ty-documentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/annotation=
s.AnnotationConfiguration.html">org.eclipse.jetty.annotations.AnnotationCon=
figuration</a></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Sca=
n container and web app jars looking for @WebServlet, @WebFilter,
@WebListener etc</p></td>
</tr>
</tbody>
</table>
<div class=3D"paragraph">
<p>The above configuration class must be <em>inserted immediately before</e=
m> the <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty=
-9.4.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/=
webapp/JettyWebXmlConfiguration.html">org.eclipse.jetty.webapp.JettyWebXmlC=
onfiguration</a> class in the list of configurations.
To fully support annotations additional configuration is require, details o=
f which can be found <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty=
.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#webap=
p-context-attributes">below.</a></p>
</div>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_how_to_set_the_list_of_configurations">How to Set the List of Co=
nfigurations</h5>
<div class=3D"paragraph">
<p>You have a number of options for how to make Jetty use a different list =
of Configurations.</p>
</div>
<div class=3D"sect5">
<h6 id=3D"_setting_the_list_directly_on_the_webappcontext">Setting the list=
 directly on the WebAppContext</h6>
<div class=3D"paragraph">
<p>If you have only one webapp that you wish to affect, this may be the eas=
iest option.
You will, however, either need to have a context xml file that represents y=
our web app, or you need to call the equivalent in code.
Let=E2=80=99s see an example of how we would add in the Configurations for =
both JNDI <em>and</em> annotations:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><!-=
-?xml version=3D"1.0"?-->


<configure class=3D"org.eclipse.jetty.webapp.WebAppContext">

  <set name=3D"war"><systemproperty name=3D"jetty.base" default=3D".">/weba=
pps/my-cool-webapp</systemproperty></set>

  <set name=3D"configurationClasses">
    <array type=3D"java.lang.String">
      <item>org.eclipse.jetty.webapp.WebInfConfiguration</item>
      <item>org.eclipse.jetty.webapp.WebXmlConfiguration</item>
      <item>org.eclipse.jetty.webapp.MetaInfConfiguration</item>
      <item>org.eclipse.jetty.webapp.FragmentConfiguration</item>
      <item>org.eclipse.jetty.plus.webapp.EnvConfiguration</item>
      <item>org.eclipse.jetty.plus.webapp.PlusConfiguration</item>
      <item>org.eclipse.jetty.annotations.AnnotationConfiguration</item>
      <item>org.eclipse.jetty.webapp.JettyWebXmlConfiguration</item>
    </array>
  </set>

</configure></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Of course, you can also use this method to reduce the Configurations app=
lied to a specific <code>WebAppContext</code>.</p>
</div>
</div>
<div class=3D"sect5">
<h6 id=3D"_setting_the_list_for_all_webapps_via_the_deployer">Setting the l=
ist for all webapps via the Deployer</h6>
<div class=3D"paragraph">
<p>If you use the <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.pr=
oject-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#deployme=
nt-architecture">deployer</a>, you can set up the list of Configuration cla=
sses on the <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-=
jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#default-web-ap=
p-provider">WebAppProvider</a>.
They will then be applied to each <code>WebAppContext</code> deployed by th=
e deployer:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><!-=
-?xml version=3D"1.0"?-->


<configure id=3D"Server" class=3D"org.eclipse.jetty.server.Server">

  <call name=3D"addBean">
    <arg>
      <new id=3D"DeploymentManager" class=3D"org.eclipse.jetty.deploy.Deplo=
ymentManager">
        <set name=3D"contexts">
          <ref refid=3D"Contexts">
        </ref></set>
        <call id=3D"webappprovider" name=3D"addAppProvider">
          <arg>
            <new class=3D"org.eclipse.jetty.deploy.providers.WebAppProvider=
">
              <set name=3D"monitoredDirName"><property name=3D"jetty.base" =
default=3D".">/webapps</property></set>
              <set name=3D"configurationClasses">
                <array type=3D"java.lang.String">
                  <item>org.eclipse.jetty.webapp.WebInfConfiguration</item>
                  <item>org.eclipse.jetty.webapp.WebXmlConfiguration</item>
                  <item>org.eclipse.jetty.webapp.MetaInfConfiguration</item=
>
                  <item>org.eclipse.jetty.webapp.FragmentConfiguration</ite=
m>
                  <item>org.eclipse.jetty.plus.webapp.EnvConfiguration</ite=
m>
                  <item>org.eclipse.jetty.plus.webapp.PlusConfiguration</it=
em>
                  <item>org.eclipse.jetty.annotations.AnnotationConfigurati=
on</item>
                  <item>org.eclipse.jetty.webapp.JettyWebXmlConfiguration</=
item>
                </array>
              </set>
            </new>
          </arg>
        </call>
      </new>
    </arg>
  </call>
</configure></code></pre>
</div>
</div>
</div>
<div class=3D"sect5">
<h6 id=3D"_adding_or_inserting_to_an_existing_list">Adding or inserting to =
an existing list</h6>
<div class=3D"paragraph">
<p>Instead of having to enumerate the list in its entirety, you can simply =
nominate classes that you want to add, and indicate whereabouts in the list=
 you want them inserted.
Let=E2=80=99s look at an example of using this method to add in Configurati=
on support for JNDI - as usual you can either do this in an xml file, or vi=
a equivalent code.
This example uses an xml file, in fact it is the <code>$JETTY_HOME/etc/jett=
y-plus.xml</code> file from the Jetty distribution:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><!-=
-?xml version=3D"1.0"?-->


<configure id=3D"Server" class=3D"org.eclipse.jetty.server.Server">

  <!-- =3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D -->
  <!-- Add plus Configuring classes to all webapps for this Server -->
  <!-- =3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D -->
  <call class=3D"org.eclipse.jetty.webapp.Configuration$ClassList" name=3D"=
setServerDefault">
    <arg><ref refid=3D"Server"></ref></arg>
    <call name=3D"addAfter">
      <arg name=3D"afterClass">org.eclipse.jetty.webapp.FragmentConfigurati=
on</arg>
      <arg>
        <array type=3D"String">
          <item>org.eclipse.jetty.plus.webapp.EnvConfiguration</item>
          <item>org.eclipse.jetty.plus.webapp.PlusConfiguration</item>
        </array>
      </arg>
    </call>
  </call>

</configure></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty=
-9.4.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/=
webapp/Configuration.html">org.eclipse.jetty.webapp.Configuration.ClassList=
</a> class provides these methods for insertion:</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">addAfter</dt>
<dd>
<p>Inserts the supplied list of <code>Configuration</code> class names afte=
r the given Configuration class name.</p>
</dd>
<dt class=3D"hdlist1">addBefore</dt>
<dd>
<p>Inserts the supplied list of <code>Configuration</code> class names befo=
re the given Configuration class name.</p>
</dd>
</dl>
</div>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"webapp-context-attributes">Other Configuration</h4>
<div class=3D"sect4">
<h5 id=3D"container-include-jar-pattern">org.eclipse.jetty.server.webapp.Co=
ntainerIncludeJarPattern</h5>
<div class=3D"paragraph">
<p>This is a <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project=
-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#context_attri=
butes">context attribute</a> that can be set on <a href=3D"file:///home/tia=
n/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/mai=
n/asciidoc/%7BJDURL%7D/org/eclipse/jetty/webapp/WebAppContext.html">an org.=
eclipse.jetty.webapp.WebAppContext</a> to control which parts of the <em>co=
ntainer=E2=80=99s</em> classpath should be processed for things like annota=
tions, <code>META-INF/resources</code>, <code>META-INF/web-fragment.xml</co=
de> and <code>tlds</code> inside <code>META-INF</code>.</p>
</div>
<div class=3D"paragraph">
<p>Normally, nothing from the container classpath will be included for proc=
essing.
However, sometimes you will need to include some.
For example, you may have some libraries that are shared amongst your webap=
ps and thus you have put them into a <code>$JETTY_HOME/lib</code> directory=
.
The libraries contain annotations and therefore must be scanned.</p>
</div>
<div class=3D"paragraph">
<p>The value of this attribute is a regexp that defines which <em>jars</em>=
 and <em>class directories</em> from the container=E2=80=99s classpath shou=
ld be examined.</p>
</div>
<div class=3D"paragraph">
<p>Here=E2=80=99s an example from a context xml file (although as always, y=
ou could have accomplished the same in code), which would match any jar who=
se name starts with "foo-" or "bar-", or a directory named "classes":</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><!-=
-?xml version=3D"1.0"?-->


<configure class=3D"org.eclipse.jetty.webapp.WebAppContext">

    <call name=3D"setAttribute">
      <arg>org.eclipse.jetty.server.webapp.ContainerIncludeJarPattern</arg>
      <arg>.*/foo-[^/]*\.jar$|.*/bar-[^/]*\.jar$|.*/classes/.*</arg>
    </call>

</configure></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Note that the order of the patterns defines the ordering of the scanning=
 of the jars or class directories.</p>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"web-inf-include-jar-pattern">org.eclipse.jetty.server.webapp.WebI=
nfIncludeJarPattern</h5>
<div class=3D"paragraph">
<p>Similarly to the previous <a href=3D"file:///home/tian/Downloads/b60/ebo=
ok/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.ht=
ml#context_attributes">context attribute</a>, this attribute controls which=
 jars are processed for things like annotations, <code>META-INF/resources</=
code>, <code>META-INF/web-fragment.xml</code> and <code>tlds</code> in <cod=
e>META-INF</code>.
However, this attribute controls which jars from the <em>webapp=E2=80=99s</=
em> classpath (usually <code>WEB-INF/lib</code>) are processed.
This can be particularly useful when you have dozens of jars in <code>WEB-I=
NF/lib</code>, but you know that only a few need to be scanned.</p>
</div>
<div class=3D"paragraph">
<p>Here=E2=80=99s an example in a xml file of a pattern that matches any ja=
r that starts with <code>spring-</code>:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><!-=
-?xml version=3D"1.0"?-->


<configure class=3D"org.eclipse.jetty.webapp.WebAppContext">

    <call name=3D"setAttribute">
      <arg>org.eclipse.jetty.server.webapp.WebInfIncludeJarPattern</arg>
      <arg>.*/spring-[^/]*\.jar$</arg>
    </call>

</configure></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Note that the order of the patterns defines the ordering of the scanning=
 of jar files.</p>
</div>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"static-content-deployment">Configuring Static Content Deployment<=
/h3>
<div class=3D"paragraph">
<p>To serve purely static content, the Jetty Deployment Descriptor XML conc=
epts and the internal <code>ResourceHandler</code> can be used.
Create a file called <code>scratch.xml</code> in the <code>${jetty.base}/we=
bapps</code> directory and paste the following file contents in it.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><!-=
-?xml version=3D"1.0" encoding=3D"UTF-8"?-->

<configure class=3D"org.eclipse.jetty.server.handler.ContextHandler">
  <set name=3D"contextPath">/scratch</set>
  <set name=3D"handler">
    <new class=3D"org.eclipse.jetty.server.handler.ResourceHandler">
&nbsp;&nbsp;    <set name=3D"resourceBase">/home/jesse/scratch</set>
      <set name=3D"directoriesListed">true</set>
    </new>
  </set>
</configure></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>This is a very basic setup for serving static files.
For advanced static file serving, use the <a href=3D"file:///home/tian/Down=
loads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asci=
idoc/%7BJXURL%7D/org/eclipse/jetty/servlet/DefaultServlet.html">DefaultServ=
let</a>.</p>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"hot-deployment">Hot Deployment</h3>
<div class=3D"paragraph">
<p>Jetty allows for deploying an arbitrary context or web application by mo=
nitoring a directory for changes.
If a web application or a context descriptor is added to the directory, Jet=
ty=E2=80=99s DeploymentManager (DM) deploys a new context.
If a context descriptor is touched or updated, the DM stops, reconfigures, =
and redeploys its context.
If a context is removed, the DM stops it and removes it from the server.</p=
>
</div>
<div class=3D"paragraph">
<p>This behavior can be controlled by configuring <code>WebAppProvider</cod=
e> properties.</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">monitoredDirName</dt>
<dd>
<p>The directory to scan for possible deployable Web Applications (or Deplo=
yment Descriptor XML files).</p>
</dd>
<dt class=3D"hdlist1">scanInterval</dt>
<dd>
<p>Number of seconds between scans of the provided <code>monitoredDirName</=
code>.
A value of <code>0</code> disables the continuous hot deployment scan, Web =
Applications will be deployed on startup only.</p>
</dd>
</dl>
</div>
<div class=3D"paragraph">
<p>The default location for this configuration is in the <code>${jetty.home=
}/etc/jetty-deploy.xml</code> file.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><!-=
-?xml version=3D"1.0"?-->


<configure id=3D"Server" class=3D"org.eclipse.jetty.server.Server">

  <call name=3D"addBean">
    <arg>
      <new id=3D"DeploymentManager" class=3D"org.eclipse.jetty.deploy.Deplo=
ymentManager">
        <set name=3D"contexts">
          <ref refid=3D"Contexts">
        </ref></set>
        <call name=3D"setContextAttribute">
          <arg>org.eclipse.jetty.server.webapp.ContainerIncludeJarPattern</=
arg>
          <arg>.*/[^/]*servlet-api-[^/]*\.jar$|.*/javax.servlet.jsp.jstl-.*=
\.jar$|.*/org.apache.taglibs.taglibs-standard-impl-.*\.jar$</arg>
        </call>

        <call id=3D"webappprovider" name=3D"addAppProvider">
          <arg>
            <new class=3D"org.eclipse.jetty.deploy.providers.WebAppProvider=
">
              <set name=3D"monitoredDirName"><property name=3D"jetty.base" =
default=3D".">/<property name=3D"jetty.deploy.monitoredDir" deprecated=3D"j=
etty.deploy.monitoredDirName" default=3D"webapps"></property></property></s=
et>
              <set name=3D"defaultsDescriptor"><property name=3D"jetty.home=
" default=3D".">/etc/webdefault.xml</property></set>
              <set name=3D"scanInterval"><property name=3D"jetty.deploy.sca=
nInterval" default=3D"1"></property></set>
              <set name=3D"extractWars"><property name=3D"jetty.deploy.extr=
actWars" default=3D"true"></property></set>
            </new>
          </arg>
        </call>
      </new>
    </arg>
  </call>
</configure></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>See <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty=
-9.4.x/jetty-documentation/src/main/asciidoc/index.html#default-web-app-pro=
vider">Understanding the Default WebAppProvider</a> for more configuration =
details.</p>
</div>
<div class=3D"paragraph">
<p>See also <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-=
jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#deployment-arc=
hitecture">Deployment Architecture</a> for detailed conceptual information.=
</p>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"deployment-architecture">Deployment Architecture</h3>
<div class=3D"paragraph">
<p>Jetty is built around an extensible Deployment Manager architecture comp=
lete with formal LifeCycle for Web Applications going through it.</p>
</div>
<div class=3D"paragraph">
<p>For Jetty to serve content (static or dynamic), a <a href=3D"file:///hom=
e/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/sr=
c/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/server/handler/ContextHandler=
.html">ContextHandler</a> needs to be configured and added to Jetty in the =
appropriate location.
A pluggable <code>DeploymentManager</code> exists to make this process easi=
er.
The Jetty distribution contains example <code>DeploymentManager</code> conf=
igurations to deploy WAR files found in a directory to Jetty, and to deploy=
 Jetty context xml files into Jetty as well.</p>
</div>
<div class=3D"paragraph">
<p>The <code>DeploymentManager</code> is the heart of the typical webapp de=
ployment mechanism; it operates as a combination of an Application LifeCycl=
e Graph, Application Providers that find and provide Applications into the =
Application LifeCycle Graph, and a set of bindings in the graph that contro=
l the deployment process.</p>
</div>
<div class=3D"paragraph">
<p><span class=3D"image"><img src=3D"file:///home/tian/Downloads/b60/ebook/=
jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/images/Jett=
y_DeployManager_DeploymentManager_Roles.png" alt=3D"image" width=3D"195"></=
span></p>
</div>
<div class=3D"sect3">
<h4 id=3D"udm-application-providers">Application Providers</h4>
<div class=3D"paragraph">
<p>Before Jetty deploys an application, an <a href=3D"file:///home/tian/Dow=
nloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asc=
iidoc/%7BJDURL%7D/org/eclipse/jetty/deploy/AppProvider.html">AppProvider</a=
> identifies the App and then provides it to the <code>DeploymentManager</c=
ode>.
The main <code>AppProvider</code> with the Jetty distribution is the <a hre=
f=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-=
documentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/deploy/provid=
ers/WebAppProvider.html">WebAppProvider.</a></p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"udm-application-lifecycle-graph">Application LifeCycle Graph</h4>
<div class=3D"paragraph">
<p>The core feature of the <code>DeploymentManager</code> is the <a href=3D=
"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-docu=
mentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/deploy/AppLifeCyc=
le.html">Application LifeCycle Graph</a>.</p>
</div>
<div class=3D"paragraph">
<p><span class=3D"image"><img src=3D"file:///home/tian/Downloads/b60/ebook/=
jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/images/Jett=
y_DeployManager_AppLifeCycle-1.png" alt=3D"image" width=3D"340"></span></p>
</div>
<div class=3D"paragraph">
<p>The nodes and edges of this graph are pre-defined in Jetty along the mos=
t common actions and states found.
These nodes and edges are not hardcoded; they can be adjusted and added to =
depending on need (for example, any complex requirements for added workflow=
, approvals, staging, distribution, coordinated deploys for a cluster or cl=
oud, etc.).</p>
</div>
<div class=3D"paragraph">
<p>New applications enter this graph at the Undeployed node, and the <a hre=
f=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-=
documentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/deploy/Deploy=
mentManager.html#requestAppGoal(org.eclipse.jetty.deploy.App"><code>java.la=
ng.String DeploymentManager.requestAppGoal(App,String)</code></a> method pu=
shes them through the graph.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"udm-lifecycle-bindings">LifeCycle Bindings</h4>
<div class=3D"paragraph">
<p>A set of default <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.=
project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org/e=
clipse/jetty/deploy/AppLifeCycle.Binding.html"><code>AppLifeCycle.Bindings<=
/code></a> defines standard behavior, and handles deploying, starting, stop=
ping, and undeploying applications.
If desired, custom <code>AppLifeCycle.Bindings</code> can be written and as=
signed anywhere on the Application LifeCycle graph.</p>
</div>
<div class=3D"paragraph">
<p>Examples of new <code>AppLifeCycle.Binding</code> implementations that c=
an be developed include:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>Validating the incoming application.</p>
</li>
<li>
<p>Preventing the deployment of known forbidden applications.</p>
</li>
<li>
<p>Submitting the installation to an application auditing service in a corp=
orate environment.</p>
</li>
<li>
<p>Distributing the application to other nodes in the cluster or cloud.</p>
</li>
<li>
<p>Emailing owner/admin of change of state of the application.</p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>There are four default bindings:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p><a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/depl=
oy/bindings/StandardDeployer.html">StandardDeployer</a> =E2=80=94 Deploys t=
he ContextHandler into Jetty in the appropriate place.</p>
</li>
<li>
<p><a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/depl=
oy/bindings/StandardStarter.html">StandardStarter</a> =E2=80=94 Sets the Co=
ntextHandler to started and start accepting incoming requests.</p>
</li>
<li>
<p><a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/depl=
oy/bindings/StandardStopper.html">StandardStopper</a> =E2=80=94 Stops the C=
ontextHandler and stops accepting incoming requests.</p>
</li>
<li>
<p><a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/depl=
oy/bindings/StandardUndeployer.html">StandardUndeployer</a> =E2=80=94 Remov=
es the ContextHandler from Jetty.</p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p><span class=3D"image"><img src=3D"file:///home/tian/Downloads/b60/ebook/=
jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/images/Jett=
y_DeployManager_DefaultAppLifeCycleBindings.png" alt=3D"image" width=3D"851=
"></span></p>
</div>
<div class=3D"paragraph">
<p>A fifth, non-standard binding, called <a href=3D"file:///home/tian/Downl=
oads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/ascii=
doc/%7BJDURL%7D/org/eclipse/jetty/deploy/bindings/DebugBinding.html">DebugB=
inding</a>, is also available for debugging reasons; it logs the various tr=
ansitions through the Application LifeCycle.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"default-web-app-provider">Understanding the Default WebAppProvide=
r</h4>
<div class=3D"paragraph">
<p>The <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty=
-9.4.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/=
deploy/providers/WebAppProvider.html">WebAppProvider</a> is used for the de=
ployment of Web Applications packaged as WAR files, expanded as a directory=
, or declared in a <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.p=
roject-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#deploya=
ble-descriptor-file">Jetty Deployable Descriptor XML File</a>.
It supports hot (re)deployment.</p>
</div>
<div class=3D"paragraph">
<p>The basic operation of the <code>WebAppProvider</code> is to periodicall=
y scan a directory for deployables.
In the standard Jetty Distribution, this is configured in the <code>${jetty=
.home}/etc/jetty-deploy.xml</code> file.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><!-=
-?xml version=3D"1.0"?-->

<configure id=3D"Server" class=3D"org.eclipse.jetty.server.Server">

  <call name=3D"addBean">
    <arg>
      <new id=3D"DeploymentManager" class=3D"org.eclipse.jetty.deploy.Deplo=
ymentManager">
        <set name=3D"contexts">
          <ref refid=3D"Contexts">
        </ref></set>
        <call id=3D"webappprovider" name=3D"addAppProvider">
          <arg>
            <new class=3D"org.eclipse.jetty.deploy.providers.WebAppProvider=
">
              <set name=3D"monitoredDirName"><property name=3D"jetty.home" =
default=3D".">/webapps</property></set>
              <set name=3D"defaultsDescriptor"><property name=3D"jetty.home=
" default=3D".">/etc/webdefault.xml</property></set>
              <set name=3D"scanInterval">1</set>
              <set name=3D"extractWars">true</set>
            </new>
          </arg>
        </call>
      </new>
    </arg>
  </call>
</configure></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The above configuration will create a <code>DeploymentManager</code> tra=
cked as a Server LifeCycle Bean, with the following configuration.</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">contexts</dt>
<dd>
<p>A passed in reference to the HandlerContainer into which the discovered =
webapps are deployed.
This is normally a reference that points to the <code>id=3D"Contexts"</code=
> found in the <code>${jetty.home}/etc/jetty.xml</code> file, which itself =
is an instance of <code>ContextHandlerCollection</code>.</p>
</dd>
<dt class=3D"hdlist1">monitoredDirName</dt>
<dd>
<p>The file path or URL to the directory to scan for web applications.</p>
<div class=3D"literalblock">
<div class=3D"content">
<pre>Scanning follows these rules:</pre>
</div>
</div>
<div class=3D"olist arabic">
<ol class=3D"arabic">
<li>
<p>A base directory must exist.</p>
</li>
<li>
<p>Hidden Files (starting with <code>"."</code>) are ignored.</p>
</li>
<li>
<p>Directories with names ending in <code>".d"</code> are ignored.</p>
</li>
<li>
<p>Common CVS directories <code>"CVS"</code> and <code>"CVSROOT"</code> are=
 ignored.</p>
</li>
<li>
<p>Any <code>*.war</code> files are considered <a href=3D"file:///home/tian=
/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main=
/asciidoc/index.html#automatic-webapp-deployment">automatic deployables</a>=
.</p>
</li>
<li>
<p>Any <code>*.xml</code> files are considered <a href=3D"file:///home/tian=
/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main=
/asciidoc/index.html#deployable-descriptor-file">context descriptor deploya=
bles</a>.</p>
</li>
<li>
<p>In the special case where both a WAR file and XML file exists for same b=
ase name, the XML file is assumed to configure and reference the WAR file (=
see <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.=
4.x/jetty-documentation/src/main/asciidoc/index.html#configuring-specific-w=
ebapp-deployment">Configuring a Specific Web Application Deployment</a>).
Since jetty-9.2.7, if either the WAR file or its corresponding XML file cha=
nges, the webapp will be redeployed.</p>
</li>
<li>
<p>A directory is considered to be deployable.</p>
</li>
<li>
<p>In the special case where both a Directory and WAR file of the same name=
 exists, the WAR file is assumed to be an automatic deployable.</p>
</li>
<li>
<p>In the special case where both a Directory and XML file of the same name=
 exists, the XML file is assumed to configure and reference the Directory.<=
/p>
</li>
<li>
<p>All other directories are subject to automatic deployment.</p>
</li>
<li>
<p>If automatic deployment is used, and the special filename <code>root.war=
/ROOT.war</code> or directory name <code>root/ROOT</code> will result in a =
deployment to the <code>"/"</code> context path.</p>
</li>
</ol>
</div>
</dd>
<dt class=3D"hdlist1">defaultsDescriptor</dt>
<dd>
<p>Specifies the default Servlet web descriptor to use for all Web Applicat=
ions.
The intent of this descriptor is to include common configuration for the We=
b Application before the Web Application=E2=80=99s own <code>/WEB-INF/web.x=
ml</code> is applied.
The <code>${jetty.home}/etc/webdefault.xml</code> that comes with the Jetty=
 distribution controls the configuration of the JSP and Default servlets, a=
long with MIME-types and other basic metadata.</p>
</dd>
<dt class=3D"hdlist1">scanInterval</dt>
<dd>
<p>The period in seconds between sweeps of the <code>monitoredDirName</code=
> for changes: new contexts to deploy, changed contexts to redeploy, or rem=
oved contexts to undeploy.</p>
</dd>
<dt class=3D"hdlist1">extractWars</dt>
<dd>
<p>If parameter is true, any packed WAR or zip files are first extracted to=
 a temporary directory before being deployed.
This is advisable if there are uncompiled JSPs in the web apps.</p>
</dd>
<dt class=3D"hdlist1">parentLoaderPriority</dt>
<dd>
<p>Parameter is a boolean that selects whether the standard Java <a href=3D=
"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-docu=
mentation/src/main/asciidoc/index.html#jetty-classloading">parent first del=
egation</a> is used or the <a href=3D"file:///home/tian/Downloads/b60/ebook=
/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html=
#jetty-classloading">servlet specification webapp classloading priority</a>=
.
The latter is the default.</p>
</dd>
</dl>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"quickstart-webapp">Quickstart Webapps</h3>
<div class=3D"paragraph">
<p>The auto discovery features of the Servlet specification can make deploy=
ments slow and uncertain.
Auto discovery of Web Application configuration can be useful during the de=
velopment of a webapp as it allows new features and frameworks to be enable=
d simply by dropping in a jar file.
However, for deployment, the need to scan the contents of many jars can hav=
e a significant impact of the start time of a webapp.</p>
</div>
<div class=3D"paragraph">
<p>With the release of Jetty 9.2, a quickstart module was included which al=
lows a webapp to be pre-scanned and preconfigured.
This means that all the scanning is done prior to deployment and all config=
uration is encoded into an effective <code>web.xml</code>, called <code>WEB=
-INF/quickstart-web.xml</code>, which can be inspected to understand what w=
ill be deployed before deploying.
Not only does the <code>quickstart-web.xml</code> contain all the discovere=
d Servlets, Filters and Constraints, but it also encodes as context paramet=
ers all discovered:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>ServletContainerInitializers</p>
</li>
<li>
<p>HandlesTypes classes</p>
</li>
<li>
<p>Taglib Descriptors</p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>With the quickstart mechanism, Jetty is able to entirely bypass all scan=
ning and discovery modes and start a webapp in a predictable and fast way.
Tests have shown that webapps that took many seconds to scan and deploy can=
 now be deployed in a few hundred milliseconds.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"_setting_up_quickstart">Setting up Quickstart</h4>
<div class=3D"sect4">
<h5 id=3D"_prerequisites">Prerequisites</h5>
<div class=3D"sect5">
<h6 id=3D"_jetty_distribution">Jetty Distribution</h6>
<div class=3D"paragraph">
<p>In a standard Jetty distribution the quickstart module can be configured=
 with the following command:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">$ java -jar $JETTY_HOME/start.jar --add-to-start=3Dquickstart</code></pr=
e>
</div>
</div>
</div>
<div class=3D"sect5">
<h6 id=3D"_embedded">Embedded</h6>
<div class=3D"paragraph">
<p>In a Maven project you add a dependency on the artifact <code>jetty-quic=
kstart</code>.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><de=
pendency>
    <groupid>org.eclipse.jetty</groupid>
    <artifactid>jetty-quickstart</artifactid>
    <version>{VERSION}</version>
</dependency></code></pre>
</div>
</div>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_configuration">Configuration</h5>
<div class=3D"paragraph">
<p>Webapps need to be instances of <a href=3D"file:///home/tian/Downloads/b=
60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7=
BJDURL%7D/org/eclipse/jetty/quickstart/QuickStartWebApp.html"><code>org.ecl=
ipse.jetty.quickstart.QuickStartWebApp</code></a> rather than the normal <c=
ode>org.eclipse.jetty.webapp.WebAppContext</code>.</p>
</div>
<div class=3D"paragraph">
<p><code>org.eclipse.jetty.quickstart.QuickStartWebApp</code> instances off=
er the same setters as the familiar <code>org.eclipse.jetty.webapp.WebAppCo=
ntext</code>, with the addition of:</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">autoPreconfigure</dt>
<dd>
<p>(true/false).
If true, the first time the webapp is run, the WEB-INF/quickstart-web.xml i=
s generated BEFORE the webapp is deployed.
Subsequent runs use the previously generated quickstart file.</p>
</dd>
<dt class=3D"hdlist1">originAttribute</dt>
<dd>
<p>The name of an attribute to insert into the generated elements in quicks=
tart-web.xml that gives the origin of the element.
By default it is <code>origin</code>.</p>
</dd>
<dt class=3D"hdlist1">generateOrigin</dt>
<dd>
<p>(true/false).
By default it is <code>false</code>.
If true, the origin attribute will be inserted into each element in quickst=
art-web.xml.
Note that origin attributes will also be generated if debug log level is en=
abled.</p>
</dd>
</dl>
</div>
<div class=3D"paragraph">
<p>The origin is either a descriptor eg web.xml,web-fragment.xml,override-w=
eb.xml file, or an annotation eg @WebServlet.
For xml validation each attribute must be unique, and therefore an integer =
counter is appended to each value.
Some examples of elements with origin attribute information are:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><li=
stener origin=3D"DefaultsDescriptor(file:///path/to/distro/etc/webdefault.x=
ml):21">
<listener origin=3D"WebDescriptor(file:///path/to/base/webapps/test-spec/WE=
B-INF/web.xml):22">
<servlet-class origin=3D"FragmentDescriptor(jar:file:///path/to/base/webapp=
s/test-spec/WEB-INF/lib/test-web-fragment.jar!/META-INF/web-fragment.xml):2=
3">
<servlet-class origin=3D"@WebServlet(com.acme.test.TestServlet):24"></servl=
et-class></servlet-class></listener></listener></code></pre>
</div>
</div>
<div class=3D"sect5">
<h6 id=3D"_in_xml">In XML</h6>
<div class=3D"paragraph">
<p>If a web application already has a context xml file, eg <code>webapps/my=
app.xml</code> file, simply change the class in the <code>Configure</code> =
element.
Otherwise, create a context xml file with the following information (in add=
ition to the usual setting of contextPath, war etc):</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><!-=
-?xml version=3D"1.0" encoding=3D"UTF-8"?-->

<configure class=3D"org.eclipse.jetty.quickstart.QuickStartWebApp">
  <set name=3D"autoPreconfigure">true</set>
</configure></code></pre>
</div>
</div>
</div>
<div class=3D"sect5">
<h6 id=3D"_in_code">In Code</h6>
<div class=3D"paragraph">
<p>Create an instance of <a href=3D"file:///home/tian/Downloads/b60/ebook/j=
etty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/=
org/eclipse/jetty/quickstart/QuickStartWebApp.html"><code>org.eclipse.jetty=
.quickstart.QuickStartWebApp</code></a> rather than the normal <code>org.ec=
lipse.jetty.webapp.WebAppContext</code>. You then use the QuickStartWebApp =
instance in exactly the same way that you would a WebAppContext.</p>
</div>
<div class=3D"paragraph">
<p>Here=E2=80=99s a snippet:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java"> =
   QuickStartWebApp webapp =3D new QuickStartWebApp();
    webapp.setAutoPreconfigure(true);</code></pre>
</div>
</div>
</div>
<div class=3D"sect5">
<h6 id=3D"_pre_generating_the_quickstart_web_xml_file">Pre-generating the q=
uickstart-web.xml file</h6>
<div class=3D"paragraph">
<p>Rather than use the <code>autoPreconfigure</code> feature of the QuickSt=
artWebApp - which lazily generates the <code>quickstart-web.xml</code> file=
 - you can eagerly pre-generate it for an existing war by invoking as a mai=
n class <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jett=
y-9.4.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty=
/quickstart/PreconfigureQuickStartWar.html"><code>org.eclipse.jetty.quickst=
art.PreconfigureQuickStartWar</code></a>.
Note that you will need to provide all necessary jetty jars on the command =
line classpath.
This will unpack the war if necessary, and create the <code>quickstart-web.=
xml</code> before the first deployment:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">$ java -cp [jetty classpath] org.eclipse.jetty.quickstart.PreconfigureQu=
ickStartWar myapp.war</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Run the class with no arguments to see other runtime options.</p>
</div>
<div class=3D"paragraph">
<p>Alternatively, you could use the <a href=3D"file:///home/tian/Downloads/=
b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/i=
ndex.html#get-up-and-running">Jetty Maven Plugin</a> goal <a href=3D"file:/=
//home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentati=
on/src/main/asciidoc/index.html#jetty-effective-web-xml"><code>jetty:effect=
ive-web-xml</code></a>: this will generate quickstart information, but prin=
t it to stderr.
The goal provides a configuration option to save the output to a file, whic=
h you can then copy into your webapp=E2=80=99s WEB-INF dir.
Note that as the Jetty Maven Plugin is a general tool for running webapps, =
it may have more jars on its classpath than are needed by your application,=
 and thus may generate extra quickstart information: we recommend that you =
use this goal only as a quick guide to the type of information that quickst=
art generates.</p>
</div>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_avoiding_tld_scans_with_precompiled_jsps">Avoiding TLD Scans wit=
h precompiled JSPs</h4>
<div class=3D"paragraph">
<p>Of course precompiling JSPs is an excellent way to improve the start tim=
e of a web application.
As of Jetty 9.2 the Apache Jasper JSP implementation has been used and has =
been augmented to allow the TLD scan to be skipped.
This can be done by adding a <code>context-param</code> to the <code>web.xm=
l</code> file (this is done automatically by the Jetty Maven JSPC plugin):<=
/p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><co=
ntext-param>
  <param-name>org.eclipse.jetty.jsp.precompiled</param-name>
  <param-value>true</param-value>
</context-param></code></pre>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_bypassing_start_jar">Bypassing start.jar</h4>
<div class=3D"paragraph">
<p>The Jetty <code>start.jar</code> mechanism is a very powerful and flexib=
le mechanism for constructing a <code>classpath</code> and executing a conf=
iguration encoded in Jetty XML format.
However, this mechanism does take some time to build the <code>classpath</c=
ode>.
The start.jar mechanism can be bypassed by using the <code>=E2=80=93dry-run=
</code> option to generate and reuse a complete command line to start Jetty=
 at a later time:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">$ RUN=3D$(java -jar $JETTY_HOME/start.jar --dry-run)
$ eval $RUN</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Note that <code>--dry-run</code> may create a properties file in the tem=
p directory and include it on the generated command line.
If so, then a copy of the temporary properties file should be taken and the=
 command line updated with it=E2=80=99s new persistent location.</p>
</div>
</div>
</div>
</div>
</div>
<div class=3D"sect1">
<h2 id=3D"configuring-contexts">Configuring Contexts</h2>
<div class=3D"sectionbody">
<div class=3D"paragraph">
<p>This chapter discusses various options for configuring Jetty contexts.</=
p>
</div>
<div class=3D"sect2">
<h3 id=3D"setting-context-path">Setting a Context Path</h3>
<div class=3D"paragraph">
<p>The context path is the prefix of a URL path that is used to select the =
context(s) to which an incoming request is passed. Typically a URL in a Jav=
a servlet server is of the format <code>http://hostname.com/contextPath/ser=
vletPath/pathInfo</code>, where each of the path elements can be zero or mo=
re / separated elements.
If there is no context path, the context is referred to as the <em>root</em=
> context.
The root context must be configured as <code>/</code> but is reported as th=
e empty string by the servlet API <code>getContextPath()</code> method.</p>
</div>
<div class=3D"paragraph">
<p>How you set the context path depends on how you deploy the web applicati=
on (or <code>ContextHandler</code>).</p>
</div>
<div class=3D"sect3">
<h4 id=3D"using-embedded-deployment">Using Embedded Deployment</h4>
<div class=3D"paragraph">
<p>If you run Jetty from code as an embedded server (see <a href=3D"file://=
/home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentatio=
n/src/main/asciidoc/index.html#advanced-embedding">Embedding</a>), setting =
the context path is a matter of calling the <code>setContextPath</code> met=
hod on the <code>ContextHandler</code> instance (or <code>WebAppContext</co=
de> instance).</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"usng-the-context-provider">By naming convention</h4>
<div class=3D"paragraph">
<p>If a web application is deployed using the WebAppProvider of the Deploym=
entManager without an XML IoC file, then the name of the WAR file is used t=
o set the context path:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>If the WAR file is named myapp.war, then the context will be deployed wi=
th a context path of <code>/myapp</code></p>
</li>
<li>
<p>If the WAR file is named ROOT.WAR (or any case insensitive variation), t=
hen the context will be deployed with a context path of <code>/</code></p>
</li>
<li>
<p>If the WAR file is named ROOT-foobar.war ( or any case insensitive varia=
tion), then the context will be deployed with a context path of <code>/</co=
de> and a virtual host of "foobar"</p>
</li>
</ul>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"using-the-webapp-provider">By Deployer configuration</h4>
<div class=3D"paragraph">
<p>If a web application is deployed using the <code>WebAppProvider</code> o=
f the <code>DeploymentManager</code> with an XML IoC file to configure the =
context, then the <code>setContextPath</code> method can be called within t=
hat file.
For example:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><co=
nfigure class=3D"org.eclipse.jetty.webapp.WebAppContext">
  <set name=3D"contextPath">/test</set>
  ...
</configure></code></pre>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"embedding-web-inf-jetty-web.xml-file">Embedding a WEB-INF/jetty-w=
eb.xml File</h4>
<div class=3D"paragraph">
<p>You can also set the context path for webapps by embedding a <code>WEB-I=
NF/jetty-web.xml</code> file in the WAR, which uses the same XML IoC format=
 as the deployer example above.
However this is not the preferred method as it requires the web application=
 to be modified.</p>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"configuring-virtual-hosts">Configuring Virtual Hosts</h3>
<div class=3D"paragraph">
<p>A virtual host is an alternative name, registered in DNS, for an IP addr=
ess such that multiple domain names will resolve to the same IP of a shared=
 server instance.
If the content to be served to the aliases names is <a href=3D"file:///home=
/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src=
/main/asciidoc/index.html#different-virtual-hosts-different-contexts">diffe=
rent</a>, then a virtual host needs to be configured for each deployed <a h=
ref=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jett=
y-documentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/server/hand=
ler/ContextHandler.html">context</a> to indicate which names a context will=
 respond to.</p>
</div>
<div class=3D"paragraph">
<p>Virtual hosts are set on a <a href=3D"file:///home/tian/Downloads/b60/eb=
ook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJDUR=
L%7D/org/eclipse/jetty/server/handler/ContextHandler.html">context</a> by c=
alling the <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-j=
etty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/je=
tty/server/handler/ContextHandler.html#setVirtualHosts-java.lang.String:A-"=
><code>setVirtualHosts</code></a> or <a href=3D"file:///home/tian/Downloads=
/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/=
%7BJDURL%7D/org/eclipse/jetty/server/handler/ContextHandler.html#addVirtual=
Hosts-java.lang.String:A-"><code>addVirtualHost</code></a> method which can=
 be done in several ways:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>Using a <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-j=
etty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#deployable-desc=
riptor-file">context XML</a> file in the webapps directory (see the example=
 in <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.=
4.x/jetty-documentation/src/main/asciidoc/%7BSRCDIR%7D/tests/test-webapps/t=
est-jetty-webapp/src/main/config/demo-base/webapps/test.xml">test.xml</a> i=
n the Jetty distribution).</p>
</li>
<li>
<p>Creating a <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.projec=
t-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#deployment-a=
rchitecture">custom deployer</a> with a binding to configure virtual hosts =
for all contexts found in the same <code>webapps</code> directory.</p>
</li>
<li>
<p>Calling the <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.proje=
ct-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org/eclips=
e/jetty/server/handler/ContextHandler.html#setVirtualHosts-java.lang.String=
:A-">API</a> directly on an <a href=3D"file:///home/tian/Downloads/b60/eboo=
k/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.htm=
l#advanced-embedding">embedded</a> usage.</p>
</li>
<li>
<p>Using a <code>WEB-INF/jetty-web.xml</code> file (now deprecated).</p>
</li>
</ul>
</div>
<div class=3D"sect3">
<h4 id=3D"configuring-a-virtual-host">Virtual Host Names</h4>
<div class=3D"paragraph">
<p>Jetty supports the following styles of virtual host name:</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">www.hostname.com</dt>
<dd>
<p>A fully qualified host name. It is important to list all variants as a s=
ite may receive traffic from both www.hostname.com and just hostname.com</p=
>
</dd>
<dt class=3D"hdlist1">*.hostname.com</dt>
<dd>
<p>A wildcard qualified host which will match only one level of arbitrary n=
ames.
*.foo.com will match www.foo.com and m.foo.com, but not www.other.foo.com</=
p>
</dd>
<dt class=3D"hdlist1">10.0.0.2</dt>
<dd>
<p>An IP address may be given as a virtual host name to indicate that a con=
text should handle requests received on that server port that do not have a=
 host name specified (HTTP/0.9 or HTTP/1.0).</p>
</dd>
<dt class=3D"hdlist1">@ConnectorName</dt>
<dd>
<p>A connector name, which is not strictly a virtual host, but instead will=
 only match requests that are received on connectors that have a matching n=
ame set with  <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.projec=
t-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse=
/jetty/server/AbstractConnector.html#setName(java.lang.String)">Connector.s=
etName(String)</a>.</p>
</dd>
<dt class=3D"hdlist1">www.=E2=88=9Aintegral.com</dt>
<dd>
<p>Non-ASCII and  <a href=3D"http://en.wikipedia.org/wiki/Internationalized=
_domain_name">IDN</a> domain names can be set as virtual hosts using <a hre=
f=3D"http://en.wikipedia.org/wiki/Punycode">Puny Code</a> equivalents that =
may be obtained from a <a href=3D"http://network-tools.com/idn-convert.asp"=
>Punycode/IDN converters</a>.
For example if the non-ASCII domain name <code>www.=E2=88=9Aintegral.com</c=
ode> is given to a browser, then it will make a request that uses the domai=
n name <code>www.xn--integral-7g7d.com</code>, which is the name that shoul=
d be added as the virtual host name.</p>
</dd>
</dl>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_example_virtual_host_configuration">Example Virtual Host Configu=
ration</h4>
<div class=3D"paragraph">
<p>Virtual hosts can be used with any context that is a subclass of <a href=
=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-d=
ocumentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/server/handler=
/ContextHandler.html">ContextHandler</a>.
Lets look at an example where we configure a web application - represented =
by the <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty=
-9.4.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/=
webapp/WebAppContext.html">WebAppContext</a> class - with virtual hosts.
You supply a list of IP addresses and names at which the web application is=
 reachable, such as the following:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p><code>333.444.555.666</code></p>
</li>
<li>
<p><code>127.0.0.1</code></p>
</li>
<li>
<p><code>www.blah.com</code></p>
</li>
<li>
<p><code>www.blah.net</code></p>
</li>
<li>
<p><code>www.blah.org</code></p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>Suppose you have a webapp called <code>blah.war</code>, that you want al=
l of the above names and addresses to be served at path "<code>/blah</code>=
".
Here=E2=80=99s how you would configure the virtual hosts with a <a href=3D"=
file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-docum=
entation/src/main/asciidoc/index.html#deployable-descriptor-file">context X=
ML</a> file:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><!-=
-?xml version=3D"1.0" encoding=3D"UTF-8"?-->


<configure class=3D"org.eclipse.jetty.webapp.WebAppContext">
  <set name=3D"contextPath">/blah</set>
  <set name=3D"war"><property name=3D"jetty.webapps">blah.war</property></s=
et>
  <set name=3D"virtualHosts">
    <array type=3D"java.lang.String">
      <item>333.444.555.666</item>
      <item>127.0.0.1</item>
      <item>www.blah.com</item>
      <item>www.blah.net</item>
      <item>www.blah.org</item>
    </array>
  </set>
</configure></code></pre>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"different-virtual-hosts-different-contexts">Using Different Sets =
of Virtual Hosts to Select Different Contexts</h4>
<div class=3D"paragraph">
<p>You can configure different contexts to respond on different virtual hos=
ts by supplying a specific list of virtual hosts for each one.</p>
</div>
<div class=3D"paragraph">
<p>For example, suppose your imaginary machine has these DNS names:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p><code>www.blah.com</code></p>
</li>
<li>
<p><code>www.blah.net</code></p>
</li>
<li>
<p><code>www.blah.org</code></p>
</li>
<li>
<p><code>www.other.com</code></p>
</li>
<li>
<p><code>www.other.net</code></p>
</li>
<li>
<p><code>www.other.org</code></p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>Suppose also you have 2 webapps, one called <code>blah.war</code> that y=
ou would like served from the <code>*.blah.*</code> names, and one called <=
code>other.war</code> that you want served only from the <code>*.other.*</c=
ode> names.</p>
</div>
<div class=3D"paragraph">
<p>Using the method of preparing <a href=3D"file:///home/tian/Downloads/b60=
/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/inde=
x.html#deployable-descriptor-file">contextXML</a> files, one for each webap=
p yields the following:</p>
</div>
<div class=3D"paragraph">
<p>For <code>blah</code> webapp:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><!-=
-?xml version=3D"1.0" encoding=3D"UTF-8"?-->


<configure class=3D"org.eclipse.jetty.webapp.WebAppContext">
  <set name=3D"contextPath">/blah</set>
  <set name=3D"war"><property name=3D"jetty.webapps">/blah.war</property></=
set>
  <set name=3D"virtualHosts">
    <array type=3D"java.lang.String">
      <item>www.blah.com</item>
      <item>www.blah.net</item>
      <item>www.blah.org</item>
    </array>
  </set>
</configure></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>These URLs now resolve to the blah context (ie <code>blah.war</code>):</=
p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p><code>http://www.blah.com/blah</code></p>
</li>
<li>
<p><code>http://www.blah.net/blah</code></p>
</li>
<li>
<p><code>http://www.blah.org/blah</code></p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>For <code>other</code> webapp:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><!-=
-?xml version=3D"1.0" encoding=3D"UTF-8"?-->


<configure class=3D"org.eclipse.jetty.webapp.WebAppContext">
  <set name=3D"contextPath">/other</set>
  <set name=3D"war"><property name=3D"jetty.webapps">/other.war</property><=
/set>
  <set name=3D"virtualHosts">
    <array type=3D"java.lang.String">
      <item>www.other.com</item>
      <item>www.other.net</item>
      <item>www.other.org</item>
    </array>
  </set>
</configure></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>These URLs now resolve to the other context (i.e. <code>other.war</code>=
):</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p><code>http://www.other.com/other</code></p>
</li>
<li>
<p><code>http://www.other.net/other</code></p>
</li>
<li>
<p><code>http://www.other.org/other</code></p>
</li>
</ul>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"different-virtual-hosts-different-context-same-path">Using Differ=
ent Sets of Virtual Hosts to Select Different Contexts at the Same Context =
Path</h4>
<div class=3D"paragraph">
<p>In the previous section we setup 2 different contexts to be served from =
different virtual hosts at <em>different</em> context paths.
However, there is no requirement that the context paths must be distinct: y=
ou may use the same context path for multiple contexts, and use virtual hos=
ts to determine which one is served for a given request.</p>
</div>
<div class=3D"paragraph">
<p>Consider an example where we have the same set of DNS names as before, a=
nd the same webapps <code>blah.war</code> and <code>other.war</code>. We st=
ill want <code>blah.war</code> to be served in response to hostnames of <co=
de>*.blah.*</code>, and we still want <code>other.war</code> to be served i=
n response to <code>*.other.*</code> names.
However, we would like<em>all</em> of our clients to use the <code>"/"</cod=
e> context path, no matter which context is being targeted.</p>
</div>
<div class=3D"paragraph">
<p>In other words, we want all of the following URLs to map to <code>blah.w=
ar</code>:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p><code>http://www.blah.com/</code></p>
</li>
<li>
<p><code>http://www.blah.net/</code></p>
</li>
<li>
<p><code>http://www.blah.org/</code></p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>Similarly, we want the following URLs to map to <code>other.war</code>:<=
/p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p><code>http://www.other.com/</code></p>
</li>
<li>
<p><code>http://www.other.net/</code></p>
</li>
<li>
<p><code>http://www.other.org/</code></p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>To achieve this, we simply use the same context path of <code>/</code> f=
or each of our webapps, while still applying our different set of virtual h=
ost names.</p>
</div>
<div class=3D"paragraph">
<p>For foo webapp:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><!-=
-?xml version=3D"1.0" encoding=3D"UTF-8"?-->


<configure class=3D"org.eclipse.jetty.webapp.WebAppContext">
  <set name=3D"contextPath">/</set>
  <set name=3D"war"><property name=3D"jetty.webapps">/foo.war</property></s=
et>
  <set name=3D"virtualHosts">
    <array type=3D"java.lang.String">
      <item>www.blah.com</item>
      <item>www.blah.net</item>
      <item>www.blah.org</item>
    </array>
  </set>
</configure></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>For bar webapp:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><!-=
-?xml version=3D"1.0" encoding=3D"UTF-8"?-->


<configure class=3D"org.eclipse.jetty.webapp.WebAppContext">
  <set name=3D"contextPath">/</set>
  <set name=3D"war"><property name=3D"jetty.webapps">/bar.war</property></s=
et>
  <set name=3D"virtualHosts">
    <array type=3D"java.lang.String">
      <item>www.other.com</item>
      <item>www.other.net</item>
      <item>www.other.org</item>
    </array>
  </set>
</configure></code></pre>
</div>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"ref-temporary-directories">Temporary Directories</h3>
<div class=3D"paragraph">
<p>Jetty itself has no temporary directories, but you can assign a director=
y for each web application, into which the WAR is unpacked, JSPs compiled o=
n-the-fly, etc.
If you do not assign a specific temporary directory, Jetty will create one =
as needed when your web application starts.
Whether you set the location of the temporary directory - or you let Jetty =
create one for you - you also have a choice to either keep or delete the te=
mporary directory when the web application stops.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"_the_default_temp_directory">The default temp directory</h4>
<div class=3D"paragraph">
<p>By default, Jetty will create a temporary directory for each web applica=
tion. The name of the directory will be of the form:</p>
</div>
<div class=3D"literalblock">
<div class=3D"content">
<pre>"jetty-"+host+"-"+port+"-"+resourceBase+"-_"+context+"-"+virtualhost+"=
-"+randomdigits+".dir"</pre>
</div>
</div>
<div class=3D"paragraph">
<p>For example:</p>
</div>
<div class=3D"literalblock">
<div class=3D"content">
<pre>jetty-0.0.0.0-8080-test.war-_test-any-8900275691885214790.dir</pre>
</div>
</div>
<div class=3D"paragraph">
<p>Where <code>0.0.0.0</code> is the host address, <code>8080</code> is the=
 port, <code>test.war</code> is the resourceBase, <code>test</code> is the =
context path (with / converted to _), <code>any</code> is the virtual host,=
 and <code>randomdigits</code> are a string of digits guaranteed to be uniq=
ue.</p>
</div>
<div class=3D"paragraph">
<p>Once the temp directory is created, it is retrievable as the value (as a=
 File) of the context attribute <code>javax.servlet.context.tempdir.</code>=
</p>
</div>
<div class=3D"sect4">
<h5 id=3D"_the_location_of_the_temp_directory">The location of the temp dir=
ectory</h5>
<div class=3D"paragraph">
<p>By default, Jetty will create this directory inside the directory named =
by the <code>java.io.tmpdir</code> System property.
You can instruct Jetty to use a different parent directory by setting the c=
ontext attribute <code>org.eclipse.jetty.webapp.basetempdir</code> to the n=
ame of the desired parent directory.
The directory named by this attribute <em>must</em> exist and be <em>writea=
ble</em>.</p>
</div>
<div class=3D"paragraph">
<p>As usual with Jetty, you can either set this attribute in a context xml =
file, or you can do it in code.</p>
</div>
<div class=3D"paragraph">
<p>Here=E2=80=99s an example of setting it in an xml file:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><co=
nfigure class=3D"org.eclipse.jetty.webapp.WebAppContext">

  <set name=3D"contextPath">/test</set>
  <set name=3D"war">foo.war</set>

  <call name=3D"setAttribute">
    <arg>org.eclipse.jetty.webapp.basetempdir</arg>
    <arg>/home/my/foo</arg>
  </call>
</configure></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The equivalent in code is:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">W=
ebAppContext context =3D new WebAppContext();
context.setContextPath("/test");
context.setWar("foo.war");
context.setAttribute("org.eclipse.jetty.webapp.basetempdir", "/tmp/foo");</=
code></pre>
</div>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_setting_a_specific_temp_directory">Setting a specific temp direc=
tory</h4>
<div class=3D"paragraph">
<p>There are several ways to use a particular directory as the temporary di=
rectory:</p>
</div>
<div class=3D"sect4">
<h5 id=3D"_call_webappcontext_settempdirectory_string_dir">Call WebAppConte=
xt.setTempDirectory(String dir)</h5>
<div class=3D"paragraph">
<p>As before this can be accomplished with an xml file or directly in code.=
 Here=E2=80=99s an example of setting the temp directory in xml:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><co=
nfigure class=3D"org.eclipse.jetty.webapp.WebAppContext">

  <set name=3D"contextPath">/test</set>
  <set name=3D"war">foo.war</set>

  <set name=3D"tempDirectory">/some/dir/foo</set>
</configure></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Here=E2=80=99s an example of doing it with java code:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">W=
ebAppContext context =3D new WebAppContext();
context.setContextPath("/test");
context.setWar("foo.war");
context.setTempDirectory(new File("/some/dir/foo"));</code></pre>
</div>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_set_the_javax_servlet_context_tempdir_context_attribute">Set the=
 javax.servlet.context.tempdir context attribute</h5>
<div class=3D"paragraph">
<p>You should set this context attribute with the name of directory you wan=
t to use as the temp directory. Again, you can do this in xml:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><co=
nfigure class=3D"org.eclipse.jetty.webapp.WebAppContext">

  <set name=3D"contextPath">/test</set>
  <set name=3D"war">foo.war</set>

  <call name=3D"setAttribute">
    <arg>javax.servlet.context.tempdir</arg>
    <arg>/some/dir/foo</arg>
  </call>

</configure></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Or in java:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">W=
ebAppContext context =3D new WebAppContext();
context.setContextPath("/test");
context.setWar("foo.war");
context.setAttribute("javax.servlet.context.tempdir", "/some/dir/foo");</co=
de></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Once a temporary directory has been created by either of these methods, =
a file instance for it is set as the value of the <code>javax.servlet.conte=
xt.tempdir</code> attribute of the web application.</p>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Note</div>
</td>
<td class=3D"content">
Be wary of setting an explicit temp directory if you are likely to change t=
he jars in WEB-INF/lib between redeployments.
There is a JVM bug concerning <a href=3D"http://bugs.sun.com/bugdatabase/vi=
ew_bug.do?bug_id=3D4774421">caching of jar contents.</a>
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_the_work_directory">The "work" directory</h4>
<div class=3D"paragraph">
<p>Mostly for backward compatibility, from Jetty 9.1.1 onwards, it is possi=
ble to create a directory named "work" in the <code>$\{jetty.base}</code> d=
irectory.
If such a directory is found, it is assumed you want to use it as the paren=
t directory for all of the temporary directories of the webapps in <code>$\=
{jetty.base}</code>.
Moreover, as has historically been the case, these temp directories inside =
the work directory are not cleaned up when Jetty exits (or more correctly s=
peaking, the <code>temp</code> directory corresponding to a context is not =
cleaned up when that context stops).</p>
</div>
<div class=3D"paragraph">
<p>When a work directory is used, the algorithm for generating the name of =
the context-specific temp directories omits the random digit string.
This ensures the name of the directory remains consistent across context re=
starts.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_persisting_the_temp_directory">Persisting the temp directory</h4=
>
<div class=3D"paragraph">
<p>Sometimes it is useful to keep the contents of the temporary directory b=
etween restarts of the web application.
By default, Jetty will <strong>not</strong> persist the temp directory.
To configure Jetty to keep it, use <a href=3D"file:///home/tian/Downloads/b=
60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7=
BJDURL%7D/org/eclipse/jetty/webapp/WebAppContext.html">WebAppContext.setPer=
sistTempDirectory(true)</a>.</p>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Note</div>
</td>
<td class=3D"content">
Be aware that if you call <code>setPersistTempDirectory(true)</code>, but l=
et Jetty create a new temp directory each time (i.e. you do NOT set an expl=
icit temp directory), then you will accumulate temp directories in your cho=
sen temp directory location.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"serving-webapp-from-particular-port">Serving a WebApp from a Part=
icular Port/Connector</h3>
<div class=3D"paragraph">
<p>Sometimes it is required to serve different web applications from differ=
ent ports/connectors.
The simplest way to do this is to create multiple <code>Server</code> insta=
nces.
However, if contexts need to share resources (eg data sources, authenticati=
on), or if the mapping of ports to web applications is not cleanly divided,=
 then the named connector mechanism can be used.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"creating-server-instances">Creating Multiple Server Instances</h4=
>
<div class=3D"paragraph">
<p>Creating multiple server instances is a straight forward process that in=
cludes embedding Jetty code by creating multiples instances of the Server c=
lass and configuring them as needed.
This is also easy to achieve if you are configuring Jetty servers via XML.
The <code>id</code> field in the Configure element of <code>jetty.xml</code=
> files is used to identify the instance that the configuration applies to,=
 so to run two instances of the Server, you can copy the <code>jetty.xml</c=
ode>, jetty-http.xml and other jetty configuration files used and change th=
e "Server" id to a new name.
This can be done in the same style and layout as the existing <code>jetty.x=
ml</code> files or the multiple XML files may be combined to a single file.=
</p>
</div>
<div class=3D"paragraph">
<p>When creating new configurations for alternative server:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>Change all <code>id=3D"Server"</code> to the new server name:</p>
</li>
</ul>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><co=
nfigure id=3D"OtherServer" class=3D"org.eclipse.jetty.server.Server"></conf=
igure></code></pre>
</div>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>For all connectors for the new server change the <code>refid</code> in t=
he server argument:</p>
</li>
</ul>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><ar=
g name=3D"server"><ref refid=3D"OtherServer"></ref></arg></code></pre>
</div>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>Make sure that any references to properties like <code>jetty.http.port</=
code> are either renamed or replaced with absolute values.</p>
</li>
<li>
<p>Make sure that any deployers <code>AppProviders</code> refer to a differ=
ent "webapps" directory so that a different set of applications are deploye=
d.</p>
</li>
</ul>
</div>
<div class=3D"sect4">
<h5 id=3D"jetty-otherserver.xml">Example Other Server XML</h5>
<div class=3D"paragraph">
<p>The following example creates another server instance and configures it =
with a connector and deployer:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml">Unr=
esolved directive in configuring/contexts/serving-webapp-from-particular-po=
rt.adoc - include::{SRCDIR}/examples/embedded/src/main/resources/jetty-othe=
rserver.xml[]</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>To run the other server, add the extra configuration file(s) to the comm=
and line:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">java -jar start.jar jetty-otherserver.xml</code></pre>
</div>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"alternative">Named Connectors</h4>
<div class=3D"paragraph">
<p>It is also possible to use an extension to the virtual host mechanism wi=
th named to connectors to make some web applications only accessible by spe=
cific connectors.
If a connector has a name "MyConnector" set using the <code>setName</code> =
method, then this can be referenced with the special virtual host name "@My=
Connector".</p>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"custom-error-pages">Creating Custom Error Pages</h3>
<div class=3D"paragraph">
<p>The following sections describe several ways to create custom error page=
s in Jetty.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"_defining_error_pages_in_web_xml">Defining error pages in web.xml=
</h4>
<div class=3D"paragraph">
<p>You can use the standard webapp configuration file located in <code>weba=
pp/WEB-INF/web.xml</code> to map errors to specific URLs with the <code>err=
or-page</code> element.
This element creates a mapping between the error-code or exception-type to =
the location of a resource in the web application.</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p><code>error-code</code> - an integer value</p>
</li>
<li>
<p><code>exception-type</code> - a fully qualified class name of a Java Exc=
eption type</p>
</li>
<li>
<p><code>location</code> - location of the resource in the webapp relative =
to the root of the web application. Value should start with <code>/</code>.=
</p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>Error code example:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><er=
ror-page>
  <error-code>404</error-code>
  <location>/jspsnoop/ERROR/404</location>
</error-page></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Exception example:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><er=
ror-page>
  <exception-type>java.io.IOException</exception-type>
  <location>/jspsnoop/IOException</location>
</error-page></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The error page mappings created with the error-page element will redirec=
t to a normal URL within the web application and will be handled as a norma=
l request to that location and thus may be static content, a JSP or a filte=
r and/or servlet.
When handling a request generated by an error redirection, the following re=
quest attributes are set and are available to generate dynamic content:</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">javax.servlet.error.exception</dt>
<dd>
<p>The exception instance that caused the error (or null).</p>
</dd>
<dt class=3D"hdlist1">javax.servlet.error.exception_type</dt>
<dd>
<p>The class name of the exception instance that caused the error (or null)=
.</p>
</dd>
<dt class=3D"hdlist1">javax.servlet.error.message</dt>
<dd>
<p>The error message.</p>
</dd>
<dt class=3D"hdlist1">javax.servlet.error.request_uri</dt>
<dd>
<p>The URI of the request with an error.</p>
</dd>
<dt class=3D"hdlist1">javax.servlet.error.servlet_name</dt>
<dd>
<p>The Servlet name of the servlet that the request was
dispatched to.</p>
</dd>
<dt class=3D"hdlist1">javax.servlet.error.status_code</dt>
<dd>
<p>The status code of the error (e.g. 404, 500 etc.).</p>
</dd>
</dl>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_configuring_error_pages_context_files">Configuring error pages c=
ontext files</h4>
<div class=3D"paragraph">
<p>You can use context IoC XML files to configure the default error page ma=
ppings with more flexibility than is available with <code>web.xml</code>, s=
pecifically with the support of error code ranges.
Context files are normally located in <code>${jetty.base}/webapps/</code> (=
see <code>DeployerManager</code> for more details) and an example of more f=
lexible error page mapping is below:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><!-=
-?xml version=3D"1.0" encoding=3D"UTF-8"?-->


<configure class=3D"org.eclipse.jetty.webapp.WebAppContext">
  <set name=3D"contextPath">/test</set>
  <set name=3D"war">
    <systemproperty name=3D"jetty.base" default=3D".">/webapps/test
  </systemproperty></set>

  <!-- by Code -->
  <get name=3D"errorHandler">
    <call name=3D"addErrorPage">
      <arg type=3D"int">404</arg>
      <arg type=3D"String">/jspsnoop/ERROR/404</arg>
    </call>
  </get>

  <!-- by Exception -->
  <get name=3D"errorHandler">
    <call name=3D"addErrorPage">
      <arg>
        <call class=3D"java.lang.Class" name=3D"forName">
          <arg type=3D"String">java.io.IOException</arg>
        </call>
      </arg>
      <arg type=3D"String">/jspsnoop/IOException</arg>
    </call>
  </get>

  <!-- by Code Range -->
  <get name=3D"errorHandler">
    <call name=3D"addErrorPage">
      <arg type=3D"int">500</arg>
      <arg type=3D"int">599</arg>
      <arg type=3D"String">/dump/errorCodeRangeMapping</arg>
    </call>
  </get>
</configure></code></pre>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_custom_errorhandler_class">Custom ErrorHandler class</h4>
<div class=3D"paragraph">
<p>If no error page mapping is defined, or if the error page resource itsel=
f has an error, then the error page will be generated by an instance of <co=
de>ErrorHandler</code> configured either the Context or the Server.
An <code>ErrorHandler</code> may extend the <code>ErrorHandler</code> class=
 and may totally replace the handle method to generate an error page, or it=
 can implement some or all of the following methods to partially modify the=
 error pages:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">v=
oid handle(String target, Request baseRequest, HttpServletRequest request, =
HttpServletResponse response) throws IOException
void handleErrorPage(HttpServletRequest request, Writer writer, int code, S=
tring message) throws IOException
void writeErrorPage(HttpServletRequest request, Writer writer, int code, St=
ring message, boolean showStacks) throws IOException
void writeErrorPageHead(HttpServletRequest request, Writer writer, int code=
, String message) throws IOException
void writeErrorPageBody(HttpServletRequest request, Writer writer, int code=
, String message, boolean showStacks) throws IOException
void writeErrorPageMessage(HttpServletRequest request, Writer writer, int c=
ode, String message, String uri) throws IOException
void writeErrorPageStacks(HttpServletRequest request, Writer writer) throws=
 IOException</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>An <code>ErrorHandler</code> instance may be set on a Context by calling=
 the <code>ContextHandler.setErrorHandler</code> method. This can be done b=
y embedded code or via context IoC XML.
For example:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><co=
nfigure class=3D"org.eclipse.jetty.server.handler.ContextHandler">
  ...
  <set name=3D"errorHandler">
    <new class=3D"com.acme.handler.MyErrorHandler">
  </new></set>
  ...
</configure></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>An <code>ErrorHandler</code> instance may be set on the entire server by=
 setting it as a dependent bean on the Server instance.
This can be done by calling <code>Server.addBean(Object)</code> via embedde=
d code or in <code>jetty.xml</code> IoC XML:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><co=
nfigure id=3D"Server" class=3D"org.eclipse.jetty.server.Server">
  ...
  <call name=3D"addBean">
    <arg>
      <new class=3D"com.acme.handler.MyErrorHandler">
    </new></arg>
  </call>
  ...
</configure></code></pre>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_server_level_404_error">Server level 404 error</h4>
<div class=3D"paragraph">
<p>It is possible to get a <em>page not found</em> when a request is made t=
o the server for a resource that is outside of any registered contexts.
As an example, you have a domain name pointing to your public server IP, ye=
t no context is registered with Jetty to serve pages for that domain.
As a consequence, the server, by default, gives a listing of all contexts r=
unning on the server.</p>
</div>
<div class=3D"paragraph">
<p>One of the quickest ways to avoid this behavior is to create a catch all=
 context.
Create a "root" web app mapped to the "/" URI, and use the <code>index.html=
</code> redirect to whatever place with a header directive.</p>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"setting-form-size">Setting Max Form Size</h3>
<div class=3D"paragraph">
<p>Jetty limits the amount of data that can post back from a browser or oth=
er client to the server.
This helps protect the server against denial of service attacks by maliciou=
s clients sending huge amounts of data.
The default maximum size Jetty permits is 200000 bytes.
You can change this default for a particular webapp, for all webapps on a p=
articular Server instance, or all webapps within the same JVM.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"_for_a_single_webapp">For a Single Webapp</h4>
<div class=3D"paragraph">
<p>The method to invoke is: <code>ContextHandler.setMaxFormContentSize(int =
maxSize);</code></p>
</div>
<div class=3D"paragraph">
<p>This can be done either in a context XML deployment descriptor external =
to the webapp, or in a <code>jetty-web.xml</code> file in the webapp=E2=80=
=99s <code>WEB-INF</code> directory.</p>
</div>
<div class=3D"paragraph">
<p>In either case the syntax of the XML file is the same:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><co=
nfigure class=3D"org.eclipse.jetty.webapp.WebAppContext">
  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
  <!-- Max Form Size                                                   -->
  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
  <set name=3D"maxFormContentSize">200000</set>
</configure></code></pre>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_for_all_apps_on_a_server">For All Apps on a Server</h4>
<div class=3D"paragraph">
<p>Set an attribute on the Server instance for which you want to modify the=
 maximum form content size:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><co=
nfigure class=3D"org.eclipse.jetty.server.Server">
  <call name=3D"setAttribute">
    <arg>org.eclipse.jetty.server.Request.maxFormContentSize</arg>
    <arg>200000</arg>
  </call>
</configure></code></pre>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_for_all_apps_in_the_jvm">For All Apps in the JVM</h4>
<div class=3D"paragraph">
<p>Use the system property <code>org.eclipse.jetty.server.Request.maxFormCo=
ntentSize</code>.
This can be set on the command line or in the <code>start.ini</code> or <co=
de>start.d\server.ini</code> file.</p>
</div>
</div>
</div>
</div>
</div>
<div class=3D"sect1">
<h2 id=3D"configuring-connectors">Configuring Jetty Connectors</h2>
<div class=3D"sectionbody">
<div class=3D"paragraph">
<p>This chapter discusses various options for configuring Jetty connectors.=
</p>
</div>
<div class=3D"sect2">
<h3 id=3D"jetty-connectors">Connector Configuration Overview</h3>
<div class=3D"paragraph">
<p>Connectors are the mechanism through which Jetty accepts network connect=
ions for various protocols.
Configuring a connector is a combination of configuring the following:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>Network parameters on the connector itself (for example: the listening p=
ort).</p>
</li>
<li>
<p>Services the connector uses (for example: executors, schedulers).</p>
</li>
<li>
<p>Connection factories that instantiate and configure the protocol for an =
accepted connection.</p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>Jetty primarily uses a single connector type called <a href=3D"file:///h=
ome/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/=
src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/server/ServerConnector.html=
">ServerConnector</a>.</p>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Note</div>
</td>
<td class=3D"content">
Prior to Jetty 9, the type of the connector specified both the protocol and=
 the implementation used; for example, selector-based non blocking I/O vs b=
locking I/O, or SSL connector vs non-SSL connector.
Jetty 9 has a single selector-based non-blocking I/O connector, and a colle=
ction of <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jet=
ty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jett=
y/server/ConnectionFactory.html"><code>ConnectionFactories</code></a> now c=
onfigure the protocol on the connector.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
<div class=3D"paragraph">
<p>The standard Jetty distribution comes with the following Jetty XML files=
 that create and configure connectors; you should examine them as you read =
this section:</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1"><a href=3D"file:///home/tian/Downloads/b60/ebook/jett=
y.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BGITBROWSEURL=
%7D/jetty-server/src/main/config/etc/jetty-http.xml"><code>jetty-http.xml</=
code></a></dt>
<dd>
<p>Instantiates a <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.pr=
oject-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org/ecl=
ipse/jetty/server/ServerConnector.html"><code>ServerConnector</code></a> th=
at accepts HTTP connections (that may be upgraded to WebSocket connections)=
.</p>
</dd>
<dt class=3D"hdlist1"><a href=3D"file:///home/tian/Downloads/b60/ebook/jett=
y.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BGITBROWSEURL=
%7D/jetty-server/src/main/config/etc/jetty-ssl.xml"><code>jetty-ssl.xml</co=
de></a></dt>
<dd>
<p>Instantiates a <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.pr=
oject-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org/ecl=
ipse/jetty/server/ServerConnector.html"><code>ServerConnector</code></a> th=
at accepts SSL/TLS connections.
On it=E2=80=99s own, this connector is not functional and requires one or m=
ore of the following files to also be configured to add  <a href=3D"file://=
/home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentatio=
n/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/server/ConnectionFactory.=
html"><code>ConnectionFactories</code></a> to make the connector functional=
.</p>
</dd>
<dt class=3D"hdlist1"><a href=3D"file:///home/tian/Downloads/b60/ebook/jett=
y.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BGITBROWSEURL=
%7D/jetty-server/src/main/config/etc/jetty-https.xml"><code>jetty-https.xml=
</code></a></dt>
<dd>
<p>Adds a <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-je=
tty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jet=
ty/server/HttpConnectionFactory.html"><code>HttpConnectionFactory</code></a=
> to the <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jet=
ty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jett=
y/server/ServerConnector.html"><code>ServerConnector</code></a>  configured=
 by <code>jetty-ssl.xml</code> which combine to provide support for HTTPS.<=
/p>
</dd>
<dt class=3D"hdlist1"><a href=3D"file:///home/tian/Downloads/b60/ebook/jett=
y.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BGITBROWSEURL=
%7D/jetty-http2/http2-server/src/main/config/etc/jetty-http2.xml"><code>jet=
ty-http2.xml</code></a></dt>
<dd>
<p>Adds a <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-je=
tty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jet=
ty/http2/server/HTTP2ServerConnectionFactory.html"><code>Http2ServerConnect=
ionFactory</code></a> to the  <a href=3D"file:///home/tian/Downloads/b60/eb=
ook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJDUR=
L%7D/org/eclipse/jetty/server/ServerConnector.html"><code>ServerConnector</=
code></a> configured by <code>jetty-ssl.xml</code> to support the http2 pro=
tocol. Also prepends either <code>protonego-alpn.xml</code> or <code>proton=
ego-npn.xml</code> so that the next protocol can be negotiated, which allow=
s the same SSL port to handle multiple protocols.</p>
</dd>
<dt class=3D"hdlist1"><a href=3D"file:///home/tian/Downloads/b60/ebook/jett=
y.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BGITBROWSEURL=
%7D/jetty-alpn/jetty-alpn-server/src/main/config/etc/jetty-alpn.xml"><code>=
jetty-alpn.xml</code></a></dt>
<dd>
<p>Adds an <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-j=
etty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/je=
tty/alpn/server/ALPNServerConnectionFactory.html"><code>ALPNServerConnectio=
nFactory</code></a> to the <a href=3D"file:///home/tian/Downloads/b60/ebook=
/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7=
D/org/eclipse/jetty/server/ServerConnector.html"><code>ServerConnector</cod=
e></a> configured by <code>jetty-ssl.xml</code> which allows the one SSL co=
nnector to support multiple protocols with the ALPN extension used to selec=
t the protocol to be used for each connection.</p>
</dd>
</dl>
</div>
<div class=3D"paragraph">
<p>Typically connectors require very little configuration aside from settin=
g the listening port (see <a href=3D"file:///home/tian/Downloads/b60/ebook/=
jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#=
jetty-connectors-network-settings">Network Settings</a>), and enabling <cod=
e>X-Forwarded-For</code> customization when applicable. (see <a href=3D"fil=
e:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-document=
ation/src/main/asciidoc/index.html#jetty-connectors-http-configuration">HTT=
P Configuration</a>).
Additional settings are for expert configuration only.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"_constructing_a_serverconnector">Constructing a ServerConnector</=
h4>
<div class=3D"paragraph">
<p>The services a <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.pr=
oject-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org/ecl=
ipse/jetty/server/ServerConnector.html"><code>ServerConnector</code></a> in=
stance uses are set by constructor injection and once instantiated cannot b=
e changed.
Many of the services may be defaulted with null or 0 values so that a reaso=
nable default is used, thus for most purposes only the Server and the conne=
ction factories need to be passed to the connector constructor. In Jetty XM=
L (that is, in <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.proje=
ct-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BSRCDIR%7D/jetty-ser=
ver/src/main/config/etc/jetty-http.xml"><code>jetty-http.xml</code></a>) yo=
u can do this by:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><ne=
w class=3D"org.eclipse.jetty.server.ServerConnector">
  <arg name=3D"server"><ref refid=3D"Server"></ref></arg>
  <arg name=3D"factories">
    <array type=3D"org.eclipse.jetty.server.ConnectionFactory">
      <!-- insert one or more factories here -->
    </array>
  </arg>
  <!-- set connector fields here -->
</new></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>You can see the other arguments that can be passed when constructing a <=
code>ServerConnector</code> in the <a href=3D"file:///home/tian/Downloads/b=
60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7=
BJDURL%7D/org/eclipse/jetty/server/ServerConnector.html#ServerConnector%28o=
rg.eclipse.jetty.server.Server,%20java.util.concurrent.Executor,%20org.ecli=
pse.jetty.util.thread.Scheduler,%20org.eclipse.jetty.io.ByteBufferPool,%20i=
nt,%20int,%20org.eclipse.jetty.server.ConnectionFactory=E2=80=A6=E2=80=8B%2=
9">Javadoc</a>.
Typically the defaults are sufficient for almost all deployments.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"jetty-connectors-network-settings">Network Settings.</h4>
<div class=3D"paragraph">
<p>You configure connector network settings by calling setters on the conne=
ctor before it is started.
For example, you can set the port with the Jetty XML:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><ne=
w class=3D"org.eclipse.jetty.server.ServerConnector">
  <arg name=3D"server"><ref refid=3D"Server"></ref></arg>
  <arg name=3D"factories"><!-- insert one or more factories here --></arg>

  <set name=3D"port">8080</set>
</new></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Values in Jetty XML can also be parameterized so that they may be passed=
 from property files or set on the command line.
Thus typically the port is set within Jetty XML, but uses the <code>Propert=
y</code> element to be customizable:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><ne=
w class=3D"org.eclipse.jetty.server.ServerConnector">
  <arg name=3D"server"><ref refid=3D"Server"></ref></arg>
  <arg name=3D"factories"><!-- insert one or more factories here --></arg>

  <set name=3D"port"><property name=3D"jetty.http.port" default=3D"8080"></=
property></set>
</new></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The network settings that you can set on the <a href=3D"file:///home/tia=
n/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/mai=
n/asciidoc/%7BJDURL%7D/org/eclipse/jetty/server/ServerConnector.html"><code=
>ServerConnector</code></a> include:</p>
</div>
<table class=3D"tableblock frame-all grid-all spread">
<caption class=3D"title">Table 9. Connector Configuration</caption>
<colgroup>
<col style=3D"width: 22%;">
<col style=3D"width: 78%;">
</colgroup>
<thead>
<tr>
<th class=3D"tableblock halign-left valign-top">Field</th>
<th class=3D"tableblock halign-left valign-top">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">hos=
t</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">The=
 network interface this connector binds to as an IP address or a hostname.
If null or 0.0.0.0, bind to all interfaces.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">por=
t</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">The=
 configured port for the connector or 0 a random available port may be used=
 (selected port available via <code>getLocalPort()</code>).</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">idl=
eTimeout</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">The=
 time in milliseconds that the connection can be idle before it is closed.<=
/p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">def=
aultProtocol</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">The=
 name of the default protocol used to select a <code>ConnectionFactory</cod=
e> instance. This defaults to the first <code>ConnectionFactory</code> adde=
d to the connector.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">sto=
pTimeout</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">The=
 time in milliseconds to wait before gently stopping a connector.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">acc=
eptQueueSize</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">The=
 size of the pending connection backlog.
The exact interpretation is JVM and operating system specific and you can i=
gnore it.
Higher values allow more connections to wait pending an acceptor thread.
Because the exact interpretation is deployment dependent, it is best to kee=
p this value as the default unless there is a specific connection issue for=
 a specific OS that you need to address.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">reu=
seAddress</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">All=
ow the server socket to be rebound even if in <a href=3D"http://www.ssfnet.=
org/Exchange/tcp/tcpTutorialNotes.html">TIME_WAIT</a>.
For servers it is typically OK to leave this as the default true.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">soL=
ingerTime</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">A v=
alue greater than zero sets the socket <a href=3D"http://stackoverflow.com/=
questions/3757289/tcp-option-so-linger-zero-when-its-required">SO_LINGER</a=
> value in milliseconds.
Jetty attempts to gently close all TCP/IP connections with proper half clos=
e semantics, so a linger timeout should not be required and thus the defaul=
t is -1.</p></td>
</tr>
</tbody>
</table>
</div>
<div class=3D"sect3">
<h4 id=3D"jetty-connectors-http-configuration">HTTP Configuration</h4>
<div class=3D"paragraph">
<p>The <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty=
-9.4.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/=
server/HttpConfiguration.html"><code>HttpConfiguration</code></a> class hol=
ds the configuration for <a href=3D"file:///home/tian/Downloads/b60/ebook/j=
etty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/=
org/eclipse/jetty/server/HttpChannel.html"><code>HttpChannel</code></a>s, w=
hich you can create 1:1 with each HTTP connection or 1:n on a multiplexed H=
TTP/2 connection.
Thus a <code>HttpConfiguration</code> object is injected into both the HTTP=
 and HTTP/2 connection factories.
To avoid duplicate configuration, the standard Jetty distribution creates t=
he common <code>HttpConfiguration</code> instance in <a href=3D"file:///hom=
e/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/sr=
c/main/asciidoc/%7BSRCDIR%7D/jetty-server/src/main/config/etc/jetty.xml"><c=
ode>jetty.xml</code></a>, which is a <code>Ref</code> element then used in =
<a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/=
jetty-documentation/src/main/asciidoc/%7BSRCDIR%7D/jetty-server/src/main/co=
nfig/etc/jetty-http.xml"><code>jetty-http.xml</code></a>, <a href=3D"file:/=
//home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentati=
on/src/main/asciidoc/%7BSRCDIR%7D/jetty-server/src/main/config/etc/jetty-ht=
tps.xml"><code>jetty-https.xml</code></a> and in <a href=3D"file:///home/ti=
an/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/ma=
in/asciidoc/%7BSRCDIR%7D/jetty-http2/http2-server/src/main/config/etc/jetty=
-http2.xml"><code>jetty-http2.xml</code></a>.</p>
</div>
<div class=3D"paragraph">
<p>A typical configuration of <a href=3D"file:///home/tian/Downloads/b60/eb=
ook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJDUR=
L%7D/org/eclipse/jetty/server/HttpConfiguration.html">HttpConfiguration</a>=
 is:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><ne=
w id=3D"httpConfig" class=3D"org.eclipse.jetty.server.HttpConfiguration">
  <set name=3D"secureScheme">https</set>
  <set name=3D"securePort"><property name=3D"jetty.ssl.port" default=3D"844=
3"></property></set>
  <set name=3D"outputBufferSize">32768</set>
  <set name=3D"requestHeaderSize">8192</set>
  <set name=3D"responseHeaderSize">8192</set>
</new></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>This example HttpConfiguration may be used by reference to the ID "<code=
>httpConfig</code>":</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><ca=
ll name=3D"addConnector">
  <arg>
    <new class=3D"org.eclipse.jetty.server.ServerConnector">
      <arg name=3D"server"><ref refid=3D"Server"></ref></arg>
      <arg name=3D"factories">
        <array type=3D"org.eclipse.jetty.server.ConnectionFactory">
          <item>
            <new class=3D"org.eclipse.jetty.server.HttpConnectionFactory">
              <arg name=3D"config"><ref refid=3D"httpConfig"></ref></arg>
            </new>
          </item>
        </array>
      </arg>
      <!-- ... -->
    </new>
  </arg>
</call></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>This same <code>httpConfig</code> is referenced by the <a href=3D"file:/=
//home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentati=
on/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/server/handler/SecuredRe=
directHandler.html"><code>SecuredRedirectHandler</code></a> when redirectin=
g secure requests.
Please note that if your <code>httpConfig</code> does not include a <code>s=
ecureScheme</code> or <code>securePort</code> or there is no <code>HttpConf=
iguration</code> present these types of secured requests will be returned a=
 <code>403</code> error.</p>
</div>
<div class=3D"paragraph">
<p>For SSL based connectors (in <code>jetty-https.xml</code> and <code>jett=
y-http2.xml</code>), the common "<code>httpConfig</code>" instance is used =
as the basis to create an SSL specific configuration with ID "<code>sslHttp=
Config</code>":</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><ne=
w id=3D"sslHttpConfig" class=3D"org.eclipse.jetty.server.HttpConfiguration"=
>
  <arg><ref refid=3D"httpConfig"></ref></arg>
  <call name=3D"addCustomizer">
    <arg><new class=3D"org.eclipse.jetty.server.SecureRequestCustomizer"></=
new></arg>
  </call>
</new></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>This adds a <code>SecureRequestCustomizer</code> which adds SSL Session =
IDs and certificate information as request attributes.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_ssl_context_configuration">SSL Context Configuration</h4>
<div class=3D"paragraph">
<p>The SSL/TLS connectors for HTTPS and HTTP/2 require a certificate to est=
ablish a secure connection.
Jetty holds certificates in standard JVM keystores and are configured as ke=
ystore and truststores on a <a href=3D"file:///home/tian/Downloads/b60/eboo=
k/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJDURL%=
7D/org/eclipse/jetty/util/ssl/SslContextFactory.html"><code>SslContextFacto=
ry</code></a> instance that is injected into an <a href=3D"file:///home/tia=
n/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/mai=
n/asciidoc/%7BJDURL%7D/org/eclipse/jetty/server/SslConnectionFactory.html">=
<code>SslConnectionFactory</code></a> instance.
An example using the keystore distributed with Jetty (containing a self sig=
ned test certificate) is in <a href=3D"file:///home/tian/Downloads/b60/eboo=
k/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BSRCDIR=
%7D/jetty-server/src/main/config/etc/jetty-https.xml"><code>jetty-https.xml=
</code></a>.
Read more about SSL keystores in <a href=3D"file:///home/tian/Downloads/b60=
/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/inde=
x.html#configuring-ssl">Configuring SSL</a>.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_proxy_load_balancer_connection_configuration">Proxy / Load Balan=
cer Connection Configuration</h4>
<div class=3D"paragraph">
<p>Often a Connector needs to be configured to accept connections from an i=
ntermediary such as a Reverse Proxy and/or Load Balancer deployed in front =
of the server.
In such environments, the TCP/IP connection terminating on the server does =
not originate from the client, but from the intermediary, so that the Remot=
e IP and port number can be reported incorrectly in logs and in some circum=
stances the incorrect server address and port may be used.</p>
</div>
<div class=3D"paragraph">
<p>Thus Intermediaries typically implement one of several de facto standard=
s to communicate to the server information about the orginal client connect=
ion terminating on the intermediary.
Jetty supports the <code>X-Forwarded-For</code> header and the <a href=3D"h=
ttp://www.haproxy.org/download/1.5/doc/proxy-protocol.txt">Proxy Protocol</=
a> mechanisms as described below.</p>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Note</div>
</td>
<td class=3D"content">
The XML files in the Jetty distribution contain commented out examples of b=
oth the <code>X-Forwarded-For</code> and <a href=3D"http://www.haproxy.org/=
download/1.5/doc/proxy-protocol.txt">Proxy Protocol</a> mechanisms.
When using those examples, it is recommended that the XML in the Jetty dist=
ribution is not edited.
Rather the files should be copied into a Jetty base directory and then modi=
fied.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
<div class=3D"sect4">
<h5 id=3D"_x_forward_for_configuration">X-Forward-for Configuration</h5>
<div class=3D"paragraph">
<p>The <code>X-Forwarded-for</code> header and associated headers are a de =
facto standard where intermediaries add HTTP headers to each request they f=
orward to describe the originating connection.
These headers can be interpreted by an instance of <a href=3D"file:///home/=
tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/=
main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/server/ForwardedRequestCustomiz=
er.html"><code>ForwardedRequestCustomizer</code></a> which can be added to =
a <code>HttpConfiguration</code> as follows:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><ne=
w id=3D"httpConfig" class=3D"org.eclipse.jetty.server.HttpConfiguration">
  <set name=3D"outputBufferSize">32768</set>
  <set name=3D"requestHeaderSize">8192</set>
  <set name=3D"responseHeaderSize">8192</set>

  <call name=3D"addCustomizer">
    <arg><new class=3D"org.eclipse.jetty.server.ForwardedRequestCustomizer"=
></new></arg>
  </call>
</new></code></pre>
</div>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_proxy_protocol">Proxy Protocol</h5>
<div class=3D"paragraph">
<p>The <a href=3D"http://www.haproxy.org/download/1.5/doc/proxy-protocol.tx=
t">Proxy Protocol</a> is a de facto standard created by HAProxy and used by=
 environments such as Amazon Elastic Cloud.
This mechanism is independent of any protocol, so it can be used for HTTP2,=
 TLS etc.
The information about the client connection is sent as a small data frame o=
n each newly established connection.
In Jetty, this protocol can be handled by the <a href=3D"file:///home/tian/=
Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/=
asciidoc/%7BJDURL%7D/org/eclipse/jetty/server/ProxyConnectionFactory.html">=
<code>ProxyConnectionFactory</code></a> which parses the data frame and the=
n instantiates the next <code>ConnectionFactory</code> on the connection wi=
th an end point that has been customized with the data obtained about the o=
riginal client connection.
The connection factory can be added to any <a href=3D"file:///home/tian/Dow=
nloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asc=
iidoc/%7BJDURL%7D/org/eclipse/jetty/server/ServerConnector.html"><code>Serv=
erConnector</code></a> and should be the first <a href=3D"file:///home/tian=
/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main=
/asciidoc/%7BJDURL%7D/org/eclipse/jetty/server/ConnectionFactory.html"><cod=
e>ConnectionFactory</code></a>.</p>
</div>
<div class=3D"paragraph">
<p>An example of adding the factory to a HTTP connector is:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><ca=
ll name=3D"addConnector">
  <arg>
    <new class=3D"org.eclipse.jetty.server.ServerConnector">
      <arg name=3D"server"><ref refid=3D"Server"></ref></arg>
      <arg name=3D"factories">
        <array type=3D"org.eclipse.jetty.server.ConnectionFactory">
          <item>
            <new class=3D"org.eclipse.jetty.server.ProxyConnectionFactory">
          </new></item>
          <item>
            <new class=3D"org.eclipse.jetty.server.HttpConnectionFactory">
              <arg name=3D"config"><ref refid=3D"httpConfig"></ref></arg>
            </new>
          </item>
        </array>
      </arg>
      <set name=3D"host"><property name=3D"jetty.host"></property></set>
      <set name=3D"port"><property name=3D"jetty.http.port" default=3D"80">=
</property></set>
    </new>
  </arg>
</call></code></pre>
</div>
</div>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"configuring-ssl">Configuring SSL/TLS</h3>
<div class=3D"paragraph">
<p>This document provides an overview of how to configure SSL and TLS for J=
etty.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"tls-and-ssl-versions">TLS and SSL versions</h4>
<div class=3D"paragraph">
<p>Which browser/OS supports which protocols can be <a href=3D"https://en.w=
ikipedia.org/wiki/Transport_Layer_Security#Web_browsers">found on Wikipedia=
</a>.</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>TLS v1.2: The protocol which should be used wherever possible.
All CBC based ciphers are supported since Java 7, the new GCM modes are sup=
ported since Java 8.</p>
</li>
</ul>
</div>
<div class=3D"sect4">
<h5 id=3D"_older_protocols">Older Protocols</h5>
<div class=3D"paragraph">
<p>TLS v1.0, v1.1 and SSL v3 are no longer supported by default. If your Je=
tty implementation requires these protocols for legacy support, they can be=
 enabled manually.</p>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Note</div>
</td>
<td class=3D"content">
Once TLS v1.3 is released, there will be no workaround available for TLS v1=
.0 or v1.1.
Plans for TLS v1.3 include banning ciphers with known vulnerabilities from =
being present at any level.
It is recommended to upgrade any clients using these ciphers as soon as pos=
sible or face being locked into a outdated version of Jetty, Java or even O=
S.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
<div class=3D"paragraph">
<p>By default, Jetty excludes these ciphers in the <a href=3D"file:///home/=
tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/=
main/asciidoc/%7BGITBROWSEURL%7D/jetty-util/src/main/java/org/eclipse/jetty=
/util/ssl/SslContextFactory.java#L249-L256"><code>SslContextFactory</code>.=
</a>
You can re-enable these by re-declaring the ciphers you want excluded in co=
de:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">S=
slContextFactory sslContextFactory =3D new SslContextFactory();
sslContextFactory.setExcludeCipherSuites(
            "^.*_(MD5|SHA|SHA1)$");</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>If, after making these changes, you still have issues using these cipher=
s they are likely being blocked at the JVM level.
Locate the <code>$JAVA_HOME/jre/lib/security/</code> directory for the <cod=
e>java.security</code> file and examine it for any configuration that is ex=
cluding <em>ciphers</em> or <em>algorithms</em> (depending on the version o=
f the JVM you are using the nomenclature may be different).</p>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"understanding-certificates-and-keys">Understanding Certificates a=
nd Keys</h4>
<div class=3D"paragraph">
<p>Configuring SSL can be a confusing experience of keys, certificates, pro=
tocols and formats, thus it helps to have a reasonable understanding of the=
 basics.
The following links provide some good starting points:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>Certificates:</p>
<div class=3D"ulist">
<ul>
<li>
<p><a href=3D"http://en.tldp.org/HOWTO/SSL-Certificates-HOWTO/index.html">S=
SL Certificates HOWTO</a></p>
</li>
<li>
<p><a href=3D"http://mindprod.com/jgloss/certificate.html">Mindprod Java Gl=
ossary: Certificates</a></p>
</li>
</ul>
</div>
</li>
<li>
<p>Keytool:</p>
<div class=3D"ulist">
<ul>
<li>
<p><a href=3D"http://docs.oracle.com/javase/8/docs/technotes/tools/unix/key=
tool.html">Keytool for Unix</a></p>
</li>
<li>
<p><a href=3D"http://docs.oracle.com/javase/8/docs/technotes/tools/windows/=
keytool.html">Keytool for Windows</a></p>
</li>
</ul>
</div>
</li>
<li>
<p>Other tools:</p>
<div class=3D"ulist">
<ul>
<li>
<p><a href=3D"https://www.ibm.com/developerworks/mydeveloperworks/groups/se=
rvice/html/communityview?communityUuid=3D6fb00498-f6ea-4f65-bf0c-adc5bd0c5f=
cc">IBM Keyman</a></p>
</li>
</ul>
</div>
</li>
<li>
<p>OpenSSL:</p>
<div class=3D"ulist">
<ul>
<li>
<p><a href=3D"http://www.openssl.org/support/faq.html">OpenSSL FAQ</a></p>
</li>
</ul>
</div>
</li>
</ul>
</div>
<div class=3D"sect4">
<h5 id=3D"openssl-vs-keytool">OpenSSL vs. Keytool</h5>
<div class=3D"paragraph">
<p>For testing, the <code>keytool</code> utility bundled with the JDK provi=
des the simplest way to generate the key and certificate you need.</p>
</div>
<div class=3D"paragraph">
<p>You can also use the OpenSSL tools to generate keys and certificates, or=
 to convert those that you have used with Apache or other servers.
Since Apache and other servers commonly use the OpenSSL tool suite to gener=
ate and manipulate keys and certificates, you might already have some keys =
and certificates created by OpenSSL, or you might also prefer the formats O=
penSSL produces.</p>
</div>
<div class=3D"paragraph">
<p>If you want the option of using the same certificate with Jetty or a web=
 server such as Apache not written in Java, you might prefer to generate yo=
ur private key and certificate with OpenSSL.</p>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"configuring-jetty-for-ssl">Configuring Jetty for SSL</h5>
<div class=3D"paragraph">
<p>To configure Jetty for SSL, complete the tasks in the following sections=
:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p><a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/index.html#generating-key-pairs-an=
d-certificates">Generating Key Pairs and Certificates</a></p>
</li>
<li>
<p><a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/index.html#requesting-trusted-cert=
ificate">Requesting a Trusted Certificate</a></p>
</li>
<li>
<p><a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/index.html#loading-keys-and-certif=
icates">Loading Keys and Certificates</a></p>
</li>
<li>
<p><a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/index.html#configuring-sslcontextf=
actory">Configuring the Jetty SslContextFactory</a></p>
</li>
</ul>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"generating-key-pairs-and-certificates">Generating Key Pairs and C=
ertificates</h5>
<div class=3D"paragraph">
<p>The simplest way to generate keys and certificates is to use the <code>k=
eytool</code> application that comes with the JDK, as it generates keys and=
 certificates directly into the keystore.
See <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.=
4.x/jetty-documentation/src/main/asciidoc/index.html#generating-key-pairs-a=
nd-certificates-JDK-keytool">Generating Keys and Certificates with JDK=E2=
=80=99s keytool</a>.</p>
</div>
<div class=3D"paragraph">
<p>If you already have keys and certificates, see <a href=3D"file:///home/t=
ian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/m=
ain/asciidoc/index.html#loading-keys-and-certificates">Loading Keys and Cer=
tificates</a> to load them into a JSSE keystore.
This section also applies if you have a renewal certificate to replace one =
that is expiring.</p>
</div>
<div class=3D"paragraph">
<p>The examples below generate only basic keys and certificates.
You should read the full manuals of the tools you are using if you want to =
specify:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>The key size</p>
</li>
<li>
<p>The certificate expiration date</p>
</li>
<li>
<p>Alternate security providers</p>
</li>
</ul>
</div>
<div class=3D"sect5">
<h6 id=3D"generating-key-pairs-and-certificates-JDK-keytool">Generating Key=
s and Certificates with JDK=E2=80=99s keytool</h6>
<div class=3D"paragraph">
<p>The following command generates a key pair and certificate directly into=
 file <code>keystore</code>:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">$ keytool -keystore keystore -alias jetty -genkey -keyalg RSA</code></pr=
e>
</div>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Note</div>
</td>
<td class=3D"content">
The DSA key algorithm certificate produces an error after loading several p=
ages.
In a browser, it displays a message "Could not establish an encrypted conne=
ction because certificate presented by localhost as an invalid signature."
The solution is to use RSA for the key algorithm.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
<div class=3D"paragraph">
<p>This command prompts for information about the certificate and for passw=
ords to protect both the keystore and the keys within it.
The only mandatory response is to provide the fully qualified host name of =
the server at the "first and last name" prompt.
For example:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">$ keytool -keystore keystore -alias jetty -genkey -keyalg RSA -sigalg SH=
A256withRSA
 Enter keystore password:  password
 What is your first and last name?
   [Unknown]:  jetty.eclipse.org
 What is the name of your organizational unit?
   [Unknown]:  Jetty
 What is the name of your organization?
   [Unknown]:  Mort Bay Consulting Pty. Ltd.
 What is the name of your City or Locality?
   [Unknown]:
 What is the name of your State or Province?
   [Unknown]:
 What is the two-letter country code for this unit?
   [Unknown]:
 Is CN=3Djetty.eclipse.org, OU=3DJetty, O=3DMort Bay Consulting Pty. Ltd.,
 L=3DUnknown, ST=3DUnknown, C=3DUnknown correct?
   [no]:  yes

 Enter key password for <jetty>
         (RETURN if same as keystore password):
 $</jetty></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>You now have the minimal requirements to run an SSL connection and could=
 proceed directly to <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty=
.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#confi=
guring-sslcontextfactory">configure an SSL connector</a>.
However, the browser <em>will not</em> trust the certificate you have gener=
ated, and prompts the user to this effect.
While what you have at this point is often sufficient for testing, most pub=
lic sites need a trusted certificate, which is demonstrated in the section =
<a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/=
jetty-documentation/src/main/asciidoc/index.html#generating-csr-from-keytoo=
l">generating a CSR with keytool</a>.</p>
</div>
<div class=3D"paragraph">
<p>If you want to use only a self signed certificate for some kind of inter=
nal admin panel add -validity &lt;days&gt; to the keytool call above, other=
wise your certificate is only valid for one month.</p>
</div>
<div class=3D"paragraph">
<p>If you are using Java 8 or later, then you may also use the SAN extensio=
n to set one or more names that the certificate applies to:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">$ keytool -keystore keystore -alias jetty -genkey -keyalg RSA -sigalg SH=
A256withRSA -ext 'SAN=3Ddns:jetty.eclipse.org,dns:*.jetty.org'
 ...</code></pre>
</div>
</div>
</div>
<div class=3D"sect5">
<h6 id=3D"generating-keys-and-certificates-openssl">Generating Keys and Cer=
tificates with OpenSSL</h6>
<div class=3D"paragraph">
<p>The following command generates a key pair in the file <code>jetty.key</=
code>:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">$ openssl genrsa -aes128 -out jetty.key</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>You might also want to use the <code>-rand</code> file argument to provi=
de an arbitrary file that helps seed the random number generator.</p>
</div>
<div class=3D"paragraph">
<p>The following command generates a certificate for the key into the file =
<code>jetty.crt</code>:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">$ openssl req -new -x509 -newkey rsa:2048 -sha256 -key jetty.key -out je=
tty.crt</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Adding -sha256 ensures to get a certificate with the now recommended SHA=
-256 signature algorithm.
For the those with heightened security in mind, add -b4096 to get a 4069 bi=
t key.</p>
</div>
<div class=3D"paragraph">
<p>The next command prompts for information about the certificate and for p=
asswords to protect both the keystore and the keys within it.
The only mandatory response is to provide the fully qualified host name of =
the server at the "Common Name" prompt. For example:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">$ openssl genrsa -aes128 -out jetty.key
Generating RSA private key, 2048 bit long modulus
..............+++
......................................................................+++
e is 65537 (0x10001)
Enter pass phrase for jetty.key:
Verifying - Enter pass phrase for jetty.key:

$ openssl req -new -x509 -newkey rsa:2048 -sha256 -key jetty.key -out jetty=
.crt
Enter pass phrase for jetty.key:
You are about to be asked to enter information that will be incorporated in=
to your certificate request.
What you are about to enter is what is called a Distinguished Name or a DN.
There are quite a few fields but you can leave some blank.
For some fields there will be a default value.
If you enter '.', the field will be left blank.

Country Name (2 letter code) [AU]:
State or Province Name (full name) [Some-State]:
Locality Name (eg, city) []:
Organization Name (eg, company) [Internet Widgits Pty Ltd]:Mort Bay Consult=
ing Pty. Ltd.
Organizational Unit Name (eg, section) []:Jetty
Common Name (e.g. server FQDN or YOUR name) []:jetty.eclipse.org
Email Address []:

$</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>You now have the minimal requirements to run an SSL connection and could=
 proceed directly to <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty=
.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#loadi=
ng-keys-and-certificates">Loading Keys and Certificates</a> to load these k=
eys and certificates into a JSSE keystore.
However the browser <em>will not</em> trust the certificate you have genera=
ted, and prompts the user to this effect.
While what you have at this point is often sufficient for testing, most pub=
lic sites need a trusted certificate, which is demonstrated in the section,=
 <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x=
/jetty-documentation/src/main/asciidoc/index.html#generating-csr-from-opens=
sl">Generating a CSR from OpenSSL</a> to obtain a certificate.</p>
</div>
</div>
<div class=3D"sect5">
<h6 id=3D"using-keys-and-certificates-from-other-sources">Using Keys and Ce=
rtificates from Other Sources</h6>
<div class=3D"paragraph">
<p>If you have keys and certificates from other sources, you can proceed di=
rectly to <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-je=
tty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#loading-keys-and=
-certificates">Loading Keys and Certificates</a>.</p>
</div>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"requesting-trusted-certificate">Requesting a Trusted Certificate<=
/h5>
<div class=3D"paragraph">
<p>The keys and certificates generated with JDK=E2=80=99s <code>keytool</co=
de> and OpenSSL are sufficient to run an SSL connector.
However the browser will not trust the certificate you have generated, and =
it will prompt the user to this effect.</p>
</div>
<div class=3D"paragraph">
<p>To obtain a certificate that most common browsers will trust, you need t=
o request a well-known certificate authority (CA) to sign your key/certific=
ate.
Such trusted CAs include: AddTrust, Entrust, GeoTrust, RSA Data Security, T=
hawte, VISA, ValiCert, Verisign, and beTRUSTed, among others.
Each CA has its own instructions (look for JSSE or OpenSSL sections), but a=
ll involve a step that generates a certificate signing request (CSR).</p>
</div>
<div class=3D"sect5">
<h6 id=3D"generating-csr-from-keytool">Generating a CSR with keytool</h6>
<div class=3D"paragraph">
<p>The following command generates the file <code>jetty.csr</code> using <c=
ode>keytool</code> for a key/cert already in the keystore:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">$ keytool -certreq -alias jetty -keystore keystore -file jetty.csr</code=
></pre>
</div>
</div>
</div>
<div class=3D"sect5">
<h6 id=3D"generating-csr-from-openssl">Generating a CSR from OpenSSL</h6>
<div class=3D"paragraph">
<p>The following command generates the file <code>jetty.csr</code> using Op=
enSSL for a key in the file <code>jetty.key</code>:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">$ openssl req -new -key jetty.key -out jetty.csr</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Notice that this command uses only the existing key from <code>jetty.key=
</code> file, and not a certificate in <code>jetty.crt</code> as generated =
with OpenSSL.
You need to enter the details for the certificate again.</p>
</div>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"loading-keys-and-certificates">Loading Keys and Certificates</h5>
<div class=3D"paragraph">
<p>Once a CA has sent you a certificate, or if you generated your own certi=
ficate without <code>keytool</code>, you need to load it into a JSSE keysto=
re.</p>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Note</div>
</td>
<td class=3D"content">
You need both the private key and the certificate in the JSSE keystore.
You should load the certificate into the keystore used to generate the CSR =
with <code>keytool</code>.
If your key pair is not already in a keystore (for example, because it has =
been generated with OpenSSL), you need to use the PKCS12 format to load bot=
h key and certificate (see <a href=3D"file:///home/tian/Downloads/b60/ebook=
/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html=
#loading-keys-and-certificates-via-pkcks12">PKCKS12 Keys &amp;Certificates<=
/a>).
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
<div class=3D"sect5">
<h6 id=3D"loading-certificates-with-keytool">Loading Certificates with keyt=
ool</h6>
<div class=3D"paragraph">
<p>You can use <code>keytool</code> to load a certificate in PEM form direc=
tly into a keystore.
The PEM format is a text encoding of certificates; it is produced by OpenSS=
L, and is returned by some CAs.
An example PEM file is:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">jetty.crt
-----BEGIN CERTIFICATE-----
MIICSDCCAfKgAwIBAgIBADANBgkqhkiG9w0BAQQFADBUMSYwJAYDVQQKEx1Nb3J0
IEJheSBDb25zdWx0aW5nIFB0eS4gTHRkLjEOMAwGA1UECxMFSmV0dHkxGjAYBgNV
BAMTEWpldHR5Lm1vcnRiYXkub3JnMB4XDTAzMDQwNjEzMTk1MFoXDTAzMDUwNjEz
MTk1MFowVDEmMCQGA1UEChMdTW9ydCBCYXkgQ29uc3VsdGluZyBQdHkuIEx0ZC4x
DjAMBgNVBAsTBUpldHR5MRowGAYDVQQDExFqZXR0eS5tb3J0YmF5Lm9yZzBcMA0G
CSqGSIb3DQEBAQUAA0sAMEgCQQC5V4oZeVdhdhHqa9L2/ZnKySPWUqqy81riNfAJ
7uALW0kEv/LtlG34dOOcVVt/PK8/bU4dlolnJx1SpiMZbKsFAgMBAAGjga4wgasw
HQYDVR0OBBYEFFV1gbB1XRvUx1UofmifQJS/MCYwMHwGA1UdIwR1MHOAFFV1gbB1
XRvUx1UofmifQJS/MCYwoVikVjBUMSYwJAYDVQQKEx1Nb3J0IEJheSBDb25zdWx0
aW5nIFB0eS4gTHRkLjEOMAwGA1UECxMFSmV0dHkxGjAYBgNVBAMTEWpldHR5Lm1v
cnRiYXkub3JnggEAMAwGA1UdEwQFMAMBAf8wDQYJKoZIhvcNAQEEBQADQQA6NkaV
OtXzP4ayzBcgK/qSCmF44jdcARmrXhiXUcXzjxsLjSJeYPJojhUdC2LQKy+p4ki8
Rcz6oCRvCGCe5kDB
-----END CERTIFICATE-----</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The following command loads a PEM encoded certificate in the <code>jetty=
.crt</code> file into a JSSE keystore:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">$ keytool -keystore keystore -import -alias jetty -file jetty.crt -trust=
cacerts</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>If the certificate you receive from the CA is not in a format that <code=
>keytool</code> understands, you can use the <code>openssl</code> command t=
o convert formats:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">$ openssl x509 -in jetty.der -inform DER -outform PEM -out jetty.crt</co=
de></pre>
</div>
</div>
</div>
<div class=3D"sect5">
<h6 id=3D"loading-keys-and-certificates-via-pkcks12">Loading Keys and Certi=
ficates via PKCS12</h6>
<div class=3D"paragraph">
<p>If you have a key and certificate in separate files, you need to combine=
 them into a PKCS12 format file to load into a new keystore.
The certificate can be one you generated yourself or one returned from a CA=
 in response to your CSR.</p>
</div>
<div class=3D"paragraph">
<p>The following OpenSSL command combines the keys in <code>jetty.key</code=
> and the certificate in the <code>jetty.crt</code> file into the <code>jet=
ty.pkcs12</code> file:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">$ openssl pkcs12 -inkey jetty.key -in jetty.crt -export -out jetty.pkcs1=
2</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>If you have a chain of certificates, because your CA is an intermediary,=
 build the PKCS12 file as follows:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">$ cat example.crt intermediate.crt [intermediate2.crt] ... rootCA.crt &g=
t; cert-chain.txt
$ openssl pkcs12 -export -inkey example.key -in cert-chain.txt -out example=
.pkcs12</code></pre>
</div>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Note</div>
</td>
<td class=3D"content">
The order of certificates must be from server to rootCA, as per <a href=3D"=
https://www.ietf.org/rfc/rfc2246.txt">RFC2246 section 7.4.2.</a>
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
<div class=3D"paragraph">
<p>OpenSSL asks for an <em>export password</em>.
A non-empty password is required to make the next step work.
Load the resulting PKCS12 file into a JSSE keystore with <code>keytool</cod=
e>:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">$ keytool -importkeystore -srckeystore jetty.pkcs12 -srcstoretype PKCS12=
 -destkeystore keystore</code></pre>
</div>
</div>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"renewing-certificates">Renewing Certificates</h5>
<div class=3D"paragraph">
<p>If you are updating your configuration to use a newer certificate, as wh=
en the old one is expiring, just load the newer certificate as described in=
 the section, <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.projec=
t-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#loading-keys=
-and-certificates">Loading Keys and Certificates</a>.
If you imported the key and certificate originally using the PKCS12 method,=
 use an alias of "1" rather than "jetty", because that is the alias the PKC=
S12 process enters into the keystore.</p>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_configuring_ssl_in_jetty_distribution">Configuring SSL in Jetty =
Distribution</h4>
<div class=3D"paragraph">
<p>For those of you using the Jetty Distribution, enabling SSL support is a=
s easy as activating the <code>ssl</code> module.</p>
</div>
<div class=3D"paragraph">
<p>An example of this setup:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-plain" data-lang=3D"plain"=
>$ cd /path/to/mybase
$ java -jar /path/to/jetty-dist/start.jar --add-to-start=3Dssl
INFO : server          initialised (transitively) in ${jetty.base}/start.d/=
server.ini
INFO : ssl             initialised in ${jetty.base}/start.d/ssl.ini
INFO : Base directory was modified
$ tree
.
=E2=94=9C=E2=94=80=E2=94=80 etc
=E2=94=82&nbsp;&nbsp; =E2=94=94=E2=94=80=E2=94=80 keystore
=E2=94=94=E2=94=80=E2=94=80 start.d
    =E2=94=9C=E2=94=80=E2=94=80 server.ini
    =E2=94=94=E2=94=80=E2=94=80 ssl.ini</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>When you open <code>start.d/ssl.ini</code>, you will see many commented =
properties ready for you to configure the <code>SslContextFactory</code> ba=
sics.</p>
</div>
<div class=3D"paragraph">
<p>To highlight some of the more commonly used properties:</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">jetty.ssl.host</dt>
<dd>
<p>Configures which interfaces the SSL/TLS Connector should listen on.</p>
</dd>
<dt class=3D"hdlist1">jetty.ssl.port</dt>
<dd>
<p>Configures which port the SSL/TLS Connector should listen on.</p>
</dd>
<dt class=3D"hdlist1">jetty.httpConfig.securePort</dt>
<dd>
<p>If a webapp needs to redirect to a secure version of the same resource, =
then this is the port reported back on the response <code>location</code> l=
ine (having this be separate is useful if you have something sitting in fro=
nt of Jetty, such as a Load Balancer or proxy).</p>
</dd>
<dt class=3D"hdlist1">jetty.sslContext.keyStorePath</dt>
<dd>
<p>Sets the location of the <code>keystore</code> that you configured with =
your certificates.</p>
</dd>
<dt class=3D"hdlist1">jetty.sslContext.keyStorePassword</dt>
<dd>
<p>Sets the Password for the <code>keystore</code>.</p>
</dd>
</dl>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"two-way-authentication">Two Way Authentication</h4>
<div class=3D"paragraph">
<p>To enable two-way authentication, you first need to activate the ssl mod=
ule as shown in the previous section.</p>
</div>
<div class=3D"paragraph">
<p>First you need load the <code>ssl</code> module and <code>https</code> m=
odule.</p>
</div>
<div class=3D"listingblock">
<div class=3D"title">$JETTY_BASE/start.d/ssl.ini</div>
<div class=3D"content">
<pre class=3D"highlight nowrap"><code class=3D"language-ini" data-lang=3D"i=
ni"># Module: ssl
--module=3Dssl

jetty.ssl.host=3D0.0.0.0
jetty.ssl.port=3D8583
jetty.sslContext.keyStorePath=3Detc/keystore
jetty.sslContext.trustStorePath=3Detc/keystore
jetty.sslContext.keyStorePassword=3DOBF:
jetty.sslContext.keyManagerPassword=3DOBF:
jetty.sslContext.trustStorePassword=3DOBF:
jetty.sslContext.trustStoreType=3DJKS
# enable two way authentication
jetty.sslContext.needClientAuth=3Dtrue</code></pre>
</div>
</div>
<div class=3D"listingblock">
<div class=3D"title">$JETTY_BASE/start.d/https.ini</div>
<div class=3D"content">
<pre class=3D"highlight nowrap"><code class=3D"language-ini" data-lang=3D"i=
ni"># Module: https
--module=3Dhttps</code></pre>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"layout-of-keystore-and-truststore">Layout of <code>keystore</code=
> and <code>truststore</code></h5>
<div class=3D"paragraph">
<p><code>keystore</code> only contains the server=E2=80=99s private key and=
 certificate.</p>
</div>
<div id=3D"img-certificate-chain" class=3D"imageblock">
<div class=3D"content">
<img src=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x=
/jetty-documentation/src/main/asciidoc/images/certificate-chain.png" alt=3D=
"Certificate chain">
</div>
<div class=3D"title">Figure 1. Certificate chain</div>
</div>
<div class=3D"literalblock">
<div class=3D"title">The structure of KeyStore file</div>
<div class=3D"content">
<pre>=E2=94=9C=E2=94=80=E2=94=80 PrivateKeyEntry
=E2=94=82&nbsp;&nbsp; =E2=94=9C=E2=94=80=E2=94=80 PrivateKey
=E2=94=82&nbsp;&nbsp; =E2=94=9C=E2=94=80=E2=94=80 Certificate chain
=E2=94=82&nbsp;&nbsp; =E2=94=82&nbsp;&nbsp; =E2=94=9C=E2=94=80=E2=94=80 Ser=
ver certificate (end entity)
=E2=94=82&nbsp;&nbsp; =E2=94=82&nbsp;&nbsp; =E2=94=9C=E2=94=80=E2=94=80 Int=
ermediary CA certificate
=E2=94=82&nbsp;&nbsp; =E2=94=82&nbsp;&nbsp; =E2=94=94=E2=94=80=E2=94=80 Roo=
t CA certificate
=E2=94=9C=E2=94=80=E2=94=80 TrustedCertEntry
=E2=94=82&nbsp;&nbsp; =E2=94=94=E2=94=80=E2=94=80 Intermediary CA certifica=
te
=E2=94=94=E2=94=80=E2=94=80 TrustedCertEntry
 &nbsp;&nbsp; =E2=94=94=E2=94=80=E2=94=80 Root CA certificate</pre>
</div>
</div>
<div class=3D"admonitionblock tip">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Tip</div>
</td>
<td class=3D"content">
<div class=3D"paragraph">
<p>=E2=94=94=E2=94=80=E2=94=80 PrivateKeyEntry<br>
 &nbsp;&nbsp; =E2=94=94=E2=94=80=E2=94=80 Certificate chain<br>
 &nbsp;&nbsp;  &nbsp;&nbsp; =E2=94=9C=E2=94=80=E2=94=80 Intermediary CA cer=
tificate<br>
 &nbsp;&nbsp;  &nbsp;&nbsp; =E2=94=94=E2=94=80=E2=94=80 Root CA certificate=
<br>
are optional</p>
</div>
</td>
</tr>
</tbody></table>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight nowrap"><code class=3D"language-plain" data-lang=3D=
"plain">$ cd $JETTY_BASE
$ keytool -list -keystore etc/keystore -storetype jks -storepass '' -v

Keystore type: JKS
Keystore provider: SUN

Your keystore contains 3 entries

Alias name: *.example.com
Creation date: Sep 20, 2016
Entry type: PrivateKeyEntry
Certificate chain length: 3
Certificate[1]:
Owner: CN=3D*.example.com, OU=3DWeb Servers, O=3D"Example.com Co.,Ltd.", C=
=3DCN
Issuer: CN=3D"Example.com Co.,Ltd. ETP CA", OU=3DCA Center, O=3D"Example.co=
m Co.,Ltd.", C=3DCN
Serial number: b63af619ff0b4c368735113ba5db8997
Valid from: Mon Sep 12 15:09:49 CST 2016 until: Wed Sep 12 15:09:49 CST 201=
8
Certificate fingerprints:
	 MD5:  D9:26:CC:27:77:9D:26:FE:67:4C:BE:FF:E3:95:1E:97
	 SHA1: AF:DC:D2:65:6A:33:42:E3:81:9E:4D:19:0D:22:20:C7:6F:2F:11:D0
	 SHA256: 43:E8:21:5D:C6:FB:A0:7D:5D:7B:9C:8B:8D:E9:4B:52:BF:50:0D:90:4F:61=
:C2:18:9E:89:AA:4C:C2:93:BD:32
	 Signature algorithm name: SHA256withRSA
	 Version: 3

Extensions:

#1: ObjectId: 2.5.29.35 Criticality=3Dfalse
AuthorityKeyIdentifier [
KeyIdentifier [
0000: 44 9B AD 31 E7 FE CA D5   5A 8E 17 55 F9 F0 1D 6B  D..1....Z..U...k
0010: F5 A5 8F C1                                        ....
]
]

#2: ObjectId: 2.5.29.19 Criticality=3Dtrue
BasicConstraints:[
  CA:false
  PathLen: undefined
]

#3: ObjectId: 2.5.29.37 Criticality=3Dtrue
ExtendedKeyUsages [
  serverAuth
  clientAuth
]

#4: ObjectId: 2.5.29.15 Criticality=3Dtrue
KeyUsage [
  DigitalSignature
  Key_Encipherment
  Data_Encipherment
]

#5: ObjectId: 2.5.29.14 Criticality=3Dfalse
SubjectKeyIdentifier [
KeyIdentifier [
0000: 7D 26 36 73 61 5E 08 94   AD 25 13 46 DB DB 95 25  .&amp;6sa^...%.F..=
.%
0010: BF 82 5A CA                                        ..Z.
]
]

Certificate[2]:
Owner: CN=3D"Example.com Co.,Ltd. ETP CA", OU=3DCA Center, O=3D"Example.com=
 Co.,Ltd.", C=3DCN
Issuer: CN=3D"Example.com Co.,Ltd. Root CA", OU=3DCA Center, O=3D"Example.c=
om Co.,Ltd.", C=3DCN
Serial number: f6e7b86f6fdb467f9498fb599310198f
Valid from: Wed Nov 18 00:00:00 CST 2015 until: Sun Nov 18 00:00:00 CST 203=
5
Certificate fingerprints:
	 MD5:  ED:A3:91:57:D8:B8:6E:B1:01:58:55:5C:33:14:F5:99
	 SHA1: D9:A4:93:9D:A6:F8:A3:F9:FD:85:51:E2:C5:2E:0B:EE:80:E7:D0:22
	 SHA256: BF:54:7A:F6:CA:0C:FA:EF:93:B6:6B:6E:2E:D7:44:A8:40:00:EC:69:3A:2C=
:CC:9A:F7:FE:8E:6F:C0:FA:22:38
	 Signature algorithm name: SHA256withRSA
	 Version: 3

Extensions:

#1: ObjectId: 2.5.29.35 Criticality=3Dfalse
AuthorityKeyIdentifier [
KeyIdentifier [
0000: A6 BD 5F B3 E8 7D 74 3D   20 44 66 1A 16 3B 1B DF  .._...t=3D Df..;..
0010: E6 E6 04 46                                        ...F
]
]

#2: ObjectId: 2.5.29.19 Criticality=3Dtrue
BasicConstraints:[
  CA:true
  PathLen:2147483647
]

#3: ObjectId: 2.5.29.15 Criticality=3Dtrue
KeyUsage [
  Key_CertSign
  Crl_Sign
]

#4: ObjectId: 2.5.29.14 Criticality=3Dfalse
SubjectKeyIdentifier [
KeyIdentifier [
0000: 44 9B AD 31 E7 FE CA D5   5A 8E 17 55 F9 F0 1D 6B  D..1....Z..U...k
0010: F5 A5 8F C1                                        ....
]
]

Certificate[3]:
Owner: CN=3D"Example.com Co.,Ltd. Root CA", OU=3DCA Center, O=3D"Example.co=
m Co.,Ltd.", C=3DCN
Issuer: CN=3D"Example.com Co.,Ltd. Root CA", OU=3DCA Center, O=3D"Example.c=
om Co.,Ltd.", C=3DCN
Serial number: f0a45bc9972c458cbeae3f723055f1ac
Valid from: Wed Nov 18 00:00:00 CST 2015 until: Sun Nov 18 00:00:00 CST 211=
4
Certificate fingerprints:
	 MD5:  50:61:62:22:71:60:F7:69:2E:27:42:6B:62:31:82:79
	 SHA1: 7A:6D:A6:48:B1:43:03:3B:EA:A0:29:2F:19:65:9C:9B:0E:B1:03:1A
	 SHA256: 05:3B:9C:5B:8E:18:61:61:D1:9C:AA:0E:8C:B1:EA:44:C2:6E:67:5D:96:30=
:EC:8C:F6:6F:E1:EC:AD:00:60:F1
	 Signature algorithm name: SHA256withRSA
	 Version: 3

Extensions:

#1: ObjectId: 2.5.29.35 Criticality=3Dfalse
AuthorityKeyIdentifier [
KeyIdentifier [
0000: A6 BD 5F B3 E8 7D 74 3D   20 44 66 1A 16 3B 1B DF  .._...t=3D Df..;..
0010: E6 E6 04 46                                        ...F
]
]

#2: ObjectId: 2.5.29.19 Criticality=3Dtrue
BasicConstraints:[
  CA:true
  PathLen:2147483647
]

#3: ObjectId: 2.5.29.15 Criticality=3Dtrue
KeyUsage [
  Key_CertSign
  Crl_Sign
]

#4: ObjectId: 2.5.29.14 Criticality=3Dfalse
SubjectKeyIdentifier [
KeyIdentifier [
0000: A6 BD 5F B3 E8 7D 74 3D   20 44 66 1A 16 3B 1B DF  .._...t=3D Df..;..
0010: E6 E6 04 46                                        ...F
]
]



*******************************************
*******************************************


Alias name: example.com co.,ltd. etp ca
Creation date: Sep 20, 2016
Entry type: trustedCertEntry

Owner: CN=3D"Example.com Co.,Ltd. ETP CA", OU=3DCA Center, O=3D"Example.com=
 Co.,Ltd.", C=3DCN
Issuer: CN=3D"Example.com Co.,Ltd. Root CA", OU=3DCA Center, O=3D"Example.c=
om Co.,Ltd.", C=3DCN
Serial number: f6e7b86f6fdb467f9498fb599310198f
Valid from: Wed Nov 18 00:00:00 CST 2015 until: Sun Nov 18 00:00:00 CST 203=
5
Certificate fingerprints:
	 MD5:  ED:A3:91:57:D8:B8:6E:B1:01:58:55:5C:33:14:F5:99
	 SHA1: D9:A4:93:9D:A6:F8:A3:F9:FD:85:51:E2:C5:2E:0B:EE:80:E7:D0:22
	 SHA256: BF:54:7A:F6:CA:0C:FA:EF:93:B6:6B:6E:2E:D7:44:A8:40:00:EC:69:3A:2C=
:CC:9A:F7:FE:8E:6F:C0:FA:22:38
	 Signature algorithm name: SHA256withRSA
	 Version: 3

Extensions:

#1: ObjectId: 2.5.29.35 Criticality=3Dfalse
AuthorityKeyIdentifier [
KeyIdentifier [
0000: A6 BD 5F B3 E8 7D 74 3D   20 44 66 1A 16 3B 1B DF  .._...t=3D Df..;..
0010: E6 E6 04 46                                        ...F
]
]

#2: ObjectId: 2.5.29.19 Criticality=3Dtrue
BasicConstraints:[
  CA:true
  PathLen:2147483647
]

#3: ObjectId: 2.5.29.15 Criticality=3Dtrue
KeyUsage [
  Key_CertSign
  Crl_Sign
]

#4: ObjectId: 2.5.29.14 Criticality=3Dfalse
SubjectKeyIdentifier [
KeyIdentifier [
0000: 44 9B AD 31 E7 FE CA D5   5A 8E 17 55 F9 F0 1D 6B  D..1....Z..U...k
0010: F5 A5 8F C1                                        ....
]
]



*******************************************
*******************************************


Alias name: example.com co.,ltd. root ca
Creation date: Sep 20, 2016
Entry type: trustedCertEntry

Owner: CN=3D"Example.com Co.,Ltd. Root CA", OU=3DCA Center, O=3D"Example.co=
m Co.,Ltd.", C=3DCN
Issuer: CN=3D"Example.com Co.,Ltd. Root CA", OU=3DCA Center, O=3D"Example.c=
om Co.,Ltd.", C=3DCN
Serial number: f0a45bc9972c458cbeae3f723055f1ac
Valid from: Wed Nov 18 00:00:00 CST 2015 until: Sun Nov 18 00:00:00 CST 211=
4
Certificate fingerprints:
	 MD5:  50:61:62:22:71:60:F7:69:2E:27:42:6B:62:31:82:79
	 SHA1: 7A:6D:A6:48:B1:43:03:3B:EA:A0:29:2F:19:65:9C:9B:0E:B1:03:1A
	 SHA256: 05:3B:9C:5B:8E:18:61:61:D1:9C:AA:0E:8C:B1:EA:44:C2:6E:67:5D:96:30=
:EC:8C:F6:6F:E1:EC:AD:00:60:F1
	 Signature algorithm name: SHA256withRSA
	 Version: 3

Extensions:

#1: ObjectId: 2.5.29.35 Criticality=3Dfalse
AuthorityKeyIdentifier [
KeyIdentifier [
0000: A6 BD 5F B3 E8 7D 74 3D   20 44 66 1A 16 3B 1B DF  .._...t=3D Df..;..
0010: E6 E6 04 46                                        ...F
]
]

#2: ObjectId: 2.5.29.19 Criticality=3Dtrue
BasicConstraints:[
  CA:true
  PathLen:2147483647
]

#3: ObjectId: 2.5.29.15 Criticality=3Dtrue
KeyUsage [
  Key_CertSign
  Crl_Sign
]

#4: ObjectId: 2.5.29.14 Criticality=3Dfalse
SubjectKeyIdentifier [
KeyIdentifier [
0000: A6 BD 5F B3 E8 7D 74 3D   20 44 66 1A 16 3B 1B DF  .._...t=3D Df..;..
0010: E6 E6 04 46                                        ...F
]
]



*******************************************
*******************************************</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>In addition, you can split <code>$JETTY/etc/keystore</code> as two files=
.
One is <code>$JETTY/etc/keystore</code> which only contains the server=E2=
=80=99s private key and certificate,
the other is <code>$JETTY/etc/truststore</code> which contains intermediary=
 CA and root CA.</p>
</div>
<div class=3D"literalblock">
<div class=3D"title">The structure of <code>$JETTY/etc/keystore</code></div=
>
<div class=3D"content">
<pre>=E2=94=94=E2=94=80=E2=94=80 PrivateKeyEntry
 &nbsp;&nbsp; =E2=94=9C=E2=94=80=E2=94=80 PrivateKey
 &nbsp;&nbsp; =E2=94=94=E2=94=80=E2=94=80 Certificate chain
 &nbsp;&nbsp;  &nbsp;&nbsp; =E2=94=94=E2=94=80=E2=94=80 Server certificate =
(end entity)</pre>
</div>
</div>
<div class=3D"literalblock">
<div class=3D"title">The structure of <code>$JETTY/etc/truststore</code></d=
iv>
<div class=3D"content">
<pre>=E2=94=9C=E2=94=80=E2=94=80 TrustedCertEntry
=E2=94=82&nbsp;&nbsp; =E2=94=94=E2=94=80=E2=94=80 Intermediary CA certifica=
te
=E2=94=94=E2=94=80=E2=94=80 TrustedCertEntry
 &nbsp;&nbsp; =E2=94=94=E2=94=80=E2=94=80 Root CA certificate</pre>
</div>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"configuring-sslcontextfactory">Configuring the Jetty SslContextFa=
ctory</h4>
<div class=3D"paragraph">
<p>The generated SSL certificates from above are held in the key store are =
configured in an instance of <a href=3D"file:///home/tian/Downloads/b60/ebo=
ok/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJDURL=
%7D/org/eclipse/jetty/util/ssl/SslContextFactory.html">SslContextFactory</a=
> object.</p>
</div>
<div class=3D"paragraph">
<p>The <code>SslContextFactory</code> is responsible for:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>Creating the Java <code>SslEngine</code> used by Jetty=E2=80=99s Connect=
ors and Jetty=E2=80=99s Clients (HTTP/1, HTTP/2, and WebSocket).</p>
</li>
<li>
<p>Managing Keystore Access</p>
</li>
<li>
<p>Managing Truststore Access</p>
</li>
<li>
<p>Managing Protocol selection via Excludes / Includes list</p>
</li>
<li>
<p>Managing Cipher Suite selection via Excludes / Includes list</p>
</li>
<li>
<p>Managing order of Ciphers offered (important for TLS/1.2 and HTTP/2 supp=
ort)</p>
</li>
<li>
<p>SSL Session Caching options</p>
</li>
<li>
<p>Certificate <a href=3D"https://en.wikipedia.org/wiki/Revocation_list">Re=
vocation Lists</a> and Distribution Points (CRLDP)</p>
</li>
<li>
<p><a href=3D"https://en.wikipedia.org/wiki/Online_Certificate_Status_Proto=
col">OCSP</a> Support</p>
</li>
<li>
<p>Client Authentication Support</p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>For Jetty Connectors, the configured <code>SslContextFactory</code> is i=
njected into a specific ServerConnector <code>SslConnectionFactory</code>.<=
/p>
</div>
<div class=3D"paragraph">
<p>For Jetty Clients, the various constructors support using a configured <=
code>SslContextFactory</code>.</p>
</div>
<div class=3D"paragraph">
<p>While the <code>SslContextFactory</code> can operate without a keystore =
(this mode is most suitable for the various Jetty Clients) it is best pract=
ice to at least configure the keystore being used.</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">setKeyStorePath</dt>
<dd>
<p>The configured keystore to use for all SSL/TLS in configured Jetty Conne=
ctor (or Client).</p>
</dd>
</dl>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Note</div>
</td>
<td class=3D"content">
As a keystore is vital security information, it can be desirable to locate =
the file in a directory with <strong>very</strong> restricted access.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">setKeyStorePassword</dt>
<dd>
<p>The keystore password may be set here in plain text, or as some measure =
of protection from casual observation, it may be obfuscated using the <a hr=
ef=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty=
-documentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/util/securit=
y/Password.html">Password</a> class.</p>
</dd>
<dt class=3D"hdlist1">setTrustStorePath</dt>
<dd>
<p>This is used if validating client certificates and is typically set to t=
he same path as the keystore.</p>
</dd>
<dt class=3D"hdlist1">setKeyManagerPassword</dt>
<dd>
<p>The password that is passed to the <code>KeyManagerFactory.init(...)</co=
de>.
If there is no <code>keymanagerpassword</code>, then the <code>keystorepass=
word</code> is used instead.
If there is no <code>trustmanager</code> set, then the keystore is used as =
the trust store and the <code>keystorepassword</code> is used as the trusts=
tore password.</p>
</dd>
<dt class=3D"hdlist1">setExcludeCipherSuites / setIncludeCipherSuites</dt>
<dd>
<p>This allows for the customization of the selected Cipher Suites that wil=
l be used by SSL/TLS.</p>
</dd>
<dt class=3D"hdlist1">setExcludeProtocols / setIncludeProtocols</dt>
<dd>
<p>This allows for the customization of the selected Protocols that will be=
 used by SSL/TLS.</p>
</dd>
</dl>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Note</div>
</td>
<td class=3D"content">
When working with Includes / Excludes, it is important to know that <strong=
>Excludes will always win.</strong>
The selection process is to process the JVM list of available Cipher Suites=
 or Protocols against the include list, then remove the excluded ones.
Be aware that each Include / Exclude list has a Set method (replace the lis=
t) or Add method (append the list).
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock caution">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Caution</div>
</td>
<td class=3D"content">
The keystore and truststore passwords may also be set using the system prop=
erties: <code>org.eclipse.jetty.ssl.keypassword</code> <code>org.eclipse.je=
tty.ssl.password</code>.
This is <em>not</em> a recommended usage.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_configuring_sni">Configuring SNI</h4>
<div class=3D"paragraph">
<p>From Java 8, the JVM contains support for the <a href=3D"http://en.wikip=
edia.org/wiki/Server_Name_Indication">Server Name Indicator (SNI)</a> exten=
sion, which allows a SSL connection handshake to indicate one or more DNS n=
ames that it applies to.
To support this, the <code>ExtendedSslContextFactory</code> is used that wi=
ll look for multiple X509 certificates within the keystore, each of which m=
ay have multiple DNS names (including wildcards) associated with the <a hre=
f=3D"http://en.wikipedia.org/wiki/SubjectAltName">Subject Alternate Name</a=
> extension.
When using the <code>ExtendedSSlContextFactory</code>, the correct certific=
ate is automatically selected if the SNI extension is present in the handsh=
ake.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"configuring-sslcontextfactory-cipherSuites">Disabling/Enabling Sp=
ecific Cipher Suites</h4>
<div class=3D"paragraph">
<p>As an example, to avoid the BEAST attack it is necessary to configure a =
specific set of cipher suites. This can either be done via <a href=3D"file:=
///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentat=
ion/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/util/ssl/SslContextFact=
ory.html#setIncludeCipherSuites(java.lang.String=E2=80=A6=E2=80=8B)">SslCon=
text.setIncludeCipherSuites(java.lang.String=E2=80=A6=E2=80=8B)</a> or via<=
a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/j=
etty-documentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/util/ssl=
/SslContextFactory.html#setExcludeCipherSuites(java.lang.String=E2=80=A6=E2=
=80=8B)">SslContext.setExcludeCipherSuites(java.lang.String=E2=80=A6=E2=80=
=8B)</a>.</p>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Note</div>
</td>
<td class=3D"content">
It=E2=80=99s crucial that you use the <em>exact</em> names of the cipher su=
ites as used/known by the JDK.
You can get them by obtaining an instance of SSLEngine and call <code>getSu=
pportedCipherSuites()</code>.
Tools like ssllabs.com might report slightly different names which will be =
ignored.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Note</div>
</td>
<td class=3D"content">
It=E2=80=99s recommended to install the Java Cryptography Extension (JCE) U=
nlimited Strength policy files in your JRE to get full strength ciphers suc=
h as AES-256.
The files can be found on the <a href=3D"http://www.oracle.com/technetwork/=
java/javase/downloads/index.html">Java download page</a>.
Just overwrite the two present JAR files in <code>&lt;JRE_HOME&gt;/lib/secu=
rity/</code>.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
<div class=3D"paragraph">
<p>Both <code>setIncludeCipherSuites</code> and <code>setExcludeCipherSuite=
s</code> can be fed by the exact cipher suite name used in the JDK or by us=
ing regular expressions.</p>
</div>
<div class=3D"paragraph">
<p>If you have a need to adjust the Includes or Excludes, then this is best=
 done with a custom blow-in XML that configures the <code>SslContextFactory=
</code> to suit your needs.</p>
</div>
<div class=3D"paragraph">
<p>To do this, first create a new <code>${jetty.base}/etc/tweak-ssl.xml</co=
de> file (this can be any name, just avoid prefixing it with "jetty-").</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml">
<!-- Tweak SsslContextFactory Includes / Excludes -->
<configure id=3D"sslContextFactory" class=3D"org.eclipse.jetty.util.ssl.Ssl=
ContextFactory">
  <!-- Mitigate SLOTH Attack -->
  <call name=3D"addExcludeCipherSuites">
    <arg>
      <array type=3D"String">
        <item>.*_RSA_.*SHA1$</item>
        <item>.*_RSA_.*SHA$</item>
        <item>.*_RSA_.*MD5$</item>
      </array>
    </arg>
  </call>
</configure></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>This new XML will configure the id <code>sslContextFactory</code> furthe=
r (this id is first created by the <code>ssl</code> module and its associat=
ed <code>${jetty.home}/etc/jetty-ssl-context.xml</code>).
You can do anything you want with the <code>SslContextFactory</code> in use=
 by the Jetty Distribution from this tweaked XML.</p>
</div>
<div class=3D"paragraph">
<p>To make sure that your <code>${jetty.base}</code> uses this new XML, add=
 it to the end of your <code>${jetty.base}/start.ini</code> or <code>${jett=
y.base}/start.d/server.ini</code>.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-plain" data-lang=3D"plain"=
>$ cd /path/to/mybase
$ ls -l
drwxrwxr-x.  2 user group  4096 Feb  2 11:47 etc/
-rw-rw-r--.  1 user group  4259 Feb  2 11:47 start.ini
$ tail start.ini
# Module: https
--module=3Dhttps
etc/tweak-ssl.xml
$</code></pre>
</div>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Note</div>
</td>
<td class=3D"content">
The default <code>SslContextFactory</code> implementation applies the lates=
t SSL/TLS recommendations surrounding vulnerabilities in SSL/TLS.
Check the release notes (the <code>VERSION.txt</code> found in the root of =
the Jetty Distribution, or the <a href=3D"http://search.maven.org/#search%7=
Cgav%7C1%7Cg%3A%22org.eclipse.jetty%22%20AND%20a%3A%22jetty-project%22">alt=
ernate (classified <em>version</em>) artifacts for the <code>jetty-project<=
/code> component</a>on Maven Central) for updates.
The Java JVM is also applying exclusions at the JVM level and as such if yo=
u have a need to enable something that is generally accepted by the industr=
y as being insecure or vulnerable you will likely have to enable it in BOTH=
 the Java JVM and the Jetty configuration.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock tip">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Tip</div>
</td>
<td class=3D"content">
You can enable the <code>org.eclipse.jetty.util.ssl</code> named logger at =
DEBUG level to see what the list of selected Protocols and Cipher suites ar=
e at startup of Jetty.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
<div class=3D"paragraph">
<p>Additional Include / Exclude examples:</p>
</div>
<div class=3D"paragraph">
<p><strong>Example</strong>: Include all ciphers which support <a href=3D"h=
ttps://en.wikipedia.org/wiki/Forward_secrecy">Forward Secrecy</a> using reg=
ex:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml">  <=
!-- Enable Forward Secrecy Ciphers.
       Note: this replaces the default Include Cipher list -->
  <set name=3D"IncludeCipherSuites">
    <array type=3D"String">
      <item>TLS_DHE_RSA.*</item>
      <item>TLS_ECDHE.*</item>
    </array>
  </set></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p><strong>Example</strong>: Exclude all old, insecure or anonymous cipher =
suites:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml">  <=
!-- Eliminate Old / Insecure / Anonymous Ciphers -->
  <call name=3D"addExcludeCipherSuites">
    <arg>
      <array type=3D"String">
        <item>.*NULL.*</item>
        <item>.*RC4.*</item>
        <item>.*MD5.*</item>
        <item>.*DES.*</item>
        <item>.*DSS.*</item>
      </array>
    </arg>
  </call></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p><strong>Example</strong>: Since 2014 SSLv3 is considered insecure and sh=
ould be disabled.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml">  <=
!-- Eliminate Insecure Protocols -->
  <call name=3D"addExcludeProtocols">
    <arg>
     <array type=3D"java.lang.String">
       <item>SSL</item>
       <item>SSLv2</item>
       <item>SSLv2Hello</item>
       <item>SSLv3</item>
     </array>
    </arg>
  </call></code></pre>
</div>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Note</div>
</td>
<td class=3D"content">
Note that disabling SSLv3 prevents very old browsers like Internet Explorer=
 6 on Windows XP from connecting.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
<div class=3D"paragraph">
<p><strong>Example</strong>: TLS renegotiation could be disabled too to pre=
vent an attack based on this feature.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml">  <=
set name=3D"renegotiationAllowed">FALSE</set></code></pre>
</div>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"setting-port80-access">Setting Port 80 Access for a Non-Root User=
</h3>
<div class=3D"paragraph">
<p>On Unix-based systems, port 80 is protected; typically only the superuse=
r <code>root</code> can open it. For security reasons, it is not desirable =
to run the server as <code>root</code>.
This page presents several options to access port 80 as a non-root user, in=
cluding using <code>ipchains</code>, <code>iptables</code>, Jetty=E2=80=99s=
 SetUID feature, <code>xinetd</code>, and the Solaris 10 User Rights Manage=
ment Framework.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"using-ipchains">Using ipchains</h4>
<div class=3D"paragraph">
<p>On some Linux systems you can use the <em>ipchains REDIRECT</em> mechani=
sm to redirect from one port to another inside the kernel (if <code>ipchain=
s</code> is not available, then <code>iptables</code> usually is):</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n"># /sbin/ipchains -I input --proto TCP --dport 80 -j REDIRECT 8080</code>=
</pre>
</div>
</div>
<div class=3D"paragraph">
<p>This command instructs the system as follows: "Insert into the kernel=E2=
=80=99s packet filtering the following as the first rule to check on incomi=
ng packets: if the protocol is TCP and the destination port is 80, redirect=
 the packet to port 8080".
Be aware that your kernel must be compiled with support for <code>ipchains<=
/code> (virtually all stock kernels are).
You must also have the <code>ipchains</code> command-line utility installed=
.
You can run this command at any time, preferably just once, since it insert=
s another copy of the rule every time you run it.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"using-iptables">Using iptables</h4>
<div class=3D"paragraph">
<p>On many Linux systems you can use the <code>iptables</code> REDIRECT mec=
hanism to redirect from one port to another inside the kernel (if <code>ipt=
ables</code> is not available, then usually <code>ipchains</code> is).</p>
</div>
<div class=3D"paragraph">
<p>You need to add something like the following to the startup scripts or y=
our firewall rules:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n"># /sbin/iptables -t nat -I PREROUTING -p tcp --dport 80 -j REDIRECT --to=
-port 8080</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The underlying model of <code>iptables</code> is different from <code>ip=
chains</code>, so the forwarding normally happens only to packets originati=
ng outside of the server itself.
You also need to allow incoming packets to port 8080 if you use <code>iptab=
les</code> as a local firewall.</p>
</div>
<div class=3D"paragraph">
<p>Be careful to place rules like this one early in your <em>input</em> cha=
in.
Such rules must precede any rule that accepts the packet, otherwise the red=
irection won=E2=80=99t occur.
You can insert as many rules as required if your server needs to listen on =
multiple ports, as for HTTPS.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"configuring-jetty-setuid-feature">Configuring Jetty=E2=80=99s Set=
UID Feature</h4>
<div class=3D"paragraph">
<p><a href=3D"http://en.wikipedia.org/wiki/Setuid">SetUID</a> is a techniqu=
e that uses Unix-like file system access rights to allow users to run an ex=
ecutable that would otherwise require higher privileges.</p>
</div>
<div class=3D"paragraph">
<p>Jetty=E2=80=99s <code>SetUID</code> module allows you to run Jetty as a =
normal user even when you need to run Jetty on port 80 or 443.</p>
</div>
<div class=3D"paragraph">
<p>To use it with the Jetty distribution:</p>
</div>
<div class=3D"olist arabic">
<ol class=3D"arabic">
<li>
<p>Ensure that you have the <code>http.mod</code> (and <a href=3D"file:///h=
ome/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/=
src/main/asciidoc/index.html#quickstart-starting-https">https.mod</a> if yo=
u are using SSL) <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.pro=
ject-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#startup-m=
odules">modules enabled</a> for the <a href=3D"file:///home/tian/Downloads/=
b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/i=
ndex.html#creating-jetty-base">base</a> you are using.
The <code>http.mod</code> is enabled by default in the distribution, while =
the <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.=
4.x/jetty-documentation/src/main/asciidoc/index.html#quickstart-starting-ht=
tps">https.mod</a> is only enabled in the <a href=3D"file:///home/tian/Down=
loads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asci=
idoc/index.html#demo-webapps-base">demo-base</a> directory.</p>
</li>
<li>
<p>Ensure that you have <a href=3D"file:///home/tian/Downloads/b60/ebook/je=
tty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#qu=
ickstart-changing-jetty-port">changed the http port</a> to 80 (and <a href=
=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-d=
ocumentation/src/main/asciidoc/index.html#quickstart-changing-https-port">c=
hanged the https port</a> to 443 if you are using SSL).</p>
</li>
<li>
<p>Enable the <code>setuid.mod</code> module:</p>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n"># java -jar start.jar --add-to-start=3Dsetuid</code></pre>
</div>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Note</div>
</td>
<td class=3D"content">
The --add-to-start command will enable the setuid module for this and all s=
ubsequent executions of jetty.
There are other ways to enable the module, such as for a single execution.
For more information on the alternatives see the section on <a href=3D"file=
:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documenta=
tion/src/main/asciidoc/index.html#startup-modules">Managing Startup Modules=
</a>.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
</li>
<li>
<p>Edit the configuration for the <code>setuid</code> module to substitute =
the <code>userid</code> and <code>groupid</code> of the user to switch to a=
fter starting.
If your server instance has a <code>${jetty.base/start.d}</code> directory,=
 this configuration is in the <code>start.d/setuid.ini</code> file instead.
Otherwise. this configuration is in the <code>${jetty.base}start.ini</code>=
 file.</p>
<div class=3D"literalblock">
<div class=3D"content">
<pre>Below are the lines to configure:</pre>
</div>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-text" data-lang=3D"text">j=
etty.startServerAsPrivileged=3Dfalse
jetty.username=3Dfoo
jetty.groupname=3Dbar
jetty.umask=3D002</code></pre>
</div>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Note</div>
</td>
<td class=3D"content">
As well as opening the connectors as <code>root</code>, you can also have J=
etty start the Server as <code>root</code> before changing to the non-<code=
>root</code> user.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
</li>
<li>
<p>A native code library is required to perform user switching.
This code is hosted as part of the Jetty ToolChain project and is released =
independently from Jetty itself.
You can find the source code <a href=3D"https://github.com/eclipsejetty.too=
lchain">here</a> in the <a href=3D"https://github.com/eclipse/jetty.toolcha=
in/jetty-setuid">jetty-setuid</a> project.
Build it locally, which will produce a native library appropriate for the o=
perating system:</p>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n"># mvn clean install</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>If you built on a linux machine you will find the native library in <cod=
e>jetty-setuid/libsetuid-linux/target/libsetuid-linux.so</code>.
If you built on a different operating system you will find the library in a=
 different subdirectory, with the name containing the name of the operating=
 system.
You may want copy this file into your Jetty distribution=E2=80=99s lib dire=
ctory.</p>
</div>
</li>
<li>
<p>Start Jetty as the <code>root</code> user in your base directory, provid=
ing the location of the native library to Java.
Below is an example of how to do it from the command line, assuming you are=
 in the <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jett=
y-9.4.x/jetty-documentation/src/main/asciidoc/index.html#demo-webapps-base"=
>demo-base</a> directory:</p>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n"># sudo java -Djava.library.path=3Dlibsetuid-linux -jar $JETTY_HOME/start=
.jar</code></pre>
</div>
</div>
</li>
</ol>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"using-solaris10-user-rights-management-framework">Using the Solar=
is 10 User Rights Management Framework</h4>
<div class=3D"paragraph">
<p>Solaris 10 provides a User Rights Management framework that can permit u=
sers and processes superuser-like abilities:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">usermod -K defaultpriv=3Dbasic,net_privaddr myself</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Now the <code>myself</code> user can bind to port 80.</p>
</div>
<div class=3D"paragraph">
<p>Refer to the <a href=3D"http://docs.oracle.com/cd/E23823_01/html/816-455=
7/prbactm-1.html#scrolltoc">Solaris 10</a> and <a href=3D"http://docs.oracl=
e.com/cd/E23824_01/html/821-1456/prbactm-1.html#scrolltoc">Solaris 11 Secur=
ity Services documentation</a> for more information.</p>
</div>
</div>
</div>
</div>
</div>
<div class=3D"sect1">
<h2 id=3D"configuring-security">Configuring Security</h2>
<div class=3D"sectionbody">
<div class=3D"sect2">
<h3 id=3D"jetty-home-and-jetty-base">Using the $\{jetty.home} and $\{jetty.=
base} Concepts to Configure</h3>
<div class=3D"paragraph">
<p>Security</p>
</div>
<div class=3D"paragraph">
<p>Jetty implementations are structured around the idea of <code>${jetty.ba=
se}</code> and <code>${jetty.home}</code> directories.</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p><code>${jetty.home}</code> is the directory location for the Jetty distr=
ibution (the binaries) should not be modified.</p>
</li>
<li>
<p><code>${jetty.base}</code> is the directory location for your customizat=
ions to the distribution.</p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>This separation:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>Allows you to manage multiple Jetty installations.</p>
</li>
<li>
<p>Makes it simple to retain your current configuration when you upgrade yo=
ur Jetty distribution.</p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>For more information, see <a href=3D"file:///home/tian/Downloads/b60/ebo=
ok/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.ht=
ml#startup-base-and-home">Managing Jetty Base and Jetty Home</a>.</p>
</div>
<div class=3D"paragraph">
<p>Further, Jetty 9.1 parameterized all of the standard configuration XMLs.
For SSL, parameters are now properties in the <code>start.ini</code> or <co=
de>start.d\ssl.ini</code>, reducing to eliminating the need to edit XML fil=
es.</p>
</div>
<div class=3D"paragraph">
<p>Instead of explicitly listing all the libraries, properties, and XML fil=
es for a feature, Jetty 9.1 introduced a new module system.
A module is defined in a <code>modules/*.mod</code> file, including the lib=
raries, dependencies, XML, and template INI files for a Jetty feature.
Thus you can use a single <code>--module=3Dname</code> command line option =
as the equivalent of specifying many <code>--lib=3Dlocation, feature.xml, n=
ame=3Dvalue</code> arguments for a feature and all its dependencies.
Modules use their dependencies to control the ordering of libraries and XML=
 files.
For more information, see <a href=3D"file:///home/tian/Downloads/b60/ebook/=
jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#=
startup-modules">Managing Startup Modules</a>.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"configuring-security-jetty91">Configuring SSL in with modules</h4=
>
<div class=3D"paragraph">
<p>This page describes how to configure SSL in Jetty with modules.
It provides an example of using the <code>${jetty.home}</code> and <code>${=
jetty.base}</code> to maximum effect.
It also includes a detailed explanation of how modules work.</p>
</div>
<div class=3D"paragraph">
<p>This example assumes you have the jetty-distribution unpacked in <code>/=
home/user/jetty-distribution-{VERSION}</code>.
It also assumes you are using <code>start.ini</code> to configure your serv=
er features.</p>
</div>
<div class=3D"olist arabic">
<ol class=3D"arabic">
<li>
<p>Create a base directory anywhere.</p>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">[/home/user]$ mkdir my-base
[/home/user]$ cd my-base</code></pre>
</div>
</div>
</li>
<li>
<p>Add the modules for SSL, HTTP, and webapp deployment.
Adding modules in this way will append the associated module properties to =
the <code>${jetty.base}/start.ini</code> file.</p>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">[my-base]$ java -jar /home/user/jetty-distribution-{VERSION}/start.jar -=
-add-to-start=3Dhttp,https,deploy

ssl             initialised in ${jetty.base}/start.ini (appended)
ssl             enabled in     ${jetty.base}/start.ini
DOWNLOAD: https://github.com/eclipse/jetty.project/raw/master/jetty-server/=
src/main/config/etc/keystore to etc/keystore
server          initialised in ${jetty.base}/start.ini (appended)
server          enabled in     ${jetty.base}/start.ini
http            initialised in ${jetty.base}/start.ini (appended)
http            enabled in     ${jetty.base}/start.ini
server          enabled in     ${jetty.base}/start.ini
deploy          initialised in ${jetty.base}/start.ini (appended)
deploy          enabled in     ${jetty.base}/start.ini
MKDIR: ${jetty.base}/webapps
server          enabled in     ${jetty.base}/start.ini</code></pre>
</div>
</div>
</li>
<li>
<p>Look at your directory.</p>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">[my-base]$ ls -la
total 20
drwxrwxr-x   4 user group 4096 Oct  8 06:55 ./
drwxr-xr-x 103 user group 4096 Oct  8 06:53 ../
drwxrwxr-x   2 user group 4096 Oct  8 06:55 etc/
-rw-rw-r--   1 user group  815 Oct  8 06:55 start.ini
drwxrwxr-x   2 user group 4096 Oct  8 06:55 webapps/</code></pre>
</div>
</div>
</li>
<li>
<p>Copy your WAR files into webapps.</p>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">[my-base]$ ls -la
[my-base]$ cp ~/code/project/target/gadget.war webapps/</code></pre>
</div>
</div>
</li>
<li>
<p>Copy your keystore into place.</p>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">[my-base]$ cp ~/code/project/keystore etc/keystore</code></pre>
</div>
</div>
</li>
<li>
<p>Edit the <code>start.ini</code> to configure your SSL settings.</p>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">[my-base]$ cat start.ini</code></pre>
</div>
</div>
</li>
<li>
<p>Initialize module ssl.</p>
<div class=3D"literalblock">
<div class=3D"content">
<pre>--module=3Dssl</pre>
</div>
</div>
</li>
<li>
<p>Define the port to use for secure redirection.</p>
<div class=3D"literalblock">
<div class=3D"content">
<pre>jetty.secure.port=3D8443</pre>
</div>
</div>
</li>
<li>
<p>Set up a demonstration keystore and truststore.</p>
<div class=3D"literalblock">
<div class=3D"content">
<pre>jetty.keystore=3Detc/keystore
jetty.truststore=3Detc/keystore</pre>
</div>
</div>
</li>
<li>
<p>Set the demonstration passwords.</p>
<div class=3D"literalblock">
<div class=3D"content">
<pre>jetty.keystore.password=3DOBF:1vny1zlo1x8e1vnw1vn61x8g1zlu1vn4
jetty.keymanager.password=3DOBF:1u2u1wml1z7s1z7a1wnl1u2g
jetty.truststore.password=3DOBF:1vny1zlo1x8e1vnw1vn61x8g1zlu1vn4</pre>
</div>
</div>
</li>
<li>
<p>Initialize the module server.</p>
<div class=3D"literalblock">
<div class=3D"content">
<pre>--module=3Dserver
threads.min=3D10
threads.max=3D200
threads.timeout=3D60000
#jetty.host=3Dmyhost.com
jetty.dump.start=3Dfalse
jetty.dump.stop=3Dfalse</pre>
</div>
</div>
</li>
<li>
<p>Initialize module http.</p>
<div class=3D"literalblock">
<div class=3D"content">
<pre>--module=3Dhttp
jetty.http.port=3D8080
http.timeout=3D30000</pre>
</div>
</div>
</li>
<li>
<p>Initialize module deploy.</p>
<div class=3D"literalblock">
<div class=3D"content">
<pre>--module=3Ddeploy</pre>
</div>
</div>
</li>
</ol>
</div>
<div class=3D"paragraph">
<p>Look at the configuration you have at this point.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">[my-base]$ java -jar /home/user/jetty-distribution-{VERSION}/start.jar -=
-list-config

Java Environment:
-----------------
 java.home=3D/usr/lib/jvm/jdk-7u21-x64/jre
 java.vm.vendor=3DOracle Corporation
 java.vm.version=3D23.21-b01
 java.vm.name=3DJava HotSpot(TM) 64-Bit Server VM
 java.vm.info=3Dmixed mode
 java.runtime.name=3DJava(TM) SE Runtime Environment
 java.runtime.version=3D1.7.0_21-b11
 java.io.tmpdir=3D/tmp

Jetty Environment:
-----------------
 jetty.home=3D/home/user/jetty-distribution-{VERSION}
 jetty.base=3D/home/user/my-base
 jetty.version=3D{VERSION}

JVM Arguments:
--------------
 (no jvm args specified)

System Properties:
------------------
 jetty.base =3D /home/user/my-base
 jetty.home =3D /home/user/jetty-distribution-{VERSION}

Properties:
-----------
 http.timeout =3D 30000
 jetty.dump.start =3D false
 jetty.dump.stop =3D false
 jetty.keymanager.password =3D OBF:1u2u1wml1z7s1z7a1wnl1u2g
 jetty.keystore =3D etc/keystore
 jetty.keystore.password =3D OBF:1vny1zlo1x8e1vnw1vn61x8g1zlu1vn4
 jetty.http.port =3D 8080
 jetty.secure.port =3D 8443
 jetty.truststore =3D etc/keystore
 jetty.truststore.password =3D OBF:1vny1zlo1x8e1vnw1vn61x8g1zlu1vn4
 threads.max =3D 200
 threads.min =3D 10
 threads.timeout =3D 60000

Jetty Server Classpath:
-----------------------
Version Information on 11 entries in the classpath.
: order presented here is how they would appear on the classpath.
      changes to the --module=3Dname command line options will be reflected=
 here.
 0:                    3.1.0 | ${jetty.home}/lib/servlet-api-3.1.jar
 1:                  3.1.RC0 | ${jetty.home}/lib/jetty-schemas-3.1.jar
 2:                {VERSION} | ${jetty.home}/lib/jetty-http-{VERSION}.jar
 3:                {VERSION} | ${jetty.home}/lib/jetty-continuation-{VERSIO=
N}.jar
 4:                {VERSION} | ${jetty.home}/lib/jetty-server-{VERSION}.jar
 5:                {VERSION} | ${jetty.home}/lib/jetty-xml-{VERSION}.jar
 6:                {VERSION} | ${jetty.home}/lib/jetty-util-{VERSION}.jar
 7:                {VERSION} | ${jetty.home}/lib/jetty-io-{VERSION}.jar
 8:                {VERSION} | ${jetty.home}/lib/jetty-servlet-{VERSION}.ja=
r
 9:                {VERSION} | ${jetty.home}/lib/jetty-webapp-{VERSION}.jar
10:                {VERSION} | ${jetty.home}/lib/jetty-deploy-{VERSION}.jar

Jetty Active XMLs:
------------------
 ${jetty.home}/etc/jetty.xml
 ${jetty.home}/etc/jetty-http.xml
 ${jetty.home}/etc/jetty-ssl.xml
 ${jetty.home}/etc/jetty-deploy.xml</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Now start Jetty.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">[my-base]$ java -jar /home/user/jetty-distribution-{VERSION}/start.jar
2013-10-08 07:06:55.837:INFO:oejs.Server:main: jetty-{VERSION}
2013-10-08 07:06:55.853:INFO:oejdp.ScanningAppProvider:main: Deployment mon=
itor [file:/home/user/my-base/webapps/] at interval 1
2013-10-08 07:06:55.872:INFO:oejs.ServerConnector:main: Started ServerConne=
ctor@72974691{HTTP/1.1}{0.0.0.0:8080}</code></pre>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"reviewing-ssl-config">Reviewing the Configuration</h4>
<div class=3D"paragraph">
<p>The following sections review this configuration.</p>
</div>
<div class=3D"sect4">
<h5 id=3D"jetty-base-jetty-home">$\{jetty.base} and $\{jetty.home}</h5>
<div class=3D"paragraph">
<p>First notice the separation of <code>${jetty.base}</code> and <code>${je=
tty.home}</code>.</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p><code>${jetty.home}</code> is where your distribution lies, unchanged, u=
nedited.</p>
</li>
<li>
<p><code>${jetty.base}</code> is where your customizations are.</p>
</li>
</ul>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"modules">Modules</h5>
<div class=3D"paragraph">
<p>Notice that you have <code>--module=3D&lt;name&gt;</code> here and there=
; you have wrapped up the goal of a module (libs, configuration XMLs, and p=
roperties) into a single unit, with dependencies on other modules.</p>
</div>
<div class=3D"paragraph">
<p>You can see the list of modules by appending <code>--list-modules</code>=
 to the command line.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">[my-base] $ java -jar ../jetty-distribution-{VERSION}/start.jar --list-m=
odules</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>These are the modules by name, the libraries they bring in, the XML conf=
igurations they use, the other modules they depend on (even optional ones),=
 and if the module is in use, where it was enabled.</p>
</div>
<div class=3D"paragraph">
<p>While you can manage the list of active modules yourself, it is much eas=
ier to edit the <code>${jetty.base}/start.ini</code>.</p>
</div>
<div class=3D"paragraph">
<p>If you want to start using a new module:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">[my-base] $ java -jar ../jetty-distribution-{VERSION}/start.jar --add-to=
-start=3Dhttps</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>This adds the <code>--module=3D</code> lines and associated properties (=
the parameterized values mentioned above), to your <code>start.ini</code>.<=
/p>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock important">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Important</div>
</td>
<td class=3D"content">
Do not edit the modules and XML files in the <code>${jetty.home}</code> dir=
ectory; there is no need to be moving or copying them unless you want to ma=
ke your own modules or override the behavior of an existing module.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
<div class=3D"paragraph">
<p>Notice that your <code>${jetty.base}/start.ini</code> has no references =
to the XML files.
That=E2=80=99s because the module system and its graph of dependencies now =
dictate all of the XML files, and their load order.
Much more information on modules can be found in the section on <a href=3D"=
file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-docum=
entation/src/main/asciidoc/index.html#startup-modules">Managing Startup Mod=
ules.</a></p>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"parameterizing">Parameters</h5>
<div class=3D"paragraph">
<p>Next is parameterizing all of the standard configuration XMLs.
In this example all of the SSL parameters are now just properties in the <c=
ode>start.ini</code>, reducing or eliminating the need to edit XML files.</=
p>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"override-jetty.home">Overriding $\{jetty.home} in $\{jetty.base}<=
/h5>
<div class=3D"paragraph">
<p>Finally, you can override anything you see in <code>${jetty.home}</code>=
 in <code>${jetty.base}</code>, even XML configurations and libraries.</p>
</div>
<div class=3D"paragraph">
<p>For more information on the <code>start.jar</code> in 9.1, see <a href=
=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-d=
ocumentation/src/main/asciidoc/index.html#start-jar">Using start.jar</a>.</=
p>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"summary-configuring-SSL-Jetty">Summary of Configuring SSL</h4>
<div class=3D"olist arabic">
<ol class=3D"arabic">
<li>
<p>Download and unpack Jetty into <code>/home/user/jetty-distribution-{VERS=
ION}</code>.</p>
</li>
<li>
<p>Go to your base directory and just use the distribution, no editing.</p>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">[my-base]$ java -jar /home/user/jetty-distribution-{VERSION}/start.jar</=
code></pre>
</div>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>The Jetty distribution provides, out of the box, the XML configuration f=
iles, in this case <code>jetty-http.xml</code> and <code>jetty-ssl.xml</cod=
e>.
These can be found in the <code>${jetty.home}/etc/</code> directory.</p>
</li>
<li>
<p>We have parameterized all of the configurable values in those XMLs.
You can now set the values using simple properties, either on the command l=
ine, or within the <code>${jetty.base}/start.ini</code>.</p>
</li>
<li>
<p>When you activate the module for HTTP or HTTPs, Jetty automatically adds=
 the appropriate libraries and XML to start Jetty.
Unless you have a highly custom setup (such as listening on two different p=
orts, using SSL on each, each with its own keystore and configuration), the=
re is no need to muck around in XML files.</p>
</li>
</ul>
</div>
</li>
<li>
<p>Use modules to configure HTTPS:</p>
<div class=3D"ulist">
<ul>
<li>
<p>http =E2=86=92 server</p>
</li>
<li>
<p>https =E2=86=92 ssl =E2=86=92 server</p>
<div class=3D"paragraph">
<p>You can find the details about the modules in <code>${jetty.home}/module=
s/</code>.
For SSL they include <code>modules/http.mod</code>, <code>modules/https.mod=
</code>, <code>modules/ssl.mod</code>, and <code>modules/server.mod</code>.=
</p>
</div>
<div class=3D"paragraph">
<p>Ideally, this level of detail is not important to you.
What is important is that you want to use HTTPS and want to configure it.
You accomplish that by adding the <code>--module=3Dhttps</code> to your <co=
de>start.ini</code>.
By default, the module system keeps things sane, and transitively includes =
all dependent modules as well.</p>
</div>
</li>
</ul>
</div>
</li>
</ol>
</div>
<div class=3D"paragraph">
<p>You can see what the configuration looks like, after all of the modules =
are resolved, without starting Jetty via:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">[my-base] $ java -jar ../jetty-distribution-{VERSION}/start.jar --list-c=
onfig</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Just because the JARs exist on disk does not mean that they are in use.
The configuration controls what is used.</p>
</div>
<div class=3D"paragraph">
<p>Use the <code>--list-config</code> to see the configuration.
Notice that only a subset of the JARs from the distribution are in use.
The modules you have enabled determine that subset.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">[my-base]$ java -jar ~/jetty-distribution-{VERSION}/start.jar --list-con=
fig</code></pre>
</div>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"configuring-security-authentication">Authentication</h3>
<div class=3D"paragraph">
<p>There are two aspects to securing a web application(or context) within t=
he Jetty server:</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">Authentication</dt>
<dd>
<p>The web application can be configured with a mechanism to determine the =
identity of the user.
This is configured by a mix of standard declarations and jetty specific mec=
hanisms and is covered in this section.</p>
</dd>
<dt class=3D"hdlist1">Authorization</dt>
<dd>
<p>Once the identify of the user is known (or not known), the web applicati=
on can be configured via standard descriptors with security constraints tha=
t declare what resources that user may access.</p>
</dd>
</dl>
</div>
<div class=3D"sect3">
<h4 id=3D"_configuring_an_authentication_mechanism">Configuring an Authenti=
cation mechanism</h4>
<div class=3D"paragraph">
<p>The jetty server supports several standard authentication mechanisms: <a=
 href=3D"http://en.wikipedia.org/wiki/Basic_access_authentication">BASIC</a=
>; <a href=3D"http://en.wikipedia.org/wiki/Digest_authentication">DIGEST</a=
>; <a href=3D"http://en.wikipedia.org/wiki/Form-based_authentication">FORM<=
/a>; CLIENT-CERT; and other mechanisms can be plugged in using the extensib=
le <a href=3D"http://docs.oracle.com/cd/E19462-01/819-6717/gcszc/index.html=
">JASPI</a> or <a href=3D"http://en.wikipedia.org/wiki/SPNEGO">SPNEGO</a> m=
echanisms.</p>
</div>
<div class=3D"paragraph">
<p>Internally, configuring an authentication mechanism is done by setting a=
n instance of a the <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.=
project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org/e=
clipse/jetty/security/Authenticator.html">Authenticator</a> interface onto =
the <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.=
4.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/sec=
urity/SecurityHandler.html">SecurityHandler</a> of the context, but in most=
 cases it is done by declaring a <code>&lt;    login-config&gt;</code> elem=
ent in the standard web.xml descriptor or via annotations.</p>
</div>
<div class=3D"paragraph">
<p>Below is an example taken from the <a href=3D"file:///home/tian/Download=
s/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc=
/%7BGITBROWSEURL%7D/tests/test-webapps/test-jetty-webapp/src/main/webapp/WE=
B-INF/web.xml?h=3Drelease-9">jetty-test-webapp web.xml</a> that configures =
BASIC authentication:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml">  <=
login-config>
    <auth-method>BASIC</auth-method>
    <realm-name>Test Realm</realm-name>
  </login-config></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty=
-9.4.x/jetty-documentation/src/main/asciidoc/%7BGITBROWSEURL%7D/tests/test-=
webapps/test-jetty-webapp/src/main/webapp/WEB-INF/web.xml?h=3Drelease-9">je=
tty-test-webapp web.xml</a> also includes commented out examples of other D=
IGEST and FORM configuration:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml">  <=
login-config>
    <auth-method>FORM</auth-method>
    <realm-name>Test Realm</realm-name>
    <form-login-config>
       <form-login-page>/logon.html?param=3Dtest</form-login-page>
       <form-error-page>/logonError.html?param=3Dtest</form-error-page>
    </form-login-config>
  </login-config></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>With FORM Authentication, you must also configure URLs of pages to gener=
ate a login form and handle errors.
Below is a simple HTML form from the <a href=3D"file:///home/tian/Downloads=
/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/=
%7BGITBROWSEURL%7D/tests/test-webapps/test-jetty-webapp/src/main/webapp/log=
on.html?h=3Drelease-9">test webapp logon.html</a>:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml">
<h1>FORM Authentication demo</h1>
<form method=3D"POST" action=3D"file:///home/tian/Downloads/b60/ebook/jetty=
.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/j_security_check=
">
<table border=3D"0" cellspacing=3D"2" cellpadding=3D"1">
<tbody><tr>
  <td>Username:</td>
  <td><input size=3D"12" value=3D"" name=3D"j_username" maxlength=3D"25" ty=
pe=3D"text"></td>
</tr>
<tr>
  <td>Password:</td>
  <td><input size=3D"12" value=3D"" name=3D"j_password" maxlength=3D"25" ty=
pe=3D"password"></td>
</tr>
<tr>
  <td colspan=3D"2" align=3D"center">
    <input name=3D"submit" type=3D"submit" value=3D"Login">
  </td>
</tr>
</tbody></table>
</form>
</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The Authentication mechanism declared for a context / web application de=
fines how the server obtain authentication credentials from the
client, but it does not define how the server checks if those credentials a=
re valid.
To check credentials, the server and/or context also need to be configured =
with a <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty=
-9.4.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/=
security/LoginService.html">LoginService</a> instance, which may be matched=
 by the declared realm-name.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"security-realms">Security Realms</h4>
<div class=3D"paragraph">
<p>Security realms allow you to secure your web applications against unauth=
orized access.
Protection is based on authentication that identifies who is requesting acc=
ess to the webapp and access control that restricts what can be accessed an=
d how it is accessed within the webapp.</p>
</div>
<div class=3D"paragraph">
<p>A webapp statically declares its security requirements in its web.xml fi=
le.
Authentication is controlled by the <code>&lt;login-config&gt;</code> eleme=
nt.
Access controls are specified by <code>&lt;security-constraint&gt;</code> a=
nd <code>&lt;security-role-ref&gt;</code> elements.
When a request is received for a protected resource, the web container chec=
ks if the user performing the request is authenticated, and if the user has=
 a role assignment that permits access to the requested resource.</p>
</div>
<div class=3D"paragraph">
<p>The Servlet Specification does not address how the static security infor=
mation in the <code>WEB-INF/web.xml</code> file is mapped to the runtime en=
vironment of the container.
For Jetty, the <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.proje=
ct-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org/eclips=
e/jetty/security/LoginService.html">LoginService</a> performs this function=
.</p>
</div>
<div class=3D"paragraph">
<p>A LoginService has a unique name, and gives access to information about =
a set of users.
Each user has authentication information (e.g. a password) and a set of rol=
es associated with him/herself.</p>
</div>
<div class=3D"paragraph">
<p>You may configure one or many different LoginServices depending on your =
needs.
A single realm would indicate that you wish to share common security inform=
ation across all of your web applications.
Distinct realms allow you to partition your security information webapp by =
webapp.</p>
</div>
<div class=3D"paragraph">
<p>When a request to a web application requires authentication or authoriza=
tion, Jetty will use the <code>&lt;realm-name&gt;</code> sub-element inside=
 <code>&lt;login-config&gt;</code> element in the web.xml file to perform a=
n <em>exact match</em> to a LoginService.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_scoping_security_realms">Scoping Security Realms</h4>
<div class=3D"paragraph">
<p>A LoginService has a unique name, and is composed of a set of users. Eac=
h user has authentication information (for example, a password) and a set o=
f roles associated with him/herself.
You can configure one or many different realms depending on your needs.</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>Configure a single LoginService to share common security information acr=
oss all of your web applications.</p>
</li>
<li>
<p>Configure distinct LoginServices to partition your security information =
webapp by webapp.</p>
</li>
</ul>
</div>
<div class=3D"sect4">
<h5 id=3D"_globally_scoped">Globally Scoped</h5>
<div class=3D"paragraph">
<p>A LoginService is available to all web applications on a Server instance=
 if you add it as a bean to the Server.
Such a definition would go into an xml file in your <code>${jetty.base}/etc=
</code> directory, e.g. <code>${jetty.base}/etc/my-realm.xml</code> and you=
 would add this xml file to the execution path via <code>start.ini</code> o=
r <code>start.d</code> (you may want to review the material in the <a href=
=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-d=
ocumentation/src/main/asciidoc/index.html#startup">Starting Jetty</a> chapt=
er).
Here=E2=80=99s an example of an xml file that defines an in-memory type of =
LoginService called the <a href=3D"file:///home/tian/Downloads/b60/ebook/je=
tty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/o=
rg/eclipse/jetty/security/HashLoginService.html">HashLoginService</a>:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><co=
nfigure id=3D"Server" class=3D"org.eclipse.jetty.server.Server">
  <call name=3D"addBean">
    <arg>
      <new class=3D"org.eclipse.jetty.security.HashLoginService">
        <set name=3D"name">Test Realm</set>
        <set name=3D"config"><systemproperty name=3D"jetty.home" default=3D=
".">/etc/realm.properties</systemproperty></set>
        <set name=3D"refreshInterval">0</set>
      </new>
    </arg>
  </call>
</configure></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>If you define more than one LoginService on a Server, you will need to s=
pecify which one you want used for each context.
You can do that by telling the context the name of the LoginService, or pas=
sing it the LoginService instance.
Here=E2=80=99s an example of doing both of these, using a <a href=3D"file:/=
//home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentati=
on/src/main/asciidoc/index.html#deployable-descriptor-file">context xml fil=
e</a>:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><co=
nfigure class=3D"org.eclipse.jetty.webapp.WebAppContext">
 <get name=3D"securityHandler">
   <!-- Either: -->
   <set name=3D"loginService">
     <new class=3D"org.eclipse.jetty.security.HashLoginService">
           <set name=3D"name">Test Realm</set>
     </new>
   </set>

   <!-- or if you defined a LoginService called "Test Realm" in jetty.xml :=
 -->
   <set name=3D"realmName">Test Realm</set>

 </get></configure></code></pre>
</div>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_per_webapp_scoped">Per-Webapp Scoped</h5>
<div class=3D"paragraph">
<p>Alternatively, you can define a LoginService for just a single web appli=
cation.
Here=E2=80=99s how to define the same HashLoginService, but inside a <a hre=
f=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-=
documentation/src/main/asciidoc/index.html#deployable-descriptor-file">cont=
ext xml file</a>:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><co=
nfigure class=3D"org.eclipse.jetty.webapp.WebAppContext">
  <set name=3D"contextPath">/test</set>
  <set name=3D"war"><systemproperty name=3D"jetty.home" default=3D".">/weba=
pps/test</systemproperty></set>
  <get name=3D"securityHandler">
    <set name=3D"loginService">
      <new class=3D"org.eclipse.jetty.security.HashLoginService">
            <set name=3D"name">Test Realm</set>
            <set name=3D"config"><systemproperty name=3D"jetty.home" defaul=
t=3D".">/etc/realm.properties</systemproperty></set>
      </new>
    </set>
  </get>
</configure></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Jetty provides a number of different LoginService types which can be see=
n in the next section.</p>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"configuring-login-service">Configuring a LoginService</h4>
<div class=3D"paragraph">
<p>A <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9=
.4.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/se=
curity/LoginService.html">LoginService</a> instance is required by each con=
text/webapp that has a authentication mechanism, which is used to check the=
 validity of the username and credentials collected by the authentication m=
echanism. Jetty provides the following implementations of LoginService:</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1"><a href=3D"file:///home/tian/Downloads/b60/ebook/jett=
y.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org=
/eclipse/jetty/security/HashLoginService.html">HashLoginService</a></dt>
<dd>
<p>A user realm that is backed by a hash map that is filled either programa=
tically or from a Java properties file.</p>
</dd>
<dt class=3D"hdlist1"><a href=3D"file:///home/tian/Downloads/b60/ebook/jett=
y.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org=
/eclipse/jetty/security/JDBCLoginService.html">JDBCLoginService</a></dt>
<dd>
<p>Uses a JDBC connection to an SQL database for authentication</p>
</dd>
<dt class=3D"hdlist1"><a href=3D"file:///home/tian/Downloads/b60/ebook/jett=
y.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org=
/eclipse/jetty/plus/security/DataSourceLoginService.html">DataSourceLoginSe=
rvice</a></dt>
<dd>
<p>Uses a JNDI defined   <a href=3D"http://docs.oracle.com/javase/7/docs/ap=
i/javax/sql/DataSource.html">DataSource</a> for authentication</p>
</dd>
<dt class=3D"hdlist1"><a href=3D"file:///home/tian/Downloads/b60/ebook/jett=
y.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org=
/eclipse/jetty/jaas/JAASLoginService.html">JAASLoginService</a></dt>
<dd>
<p>Uses a <a href=3D"http://en.wikipedia.org/wiki/Java_Authentication_and_A=
uthorization_Service">JAAS</a> provider for authentication; see the section=
 on
<a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/=
jetty-documentation/src/main/asciidoc/index.html#jaas-support">JAAS support=
</a> for more information</p>
</dd>
<dt class=3D"hdlist1"><a href=3D"file:///home/tian/Downloads/b60/ebook/jett=
y.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org=
/eclipse/jetty/security/SpnegoLoginService.html">SpnegoLoginService</a></dt=
>
<dd>
<p><a href=3D"http://en.wikipedia.org/wiki/SPNEGO">SPNEGO</a> Authenticatio=
n; see the section on <a href=3D"file:///home/tian/Downloads/b60/ebook/jett=
y.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#spne=
go-support">SPNEGO support</a> for more information.</p>
</dd>
</dl>
</div>
<div class=3D"paragraph">
<p>An instance of a LoginService can be matched to a context/webapp by:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>A LoginService instance may be set directly on the SecurityHandler insta=
nce via embedded code or IoC XML</p>
</li>
<li>
<p>Matching the realm-name defined in web.xml with the name of a LoginServi=
ce instance that has been added to the Server instance as a dependent bean<=
/p>
</li>
<li>
<p>If only a single LoginService instance has been set on the Server then i=
t is used as the login service for the context</p>
</li>
</ul>
</div>
<div class=3D"sect4">
<h5 id=3D"hash-login-service">HashLoginService</h5>
<div class=3D"paragraph">
<p>The HashLoginService is a simple and efficient login service that loads =
usernames, credentials and roles from a Java properties file in the format:=
</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-properties" data-lang=3D"p=
roperties">username: password[,rolename ...]</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Where:</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">username</dt>
<dd>
<p>is the user=E2=80=99s unique identity</p>
</dd>
<dt class=3D"hdlist1">password</dt>
<dd>
<p>is the user=E2=80=99s (possibly obfuscated or MD5 encrypted) password;</=
p>
</dd>
<dt class=3D"hdlist1">rolename</dt>
<dd>
<p>is a role of the user</p>
</dd>
</dl>
</div>
<div class=3D"paragraph">
<p>For example:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-properties" data-lang=3D"p=
roperties">admin: CRYPT:ad1ks..kc.1Ug,server-administrator,content-administ=
rator,admin
other: OBF:1xmk1w261u9r1w1c1xmq
guest: guest,read-only</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>You configure the HashLoginService with a name and a reference to the lo=
cation of the properties file:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><it=
em>
<new class=3D"org.eclipse.jetty.security.HashLoginService">
  <set name=3D"name">Test Realm</set>
  <set name=3D"config"><systemproperty name=3D"jetty.home" default=3D".">/e=
tc/realm.properties</systemproperty></set>
</new>
</item></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>You can also configure it to check the properties file regularly for cha=
nges and reload when changes are detected.
The <code>reloadInterval</code> is in seconds:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><ne=
w class=3D"org.eclipse.jetty.security.HashLoginService">
    <set name=3D"name">Test Realm</set>
    <set name=3D"config"><systemproperty name=3D"jetty.home" default=3D".">=
/etc/realm.properties</systemproperty></set>
    <set name=3D"reloadInterval">5</set>
    <call name=3D"start"></call>
  </new></code></pre>
</div>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"jdbc-login-service">JDBCLoginService</h5>
<div class=3D"paragraph">
<p>In this implementation, authentication and role information is stored in=
 a database accessed via JDBC.
A properties file defines the JDBC connection and database table informatio=
n.
Here is an example of a properties file for this realm implementation:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-properties" data-lang=3D"p=
roperties">jdbcdriver =3D org.gjt.mm.mysql.Driver
url =3D jdbc:mysql://localhost/jetty
username =3D jetty
password =3D jetty
usertable =3D users
usertablekey =3D id
usertableuserfield =3D username
usertablepasswordfield =3D pwd
roletable =3D roles
roletablekey =3D id
roletablerolefield =3D role
userroletable =3D user_roles
userroletableuserkey =3D user_id
userroletablerolekey =3D role_id
cachetime =3D 300</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The format of the database tables is (pseudo-sql):</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-sql" data-lang=3D"sql">use=
rs
(
  id integer PRIMARY KEY,
  username varchar(100) NOT NULL UNIQUE KEY,
  pwd varchar(50) NOT NULL
);
user_roles
(
  user_id integer NOT NULL,
  role_id integer NOT NULL,
  UNIQUE KEY (user_id, role_id),
  INDEX(user_id)
);
roles
(
  id integer PRIMARY KEY,
  role varchar(100) NOT NULL UNIQUE KEY
);</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Where:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p><strong>users</strong> is a table containing one entry for every user co=
nsisting of:</p>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">id</dt>
<dd>
<p>the unique identity of a user</p>
</dd>
<dt class=3D"hdlist1">user</dt>
<dd>
<p>the name of the user</p>
</dd>
<dt class=3D"hdlist1">pwd</dt>
<dd>
<p>the user=E2=80=99s password (possibily obfuscated or MD5 encrypted)</p>
</dd>
</dl>
</div>
</li>
<li>
<p><strong>user-roles</strong> is a table containing one row for every role=
 granted to a
user:</p>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">user_id</dt>
<dd>
<p>the unique identity of the user</p>
</dd>
<dt class=3D"hdlist1">role_id</dt>
<dd>
<p>the role for a user</p>
</dd>
</dl>
</div>
</li>
<li>
<p><strong>roles</strong> is a a table containing one role for every role i=
n the system:</p>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">id</dt>
<dd>
<p>the unique identifier of a role</p>
</dd>
<dt class=3D"hdlist1">role</dt>
<dd>
<p>a human-readable name for a role</p>
</dd>
</dl>
</div>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>If you want to use obfuscated, MD5 hashed or encrypted passwords the <co=
de>pwd</code> column of the <code>users</code> table must be large enough t=
o hold the obfuscated, hashed or encrypted password text plus the appropria=
te prefix.</p>
</div>
<div class=3D"paragraph">
<p>You define a <code>JDBCLoginService</code> with the name of the realm an=
d the location of the properties file describing the database:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><ne=
w class=3D"org.eclipse.jetty.security.JDBCLoginService">
  <set name=3D"name">Test JDBC Realm</set>
  <set name=3D"config">etc/jdbcRealm.properties</set>
</new></code></pre>
</div>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_authorization">Authorization</h4>
<div class=3D"paragraph">
<p>As far as the <a href=3D"http://jcp.org/aboutJava/communityprocess/final=
/jsr340/">Servlet Specification</a> is concerned, authorization is based on=
 roles.
As we have seen, a LoginService associates a user with a set of roles.
When a user requests a resource that is access protected, the LoginService =
will be asked to authenticate the user if they are not already, and then as=
ked to confirm if that user possesses one of the roles permitted access to =
the resource.</p>
</div>
<div class=3D"paragraph">
<p>Until Servlet 3.1, role-based authorization could define:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>access granted to a set of named roles</p>
</li>
<li>
<p>access totally forbidden, regardless of role</p>
</li>
<li>
<p>access granted to a user in any of the roles defined in the effective we=
b.xml.
This is indicated by the special value of "*" for the <code>&lt;role-name&g=
t;</code> of a <code>&lt;auth-constraint&gt; `in the `&lt;security-constrai=
nt&gt;</code></p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>With the advent of Servlet 3.1, there is now another authorization:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>access granted to any user who is authenticated, regardless of roles.
This is indicated by the special value of "**" for the <code>&lt;role-name&=
gt;</code> of a <code>&lt;auth-constraint&gt;</code> in the <code>&lt;secur=
ity-constraint&gt;</code></p>
</li>
</ul>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"configuring-form-size">Limiting Form Content</h3>
<div class=3D"paragraph">
<p>Form content sent to the server is processed by Jetty into a map of para=
meters to be used by the web application.
This can be vulnerable to denial of service (DOS) attacks since significant=
 memory and CPU can be consumed if a malicious clients sends very large for=
m content or large number of form keys.
Thus Jetty limits the amount of data and keys that can be in a form posted =
to Jetty.</p>
</div>
<div class=3D"paragraph">
<p>The default maximum size Jetty permits is 200000 bytes and 1000 keys.
You can change this default for a particular webapp or for all webapps on a=
 particular Server instance.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"_configuring_form_limits_for_a_webapp">Configuring Form Limits fo=
r a Webapp</h4>
<div class=3D"paragraph">
<p>To configure the form limits for a single web application, the context h=
andler (or webappContext) instance must be configured using the following m=
ethods:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">C=
ontextHandler.setMaxFormContentSize(int maxSizeInBytes);
ContextHandler.setMaxFormKeys(int formKeys);</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>These methods may be called directly when embedding Jetty, but more comm=
only are configured from a context XML file or WEB-INF/jetty-web.xml file:<=
/p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><co=
nfigure class=3D"org.eclipse.jetty.webapp.WebAppContext">

  ...

  <set name=3D"maxFormContentSize">200000</set>
  <set name=3D"maxFormKeys">200</set>
</configure></code></pre>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_configuring_form_limits_for_the_server">Configuring Form Limits =
for the Server</h4>
<div class=3D"paragraph">
<p>If a context does not have specific form limits configured, then the ser=
ver attributes are inspected to see if a server wide limit has been set on =
the size or keys.
The following XML shows how these attributes can be set in <code>jetty.xml<=
/code>:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><co=
nfigure class=3D"org.eclipse.jetty.server.Server">

  ...

  <call name=3D"setAttribute">
    <arg>org.eclipse.jetty.server.Request.maxFormContentSize</arg>
    <arg>100000</arg>
   </call>
  <call name=3D"setAttribute">
    <arg>org.eclipse.jetty.server.Request.maxFormKeys</arg>
    <arg>2000</arg>
   </call>
</configure></code></pre>
</div>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"serving-aliased-files">Aliased Files and Symbolic links</h3>
<div class=3D"paragraph">
<p>Web applications will often server static content from the file system p=
rovided by the operating system running underneath the JVM.
However because file systems often implement multiple aliased names for the=
 same file, then security constraints and other servlet URI space mappings =
my inadvertently be bypassed by aliases.</p>
</div>
<div class=3D"paragraph">
<p>A key example of this is case insensitivity and 8.3 filenames implemente=
d by the Windows file system.
If a file within a web application called <code>/mysecretfile.txt</code> is=
 protected by a security constraint on the URI <code>/mysecretfile.txt</cod=
e>, then a request to <code>/MySecretFile.TXT</code> will not match the URI=
 constraint because URIs are case sensitive, but the Windows file system wi=
ll report that a file does exist at that name and it will be served despite=
 the security constraint.
Less well known than case insensitivity is that Windows files systems also =
support <a href=3D"http://en.wikipedia.org/wiki/8.3_filename">8.3 filenames=
</a> for compatibility with legacy programs.
Thus a request to a URI like <code>/MYSECR~1.TXT</code> will again not matc=
h the security constraint, but will be reported as an existing file by the =
file system and served.</p>
</div>
<div class=3D"paragraph">
<p>There are many examples of aliases, not just on Windows:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>NTFS Alternate stream names like <code>c:\test\file.txt::$DATA:name</cod=
e></p>
</li>
<li>
<p>OpenVMS support file versionig so that <code>/mysecret.txt;N</code> refe=
rs to version N of <code>/mysecret.txt</code> and is essentially an alias.<=
/p>
</li>
<li>
<p>The clearcase software configuration management system provides a file s=
ystem where <code>@@</code> in a file name is an alias to a specific versio=
n.</p>
</li>
<li>
<p>The Unix files system supports <code>/./foo.txt</code> as and alias for =
<code>/foo.txt</code></p>
</li>
<li>
<p>Many JVM implementations incorrectly assume the null character is a stri=
ng terminator, so that a file name resulting from <code>/foobar.txt%00</cod=
e> is an alias for <code>/foobar.txt</code></p>
</li>
<li>
<p>Unix symbolic links and hard links are a form of aliases that allow the =
same file or directory to have multiple names.</p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>In addition, it is not just URI security constraints that can be bypasse=
d. For example the mapping of the URI pattern <code>*.jsp</code> to the JSP
Servlet may be bypassed by an a request to an alias like <code>/foobar.jsp%=
00</code>, thus rather than execute the JSP, the source code of the JSP is =
returned by the file system.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"_good_security_practise">Good Security Practise</h4>
<div class=3D"paragraph">
<p>Part of the problem with aliases is that the standard web application se=
curity model is to allow all requests except the ones that are specifically=
 denied by security constraints.
A best practice for security is to deny all requests and to permit only tho=
se that are specifically identified as allowable.
While it is possible to design web application security constraints in this=
 style, it can be difficult in all circumstances and it is not the default.=
 T
hus it is important for Jetty to be able to detect and deny requests to ali=
ased static content.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"file-alias-detection">Alias detection</h4>
<div class=3D"paragraph">
<p>It is impossible for Jetty to know of all the aliases that may be implem=
ented by the file system running beneath it, thus it does not attempt to ma=
ke any specific checks for any know aliases.
Instead Jetty detects aliases by using the canonical path of a file.
If a file resource handled by jetty has a canonical name that differs from =
the name used to request the resource, then Jetty determines that the resou=
rce is an aliased request and it will not be returned by the <code>ServletC=
ontext.getResource(String)</code> method (or similar) and thus will not be =
served as static content nor used as the basis of a JSP.</p>
</div>
<div class=3D"paragraph">
<p>This if Jetty is running on a Windows operating system, then a file call=
ed <code>/MySecret.TXT</code> will have a canonical name that exactly match=
es that case.
So while a request to <code>/mysecret.txt</code> or <code>/MYSECR~1.TXT</co=
de> will result in a File Resource that matches the file, the different can=
onical name will indicate that those requests are aliases and they will not=
 be served as static content and instead a 404 response returned.</p>
</div>
<div class=3D"paragraph">
<p>Unfortunately this approach denies all aliases, including symbolic links=
, which can be useful in assembling complex web applications.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"file-alias-serving">Serving Aliases and Symbolic Links</h4>
<div class=3D"paragraph">
<p>Not all aliases are bad nor should be seen as attempts to subvert securi=
ty constraints.
Specifically symbolic links can be very useful when assembling complex web =
applications, yet by default Jetty will not serve them.
Thus Jetty contexts support an extensible <code>AliasCheck</code> mechanism=
 to allow aliases resources to be inspected an conditionally served.
In this way, "good" aliases can be detected and served.
Jetty provides several utility implementations of the <code>AliasCheck</cod=
e> interface as nested classes with <code>ContextHandler</code>:</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">ApproveAliases</dt>
<dd>
<p>Approve all aliases (<strong>Use with caution!</strong>).</p>
</dd>
<dt class=3D"hdlist1">AllowSymLinkAliasChecker</dt>
<dd>
<p>Approve Aliases using the java-7 <code>Files.readSymbolicLink(path)</cod=
e> and <code>Path.toRealPath(...)</code> APIs to check that aliases are val=
id symbolic links.</p>
</dd>
</dl>
</div>
<div class=3D"paragraph">
<p>An application is free to implement its own Alias checking.
Alias Checkers can be installed in a context via the following XML used in =
a context deployer file or <code>WEB-INF/jetty-web.xml</code>:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml">  <=
!-- Allow symbolic links  -->
  <call name=3D"addAliasCheck">
    <arg><new class=3D"org.eclipse.jetty.server.handler.AllowSymLinkAliasCh=
ecker"></new></arg>
  </call></code></pre>
</div>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"configuring-security-secure-passwords">Secure Password Obfuscatio=
n</h3>
<div class=3D"paragraph">
<p>There are many places where you might want to use and store a password, =
for example for the SSL connectors and user passwords in realms.</p>
</div>
<div class=3D"paragraph">
<p>Passwords can be stored in clear text, obfuscated, checksummed or encryp=
ted in order of increasing security.
The choice of method to secure a password depends on where you are using th=
e password.
In some cases such as keystore passwords and digest authentication, the sys=
tem must retrieve the original password, which requires the obfuscation met=
hod.
The drawback of the obfuscation algorithm is that it protects passwords fro=
m casual viewing only.</p>
</div>
<div class=3D"paragraph">
<p>When the stored password is compared to one a user enters, the handling =
code can apply the same algorithm that secures the stored password to the u=
ser input and compare results, making password authentication more secure.<=
/p>
</div>
<div class=3D"paragraph">
<p>The class <code>org.eclipse.jetty.util.security.Password</code> can be u=
sed to generate all varieties of passwords.</p>
</div>
<div class=3D"paragraph">
<p>Run it without arguments to see usage instructions:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">$ export JETTY_VERSION=3D9.0.0-SNAPSHOT
$ java -cp lib/jetty-util-$JETTY_VERSION.jar org.eclipse.jetty.util.securit=
y.Password

Usage - java org.eclipse.jetty.util.security.Password [<user>] <password>
If the password is ?, the user will be prompted for the password</password>=
</user></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>For example, to generate a secured version of the password "blah" for th=
e user "me":</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">$ export JETTY_VERSION=3D9.0.0.RC0
$ java -cp lib/jetty-util-$JETTY_VERSION.jar org.eclipse.jetty.util.securit=
y.Password me blah
blah
OBF:20771x1b206z
MD5:639bae9ac6b3e1a84cebb7b403297b79
CRYPT:me/ks90E221EY</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>You can now cut and paste whichever secure version you choose into your =
configuration file or Java code.</p>
</div>
<div class=3D"paragraph">
<p>For example, the last line below shows how you would implement the encry=
pted password generated above into the properties file for a <code>LoginSer=
vice</code>:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-bash" data-lang=3D"bash">a=
dmin: CRYPT:ad1ks..kc.1Ug,server-administrator,content-administrator,admin
other: OBF:1xmk1w261u9r1w1c1xmq
guest: guest,read-only
me:CRYPT:me/ks90E221EY</code></pre>
</div>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock tip">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Tip</div>
</td>
<td class=3D"content">
Don=E2=80=99t forget to also copy the OBF:, MD5: or CRYPT: prefix on the ge=
nerated password. It will not be usable by Jetty without it.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
<div class=3D"paragraph">
<p>You can also use obfuscated passwords in jetty xml files where a plain t=
ext password is usually needed.
Here=E2=80=99s an example setting the password for a JDBC Datasource with o=
bfuscation:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml">  <=
new id=3D"DSTest" class=3D"org.eclipse.jetty.plus.jndi.Resource">
     <arg></arg>
     <arg>jdbc/DSTest</arg>
     <arg>
       <new class=3D"com.jolbox.bonecp.BoneCPDataSource">
         <set name=3D"driverClass">com.mysql.jdbc.Driver</set>
         <set name=3D"jdbcUrl">jdbc:mysql://localhost:3306/foo</set>
         <set name=3D"username">dbuser</set>
         <set name=3D"password">
            <call class=3D"org.eclipse.jetty.util.security.Password" name=
=3D"deobfuscate">
                  <arg>OBF:1ri71v1r1v2n1ri71shq1ri71shs1ri71v1r1v2n1ri7</ar=
g>
            </call>
         </set>
         <set name=3D"minConnectionsPerPartition">5</set>
         <set name=3D"maxConnectionsPerPartition">50</set>
         <set name=3D"acquireIncrement">5</set>
         <set name=3D"idleConnectionTestPeriod">30</set>
      </new>
    </arg>
  </new></code></pre>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"jaas-support">JAAS Support</h3>
<div class=3D"paragraph">
<p>JAAS implements a Java version of the standard Pluggable Authentication =
Module (PAM) framework.</p>
</div>
<div class=3D"paragraph">
<p>JAAS can be used for two purposes:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>for authentication of users, to reliably and securely determine who is c=
urrently executing Java code, regardless of whether the code is running as =
an application, an applet, a bean, or a servlet</p>
</li>
<li>
<p>for authorization of users to ensure they have the access control rights=
 (permissions) required to do the actions performed</p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>JAAS authentication is performed in a pluggable fashion.
This permits applications to remain independent from underlying authenticat=
ion technologies.
New or updated authentication technologies can be plugged under an applicat=
ion without requiring modifications to the application itself.
Applications enable the authentication process by instantiating a <code>Log=
inContext</code> object, which in turn references a configuration to determ=
ine the authentication technology(ies), or <code>LoginModule</code>(s), to =
be used in performing the authentication.
Typical <code>LoginModules</code> may prompt for and verify a username and =
password.
Others may read and verify a voice or fingerprint sample.</p>
</div>
<div class=3D"paragraph">
<p>See Java Authentication and Authorization Service (JAAS) <a href=3D"http=
://java.sun.com/javase/6/docs/technotes/guides/security/jaas/JAASRefGuide.h=
tml">Reference Guide</a> for more information about JAAS.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"jetty-jaas">Jetty and JAAS</h4>
<div class=3D"paragraph">
<p>Many application servers support JAAS as a means of bringing greater fle=
xibility to the declarative security models of the J2EE (now known as the J=
avaEE) <a href=3D"http://java.sun.com/javaee/index.jsp">specification</a>.
Jetty support for JAAS provides greater alternatives for servlet security, =
and increases the portability of web applications.</p>
</div>
<div class=3D"paragraph">
<p>The JAAS support aims to dictate as little as possible whilst providing =
a sufficiently flexible infrastructure to allow users to drop in their
own custom <a href=3D"http://java.sun.com/j2se/1.4.2/docs/guide/security/ja=
as/JAASLMDevGuide.html">LoginModules</a>.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"jaas-configuration">Configuration</h4>
<div class=3D"paragraph">
<p>Using JAAS with Jetty is very simply a matter of declaring a <code>org.e=
clipse.jetty.jaas.JAASLoginService</code>, creating a JAAS login module con=
figuration file and specifying it on the Jetty run line.
Let=E2=80=99s look at an example.</p>
</div>
<div class=3D"sect4">
<h5 id=3D"_step_1">Step 1</h5>
<div class=3D"paragraph">
<p>Configure a Jetty <code>org.eclipse.jetty.jaas.JAASLoginService</code> t=
o match the <code>&lt;realm-name&gt;</code> in your <code>web.xml</code> fi=
le. For example, if the <code>web.xml</code> contains a realm called "xyz" =
like so:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><lo=
gin-config>
  <auth-method>FORM</auth-method>
  <realm-name>xyz</realm-name>
  <form-login-config>
    <form-login-page>/login/login</form-login-page>
    <form-error-page>/login/error</form-error-page>
  </form-login-config>
</login-config></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Then you need to create a <code>JAASLoginService</code> with the matchin=
g name of "xyz":</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><ne=
w class=3D"org.eclipse.jetty.jaas.JAASLoginService">
  <set name=3D"Name">Test JAAS Realm</set>
  <set name=3D"LoginModuleName">xyz</set>
</new></code></pre>
</div>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock caution">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Caution</div>
</td>
<td class=3D"content">
The name of the realm-name that you declare in <code>web.xml</code> must ma=
tch exactly the name of your <code>JAASLoginService</code>.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
<div class=3D"paragraph">
<p>You can declare your <code>JAASLoginService</code> in a couple of differ=
ent ways:</p>
</div>
<div class=3D"olist arabic">
<ol class=3D"arabic">
<li>
<p>If you have more than one webapp that you would like to use the same sec=
urity infrastructure, then you can declare your <code>JAASLoginService</cod=
e> in a top-level Jetty xml file as a bean that is added to the <code>org.e=
clipse.jetty.server.Server</code>.
An example:</p>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><co=
nfigure id=3D"Server" class=3D"org.eclipse.jetty.server.Server">

  <call name=3D"addBean">
    <arg>
      <new class=3D"org.eclipse.jetty.jaas.JAASLoginService">
        <set name=3D"name">Test JAAS Realm</set>
        <set name=3D"LoginModuleName">xyz</set>
      </new>
    </arg>
  </call>

</configure></code></pre>
</div>
</div>
</li>
<li>
<p>Alternatively, you can use a <code>JAASLoginService</code> with just a s=
pecific webapp by creating a <a href=3D"file:///home/tian/Downloads/b60/ebo=
ok/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.ht=
ml#deployable-descriptor-file">context xml</a> file for the webapp, and spe=
cifying the <code>JAASLoginService</code> in it:</p>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><co=
nfigure class=3D"org.eclipse.jetty.webapp.WebAppContext">

  <set name=3D"securityHandler">
    <new class=3D"org.eclipse.jetty.security.ConstraintSecurityHandler">
     <set name=3D"loginService">
       <new class=3D"org.eclipse.jetty.jaas.JAASLoginService">
         <set name=3D"name">Test JAAS Realm</set>
         <set name=3D"loginModuleName">xyz</set>
       </new>
     </set>
    </new>
  </set>

</configure></code></pre>
</div>
</div>
</li>
</ol>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"jaas-step-2">Step 2</h5>
<div class=3D"paragraph">
<p>Set up your <code>LoginModule</code> in a configuration file, following =
the <a href=3D"http://java.sun.com/j2se/1.4.2/docs/api/javax/security/auth/=
login/Configuration.html">syntax rules</a> :</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-ini" data-lang=3D"ini">xyz=
 {
       com.acme.SomeLoginModule required debug=3Dtrue;
    };</code></pre>
</div>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock caution">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Caution</div>
</td>
<td class=3D"content">
It is imperative that the application name on the first line is exactly the=
 same as the <code>LoginModuleName</code> of your <code>JAASLoginService</c=
ode>.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
<div class=3D"paragraph">
<p>You may find it convenient to name this configuration file as <code>etc/=
login.conf</code> because, as we will see below, some of the wiring up for =
JAAS has been done for you.</p>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_step_3">Step 3</h5>
<div class=3D"paragraph">
<p>You now need to invoke Jetty with support for JAAS.
There are 2 aspects to this:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>adding JAAS-related jars to the Jetty container classpath</p>
</li>
<li>
<p>setting the System property <code>java.security.auth.login.config</code>=
</p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>To accomplish the above, use the Jetty <a href=3D"file:///home/tian/Down=
loads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asci=
idoc/index.html#startup-overview">startup</a> <a href=3D"file:///home/tian/=
Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/=
asciidoc/index.html#startup-modules">modules mechanism</a> to add the JAAS =
<a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/=
jetty-documentation/src/main/asciidoc/index.html#startup-modules">module</a=
>:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">java -jar start.jar --add-to-start=3Djaas</code></pre>
</div>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Note</div>
</td>
<td class=3D"content">
The top level of the distribution does not have the JAAS module enabled by =
default.
However, there are several <a href=3D"file:///home/tian/Downloads/b60/ebook=
/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html=
#demo-webapps-base">demo webapps</a> - including a JAAS webapp - available =
in the <code>demo-base</code> directory of the distribution which has pre-e=
nabled the JAAS module.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
<div class=3D"paragraph">
<p>Now you will have a file named <code>start.d/jaas.ini</code>, which cont=
ains:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-ini" data-lang=3D"ini">--m=
odule=3Djaas
jaas.login.conf=3Detc/login.conf</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The <code>jaas.login.conf</code> property refers to the location of your=
 <code>LoginModule</code> configuration file that you established in <a hre=
f=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-=
documentation/src/main/asciidoc/index.html#jaas-step-2">Step 2</a>.
If you called it <code>etc/login.conf</code>, then your work is done. Other=
wise, change the value of the <code>jaas.login.conf</code> property to be t=
he location of your LoginModule configuration file.
Jetty will automatically use this property to set the value of the System p=
roperty <code>java.security.auth.login.config.</code></p>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_a_closer_look_at_jaasloginservice">A Closer Look at JAASLoginSer=
vice</h4>
<div class=3D"paragraph">
<p>To allow the greatest degree of flexibility in using JAAS with web appli=
cations, the <code>JAASLoginService</code> supports a couple of configurati=
on options.
Note that you don=E2=80=99t ordinarily need to set these explicitly, as Jet=
ty has defaults which will work in 99% of cases.
However, should you need to, you can configure:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>a policy for role-based authorization (Default: <code>org.eclipse.jetty.=
jaas.StrictRoleCheckPolicy</code>)</p>
</li>
<li>
<p>a CallbackHandler (Default: <code>org.eclipse.jetty.jaas.callback.Defaul=
tCallbackHandler</code>)</p>
</li>
<li>
<p>a list of classnames for the Principal implementation that equate to a u=
ser role (Default: <code>org.eclipse.jetty.jaas.JAASRole</code>)</p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>Here=E2=80=99s an example of setting each of these (to their default val=
ues):</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><ne=
w class=3D"org.eclipse.jetty.jaas.JAASLoginService">
  <set name=3D"Name">Test JAAS Realm</set>
  <set name=3D"LoginModuleName">xyz</set>
  <set name=3D"RoleCheckPolicy">
    <new class=3D"org.eclipse.jetty.jaas.StrictRoleCheckPolicy">
  </new></set>
  <set name=3D"CallbackHandlerClass">
       org.eclipse.jetty.jaas.callback.DefaultCallbackHandler
  </set>
  <set name=3D"roleClassNames">
    <array type=3D"java.lang.String">
      <item>org.eclipse.jetty.jaas.JAASRole</item>
    </array>
  </set>
</new></code></pre>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_rolecheckpolicy">RoleCheckPolicy</h5>
<div class=3D"paragraph">
<p>The <code>RoleCheckPolicy</code> must be an implementation of the <code>=
org.eclipse.jetty.jaas.RoleCheckPolicy</code> interface and its purpose is =
to help answer the question "is User X in Role Y" for role-based authorizat=
ion requests.
The default implementation distributed with Jetty is the <code>org.eclipse.=
jetty.jaas.StrictRoleCheckPolicy</code>, which will assess a user as having=
 a particular role if that role is at the top of the stack of roles that ha=
ve been temporarily pushed onto the user.
If the user has no temporarily assigned roles, the role is amongst those co=
nfigured for the user.</p>
</div>
<div class=3D"paragraph">
<p>Roles can be temporarily assigned to a user programmatically by using th=
e <code>pushRole(String rolename)</code> method of the <code>org.eclipse.je=
tty.jaas.JAASUserPrincipal</code> class.</p>
</div>
<div class=3D"paragraph">
<p>For the majority of webapps, the default <code>StrictRoleCheckPolicy</co=
de> will be quite adequate, however you may provide your own implementation=
 and set it on your <code>JAASLoginService</code> instance.</p>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_callbackhandler">CallbackHandler</h5>
<div class=3D"paragraph">
<p>A CallbackHandler is responsible for interfacing with the user to obtain=
 usernames and credentials to be authenticated.</p>
</div>
<div class=3D"paragraph">
<p>Jetty ships with the <code>org.eclipse.jetty.jaas.DefaultCallbackHandler=
</code> which interfaces the information contained in the request to the Ca=
llbacks that are requested by <code>LoginModules</code>.
You can replace this default with your own implementation if you have speci=
fic requirements not covered by the default.</p>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_role_principal_implementation_class">Role Principal Implementati=
on Class</h5>
<div class=3D"paragraph">
<p>When <code>LoginModules</code> authenticate a user, they usually also ga=
ther all of the roles that a user has and place them inside the JAAS Subjec=
t.
As <code>LoginModules</code> are free to use their own implementation of th=
e JAAS Principal to put into the Subject, Jetty needs to know which Princip=
als represent the user and which represent his/her roles when performing au=
thorization checks on <code>&lt;security-constraint&gt;</code>. The example=
 <code>LoginModules</code> that ship with Jetty all use the <code>org.eclip=
se.jetty.jaas.JAASRole</code> class. However, if you have plugged in other =
<code>LoginModules</code>, you must configure the classnames of their role =
Principal implementations.</p>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_sample_loginmodules">Sample LoginModules</h5>
<div class=3D"ulist">
<ul>
<li>
<p><a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/%7BJXURL%7D/org/eclipse/jetty/jaas=
/spi/JDBCLoginModule.html"><code>org.eclipse.jetty.jaas.spi.JDBCLoginModule=
</code></a></p>
</li>
<li>
<p><a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/%7BJXURL%7D/org/eclipse/jetty/jaas=
/spi/PropertyFileLoginModule.html"><code>org.eclipse.jetty.jaas.spi.Propert=
yFileLoginModule</code></a></p>
</li>
<li>
<p><a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/%7BJXURL%7D/org/eclipse/jetty/jaas=
/spi/DataSourceLoginModule.html"><code>org.eclipse.jetty.jaas.spi.DataSourc=
eLoginModule</code></a></p>
</li>
<li>
<p><a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/%7BJXURL%7D/org/eclipse/jetty/jaas=
/spi/LdapLoginModule.html"><code>org.eclipse.jetty.jaas.ldap.LdapLoginModul=
e</code></a></p>
</li>
</ul>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Note</div>
</td>
<td class=3D"content">
Passwords can be stored in clear text, obfuscated or checksummed.
The class <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-je=
tty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jet=
ty/util/security/Password.html"><code>org.eclipse.jetty.util.security.Passw=
ord</code></a> should be used to generate all varieties of passwords,the ou=
tput from which can be put in to property files or entered into database ta=
bles.
See more on this under the Configuration section on <a href=3D"file:///home=
/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src=
/main/asciidoc/index.html#configuring-security-secure-passwords">securing p=
asswords</a>.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_jdbcloginmodule">JDBCLoginModule</h5>
<div class=3D"paragraph">
<p>The <code>JDBCLoginModule</code> stores user passwords and roles in a da=
tabase that are accessed via JDBC calls.
You can configure the JDBC connection information, as well as the names of =
the table and columns storing the username and credential, and the names of=
 the table and columns storing the roles.</p>
</div>
<div class=3D"paragraph">
<p>Here is an example login module configuration file entry for it using an=
 HSQLDB driver:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-ini" data-lang=3D"ini">jdb=
c {
      org.eclipse.jetty.jaas.spi.JDBCLoginModule required
      debug=3D"true"
      dbUrl=3D"jdbc:hsqldb:."
      dbUserName=3D"sa"
      dbDriver=3D"org.hsqldb.jdbcDriver"
      userTable=3D"myusers"
      userField=3D"myuser"
      credentialField=3D"mypassword"
      userRoleTable=3D"myuserroles"
      userRoleUserField=3D"myuser"
      userRoleRoleField=3D"myrole";
      };</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>There is no particular schema required for the database tables storing t=
he authentication and role information.
The properties <code>userTable</code>, <code>userField</code>, <code>creden=
tialField</code>, <code>userRoleTable</code>, <code>userRoleUserField</code=
>, <code>userRoleRoleField</code> configure the names of the tables and the=
 columns within them that are used to format the following queries:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-sql" data-lang=3D"sql">  s=
elect &lt;credentialField&gt; from &lt;userTable&gt;
          where &lt;userField&gt; =3D?
  select &lt;userRoleRoleField&gt; from &lt;userRoleTable&gt;
          where &lt;userRoleUserField&gt; =3D?</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Credential and role information is lazily read from the database when a =
previously unauthenticated user requests authentication.
Note that this information is <em>only</em> cached for the length of the au=
thenticated session.
When the user logs out or the session expires, the information is flushed f=
rom memory.</p>
</div>
<div class=3D"paragraph">
<p>Note that passwords can be stored in the database in plain text or encod=
ed formats - see the note on "Passwords/Credentials" above.</p>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_datasourceloginmodule">DataSourceLoginModule</h5>
<div class=3D"paragraph">
<p>Similar to the <code>JDBCLoginModule</code>, but this <code>LoginModule<=
/code> uses a <code>DataSource</code> to connect to the database instead of=
 a JDBC driver. The <code>DataSource</code> is obtained by performing a JND=
I lookup on <code>java:comp/env/${dnJNDIName}</code>.</p>
</div>
<div class=3D"paragraph">
<p>A sample login module configuration using this method:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-ini" data-lang=3D"ini">ds =
{
     org.eclipse.jetty.jaas.spi.DataSourceLoginModule required
     debug=3D"true"
     dbJNDIName=3D"ds"
     userTable=3D"myusers"
     userField=3D"myuser"
     credentialField=3D"mypassword"
     userRoleTable=3D"myuserroles"
     userRoleUserField=3D"myuser"
     userRoleRoleField=3D"myrole";
    };</code></pre>
</div>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_propertyfileloginmodule">PropertyFileLoginModule</h5>
<div class=3D"paragraph">
<p>With this login module implementation, the authentication and role infor=
mation is read from a property file.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-ini" data-lang=3D"ini">pro=
ps {
        org.eclipse.jetty.jaas.spi.PropertyFileLoginModule required
        debug=3D"true"
        file=3D"/somewhere/somefile.props";
      };</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The file parameter is the location of a properties file of the same form=
at as the <code>etc/realm.properties</code> example file.
The format is:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-text" data-lang=3D"text">&=
lt;username&gt;: &lt;password&gt;[,&lt;rolename&gt; ...]</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Here=E2=80=99s an example:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-ini" data-lang=3D"ini">fre=
d: OBF:1xmk1w261u9r1w1c1xmq,user,admin
harry: changeme,user,developer
tom: MD5:164c88b302622e17050af52c89945d44,user
dick: CRYPT:adpexzg3FUZAk,admin</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The contents of the file are fully read in and cached in memory the firs=
t time a user requests authentication.</p>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_ldaploginmodule">LdapLoginModule</h5>
<div class=3D"paragraph">
<p>Here=E2=80=99s an example:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-ini" data-lang=3D"ini">lda=
ploginmodule {
   org.eclipse.jetty.jaas.spi.LdapLoginModule required
   debug=3D"true"
   contextFactory=3D"com.sun.jndi.ldap.LdapCtxFactory"
   hostname=3D"ldap.example.com"
   port=3D"389"
   bindDn=3D"cn=3DDirectory Manager"
   bindPassword=3D"directory"
   authenticationMethod=3D"simple"
   forceBindingLogin=3D"false"
   userBaseDn=3D"ou=3Dpeople,dc=3Dalcatel"
   userRdnAttribute=3D"uid"
   userIdAttribute=3D"uid"
   userPasswordAttribute=3D"userPassword"
   userObjectClass=3D"inetOrgPerson"
   roleBaseDn=3D"ou=3Dgroups,dc=3Dexample,dc=3Dcom"
   roleNameAttribute=3D"cn"
   roleMemberAttribute=3D"uniqueMember"
   roleObjectClass=3D"groupOfUniqueNames";
   };</code></pre>
</div>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_writing_your_own_loginmodule">Writing your Own LoginModule</h4>
<div class=3D"paragraph">
<p>If you want to implement your own custom <code>LoginModule</code>, there=
 are two classes to be familiar with:  <code>org.eclipse.jetty.jaas.spi.Abs=
tractLoginModule</code> and <code>org.eclipse.jetty.jaas.spi.UserInfo</code=
>.</p>
</div>
<div class=3D"paragraph">
<p>The <code>org.eclipse.jetty.jaas.spi.AbstractLoginModule</code> implemen=
ts all of the <code>javax.security.auth.spi.LoginModule</code> methods.
All you need to do is to implement the <code>getUserInfo</code> method to r=
eturn a <code>org.eclipse.jetty.jaas.UserInfo</code> instance which encapsu=
lates the username, password and role names (note: as <code>java.lang.Strin=
gs</code>) for a user.</p>
</div>
<div class=3D"paragraph">
<p>The <code>AbstractLoginModule</code> does not support any caching, so if=
 you want to cache UserInfo (eg as does the <code>org.eclipse.jetty.jaas.sp=
i.PropertyFileLoginModule</code>) then you must provide this yourself.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_other_goodies">Other Goodies</h4>
<div class=3D"sect4">
<h5 id=3D"_requestparametercallback">RequestParameterCallback</h5>
<div class=3D"paragraph">
<p>As all servlet containers intercept and process a form submission with a=
ction <code>j_security_check</code>, it is usually not possible to insert a=
ny extra input fields onto a login form with which to perform authenticatio=
n: you may only pass <code>j_username</code> and <code>j_password</code>.
For those rare occasions when this is not good enough, and you require more=
 information from the user in order to authenticate them, you can use the J=
AAS callback handler <code>org.eclipse.jetty.jaas.callback.RequestParameter=
Callback</code>.
This callback handler gives you access to all parameters that were passed i=
n the form submission.
To use it, in the <code>login()</code> method of your custom login module, =
add the <code>RequestParameterCallback</code> to the list of callback handl=
ers the login module uses, tell it which params you are interested in, and =
then get the value of the parameter back.
Here is an example:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">p=
ublic class FooLoginModule extends AbstractLoginModule
{
     public boolean login()
        throws LoginException
     {

        Callback[] callbacks =3D new Callback[3];
        callbacks[0] =3D new NameCallback();
        callbacks[1] =3D new ObjectCallback();

        //as an example, look for a param named "extrainfo" in the request
        //use one RequestParameterCallback() instance for each param you wa=
nt to access
        callbacks[2] =3D new RequestParameterCallback ();
        ((RequestParameterCallback)callbacks[2]).setParameterName ("extrain=
fo");


        callbackHandler.handle(callbacks);
        String userName =3D ((NameCallback)callbacks[0]).getName();
        Object pwd =3D ((ObjectCallback)callbacks[1]).getObject();
        List paramValues =3D ((RequestParameterCallback)callbacks[2]).getPa=
rameterValues();

        //use the userName, pwd and the value(s) of the parameter named "ex=
trainfo" to
        //authenticate the user

     }
}</code></pre>
</div>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_example_jaas_webapp">Example JAAS WebApp</h5>
<div class=3D"paragraph">
<p>An example webapp using JAAS can be found in the Jetty GitHub repository=
:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p><a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/%7BGITBROWSEURL%7D/tests/test-weba=
pps/test-jaas-webapp"></a><a href=3D"https://github.com/eclipse/jetty.proje=
ct/tree/master/tests/test-webapps/test-jaas-webapp" class=3D"bare">https://=
github.com/eclipse/jetty.project/tree/master/tests/test-webapps/test-jaas-w=
ebapp</a></p>
</li>
</ul>
</div>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"spnego-support">Spnego Support</h3>
<div class=3D"paragraph">
<p>Simple and Protected GSSAPI Negotiation Mechanism (Spnego) is a way for =
users to be seamlessly authenticated when running on a Windows or Active Di=
rectory based network.
Jetty supports this type of authentication and authorization through the JD=
K (which has been enabled since the later versions of Java 6 and 7).
Also important to note is that this is an <em>incredibly</em> fragile setup=
 where everything needs to be configured just right for things to work, oth=
erwise it can fail in fun and exciting, not to mention obscure, ways.</p>
</div>
<div class=3D"paragraph">
<p>There is a substantial amount of configuration and testing required to e=
nable this feature as well as knowledge and access to central systems on a =
Windows network such as the Active Domain Controller and the ability to cre=
ate and maintain service users.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"_configuring_jetty_and_spnego">Configuring Jetty and Spnego</h4>
<div class=3D"paragraph">
<p>To run with Spengo enabled the following command line options are requir=
ed:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">-Djava.security.krb5.conf=3D/path/to/jetty/etc/krb5.ini \
-Djava.security.auth.login.config=3D/path/to/jetty/etc/spnego.conf \
-Djavax.security.auth.useSubjectCredsOnly=3Dfalse</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>For debugging the Spengo authentication the following options are very h=
elpful:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">-Dorg.eclipse.jetty.LEVEL=3Ddebug \
-Dsun.security.spnego.debug=3Dall</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Spengo Authentication must be enabled in the webapp in the following way=
.
The name of the role will be different for your network.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"> <s=
ecurity-constraint>
   <web-resource-collection>
     <web-resource-name>Secure Area</web-resource-name>
     <url-pattern>/secure/me/*</url-pattern>
   </web-resource-collection>
   <auth-constraint>
     <!-- this is the domain that the user is a member of -->
     <role-name>MORTBAY.ORG</role-name>
   </auth-constraint>
 </security-constraint>
 <login-config>
   <auth-method>SPNEGO</auth-method>
   <realm-name>Test Realm</realm-name>
   <!-- optionally to add custom error page -->
   <spnego-login-config>
     <spengo-error-page>/loginError.html?param=3Dfoo
   </spengo-error-page></spnego-login-config>
 </login-config></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>A corresponding <code>UserRealm</code> needs to be created either progra=
mmatically if embedded, via the <code>jetty.xml</code> or in a context file=
 for the webapp.</p>
</div>
<div class=3D"paragraph">
<p>This is what the configuration within a Jetty xml file would look like.<=
/p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml">  <=
call name=3D"addBean">
     <arg>
       <new class=3D"org.eclipse.jetty.security.SpnegoLoginService">
         <set name=3D"name">Test Realm</set>
         <set name=3D"config"><property name=3D"jetty.home" default=3D".">/=
etc/spnego.properties</property></set>
       </new>
     </arg>
   </call></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>This is what the configuration within a context xml file would look like=
.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"> <g=
et name=3D"securityHandler">
   <set name=3D"loginService">
     <new class=3D"org.eclipse.jetty.security.SpnegoLoginService">
       <set name=3D"name">Test Realm</set>
       <set name=3D"config">
        <systemproperty name=3D"jetty.home" default=3D".">/etc/spnego.prope=
rties
      </systemproperty></set>
     </new>
   </set>
   <set name=3D"checkWelcomeFiles">true</set>
 </get></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>There are a number of important configuration files with S3pnego that ar=
e required. The default values for these configuration files from this
test example are found in the <code>/etc</code> folder of the Jetty distrib=
ution.</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">spnego.properties</dt>
<dd>
<p>configures the user realm with runtime properties</p>
</dd>
<dt class=3D"hdlist1">krb5.ini</dt>
<dd>
<p>configures the underlying kerberos setup</p>
</dd>
<dt class=3D"hdlist1">spnego.conf</dt>
<dd>
<p>configures the glue between gssapi and kerberos</p>
</dd>
</dl>
</div>
<div class=3D"paragraph">
<p>It is important to note that the keytab file referenced in the <code>krb=
5.ini</code> and the <code>spengo.conf</code> files needs to contain the ke=
ytab for the <code>targetName</code> for the http server.
To do this use a process similar to this:</p>
</div>
<div class=3D"paragraph">
<p>On the Windows Active Domain Controller run:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">$ setspn -A HTTP/linux.mortbay.org ADUser</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>To create the keytab file use the following process:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">$ ktpass -out c:\dir\krb5.keytab -princ HTTP/linux.mortbay.org@MORTBAY.O=
RG -mapUser ADUser -mapOp set -pass ADUserPWD -crypto RC4-HMAC-NT -pType KR=
B5_NT_PRINCIPAL</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>This step will give you the keytab file which should then be copied to t=
he machine running the http server and referenced from the configuration fi=
les.
For our testing we put the keytab into the <code>/etc</code> directory of J=
etty and referenced it from there.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_configuring_firefox">Configuring Firefox</h4>
<div class=3D"paragraph">
<p>The follows steps have been required to inform Firefox that it should us=
e a negotiation dialog to authenticate.</p>
</div>
<div class=3D"olist arabic">
<ol class=3D"arabic">
<li>
<p>Browse to about:config and agree to the warnings</p>
</li>
<li>
<p>Search through to find the <em>network</em> settings</p>
</li>
<li>
<p>Set <code>network.negotiate-auth.delegation-uris</code> to <a href=3D"ht=
tp://%2Chttps//" class=3D"bare">http://,https://</a></p>
</li>
<li>
<p>Set <code>network.negotiate-auth.trusted-uris</code> to <a href=3D"http:=
//%2Chttps//" class=3D"bare">http://,https://</a></p>
</li>
</ol>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_configuring_internet_explorer">Configuring Internet Explorer</h4=
>
<div class=3D"paragraph">
<p>The follows steps have been required to inform Internet Explorer that it=
 should use a negotiation dialog to authenticate.</p>
</div>
<div class=3D"olist arabic">
<ol class=3D"arabic">
<li>
<p>Tools =E2=86=92 Options =E2=86=92 Security =E2=86=92 Local Intranet =E2=
=86=92 Sites (everything should be checked here)</p>
</li>
<li>
<p>Tools =E2=86=92 Options =E2=86=92 Security =E2=86=92 Local Intranet =E2=
=86=92 Sites =E2=86=92 Advanced (add url to server (http:// and/or https://=
 use the hostname!)</p>
</li>
<li>
<p>Tools =E2=86=92 Options =E2=86=92 Security =E2=86=92 Local Intranet =E2=
=86=92 Sites =E2=86=92 Advanced =E2=86=92 Close</p>
</li>
<li>
<p>Tools =E2=86=92 Options =E2=86=92 Security =E2=86=92 Local Intranet =E2=
=86=92 Sites =E2=86=92 Ok</p>
</li>
<li>
<p>Tools =E2=86=92 Options =E2=86=92 Advanced =E2=86=92 Security (in the ch=
eckbox list)</p>
</li>
<li>
<p>Locate and check <em>Enable Integrated Windows Authentication</em></p>
</li>
<li>
<p>Tools =E2=86=92 Options =E2=86=92 Advanced =E2=86=92 Security =E2=86=92 =
Ok</p>
</li>
<li>
<p>Close IE then reopen and browse to your Spengo protected resource</p>
</li>
</ol>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Note</div>
</td>
<td class=3D"content">
You must go to the hostname and not the IP.
If you go to the IP it will default to NTLM authentication=E2=80=A6=E2=80=
=8Bthe following conditions must be true for Spnego authentication to work:
* You must be within the Intranet Zone of the network
* Accessing the server using a Hostname rather than IP
* Integrated Windows Authentication in IE is enabled and the host is truste=
d in Firefox
* The server is not local to the browser, it can=E2=80=99t be running on lo=
calhost
* The client=E2=80=99s Kerberos system is authenticated to a domain control=
ler
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
</div>
</div>
</div>
</div>
<div class=3D"sect1">
<h2 id=3D"configuring-jsp">Configuring JSP Support</h2>
<div class=3D"sectionbody">
<div class=3D"sect2">
<h3 id=3D"jsp-support">Configuring JSP</h3>
<div class=3D"paragraph">
<p>This document provides information about configuring Java Server Pages (=
JSP) for Jetty.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"which-jsp-implementation">Which JSP Implementation</h4>
<div class=3D"paragraph">
<p>Jetty uses Jasper from <a href=3D"http://tomcat.apache.org/tomcat-8.0-do=
c/jasper-howto.html">Apache</a> as the default JSP container implementation=
.</p>
</div>
<div class=3D"paragraph">
<p>By default the Jetty distribution enables the JSP <a href=3D"file:///hom=
e/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/sr=
c/main/asciidoc/index.html#startup-modules">module</a>, and by default, thi=
s module is set to Apache Jasper.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-plain" data-lang=3D"plain"=
>Unresolved directive in configuring/jsp/configuring-jsp.adoc - include::{S=
RCDIR}/jetty-home/src/main/resources/modules/jsp.mod[]</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Note that the availability of some JSP features may depend on which JSP =
container implementation you are using.
Note also that it may not be possible to precompile your JSPs with one cont=
ainer and deploy to the other.</p>
</div>
<div class=3D"sect4">
<h5 id=3D"_jsps_and_embedding">JSPs and Embedding</h5>
<div class=3D"paragraph">
<p>If you have an embedded setup for your webapp and wish to use JSPs, you =
will need to ensure that a JSP engine is correctly initialized.</p>
</div>
<div class=3D"paragraph">
<p>For Apache, a Servlet Specification 3.1 style <a href=3D"file:///home/ti=
an/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/ma=
in/asciidoc/index.html#servlet-container-initializers">ServletContainerInit=
ializer</a> is used to accomplish this.
You will need to ensure that this ServletContainerInitializer is run by jet=
ty. Perhaps the easiest way to do this is to enable annotations processing =
so that Jetty automatically discovers and runs it.
The <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.=
4.x/jetty-documentation/src/main/asciidoc/index.html#embedded-examples">Emb=
edded Examples</a> section includes a <a href=3D"file:///home/tian/Download=
s/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc=
/index.html#embedded-webapp-jsp">worked code example</a> of how to do this.=
</p>
</div>
<div class=3D"paragraph">
<p>Alternatively, you can manually wire in the appropriate ServletContainer=
Initializer as shown in the <a href=3D"https://github.com/jetty-project/emb=
edded-jetty-jsp/blob/master/src/main/java/org/eclipse/jetty/demo/Main.java"=
>embedded-jetty-jsp</a> example on <a href=3D"https://github.com/jetty-proj=
ect">GitHub</a>, in which case you will not need the jetty-annotations jar =
on your classpath, nor include the AnnotationConfiguration in the list of <=
a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/j=
etty-documentation/src/main/asciidoc/index.html#webapp-configurations">conf=
iguration classes</a>.</p>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_precompiling_jsps">Precompiling JSPs</h4>
<div class=3D"paragraph">
<p>You can either follow the instructions on precompilation provided by Apa=
che, or if you are using Maven for your builds, you can use the <a href=3D"=
file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-docum=
entation/src/main/asciidoc/index.html#jetty-jspc-maven-plugin">jetty-jspc-m=
aven</a> plugin to do it for you.</p>
</div>
<div class=3D"paragraph">
<p>If you have precompiled your JSPs, and have customized the output packag=
e prefix (which is <code>org.apache.jsp</code> by default), you should conf=
igure your webapp context to tell Jetty about this custom package name.
You can do this using a servlet context init-param called <code>org.eclipse=
.jetty.servlet.jspPackagePrefix</code>.</p>
</div>
<div class=3D"paragraph">
<p>For example, suppose you have precompiled your JSPs with the custom pack=
age prefix of <code>com.acme</code>, then you would add the following lines=
 to your <code>web.xml</code> file:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml">  <=
context-param>
    <param-name>org.eclipse.jetty.servlet.jspPackagePrefix</param-name>
    <param-value>com.acme</param-value>
  </context-param></code></pre>
</div>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Note</div>
</td>
<td class=3D"content">
Both Jetty Maven plugins - <a href=3D"file:///home/tian/Downloads/b60/ebook=
/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html=
#jetty-jspc-maven-plugin">jetty-jspc-maven-plugin</a> and the <a href=3D"fi=
le:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documen=
tation/src/main/asciidoc/index.html#jetty-maven-plugin">jetty-maven-plugin<=
/a> - will only use Apache Jasper.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
<div class=3D"sect4">
<h5 id=3D"compiling-jsps">Apache JSP Container</h5>
<div class=3D"paragraph">
<p>By default, the Apache JSP container will look for the Eclipse Java Comp=
iler (jdt).
The Jetty distribution ships a copy of this in <code>{$jetty.home}/lib/apac=
he-jsp</code>.
If you wish to use a different compiler, you will need to configure the <co=
de>compilerClassName</code> init-param on the <code>JspServlet</code> with =
the name of the class.</p>
</div>
<table class=3D"tableblock frame-all grid-all spread">
<caption class=3D"title">Table 10. Understanding Apache JspServlet Paramete=
rs</caption>
<colgroup>
<col style=3D"width: 25%;">
<col style=3D"width: 25%;">
<col style=3D"width: 25%;">
<col style=3D"width: 25%;">
</colgroup>
<thead>
<tr>
<th class=3D"tableblock halign-left valign-top">init param</th>
<th class=3D"tableblock halign-left valign-top">Description</th>
<th class=3D"tableblock halign-left valign-top">Default</th>
<th class=3D"tableblock halign-left valign-top"><code>webdefault.xml</code>=
</th>
</tr>
</thead>
<tbody>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">cla=
sspath</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>Classpath used for jsp compilation. Only used if
                org.apache.catalina.jsp_classpath context attribute is not
                set, which it is in Jetty.</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">-</=
p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">=E2=
=80=93</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">cla=
ssdebuginfo</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Inc=
lude debugging info in class file.</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">TRU=
E</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">=E2=
=80=93</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">che=
ckInterval</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Int=
erval in seconds between background recompile checks.
Only relevant if `
                development=3Dfalse`.</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">0</=
p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">=E2=
=80=93</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">dev=
elopment</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>development=3Dtrue</code>, recompilation checks occur on each
request. See also `
                modificationTestInterval`.</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">TRU=
E</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">=E2=
=80=93</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">dis=
playSourceFragment</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Sho=
uld a source fragment be included in
exception messages</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">TRU=
E</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">=E2=
=80=93</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">err=
orOnUseBeanInvalidClassAttribute</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Sho=
uld Jasper issue an error when
the value of the class attribute in an useBean action is not a valid
bean class</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">TRU=
E</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">=E2=
=80=93</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">for=
k</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Sho=
uld Ant fork its Java compiles of JSP pages?</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">TRU=
E</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">FAL=
SE</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">kee=
pgenerated</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Do =
you want to keep the generated Java files around?</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">TRU=
E</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">=E2=
=80=93</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">tri=
mSpaces</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Sho=
uld white spaces between directives or actions be
trimmed?</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">FAL=
SE</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">=E2=
=80=93</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">ena=
blePooling</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Det=
ermines whether tag handler pooling is enabled.</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">TRU=
E</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">=E2=
=80=93</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">eng=
ineOptionsClass</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">All=
ows specifying the Options class used to
configure Jasper. If not present, the default EmbeddedServletOptions
will be used.</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">=E2=
=80=93</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">map=
pedFile</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Sup=
port for mapped Files. Generates a servlet that has a
print statement per line of the JSP file</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">TRU=
E</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">=E2=
=80=93</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">sup=
pressSmap</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Gen=
eration of SMAP info for JSR45 debugging.</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">FAL=
SE</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">=E2=
=80=93</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">dum=
pSmap</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Dum=
p SMAP JSR45 info to a file.</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">FAL=
SE</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">=E2=
=80=93</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">gen=
StrAsCharArray</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Opt=
ion for generating Strings.</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">FAL=
SE</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">=E2=
=80=93</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">ieC=
lassId</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">The=
 class-id value to be sent to Internet Explorer when
using &lt;jsp:plugin&gt; tags.</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">cls=
id:8AD9C840-044E-11D1-B3E9-00805F499D93</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">=E2=
=80=93</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">max=
LoadedJsps</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">The=
 maximum number of JSPs that will be loaded for a web
application. If more than this number of JSPs are loaded, the least
recently used JSPs will be unloaded so that the number of JSPs loaded at
any one time does not exceed this limit. A value of zero or less
indicates no limit.</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">-1<=
/p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">=E2=
=80=93</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">jsp=
IdleTimeout</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">The=
 amount of time in seconds a JSP can be idle before
it is unloaded. A value of zero or less indicates never unload.</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">-1<=
/p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">=E2=
=80=93</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">scr=
atchDir</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Dir=
ectory where servlets are generated. See</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">=E2=
=80=93</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">=E2=
=80=93</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">com=
pilerClassName</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">If =
not set, defaults to the Eclipse jdt compiler.</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">=E2=
=80=93</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">com=
piler</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Use=
d if the Eclipse jdt compiler cannot be found on the
classpath. It is the classname of a compiler that Ant should invoke.</p></t=
d>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">=E2=
=80=93</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">=E2=
=80=93</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">com=
pilerTargetVM</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Tar=
get vm to compile for.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">1.7=
</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">=E2=
=80=93</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">com=
pilerSourceVM</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Set=
s source compliance level for the jdt compiler.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">1.7=
</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">=E2=
=80=93</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">jav=
aEncoding</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Pas=
s through the encoding to use for the compilation.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">UTF=
8</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">=E2=
=80=93</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">mod=
ificationTestInterval</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">If =
<code>development=3Dtrue</code>, interval between
recompilation checks, triggered by a request.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">4</=
p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">=E2=
=80=93</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">xpo=
weredBy</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Gen=
erate an X-Powered-By response header.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">FAL=
SE</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">FAL=
SE</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">rec=
ompileOnFail</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">If =
a JSP compilation fails should the
modificationTestInterval be ignored and the next access trigger a
re-compilation attempt? Used in development mode only and is disabled by
default as compilation may be expensive and could lead to excessive
resource usage.</p></td>
</tr>
</tbody>
</table>
</div>
<div class=3D"sect4">
<h5 id=3D"configuring-jsp-for-jetty">Configuration</h5>
<div class=3D"paragraph">
<p>The JSP engine has many configuration parameters.
Some parameters affect only precompilation, and some affect runtime recompi=
lation checking.
Parameters also differ among the various versions of the JSP engine.
This page lists the configuration parameters, their meanings, and their def=
ault settings.
Set all parameters on the <code>org.apache.jasper.JspServlet</code> instanc=
e defined in the <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.pro=
ject-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#webdefaul=
t-xml"><code>webdefault.xml</code></a> file.</p>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Note</div>
</td>
<td class=3D"content">
Be careful: for all of these parameters, if the value you set doesn=E2=80=
=99t take effect, try using all lower case instead of camel case, or capita=
lizing only some of the words in the name, as JSP is inconsistent in its pa=
rameter naming strategy.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"modifying-configuration">Modifying Configuration</h4>
<div class=3D"sect4">
<h5 id=3D"overriding-webdefault.xml">Overriding <code>webdefault.xml</code>=
</h5>
<div class=3D"paragraph">
<p>You can make a copy of the <a href=3D"file:///home/tian/Downloads/b60/eb=
ook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.h=
tml#webdefault-xml">{$jetty.home}/etc/webdefault.xml</a> that ships with Je=
tty, apply your changes, and use it instead of the shipped version.
The example below shows how to do this when using the Jetty Maven plugin.</=
p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml">  <=
plugin>
    <groupid>org.eclipse.jetty</groupid>
    <artifactid>jetty-maven-plugin</artifactid>
    <configuration>
      <webapp>
        <defaultsdescriptor>src/main/resources/webdefault.xml</defaultsdesc=
riptor>
      </webapp>
  </configuration></plugin></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>If you are using the Jetty distribution, and you want to change the JSP =
settings for just one or a few of your webapps, copy the <code>{$jetty.home=
}/etc/webdefault.xml</code> file somewhere, modify it, and then use a <a hr=
ef=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty=
-documentation/src/main/asciidoc/index.html#intro-jetty-configuration-conte=
xts">context xml</a> file to set this file as the <code>defaultsDescriptor<=
/code> for your webapp. Here=E2=80=99s a snippet:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"> <c=
onfigure class=3D"">"org.eclipse.jetty.webapp.WebAppContext"&gt;

   <set name=3D"">"contextPath"&gt;/foo</set>
   <set name=3D"">"war"&gt;<systemproperty name=3D"">"jetty.home" &gt;defau=
lt=3D&gt;"."/&gt;/webapps/foobar.war</systemproperty></set>
   <set name=3D"">"defaultsDescriptor"&gt;/home/smith/dev/webdefault.xml</s=
et>

 </configure></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>If you want to change the JSP settings for all webapps, edit the <code>{=
$jetty.home}/etc/webdefaults.xml</code> file directly instead.</p>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"configuring-jsp-servlet-in-web.xml">Configuring the JSP Servlet i=
n web.xml</h5>
<div class=3D"paragraph">
<p>Another option is to add an entry for the JSPServlet to the <code>WEB-IN=
F/web.xml</code> file of your webapp and change or add init-params.
You may also add (but not remove) servlet-mappings.
You can use the entry in <a href=3D"file:///home/tian/Downloads/b60/ebook/j=
etty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#w=
ebdefault-xml">{$jetty.home}/etc/webdefault.xml</a> as a starting point.</p=
>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"> <s=
ervlet id=3D"jsp">
     <servlet-name>jsp</servlet-name>
     <servlet-class>org.apache.jasper.servlet.JspServlet</servlet-class>
     <init-param>
         <param-name>logVerbosityLevel</param-name>
         <param-value>DEBUG</param-value>
     </init-param>
     <init-param>
         <param-name>fork</param-name>
         <param-value>&gt;false</param-value>
     </init-param>
     <init-param>
         <param-name>keepgenerated</param-name>
         <param-value>&gt;true</param-value>
     </init-param>
     ...

     <load-on-startup>0</load-on-startup>
   </servlet>

   <servlet-mapping>
     <servlet-name>jsp</servlet-name>
     <url-pattern>*.jsp</url-pattern>
     <url-pattern>*.jspf</url-pattern>
     <url-pattern>*.jspx</url-pattern>
     <url-pattern>*.xsp</url-pattern>
     <url-pattern>*.JSP</url-pattern>
     <url-pattern>*.JSPF</url-pattern>
     <url-pattern>*.JSPX</url-pattern>
     <url-pattern>*.XSP</url-pattern>
   </servlet-mapping>

   <servlet id=3D"my-servlet">
     <servlet-name>myServlet</servlet-name>
     <servlet-class>com.acme.servlet.MyServlet</servlet-class>
      ...</servlet></code></pre>
</div>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"jsp-async-support">Configuring Async Support</h5>
<div class=3D"paragraph">
<p>By default, Jetty does not enable async support for the JSP servlet.
Configuring the JSP servlet for async is relatively easy - simply define th=
e <code>async-supported</code> parameter as <code>true</code> in either you=
r <code>webdefault.xml</code> or the <code>web.xml</code> for a specific co=
ntext.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><se=
rvlet id=3D"jsp">
  <servlet-name>jsp</servlet-name>
  <async-supported>true</async-supported>
</servlet></code></pre>
</div>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"using-jstl-taglibs-for-jetty7-jetty8">Using JSTL Taglibs</h4>
<div class=3D"paragraph">
<p>The JavaServer Pages Standlard Tag Library (JSTL) is part of the Jetty d=
istribution and is automatically put on the classpath when you <a href=3D"f=
ile:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-docume=
ntation/src/main/asciidoc/index.html#which-jsp-implementation">select your =
flavour of JSP</a>.
It is also automatically on the classpath for the Jetty Maven plugin, which=
 uses the Apache JSP engine.</p>
</div>
<div class=3D"sect4">
<h5 id=3D"_embedding">Embedding</h5>
<div class=3D"paragraph">
<p>If you are using Jetty in an embedded scenario, and you need to use JSTL=
, then you must ensure that the JSTL jars are included on the <em>container=
=E2=80=99s</em> classpath - that is the classpath that is the <em>parent</e=
m> of the webapp=E2=80=99s classpath.
This is a restriction that arises from the JavaEE specification.</p>
</div>
<div class=3D"sect5">
<h6 id=3D"_apache_jsp">Apache JSP</h6>
<div class=3D"paragraph">
<p>You will need to put the jars that are present in the <code>{$jetty.home=
}/lib/apache-jstl</code> directory onto the <em>container=E2=80=99s</em> cl=
asspath.
The Apache JSP engine will find the JSTL tag definitions inside these jars =
during startup.</p>
</div>
<div class=3D"paragraph">
<p>As an efficiency enhancement, you can have jetty examine the JSTL jars t=
o find the tags, and pre-feed them into the Apache JSP engine.
This is more efficient, because jetty will only scan the jars you tell it t=
o, whereas the Apache JSP engine will scan every jar, which can be time-con=
suming in applications with a lot of jars on the container classpath.</p>
</div>
<div class=3D"paragraph">
<p>To take advantage of this efficiency enhancement, set up the <a href=3D"=
file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-docum=
entation/src/main/asciidoc/index.html#container-include-jar-pattern">org.ec=
lipse.jetty.server.webapp.ContainerIncludeJarPattern</a> to include a <a hr=
ef=3D"http://docs.oracle.com/javase/7/docs/api/java/util/regex/Pattern.html=
">pattern</a> that will match the names of the JSTL jars.
The <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.=
4.x/jetty-documentation/src/main/asciidoc/index.html#embedded-examples">Emb=
edded Examples</a> section includes a <a href=3D"file:///home/tian/Download=
s/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc=
/index.html#embedded-webapp-jsp">worked code example</a> of how to do this.
Below is a snippet from the example:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java"> =
 webapp.setAttribute("org.eclipse.jetty.server.webapp.ContainerIncludeJarPa=
ttern",".*/[^/]*taglibs.*\\.jar$");</code></pre>
</div>
</div>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"using-jsf-taglibs">Using JSF Taglibs</h4>
<div class=3D"paragraph">
<p>The following sections provide information about using JSF TagLibs with =
Jetty Standalone and the Jetty Maven Plugin.</p>
</div>
<div class=3D"sect4">
<h5 id=3D"using-jsf-taglibs-with-jetty-standalone">Using JSF Taglibs with J=
etty Distribution</h5>
<div class=3D"paragraph">
<p>If you want to use JSF with your webapp, you need to copy the JSF implem=
entation Jar (whichever Jar contains the <code>META-INF/*.tld</code> files =
from your chosen JSF implementation) into Jetty=E2=80=99s shared container =
lib directory.
You can either put them into the lib directory for Apache <code>{$jetty.hom=
e}/lib/apache-jsp</code> or put them into <code>{$jetty.home}/lib/ext</code=
>.</p>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"using-jsf-taglibs-with-jetty-maven-plugin">Using JSF Taglibs with=
 Jetty Maven Plugin</h5>
<div class=3D"paragraph">
<p>You should make your JSF jars dependencies of the plugin and <em>not</em=
> the webapp itself.
For example:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml">   =
<plugin>
    <groupid>org.eclipse.jetty</groupid>
    <artifactid>jetty-maven-plugin</artifactid>
    <configuration>
       <webapp>
         <contextpath>/${artifactId}</contextpath>
       </webapp>
       <scanintervalseconds>5</scanintervalseconds>
    </configuration>
    <dependencies>
      <dependency>
        <groupid>com.sun.faces</groupid>
        <artifactid>jsf-api</artifactid>
        <version>2.0.8</version>
      </dependency>
      <dependency>
        <groupid>com.sun.faces</groupid>
        <artifactid>jsf-impl</artifactid>
        <version>2.0.8</version>
     </dependency>
    </dependencies>
  </plugin></code></pre>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
<h1 id=3D"jetty-admin-guide" class=3D"sect0">Jetty Administration Guide</h1=
>
<div class=3D"sect1">
<h2 id=3D"startup">Starting Jetty</h2>
<div class=3D"sectionbody">
<div class=3D"sect2">
<h3 id=3D"startup-overview">Startup Overview</h3>
<div class=3D"paragraph">
<p>The <code>start.jar</code> bootstrap manages the startup of standalone J=
etty.
It is responsible for:</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">Building the classpath</dt>
<dd>
<p>The <code>start.jar</code> bootstrap builds a classpath for all the requ=
ired Jetty features and their dependencies.
It builds the classpath using  either the <code>--lib</code> option to <cod=
e>start.jar</code> to add an individual  classpath entry, or with the <code=
>--module</code> option that includes all the  libs and their dependencies =
for a module (a named Jetty feature).</p>
</dd>
<dt class=3D"hdlist1">Instantiating the Server Components</dt>
<dd>
<p>The server and its components are instantiated using either Jetty IoC XM=
L or Spring.
The Jetty server is a collection of POJOs for the server, connectors, sessi=
on managers and others.
These are instantiated, injected, and wired up together in XML files, commo=
nly one per module/feature, that are passed as arguments to <code>start.jar=
</code>.</p>
</dd>
<dt class=3D"hdlist1">Resolving Server Filesystem Locations</dt>
<dd>
<p>The <code>start.jar</code> mechanism resolves canonical locations for th=
e <code>${jetty.home}</code> and the <code>${jetty.base}</code> directories=
.
The <code>${jetty.home}</code> directory is the location of the standard di=
stribution of Jetty.
The <code>${jetty.base}</code> directory is the location of the local serve=
r customization and configurations.
+
If you want to modify the Jetty distribution, base and home can be the same=
 directory.
Separating the base and home directories allows the distribution to remain =
unmodified, with all customizations in the base directory, and thus simplif=
ies subsequent server version upgrades.</p>
</dd>
<dt class=3D"hdlist1">Parameterizing the Server Configuration</dt>
<dd>
<p>XML files primarily determine the server configuration.
Many of these files are parameterized to allow simple injection of host nam=
es, ports, passwords and more.
The <code>start.jar</code> mechanism allows you to set parameters on the co=
mmand line or in properties files.</p>
</dd>
</dl>
</div>
<div class=3D"paragraph">
<p>To achieve these start up mechanisms, the <code>start.jar</code> uses:</=
p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">Command line arguments</dt>
<dd>
<p>You can configure the entire server with command line arguments that spe=
cify libraries, properties and XML files.
However in practice the   INI and modules mechanisms (below) reduce the ver=
bosity of the command line.</p>
</dd>
<dt class=3D"hdlist1">INI files</dt>
<dd>
<p>The <code>start.jar</code> mechanism uses the contents of the <code>${je=
tty.base}/start.ini</code> and <code>${jetty.base}/start.d/*.ini</code> fil=
es with each line equivalent to a <code>start.jar</code> command line argum=
ent.
This means that either a global <code>start.ini</code> file or multiple <co=
de>start.d/feature.ini</code> files control the configuration of the server=
.</p>
</dd>
</dl>
</div>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Note</div>
</td>
<td class=3D"content">
<div class=3D"paragraph">
<p>It is important to chose <strong>either</strong> <code>${jetty.base}/sta=
rt.ini</code> or <code>${jetty.base}/start.d/*.ini</code> to manage configu=
ration.
Using both is not recommended and can lead to issues with your server.</p>
</div>
</td>
</tr>
</tbody></table>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">Modules</dt>
<dd>
<p>Instead of explicitly listing all the libraries, properties and XML file=
s for a feature, the <code>start.jar</code> mechanism allows you to create =
 modules.
A module is defined in a <code>modules/*.mod</code> file, including the lib=
raries, dependencies, XML, and template INI files for a Jetty feature.
Thus you can use a single <code>--module=3Dname</code> command line option =
as the equivalent of specifying  <code>--lib=3Dlocation</code>, <code>featu=
re.xml</code> or <code>name=3Dvalue</code> arguments for a feature and all =
its dependencies.
Modules also use their dependencies to control the ordering of libraries an=
d XML files.
There are several module files included with the Jetty distribution that co=
ver the most common server features, such as HTTP, HTTPS, SSL, Logging, Ann=
otations=E2=80=A6=E2=80=8Betc.
These module files should <strong>only</strong> be edited if you are making=
 structural changes to the way the feature will perform.
For more information, refer to the section on <a href=3D"file:///home/tian/=
Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/=
asciidoc/index.html#startup-modules">managing startup modules</a> later in =
this chapter.</p>
</dd>
<dt class=3D"hdlist1">XML Files</dt>
<dd>
<p>XML files in either Jetty IoC or Spring format instantiate the actual PO=
JO components of the server.
This includes all major components such as connectors, keystores, session m=
anagers, and data sources.
Typically there are one or more XML files per module, and these are  define=
d and activated in the corresponding module.</p>
</dd>
</dl>
</div>
<div class=3D"sect3">
<h4 id=3D"_startup_example">Startup Example</h4>
<div class=3D"paragraph">
<p>The simplest way to start Jetty is via the <code>start.jar</code> mechan=
ism using the following Java command line:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">[user]$ cd jetty-distribution-{VERSION}
[jetty-distribution-{VERSION}]$ java -jar start.jar --module=3Dhttp jetty.h=
ttp.port=3D8080</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>This command uses the <code>start.jar</code> mechanism to bootstrap the =
classpath, properties, and XML files with the metadata obtained from the <c=
ode>http</code> module.
Specifically the <code>http</code> module is defined in the <code>${jetty.h=
ome}/modules/http.mod</code> file, and includes the following:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">[jetty-distribution-{VERSION}]$ cat modules/http.mod
[depend]
server

[xml]
etc/jetty-http.xml

[ini-template]
jetty.http.port=3D8080
http.timeout=3D30000</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The <code>http</code> module declares that <code>http</code> depends on =
the server module, uses the <code>jetty-http.xml</code> file, and can be pa=
rameterized with <code>jetty.http.port</code> and <code>http.timeout</code>=
 parameters.
The INI-template section is not actually used by the command above, so the =
<code>jetty.http.port</code> must still be defined on the command line.</p>
</div>
<div class=3D"paragraph">
<p>Following the server dependency, the <code>${jetty.home}/modules/server.=
mod</code> file includes:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">[jetty-distribution-{VERSION}]$ cat modules/server.mod
[lib]
lib/servlet-api-3.1.jar
lib/jetty-http-${jetty.version}.jar
lib/jetty-server-${jetty.version}.jar
lib/jetty-xml-${jetty.version}.jar
lib/jetty-util-${jetty.version}.jar
lib/jetty-io-${jetty.version}.jar

[xml]
etc/jetty.xml

[ini-template]
threads.min=3D10
threads.max=3D200</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The <code>server</code> module declares the libraries the server needs a=
nd to use <code>jetty.xml</code> file.
The combined metadata of the <code>http</code> and <code>server</code> modu=
les results in <code>start.jar</code> generating the effective Java command=
 line required to start Jetty.</p>
</div>
<div class=3D"paragraph">
<p>Another way to see this is by asking Jetty what its configuration looks =
like by appending --list-config to the command line:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">[jetty-distribution-{VERSION}]$ java -jar start.jar --module=3Dhttp jett=
y.http.port=3D9099 --list-config

Java Environment:
-----------------
 java.home=3D/user/lib/jvm/jdk-7u21-x64/jre
 java.vm.vendor=3DOracle Corporation
 java.vm.version=3D23.25-b01
 java.vm.name=3DJava HotSpot(TM) 64-Bit Server VM
 java.vm.info=3Dmixed mode
 java.runtime.name=3DJava(TM) SE Runtime Environment
 java.runtime.version=3D1.7.0_25-b15
 java.io.tmpdir=3D/tmp

Jetty Environment:
-----------------
 jetty.home=3D/opt/jetty/jetty-distribution-{VERSION}
 jetty.base=3D/opt/jetty/jetty-distribution-{VERSION}
 jetty.version=3D{VERSION}

JVM Arguments:
--------------
 (no jvm args specified)

System Properties:
------------------
 jetty.home =3D /opt/jetty/jetty-distribution-{VERSION}
 jetty.base =3D /opt/jetty/jetty-distribution-{VERSION}

Properties:
-----------
 jetty.http.port =3D 9099

Jetty Server Classpath:
-----------------------
Version Information on 7 entries in the classpath.
Note: order presented here is how they would appear on the classpath.
      changes to the --module=3Dname command line options will be reflected=
 here.
 0:                    3.1.0 | ${jetty.home}/lib/servlet-api-3.1.jar
 1:                  3.1.RC0 | ${jetty.home}/lib/jetty-schemas-3.1.jar
 2:               {VERSION} | ${jetty.home}/lib/jetty-http-{VERSION}.jar
 3:               {VERSION} | ${jetty.home}/lib/jetty-server-{VERSION}.jar
 4:               {VERSION} | ${jetty.home}/lib/jetty-xml-{VERSION}.jar
 5:               {VERSION} | ${jetty.home}/lib/jetty-util-{VERSION}.jar
 6:               {VERSION} | ${jetty.home}/lib/jetty-io-{VERSION}.jar

Jetty Active XMLs:
------------------
 ${jetty.home}/etc/jetty.xml
 ${jetty.home}/etc/jetty-http.xml</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>This represents the entirety of the configuration that is applied to sta=
rt Jetty.</p>
</div>
<div class=3D"paragraph">
<p>If you don=E2=80=99t want to use the <code>start.jar</code> bootstrap, y=
ou can start Jetty using a traditional Java command line.</p>
</div>
<div class=3D"paragraph">
<p>The following is the equivalent Java command line for what the <code>sta=
rt.jar</code> bootstrap above performs.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">[user]$ cd jetty-distribution-{VERSION}
[jetty-distribution-{VERSION}]$ echo jetty.http.port=3D8080 &gt; /tmp/jetty=
.properties
[jetty-distribution-{VERSION}]$ export JETTY_HOME=3D`pwd`
[jetty-distribution-{VERSION}]$ export JETTY_BASE=3D`pwd`
[jetty-distribution-{VERSION}]$ export JETTY_VERSION=3D"${project.version}"
[jetty-distribution-{VERSION}]$ java -Djetty.home=3D$JETTY_HOME \
-Djetty.base=3D$JETTY_BASE \
-cp \
 $JETTY_HOME/lib/servlet-api-3.1.jar\
:$JETTY_HOME/lib/jetty-schemas-3.1.jar\
:$JETTY_HOME/lib/jetty-http-$JETTY_VERSION.jar\
:$JETTY_HOME/lib/jetty-server-$JETTY_VERSION.jar \
:$JETTY_HOME/lib/jetty-xml-$JETTY_VERSION.jar\
:$JETTY_HOME/lib/jetty-util-$JETTY_VERSION.jar\
:$JETTY_HOME/lib/jetty-io-$JETTY_VERSION.jar\
org.eclipse.jetty.xml.XmlConfiguration \
/tmp/jetty.properties \
$JETTY_HOME/etc/jetty.xml \
$JETTY_HOME/etc/jetty-http.xml</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The Java command line sets up the classpath with the core Jetty jars and=
 the servlet API, executes the XmlConfiguration class and passes it some XM=
L files that define the server and an HTTP connector running on the port de=
fined in the <code>jetty.properties</code> file.</p>
</div>
<div class=3D"paragraph">
<p>You can further simplify the startup of this server by using the INI tem=
plate defined by the modules to create a <code>start.ini</code> file with t=
he command:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">[user]$ cd jetty-distribution-{VERSION}
[jetty-distribution-{VERSION}]$ mkdir example-base
[example-base]$ cd example-base
[example-base]$ ls -la
total 8
drwxrwxr-x  2 user webgroup 4096 Oct  4 11:49 ./
drwxrwxr-x 12 user webgroup 4096 Oct  4 11:49 ../

[example-base]$ java -jar $JETTY_HOME/start.jar --add-to-start=3Dhttp

WARNING: http            initialised in ${jetty.base}/start.ini (appended)
WARNING: http            enabled in     ${jetty.base}/start.ini
WARNING: server          initialised in ${jetty.base}/start.ini (appended)
WARNING: server          enabled in     ${jetty.base}/start.ini

[example-base]$ ls -la
total 12
drwxrwxr-x  2 user webgroup 4096 Oct  4 11:55 ./
drwxrwxr-x 12 user webgroup 4096 Oct  4 11:49 ../
-rw-rw-r--  1 user webgroup  250 Oct  4 11:55 start.ini</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Once complete, you can edit the <code>start.ini</code> file to modify an=
y parameters and you can run the server with the simple command:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">[example-base]$ java -jar $JETTY_HOME/start.jar</code></pre>
</div>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"start-jar">Using start.jar</h3>
<div class=3D"paragraph">
<p>The most basic way of starting the Jetty standalone server is to execute=
 the <code>start.jar</code>, which is a bootstrap for starting Jetty with t=
he configuration you want.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">[jetty-distribution-{VERSION}]$ java -jar start.jar
2013-09-23 11:27:06.654:INFO:oejs.Server:main: jetty-{VERSION}
...</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Jetty is a highly modularized web server container.
Very little is mandatory and required, and most components are optional; yo=
u enable or disable them according to the needs of your environment.</p>
</div>
<div class=3D"paragraph">
<p>At its most basic, you configure Jetty from two elements:</p>
</div>
<div class=3D"olist arabic">
<ol class=3D"arabic">
<li>
<p>A set of libraries and directories that make up the server classpath.</p=
>
</li>
<li>
<p>A set of Jetty XML configuration files (IoC style) that establish how to=
 build the Jetty server and its components.</p>
</li>
</ol>
</div>
<div class=3D"paragraph">
<p>Instead of editing these directly, Jetty 9.1 introduced more options on =
how to configure Jetty (these are merely syntactic sugar that eventually re=
solve into the two basic configuration components).</p>
</div>
<div class=3D"paragraph">
<p>Jetty 9.1 Startup Features include:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>A separation of the Jetty distribution binaries in <code>${jetty.home}</=
code> and the environment specific configurations (and binaries) found in <=
code>${jetty.base}</code> (detailed in <a href=3D"file:///home/tian/Downloa=
ds/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciido=
c/index.html#startup-jetty-base-and-jetty-home">Managing Jetty Base and Jet=
ty Home.</a>)</p>
</li>
<li>
<p>You can enable a set of libraries and XML configuration files via the ne=
wly introduced <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.proje=
ct-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#startup-mod=
ules">module system.</a></p>
</li>
<li>
<p>All of the pre-built XML configuration files shipped in Jetty are now pa=
rameterized with properties that you can specify in your <code>${jetty.base=
}/start.ini</code> (demonstrated in <a href=3D"file:///home/tian/Downloads/=
b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/i=
ndex.html#quick-start-configure">Quick Start Configuration</a>).</p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>These are powerful new features, made to support a variety of styles of =
configuring Jetty, from a simple property based configuration, to handling =
multiple installations on a server, to customized stacks of technology on t=
op of Jetty, and even the classic, custom XML configurations of old.</p>
</div>
<div class=3D"paragraph">
<p>For example, if you use the <code>${jetty.base}</code> concepts properly=
, you can upgrade the Jetty distribution without having to remake your enti=
re tree of modifications to Jetty.
Simply separate out your specific modifications to the <code>${jetty.base}<=
/code>, and in the future, just upgrade your <code>${jetty.home}</code> dir=
ectory with a new Jetty distribution.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"executing-startjar">Executing start.jar</h4>
<div class=3D"paragraph">
<p>When executed <code>start.jar</code> performs the following actions:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>Loads and parses all INIs found in <code>${jetty.base}/start.d/*.ini</co=
de> as command line arguments.</p>
</li>
<li>
<p>Loads and parses <code>${jetty.base}/start.ini</code> as command line ar=
guments.</p>
</li>
<li>
<p>Parses actual command line arguments used to execute <code>start.jar</co=
de> itself.</p>
</li>
<li>
<p>Resolves any XML configuration files, modules, and libraries using base =
vs. home resolution steps:</p>
<div class=3D"olist arabic">
<ol class=3D"arabic">
<li>
<p>Checks whether file exists as relative reference to <code>${jetty.base}.=
</code></p>
</li>
<li>
<p>Checks whether file exists as relative reference to <code>${jetty.home}.=
</code></p>
</li>
<li>
<p>Uses default behavior of <code>java.io.File</code> (Relative to <code>Sy=
stem.getProperty</code> ("user.dir") and then as absolute file system path)=
.</p>
</li>
</ol>
</div>
</li>
<li>
<p>Loads any dependent modules (merges XXNK, library, and properties result=
s with active command line).</p>
</li>
<li>
<p>Builds out server classpath.</p>
</li>
<li>
<p>Determines run mode:</p>
<div class=3D"ulist">
<ul>
<li>
<p>Shows informational command line options and exit.</p>
</li>
<li>
<p>Executes Jetty normally, waits for Jetty to stop.</p>
</li>
<li>
<p>Executes a forked JVM to run Jetty in, waits for forked JVM to exit.</p>
</li>
</ul>
</div>
</li>
</ul>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_start_jar_command_line_options">start.jar Command Line Options</=
h4>
<div class=3D"sect4">
<h5 id=3D"_command_line_options">Command Line Options</h5>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">--help</dt>
<dd>
<p>Obtains the current list of command line options and some basic usage he=
lp.</p>
</dd>
<dt class=3D"hdlist1">--version</dt>
<dd>
<p>Shows the list of server classpath entries, and prints version informati=
on found for each entry.</p>
</dd>
<dt class=3D"hdlist1">--list-classpath</dt>
<dd>
<p>Similar to --version, shows the server classpath.</p>
</dd>
<dt class=3D"hdlist1">--list-config</dt>
<dd>
<p>Lists the resolved configuration that will start Jetty.</p>
<div class=3D"ulist">
<ul>
<li>
<p>Java environment</p>
</li>
<li>
<p>Jetty environment</p>
</li>
<li>
<p>JVM arguments</p>
</li>
<li>
<p>Properties</p>
</li>
<li>
<p>Server classpath</p>
</li>
<li>
<p>Server XML configuration files</p>
</li>
</ul>
</div>
</dd>
<dt class=3D"hdlist1">--dry-run</dt>
<dd>
<p>Prints the resolved command line that <code>start.jar</code> should use =
to start a forked instance of Jetty.</p>
</dd>
<dt class=3D"hdlist1">--exec</dt>
<dd>
<p>Starts a forked instance of Jetty.</p>
</dd>
<dt class=3D"hdlist1">--exec-properties=3D&lt;filename&gt;</dt>
<dd>
<p>Assign a fixed name to the file used to transfer properties to the sub p=
rocess.
This allows the generated properties file to be saved and reused.
Without this option, a temporary file is used.</p>
</dd>
<dt class=3D"hdlist1">--commands=3D&lt;filename&gt;</dt>
<dd>
<p>Instructs <code>start.jar</code> to use each line of the specified file =
as arguments on the command line.</p>
</dd>
</dl>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_debugg_and_start_logging">Debugg and Start Logging</h5>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">--debug</dt>
<dd>
<p>Enables debugging output of the startup procedure.</p>
<div class=3D"paragraph">
<p><strong>Note</strong>: This does not set up debug logging for Jetty itse=
lf.
For information on logging, please see the section on <a href=3D"file:///ho=
me/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/s=
rc/main/asciidoc/index.html#configuring-jetty-logging">Configuring Jetty Lo=
gging.</a></p>
</div>
</dd>
<dt class=3D"hdlist1">--start-log-file=3D&lt;filename&gt;</dt>
<dd>
<p>Sends all startup output to the filename specified.
Filename is relative to <code>${jetty.base}</code>.
This is useful for capturing startup issues where the Jetty-specific logger=
 has not yet kicked in due to a possible startup configuration error.</p>
</dd>
</dl>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_module_management">Module Management</h5>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">--list-modules</dt>
<dd>
<p>Lists all the modules defined by the system.
Looks for module files using the <a href=3D"file:///home/tian/Downloads/b60=
/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/inde=
x.html#startup-base-and-home">normal <code>${jetty.base}</code> and <code>$=
{jetty.home}</code> resolution logic</a>.
Also lists enabled state based on information present on the command line, =
and all active startup INI files.</p>
</dd>
<dt class=3D"hdlist1">--list-modules=3D&lt;tag&gt;(,&lt;tag&gt;)*</dt>
<dd>
<p>List modules by <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.p=
roject-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#startup=
-modules">tag.</a>
Use <em>*</em> for all tags.
Prefix a tag with <em>-</em> to exclude the tag.
The special tag "internal" is always excluded unless it is explicitly inclu=
ded.</p>
</dd>
<dt class=3D"hdlist1">--list-all-modules</dt>
<dd>
<p>List all modules.</p>
</dd>
<dt class=3D"hdlist1">--module=3D&lt;name&gt;,(&lt;name&gt;)*</dt>
<dd>
<p>Enables one or more modules by name (use <code>--list-modules</code> to =
see the list of available modules).
This enables all transitive (dependent) modules from the module system as w=
ell.
If you use this from the shell command line, it is considered a temporary e=
ffect, useful for testing out a scenario.
If you want this module to always be enabled, add this command to your <cod=
e>${jetty.base}/start.ini.</code></p>
</dd>
<dt class=3D"hdlist1">--add-to-start=3D&lt;name&gt;,(&lt;name&gt;)*</dt>
<dd>
<p>Enables a module by appending lines to the <code>${jetty.base}/start.ini=
</code> file.
The lines that are added are provided by the module-defined INI templates.
Note: Transitive modules are also appended.
If a module contains an .ini template with properties, you can also edit th=
ese properties when activating the module.
To do this, simply list the property and its value after the <code>-add-to-=
start</code> command, such as in the following example:</p>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">$ java -jar start.jar --add-to-start=3Dhttp jetty.http.port=3D8379 jetty=
.http.host=3D1.2.3.4</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Doing this will uncomment the property in the associated .ini file and s=
et it to the value specified.</p>
</div>
</dd>
<dt class=3D"hdlist1">--update-ini</dt>
<dd>
<p>Used to update a specified property or properties that exist in an exist=
ing .ini file.
Jetty scans the command line, <code>${jetty.base}</code> and <code>${jetty.=
home}</code> for .ini files that have the specified property and update it =
accordingly.</p>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">$ java -jar ../start.jar --update-ini jetty.http.port=3D8417
ConfigSource <command-line>
ConfigSource ${jetty.base}
INFO  : http            property updated jetty.http.port=3D8417
INFO  : http            updated ${jetty.base}/start.d/http.ini
ConfigSource ${jetty.home}</command-line></code></pre>
</div>
</div>
</dd>
<dt class=3D"hdlist1">--create-startd</dt>
<dd>
<p>Creates a <code>${jetty.base}/start.d/</code> directory.
If a <code>${jetty.base}/start.ini</code> file already exists, it is copied=
 to the <code>${jetty.base}/start.d</code> directory.</p>
</dd>
</dl>
</div>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Note</div>
</td>
<td class=3D"content">
<div class=3D"paragraph">
<p>With respect to <code>start.ini</code> and <code>start.d/*.ini</code> fi=
les, only <strong>one</strong> of these methods should be implemented.
Mixing a <code>start.ini</code> with module specific ini files in the <code=
>{$jetty.base}/start.d</code> directory can lead to server issues unless gr=
eat care is taken.
Please see <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-j=
etty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#start-vs-startd=
">Start.ini vs. Start.d</a> for more information.</p>
</div>
</td>
</tr>
</tbody></table>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">--write-module-graph=3D&lt;filename&gt;</dt>
<dd>
<p>Advanced feature: Creates a graphviz <a href=3D"http://graphviz.org/cont=
ent/dot-language">dot file</a> of the module graph as it exists for the act=
ive <code>${jetty.base}</code>.</p>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n"># generate module.dot
$ java -jar start.jar --module=3Dwebsocket --write-module-graph=3Dmodules.d=
ot

# post process to a PNG file
$ dot -Tpng -o modules.png modules.dot</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>See <a href=3D"http://graphviz.org/">graphviz.org</a> for details on <a =
href=3D"http://graphviz.org/content/command-line-invocation">how to post-pr=
ocess this dotty file</a> into the output best suited for your needs.</p>
</div>
</dd>
<dt class=3D"hdlist1">--create-files</dt>
<dd>
<p>Create any missing files that are required by initialized modules.
This may download a file from the network if the module provides a URL.</p>
</dd>
<dt class=3D"hdlist1">--skip-file-validation=3D&lt;modulename&gt;(,&lt;modu=
lename)*</dt>
<dd>
<p>Disable the [files] section validation of content in the <code>${jetty.b=
ase}</code> directory for a specific module.
Useful for modules that have downloadable content that is being overridden =
with alternatives in the <code>${jetty.base}`</code> directory.</p>
</dd>
</dl>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock caution">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Caution</div>
</td>
<td class=3D"content">
This advanced option is for administrators that fully understand the config=
uration of their <code>${jetty.base}</code> and are willing to forego some =
of the safety checks built into the jetty-start mechanism.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">--approve-all-licenses</dt>
<dd>
<p>Approve all license questions.
Useful for enabling modules from a script that does not require user intera=
ction.</p>
</dd>
</dl>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_startup_shutdown_command_line">Startup / Shutdown Command Line</=
h5>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">--stop</dt>
<dd>
<p>Sends a stop signal to the running Jetty instance.</p>
<div class=3D"paragraph">
<p>Note: The server must have been started with various stop properties for=
 this to work.</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">STOP.PORT=3D&lt;number&gt;</dt>
<dd>
<p>The port to use to stop the running Jetty server.
This is an internal port, opened on localhost, used solely for stopping the=
 running Jetty server.
Choose a port that you do not use to serve web traffic.</p>
<div class=3D"paragraph">
<p>Required for --stop to function.</p>
</div>
</dd>
<dt class=3D"hdlist1">STOP.KEY=3D&lt;alphanumeric&gt;</dt>
<dd>
<p>The passphrase defined to stop the server.</p>
<div class=3D"paragraph">
<p>Required for --stop to function.</p>
</div>
</dd>
<dt class=3D"hdlist1">STOP.WAIT=3D&lt;number&gt;</dt>
<dd>
<p>The time (in seconds) to wait for confirmation that the running Jetty se=
rver has stopped.
If not specified, the stopper waits indefinitely for the server to stop.</p=
>
<div class=3D"paragraph">
<p>If the time specified elapses, without a confirmation of server stop, th=
en the <code>--stop</code> command exits with a non-zero return code.</p>
</div>
</dd>
</dl>
</div>
</dd>
</dl>
</div>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"startup-base-and-home">Managing Jetty Base and Jetty Home</h3>
<div class=3D"paragraph">
<p>Instead of managing multiple Jetty implementations out of several differ=
ent distribution locations, it is possible to maintain a separation between=
 the binary installation of the standalone Jetty (known as <code>${jetty.ho=
me}</code>), and the customizations for your specific environment(s) (known=
 as <code>${jetty.base}</code>).
There should always only be one Jetty Home, but there can be multiple Jetty=
 Base directories that references.</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">Jetty Base</dt>
<dd>
<div class=3D"ulist">
<ul>
<li>
<p>Also known as the <code>${jetty.base}</code> property.</p>
</li>
<li>
<p>This is the location for your configurations and customizations to the J=
etty distribution.</p>
</li>
</ul>
</div>
</dd>
<dt class=3D"hdlist1">Jetty Home</dt>
<dd>
<div class=3D"ulist">
<ul>
<li>
<p>Also known as the <code>${jetty.home}</code> property.</p>
</li>
<li>
<p>This is the location for the Jetty distribution binaries, default XML Io=
C configurations, and default module definitions.</p>
</li>
</ul>
</div>
</dd>
</dl>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock important">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Important</div>
</td>
<td class=3D"content">
Jetty Home should always be treated as a standard of truth.
All configuration modifications, changes and additions should be made in th=
e appropriate Jetty Base directory.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
<div id=3D"base-vs-home-resolution" class=3D"paragraph">
<p>Potential configuration is resolved from these 2 directory locations.</p=
>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">Check Jetty Base</dt>
<dd>
<p>If the referenced configuration exists, relative to the defined Jetty ba=
se, use it.</p>
</dd>
<dt class=3D"hdlist1">Check Jetty Home</dt>
<dd>
<p>If the referenced configuration exists, relative to the defined Jetty ho=
me, use it.</p>
</dd>
<dt class=3D"hdlist1">Use java.io.File(String pathname) Logic</dt>
<dd>
<p>Lastly, use the reference as a <code>java.io.File(String pathname)</code=
> reference, following the default resolution rules outlined by that constr=
uctor.</p>
<div class=3D"paragraph">
<p>In brief, the reference will be used as-is, be it relative (to current w=
orking directory, aka $\{user.dir}) or absolute path, or even network refer=
ence (such as on Windows and use of UNC paths).</p>
</div>
</dd>
</dl>
</div>
<div class=3D"paragraph">
<p>For more details on how startup with start.jar works, see <a href=3D"fil=
e:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-document=
ation/src/main/asciidoc/index.html#execute-start-jar">Using start.jar: Exec=
uting</a></p>
</div>
<div class=3D"sect3">
<h4 id=3D"demo-base">Demo-Base in the Jetty Distribution</h4>
<div class=3D"paragraph">
<p>The Jetty Distribution comes with an example <code>${jetty.base}</code> =
which enables the various demonstration webapps and server configurations.<=
/p>
</div>
<div class=3D"paragraph">
<p>How to use the demo-base directory as a Jetty Base directory.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">[jetty-distribution-{VERSION}]$ ls -la

total 496
drwxrwxr-x 11 user group   4096 Oct  8 15:23 ./
drwxr-xr-x 14 user group   4096 Oct  8 13:04 ../
drwxrwxr-x  2 user group   4096 Oct  8 06:54 bin/
drwxrwxr-x  6 user group   4096 Oct  8 06:54 demo-base/
drwxrwxr-x  2 user group   4096 Oct 11 15:14 etc/
drwxrwxr-x 11 user group   4096 Oct  8 06:54 lib/
-rw-rw-r--  1 user group  30012 Sep 30 19:55 license-eplv10-aslv20.html
drwxrwxr-x  2 user group   4096 Oct  8 06:54 logs/
drwxrwxr-x  2 user group   4096 Oct  8 06:54 modules/
-rw-rw-r--  1 user group   6262 Sep 30 19:55 notice.html
-rw-rw-r--  1 user group   1249 Sep 30 19:55 README.TXT
drwxrwxr-x  2 user group   4096 Oct  8 06:54 resources/
drwxrwxr-x  2 user group   4096 Oct  8 06:54 start.d/
-rw-rw-r--  1 user group   1780 Sep 30 19:55 start.ini
-rw-rw-r--  1 user group  71921 Sep 30 19:55 start.jar
-rw-rw-r--  1 user group 336468 Sep 30 19:55 VERSION.txt
drwxrwxr-x  2 user group   4096 Oct  8 06:54 webapps/

[jetty-distribution-{VERSION}]$ cd demo-base
[demo-base]$ java -jar $JETTY_HOME/start.jar

2013-10-16 09:08:47.800:WARN::main: demo test-realm is deployed. DO NOT USE=
 IN PRODUCTION!
2013-10-16 09:08:47.802:INFO:oejs.Server:main: jetty-{VERSION}
2013-10-16 09:08:47.817:INFO:oejdp.ScanningAppProvider:main: Deployment mon=
itor [file:/home/user/jetty-distribution-{VERSION}/demo-base/webapps/] at i=
nterval 1
2013-10-16 09:08:48.072:WARN::main: async-rest webapp is deployed. DO NOT U=
SE IN PRODUCTION!
...</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>As you can see above, you are executing the demo-base configuration usin=
g the Jetty base concepts.</p>
</div>
<div class=3D"paragraph">
<p>If you want to see what the Jetty base looks like without executing Jett=
y, you can simply list the configuration</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">[my-base]$ java -jar $JETTY_HOME/start.jar --list-config

Java Environment:
-----------------
 java.home=3D/usr/lib/jvm/jdk-7u21-x64/jre
 java.vm.vendor=3DOracle Corporation
 java.vm.version=3D23.21-b01
 java.vm.name=3DJava HotSpot(TM) 64-Bit Server VM
 java.vm.info=3Dmixed mode
 java.runtime.name=3DJava(TM) SE Runtime Environment
 java.runtime.version=3D1.7.0_21-b11
 java.io.tmpdir=3D/tmp

Jetty Environment:
-----------------
 jetty.home=3D/home/user/jetty-distribution-{VERSION}
 jetty.base=3D/home/user/jetty-distribution-{VERSION}/demo-base
 jetty.version=3D{VERSION}

JVM Arguments:
--------------
 (no jvm args specified)

System Properties:
------------------
 jetty.base =3D /home/user/jetty-distribution-{VERSION}/demo-base
 jetty.home =3D /home/user/jetty-distribution-{VERSION}

Properties:
-----------
 demo.realm =3D etc/realm.properties
 https.port =3D 8443
 https.timeout =3D 30000
 jaas.login.conf =3D etc/login.conf
 jetty.dump.start =3D false
 jetty.dump.stop =3D false
 jetty.keymanager.password =3D OBF:1u2u1wml1z7s1z7a1wnl1u2g
 jetty.keystore =3D etc/keystore
 jetty.keystore.password =3D OBF:1vny1zlo1x8e1vnw1vn61x8g1zlu1vn4
 jetty.http.port =3D 8080
 jetty.secure.port =3D 8443
 jetty.truststore =3D etc/keystore
 jetty.truststore.password =3D OBF:1vny1zlo1x8e1vnw1vn61x8g1zlu1vn4
 org.eclipse.jetty.websocket.jsr356 =3D false
 threads.max =3D 200
 threads.min =3D 10
 threads.timeout =3D 60000

Jetty Server Classpath:
-----------------------
Version Information on 42 entries in the classpath.
Note: order presented here is how they would appear on the classpath.
      changes to the --module=3Dname command line options will be reflected=
 here.
 0:               {VERSION} | ${jetty.home}/lib/jetty-client-{VERSION}.jar
 1:      1.4.1.v201005082020 | ${jetty.base}/lib/ext/javax.mail.glassfish-1=
.4.1.v201005082020.jar
 2:               {VERSION} | ${jetty.base}/lib/ext/test-mock-resources-{VE=
RSION}.jar
 3:                    (dir) | ${jetty.home}/resources
 4:                    3.1.0 | ${jetty.home}/lib/servlet-api-3.1.jar
 5:                  3.1.RC0 | ${jetty.home}/lib/jetty-schemas-3.1.jar
 6:               {VERSION} | ${jetty.home}/lib/jetty-http-{VERSION}.jar
 7:               {VERSION} | ${jetty.home}/lib/jetty-continuation-{VERSION=
}.jar
 8:               {VERSION} | ${jetty.home}/lib/jetty-server-{VERSION}.jar
 9:               {VERSION} | ${jetty.home}/lib/jetty-xml-{VERSION}.jar
10:               {VERSION} | ${jetty.home}/lib/jetty-util-{VERSION}.jar
11:               {VERSION} | ${jetty.home}/lib/jetty-io-{VERSION}.jar
12:               {VERSION} | ${jetty.home}/lib/jetty-jaas-{VERSION}.jar
13:               {VERSION} | ${jetty.home}/lib/jetty-jndi-{VERSION}.jar
14:      1.1.0.v201105071233 | ${jetty.home}/lib/jndi/javax.activation-1.1.=
0.v201105071233.jar
15:      1.4.1.v201005082020 | ${jetty.home}/lib/jndi/javax.mail.glassfish-=
1.4.1.v201005082020.jar
16:                      1.2 | ${jetty.home}/lib/jndi/javax.transaction-api=
-1.2.jar
17:               {VERSION} | ${jetty.home}/lib/jetty-rewrite-{VERSION}.jar
18:               {VERSION} | ${jetty.home}/lib/jetty-security-{VERSION}.ja=
r
19:               {VERSION} | ${jetty.home}/lib/jetty-servlet-{VERSION}.jar
20:                    3.0.0 | ${jetty.home}/lib/jsp/javax.el-3.0.0.jar
21:      1.2.0.v201105211821 | ${jetty.home}/lib/jsp/javax.servlet.jsp.jstl=
-1.2.0.v201105211821.jar
22:                    2.3.2 | ${jetty.home}/lib/jsp/javax.servlet.jsp-2.3.=
2.jar
23:                    2.3.1 | ${jetty.home}/lib/jsp/javax.servlet.jsp-api-=
2.3.1.jar
24:                    2.3.3 | ${jetty.home}/lib/jsp/jetty-jsp-jdt-2.3.3.ja=
r
25:      1.2.0.v201112081803 | ${jetty.home}/lib/jsp/org.apache.taglibs.sta=
ndard.glassfish-1.2.0.v201112081803.jar
26:   3.8.2.v20130121-145325 | ${jetty.home}/lib/jsp/org.eclipse.jdt.core-3=
.8.2.v20130121.jar
27:               {VERSION} | ${jetty.home}/lib/jetty-plus-{VERSION}.jar
28:               {VERSION} | ${jetty.home}/lib/jetty-webapp-{VERSION}.jar
29:               {VERSION} | ${jetty.home}/lib/jetty-annotations-{VERSION}=
.jar
30:                      4.1 | ${jetty.home}/lib/annotations/asm-4.1.jar
31:                      4.1 | ${jetty.home}/lib/annotations/asm-commons-4.=
1.jar
32:                      1.2 | ${jetty.home}/lib/annotations/javax.annotati=
on-api-1.2.jar
33:               {VERSION} | ${jetty.home}/lib/jetty-deploy-{VERSION}.jar
34:                      1.0 | ${jetty.home}/lib/websocket/javax.websocket-=
api-1.0.jar
35:               {VERSION} | ${jetty.home}/lib/websocket/javax-websocket-c=
lient-impl-{VERSION}.jar
36:               {VERSION} | ${jetty.home}/lib/websocket/javax-websocket-s=
erver-impl-{VERSION}.jar
37:               {VERSION} | ${jetty.home}/lib/websocket/websocket-api-{VE=
RSION}.jar
38:               {VERSION} | ${jetty.home}/lib/websocket/websocket-client-=
{VERSION}.jar
39:               {VERSION} | ${jetty.home}/lib/websocket/websocket-common-=
{VERSION}.jar
40:               {VERSION} | ${jetty.home}/lib/websocket/websocket-server-=
{VERSION}.jar
41:               {VERSION} | ${jetty.home}/lib/websocket/websocket-servlet=
-{VERSION}.jar

Jetty Active XMLs:
------------------
 ${jetty.home}/etc/jetty.xml
 ${jetty.home}/etc/jetty-http.xml
 ${jetty.home}/etc/jetty-jaas.xml
 ${jetty.home}/etc/jetty-rewrite.xml
 ${jetty.home}/etc/jetty-ssl.xml
 ${jetty.home}/etc/jetty-https.xml
 ${jetty.home}/etc/jetty-plus.xml
 ${jetty.home}/etc/jetty-annotations.xml
 ${jetty.home}/etc/jetty-deploy.xml
 ${jetty.base}/etc/demo-rewrite-rules.xml
 ${jetty.base}/etc/test-realm.xml</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>This demonstrates the powerful <code>--list-config</code> command line o=
ption and how you can use it to see what the configuration will look like w=
hen starting Jetty.
From the Java environment, to the system properties, to the classpath, and =
finally the Active Jetty IoC XML used to build up the Jetty server configur=
ation.</p>
</div>
<div class=3D"paragraph">
<p>Of note, is that the output will make it known where the configuration e=
lements came from, be it in either in <code>${jetty.home}</code> or <code>$=
{jetty.base}</code>.</p>
</div>
<div class=3D"paragraph">
<p>If you look at the <code>${jetty.base}/start.ini</code> you will see a l=
ayout similar to below.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">[my-base]$ cat start.ini

# Enable security via jaas, and configure it
--module=3Djaas
jaas.login.conf=3Detc/login.conf

# Enable rewrite examples
--module=3Drewrite
etc/demo-rewrite-rules.xml

# Websocket chat examples needs websocket enabled
# Don't start for all contexts (set to true in test.xml context)
org.eclipse.jetty.websocket.jsr356=3Dfalse
--module=3Dwebsocket

# Create and configure the test realm
etc/test-realm.xml
demo.realm=3Detc/realm.properties

# Initialize module server
--module=3Dserver
threads.min=3D10
threads.max=3D200
threads.timeout=3D60000
jetty.dump.start=3Dfalse
jetty.dump.stop=3Dfalse

--module=3Ddeploy
--module=3Djsp
--module=3Dext
--module=3Dresources
--module=3Dclient
--module=3Dannotations</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>In this example, <code>${jetty.base}/start.ini</code> is the main startu=
p configuration entry point for Jetty.
You will see that we are enabling a few modules for Jetty, specifying some =
properties, and also referencing some Jetty IoC XML files (namely the <code=
>etc/demo-rewrite-rules.xml</code> and <code>etc/test-realm.xml</code> file=
s)</p>
</div>
<div class=3D"paragraph">
<p>When Jetty=E2=80=99s <code>start.jar</code> resolves the entries in the =
<code>start.ini</code>, it will follow the <a href=3D"file:///home/tian/Dow=
nloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asc=
iidoc/index.html#base-vs-home-resolution">resolution rules above</a>.</p>
</div>
<div class=3D"paragraph">
<p>For example, the reference to <code>etc/demo-rewrite-rules.xml</code> wa=
s found in <code>${jetty.base}/etc/demo-rewrite-rules.xml</code>.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_declaring_jetty_base">Declaring Jetty Base</h4>
<div class=3D"paragraph">
<p>The Jetty distribution=E2=80=99s <code>start.jar</code> is the component=
 that manages the behavior of this separation.</p>
</div>
<div class=3D"paragraph">
<p>The Jetty <code>start.jar</code> and XML files always assume that both <=
code>${jetty.home}</code> and <code>${jetty.base}</code> are defined when s=
tarting Jetty.</p>
</div>
<div class=3D"paragraph">
<p>You can opt to manually define the <code>${jetty.home}</code> and <code>=
${jetty.base}</code> directories, such as this:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">[jetty-distribution-{VERSION}]$ pwd
/home/user/jetty-distribution-{VERSION}

[jetty-distribution-{VERSION}]$ java -jar start.jar \
    jetty.home=3D/home/user/jetty-distribution-{VERSION} \
    jetty.base=3D/home/user/my-base

2013-10-16 09:08:47.802:INFO:oejs.Server:main: jetty-{VERSION}
2013-10-16 09:08:47.817:INFO:oejdp.ScanningAppProvider:main: Deployment mon=
itor [file:/home/user/my-base/webapps/] at interval 1
...</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Alternately, you can declare one directory and let the other one be disc=
overed.</p>
</div>
<div class=3D"paragraph">
<p>The following example uses default discovery of <code>${jetty.home}</cod=
e> by using the parent directory of wherever <code>start.jar</code> itself =
is, and a manual declaration of <code>${jetty.base}</code>.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">[jetty-distribution-{VERSION}]$ pwd
/home/user/jetty-distribution-{VERSION}

[jetty-distribution-{VERSION}]$ java -jar start.jar jetty.base=3D/home/user=
/my-base

2013-10-16 09:08:47.802:INFO:oejs.Server:main: jetty-{VERSION}
2013-10-16 09:08:47.817:INFO:oejdp.ScanningAppProvider:main: Deployment mon=
itor [file:/home/user/my-base/webapps/] at interval 1
...</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>But Jetty recommends that you always start Jetty from the directory that=
 is your <code>${jetty.base}</code> and starting Jetty by referencing
the <code>start.jar</code> in your <code>{$jetty.home}</code> remotely.</p>
</div>
<div class=3D"paragraph">
<p>The following demonstrates this by allowing default discovery of <code>$=
{jetty.home}</code> via locating the <code>start.jar</code>, and using the =
<code>user.dir</code> System Property for <code>${jetty.base}</code>.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">[jetty-distribution-{VERSION}]$ pwd
/home/user/jetty-distribution-{VERSION}

[jetty-distribution-{VERSION}]$ cd /home/user/my-base
[my-base]$ java -jar /home/user/jetty-distribution-{VERSION}/start.jar

2013-10-16 09:08:47.802:INFO:oejs.Server:main: jetty-{VERSION}
2013-10-16 09:08:47.817:INFO:oejdp.ScanningAppProvider:main: Deployment mon=
itor [file:/home/user/my-base/webapps/] at interval 1
...</code></pre>
</div>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock important">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Important</div>
</td>
<td class=3D"content">
Be aware of the <code>user.dir</code> system property, as it can only be sa=
fely set when the JVM starts and many 3rd party libraries (especially loggi=
ng) use this system property.
It is strongly recommended that you sit in the directory that is your desir=
ed <code>${jetty.base}</code> when starting Jetty to have consistent behavi=
or and use of the <code>user.dir</code> system property.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"startup-classpath">Managing Server Classpath</h3>
<div class=3D"paragraph">
<p>Jetty Server Classpath is determined by a combination of factors.</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">The java.class.path System Property</dt>
<dd>
<p>If you start Jetty with a JVM specified classpath, then Jetty will use t=
he java.class.path System Property to populate the initial classpath.</p>
</dd>
<dt class=3D"hdlist1">Module specified Libraries</dt>
<dd>
<p>The module system declares various libraries that are required for that =
module to operate.
These module defined libraries are added to the Jetty Server classpath when=
 any module is activated with library declarations.</p>
</dd>
<dt class=3D"hdlist1">Command Line Libraries</dt>
<dd>
<p>The command line option <code>--lib=3D&lt;path&gt;</code> can be used as=
 a final means to add arbitrary entries to the Jetty Server classpath.</p>
</dd>
</dl>
</div>
<div class=3D"paragraph">
<p>Of special note, there are 2 structural modules defined to ease some of =
this for you.</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">--module=3Dext</dt>
<dd>
<p>The <code>ext</code> module will enable the <code>lib/ext/*.jar</code> l=
ogic.
+
If this module is activated, then all jar files found in the lib/ext/ paths=
 will be automatically added to the Jetty Server Classpath.</p>
</dd>
<dt class=3D"hdlist1">--module=3Dresources</dt>
<dd>
<p>The <code>resources</code> module will add the <code>resources/</code> d=
irectory the classpath.
+
If you have 3rd party libraries that lookup resources from the classpath, p=
ut your files in here.
+
Logging libraries often have classpath lookup of their configuration files =
(eg: <code>log4j.properties</code>, <code>log4j.xml</code>, <code>logging.p=
roperties</code>, and <code>logback.xml</code>), so this would be the ideal=
 setup for this sort of configuration demand.</p>
</dd>
</dl>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Note</div>
</td>
<td class=3D"content">
Both the <code>ext</code> and <code>resources</code> modules declare relati=
ve paths that follow <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty=
.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#base-=
vs-home-resolution">Jetty Base and Jetty Home path resolution rules</a>.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
<div class=3D"sect3">
<h4 id=3D"_interrogating_the_server_classpath">Interrogating the Server Cla=
sspath</h4>
<div class=3D"paragraph">
<p>The Jetty <code>start.jar</code> has the ability to resolve the classpat=
h from the command line, modules and configuration, and to list the classpa=
th entries it will use to start jetty.</p>
</div>
<div class=3D"paragraph">
<p>The <code>--list-classpath</code> command line option is used as such.</=
p>
</div>
<div class=3D"paragraph">
<p>(Demonstrated with the <a href=3D"file:///home/tian/Downloads/b60/ebook/=
jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#=
demo-base">demo-base from the Jetty Distribution</a>)</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">[demo-base]$ java -jar $JETTY_HOME/start.jar --list-classpath

Jetty Server Classpath:
-----------------------
Version Information on 42 entries in the classpath.
Note: order presented here is how they would appear on the classpath.
      changes to the --module=3Dname command line options will be reflected=
 here.
 0:               {VERSION} | ${jetty.home}/lib/jetty-client-{VERSION}.jar
 1:      1.4.1.v201005082020 | ${jetty.base}/lib/ext/javax.mail.glassfish-1=
.4.1.v201005082020.jar
 2:               {VERSION} | ${jetty.base}/lib/ext/test-mock-resources-{VE=
RSION}.jar
 3:                    (dir) | ${jetty.home}/resources
 4:                    3.1.0 | ${jetty.home}/lib/servlet-api-3.1.jar
 5:                  3.1.RC0 | ${jetty.home}/lib/jetty-schemas-3.1.jar
 6:               {VERSION} | ${jetty.home}/lib/jetty-http-{VERSION}.jar
 7:               {VERSION} | ${jetty.home}/lib/jetty-continuation-{VERSION=
}.jar
 8:               {VERSION} | ${jetty.home}/lib/jetty-server-{VERSION}.jar
 9:               {VERSION} | ${jetty.home}/lib/jetty-xml-{VERSION}.jar
10:               {VERSION} | ${jetty.home}/lib/jetty-util-{VERSION}.jar
11:               {VERSION} | ${jetty.home}/lib/jetty-io-{VERSION}.jar
12:               {VERSION} | ${jetty.home}/lib/jetty-jaas-{VERSION}.jar
13:               {VERSION} | ${jetty.home}/lib/jetty-jndi-{VERSION}.jar
14:      1.1.0.v201105071233 | ${jetty.home}/lib/jndi/javax.activation-1.1.=
0.v201105071233.jar
15:      1.4.1.v201005082020 | ${jetty.home}/lib/jndi/javax.mail.glassfish-=
1.4.1.v201005082020.jar
16:                      1.2 | ${jetty.home}/lib/jndi/javax.transaction-api=
-1.2.jar
17:               {VERSION} | ${jetty.home}/lib/jetty-rewrite-{VERSION}.jar
18:               {VERSION} | ${jetty.home}/lib/jetty-security-{VERSION}.ja=
r
19:               {VERSION} | ${jetty.home}/lib/jetty-servlet-{VERSION}.jar
20:                    3.0.0 | ${jetty.home}/lib/jsp/javax.el-3.0.0.jar
21:      1.2.0.v201105211821 | ${jetty.home}/lib/jsp/javax.servlet.jsp.jstl=
-1.2.0.v201105211821.jar
22:                    2.3.2 | ${jetty.home}/lib/jsp/javax.servlet.jsp-2.3.=
2.jar
23:                    2.3.1 | ${jetty.home}/lib/jsp/javax.servlet.jsp-api-=
2.3.1.jar
24:                    2.3.3 | ${jetty.home}/lib/jsp/jetty-jsp-jdt-2.3.3.ja=
r
25:      1.2.0.v201112081803 | ${jetty.home}/lib/jsp/org.apache.taglibs.sta=
ndard.glassfish-1.2.0.v201112081803.jar
26:   3.8.2.v20130121-145325 | ${jetty.home}/lib/jsp/org.eclipse.jdt.core-3=
.8.2.v20130121.jar
27:               {VERSION} | ${jetty.home}/lib/jetty-plus-{VERSION}.jar
28:               {VERSION} | ${jetty.home}/lib/jetty-webapp-{VERSION}.jar
29:               {VERSION} | ${jetty.home}/lib/jetty-annotations-{VERSION}=
.jar
30:                      4.1 | ${jetty.home}/lib/annotations/asm-4.1.jar
31:                      4.1 | ${jetty.home}/lib/annotations/asm-commons-4.=
1.jar
32:                      1.2 | ${jetty.home}/lib/annotations/javax.annotati=
on-api-1.2.jar
33:               {VERSION} | ${jetty.home}/lib/jetty-deploy-{VERSION}.jar
34:                      1.0 | ${jetty.home}/lib/websocket/javax.websocket-=
api-1.0.jar
35:               {VERSION} | ${jetty.home}/lib/websocket/javax-websocket-c=
lient-impl-{VERSION}.jar
36:               {VERSION} | ${jetty.home}/lib/websocket/javax-websocket-s=
erver-impl-{VERSION}.jar
37:               {VERSION} | ${jetty.home}/lib/websocket/websocket-api-{VE=
RSION}.jar
38:               {VERSION} | ${jetty.home}/lib/websocket/websocket-client-=
{VERSION}.jar
39:               {VERSION} | ${jetty.home}/lib/websocket/websocket-common-=
{VERSION}.jar
40:               {VERSION} | ${jetty.home}/lib/websocket/websocket-server-=
{VERSION}.jar
41:               {VERSION} | ${jetty.home}/lib/websocket/websocket-servlet=
-{VERSION}.jar</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Of note is that an attempt is made to list the internally declared versi=
on of each artifact on the Server Classpath, which can potentially help whe=
n diagnosing classpath issues.</p>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"startup-modules">Managing Startup Modules</h3>
<div class=3D"paragraph">
<p>The standard Jetty Distribution ships with several modules defined in <c=
ode>${jetty.home}/modules/</code>.
These modules allow flexibility for implementations and make configuration =
a much more plug-and-play set up.</p>
</div>
<div class=3D"paragraph">
<p>What a Jetty Startup Module Defines:</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">A Module Name</dt>
<dd>
<p>The name of the module is the keyword used by the <code>--module=3D&lt;n=
ame&gt;</code> command line argument to activate/enable modules, and also f=
ind dependent modules.
The filename of the module defines its name (eg: server.mod becomes the mod=
ule named "server").</p>
</dd>
<dt class=3D"hdlist1">List of Dependent Modules</dt>
<dd>
<p>All modules can declare that they depend on other modules with the <code=
>[depend]</code> section.
The list of dependencies is used to transitively resolve other modules that=
 are deemed to be required based on the modules that you activate.
The order of modules defined in the graph of active modules is used to dete=
rmine various execution order for configuration, such as Jetty IoC XML conf=
igurations, and to resolve conflicting property declarations.
Of note: there is a special section <code>[optional]</code> used to describ=
e structurally dependent modules that are not technically required, but mig=
ht be of use to your specific configuration.</p>
</dd>
<dt class=3D"hdlist1">List of Libraries</dt>
<dd>
<p>Module can optionally declare that they have libraries that they need to=
 function properly.
The <code>[lib]</code> section declares a set of pathnames that follow the =
<a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/=
jetty-documentation/src/main/asciidoc/index.html#base-vs-home-resolution">J=
etty Base and Jetty Home path resolution rules</a>.</p>
</dd>
<dt class=3D"hdlist1">List of Jetty IoC XML Configurations</dt>
<dd>
<p>A Module can optionally declare a list of Jetty IoC XML configurations u=
sed to wire up the functionality that this module defines.
The <code>[xml]</code> section declares a set of pathnames that follow the =
<a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/=
jetty-documentation/src/main/asciidoc/index.html#base-vs-home-resolution">J=
etty Base and Jetty Home path resolution rules</a>.
Ideally, all XML files are parameterized to accept properties to configure =
the various elements of the standard configuration.
Allowing for a simplified configuration of Jetty for the vast majority of d=
eployments.
The execution order of the Jetty IoC XML configurations is determined by th=
e graph of active module dependencies resolved via the <code>[depend]</code=
> sections.
If the default XML is not sufficient to satisfy your needs, you can overrid=
e this XML by making your own in the <code>${jetty.base}/etc/</code> direct=
ory, with the same name.
The resolution steps for Jetty Base and Jetty Home will ensure that your co=
py from <code>${jetty.base}</code> will be picked up over the default one i=
n <code>${jetty.home}</code>.</p>
</dd>
<dt class=3D"hdlist1">List of Module Tags</dt>
<dd>
<p>For ease of sorting, modules can be assigned tags.
When using the <code>--list-modules</code> command, modules will be groups =
by the first tag that exists in this section.
Modules can also be listed specifically by these tags using <code>--list-mo=
dules=3D&lt;tag name&gt;</code> on the command line.</p>
</dd>
<dt class=3D"hdlist1">Ini Variables</dt>
<dd>
<p>The <code>[ini]</code> section is used to add or change server parameter=
s at startup.
The <code>[ini]</code> section can also include a the path of a file or sev=
eral files which should be made available to the server only.
This is helpful when you want to control what jars are available to deploye=
d webapps.</p>
</dd>
<dt class=3D"hdlist1">Jetty INI Template</dt>
<dd>
<p>Each module can optionally declare a startup ini template that is used t=
o insert/append/inject sample configuration elements into the <code>start.i=
ni</code> or <code>start.d/*.ini</code> files when using the <code>--add-to=
-start=3D&lt;name&gt;</code> command line argument in <code>start.jar</code=
>.
Commonly used to present some of the parameterized property options from th=
e Jetty IoC XML configuration files also referenced in the same module.
The <code>[ini-template]</code> section declares this section of sample con=
figuration.</p>
</dd>
<dt class=3D"hdlist1">Required Files and Directories</dt>
<dd>
<p>If the activation of a module requires some paths to exist, the <code>[f=
iles]</code> section defines them.
There are 2 modes of operation of the entries in this section.</p>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">Ensure Directory Exists</dt>
<dd>
<p>If you add a pathname that ends in <code>"/"</code> (slash), such as <co=
de>"webapps/"</code>, then that directory will be created if it does not ye=
t exist in <code>${jetty.base}/&lt;pathname&gt;</code> (eg: <code>"webapps/=
"</code> will result in <code>${jetty.base}/webapps/</code> being created).=
</p>
</dd>
<dt class=3D"hdlist1">Download File</dt>
<dd>
<p>There is a special syntax to allow you to download a file into a specifi=
c location if it doesn=E2=80=99t exist yet: <code>&lt;url&gt;:&lt;pathname&=
gt;</code>.
Currently, the <code>&lt;url&gt;</code> must be a <code>http://</code> sche=
me URL (please <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.proje=
ct-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#bugs">let u=
s know</a> if you need more schemes supported).
The <code>&lt;pathname&gt;</code> portion follows the <a href=3D"file:///ho=
me/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/s=
rc/main/asciidoc/index.html#base-vs-home-resolution">Jetty Base and Jetty H=
ome path resolution rules</a>.
Example: <code>http://repo.corp.com/maven/corp-security-policy-1.0.jar:lib/=
corp-security-policy.jar</code>
This will check for the existence of <code>lib/corp-security-policy.jar</co=
de>, and if it doesn=E2=80=99t exist, it will download the jar file from <c=
ode>http://repo.corp.com/maven/corp-security-policy-1.0.jar</code></p>
</dd>
</dl>
</div>
</dd>
</dl>
</div>
<div class=3D"sect3">
<h4 id=3D"enabling-modules">Enabling Modules</h4>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock tip">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Tip</div>
</td>
<td class=3D"content">
The default distribution has a co-mingled <code>${jetty.home}</code> and <c=
ode>${jetty.base}</code> where the directories for <code>${jetty.home}</cod=
e> and <code>${jetty.base}</code> point to the same location.
It is highly encouraged that you learn about the differences in <a href=3D"=
file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-docum=
entation/src/main/asciidoc/index.html#startup-base-and-home">Jetty Base vs =
Jetty Home</a> and take full advantage of this setup.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
<div class=3D"paragraph">
<p>Jetty ships with many modules defined in <code>${jetty.home}/modules</co=
de>.
Enabling a module is a simple process: simply add the <code>--add-to-start<=
/code> syntax on the command line.
Doing this will enable the module and any dependent modules.</p>
</div>
<div class=3D"paragraph">
<p>An example of this, with a new, empty, base directory.
We can see from this output, that the directory is new.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">[jetty]$ mkdir mybase
[jetty]$ cd mybase
[mybase]$ ls -la
total 0
drwxr-xr-x   2 staff  staff   68 Jul 12 17:29 .
drwxr-xr-x  20 staff  staff  680 Jul 12 17:29 ..

[mybase]$ java -jar $JETTY_HOME/start.jar
WARNING: Nothing to start, exiting ...

Usage: java -jar start.jar [options] [properties] [configs]
       java -jar start.jar --help  # for more information</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Lets see what the configuration looks like so far:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">[mybase]$ java -jar /opt/jetty-distribution/start.jar --list-config

Java Environment:
-----------------
 java.home =3D /Library/Java/JavaVirtualMachines/jdk1.8.0_92.jdk/Contents/H=
ome/jre
 java.vm.vendor =3D Oracle Corporation
 java.vm.version =3D 25.92-b14
 java.vm.name =3D Java HotSpot(TM) 64-Bit Server VM
 java.vm.info =3D mixed mode
 java.runtime.name =3D Java(TM) SE Runtime Environment
 java.runtime.version =3D 1.8.0_92-b14
 java.io.tmpdir =3D /var/folders/h6/yb_lbnnn11g0y1jjlvqg631h0000gn/T/
 user.dir =3D /Users/staff/installs/repository/jetty-distribution-9.4.0/myb=
ase
 user.language =3D en
 user.country =3D US

Jetty Environment:
-----------------
 jetty.version =3D {VERSION}
 jetty.tag.version =3D master
 jetty.home =3D /Users/staff/installs/repository/jetty-distribution-9.4.0
 jetty.base =3D /Users/staff/installs/repository/jetty-distribution-9.4.0/m=
ybase

Config Search Order:
--------------------
 <command-line>
 ${jetty.base} -&gt; /Users/staff/installs/repository/jetty-distribution-9.=
4.0/mybase
 ${jetty.home} -&gt; /Users/staff/installs/repository/jetty-distribution-9.=
4.0


JVM Arguments:
--------------
 (no jvm args specified)

System Properties:
------------------
 (no system properties specified)

Properties:
-----------
 java.version =3D 1.8.0_92
 java.version.major =3D 1
 java.version.minor =3D 8
 java.version.revision =3D 0
 java.version.update =3D 92

Jetty Server Classpath:
-----------------------
No classpath entries and/or version information available show.

Jetty Active XMLs:
------------------
 (no xml files specified)</command-line></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Lets try adding some basic support for webapps, with automatic deploy (h=
ot deploy), and a single basic HTTP/1.1 connector.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">[mybase]$ java -jar ../start.jar --add-to-start=3Dhttp,webapp,deploy
INFO : webapp          initialised in ${jetty.base}/start.d/webapp.ini
INFO : server          initialised (transitively) in ${jetty.base}/start.d/=
server.ini
INFO : http            initialised in ${jetty.base}/start.d/http.ini
INFO : deploy          initialised in ${jetty.base}/start.d/deploy.ini
MKDIR: ${jetty.base}/webapps
INFO : Base directory was modified</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>This created the webapps directory in our <code>mybase</code> directory =
and appended the <code>start.ini</code> file with the ini template argument=
s from the associated module files.
Additionally, where needed, Jetty enabled any module dependencies and added=
 their module ini template properties.</p>
</div>
<div class=3D"paragraph">
<p>Lets see what it looks like configuration wise.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">[mybase]$ java -jar ../start.jar --list-config

Java Environment:
-----------------
 java.home =3D /Library/Java/JavaVirtualMachines/jdk1.8.0_92.jdk/Contents/H=
ome/jre
 java.vm.vendor =3D Oracle Corporation
 java.vm.version =3D 25.92-b14
 java.vm.name =3D Java HotSpot(TM) 64-Bit Server VM
 java.vm.info =3D mixed mode
 java.runtime.name =3D Java(TM) SE Runtime Environment
 java.runtime.version =3D 1.8.0_92-b14
 java.io.tmpdir =3D /var/folders/h6/yb_lbnnn11g0y1jjlvqg631h0000gn/T/
 user.dir =3D /Users/staff/installs/repository/jetty-distribution-9.4.0/myb=
ase
 user.language =3D en
 user.country =3D US

Jetty Environment:
-----------------
 jetty.version =3D {VERSION}
 jetty.tag.version =3D master
 jetty.home =3D /Users/staff/installs/repository/jetty-distribution-9.4.0
 jetty.base =3D /Users/staff/installs/repository/jetty-distribution-9.4.0/m=
ybase

Config Search Order:
--------------------
 <command-line>
 ${jetty.base} -&gt; /Users/staff/installs/repository/jetty-distribution-9.=
4.0/mybase
 ${jetty.home} -&gt; /Users/staff/installs/repository/jetty-distribution-9.=
4.0


JVM Arguments:
--------------
 (no jvm args specified)

System Properties:
------------------
 (no system properties specified)

Properties:
-----------
 java.version =3D 1.8.0_92
 java.version.major =3D 1
 java.version.minor =3D 8
 java.version.revision =3D 0
 java.version.update =3D 92

Jetty Server Classpath:
-----------------------
Version Information on 11 entries in the classpath.
Note: order presented here is how they would appear on the classpath.
      changes to the --module=3Dname command line options will be reflected=
 here.
 0:                    3.1.0 | ${jetty.home}/lib/servlet-api-3.1.jar
 1:                 3.1.0.M0 | ${jetty.home}/lib/jetty-schemas-3.1.jar
 2:           {VERSION} | ${jetty.home}/lib/jetty-http-{VERSION}.jar
 3:           {VERSION} | ${jetty.home}/lib/jetty-server-{VERSION}.jar
 4:           {VERSION} | ${jetty.home}/lib/jetty-xml-{VERSION}.jar
 5:           {VERSION} | ${jetty.home}/lib/jetty-util-{VERSION}.jar
 6:           {VERSION} | ${jetty.home}/lib/jetty-io-{VERSION}.jar
 7:           {VERSION} | ${jetty.home}/lib/jetty-security-{VERSION}.jar
 8:           {VERSION} | ${jetty.home}/lib/jetty-servlet-{VERSION}.jar
 9:           {VERSION} | ${jetty.home}/lib/jetty-webapp-{VERSION}.jar
10:           {VERSION} | ${jetty.home}/lib/jetty-deploy-{VERSION}.jar

Jetty Active XMLs:
------------------
 ${jetty.home}/etc/jetty.xml
 ${jetty.home}/etc/jetty-deploy.xml
 ${jetty.home}/etc/jetty-http.xml</command-line></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>You now have a configured and functional server, albeit with no webapps =
deployed.
At this point you can place a webapp (war file) in the <code>mybase/webapps=
/</code> directory and and start Jetty.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"start-vs-startd">Start.ini vs. Start.d</h4>
<div class=3D"paragraph">
<p>In the above example, when a module is activated the contents of that mo=
dule file are added in <code>${jetty.base}/start.ini</code>.
As additional modules are added, their contents are appended to this file.
This can be beneficial if you want all of your module configurations in a s=
ingle file, but for large server instances with lots of modules it can pose=
 a challenge to quickly find and make changes or to remove a module.</p>
</div>
<div class=3D"paragraph">
<p>As an alternative to a single <code>start.ini</code> file you can opt to=
 house modules in a <code>${jetty.base}/start.d</code> directory.
Modules activated when a <code>start.d</code> directory exists will be stor=
ed as a single file per module.
Below is an example of a fresh <code>${jetty.base}</code> that will create =
a <code>start.d</code> directory and activate several modules.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">[jetty.home]$ mkdir mybase
[jetty.home]$ cd mybase/
[mybase]$ java -jar ../start.jar --create-startd
INFO : Base directory was modified
[mybase]$ ls -all
total 0
drwxr-xr-x   3 staff  staff  102 Aug 29 15:16 .
drwxr-xr-x@ 26 staff  staff  884 Aug 29 15:16 ..
drwxr-xr-x   6 staff  staff  204 Aug 29 15:19 start.d

[mybase]$ java -jar ../start.jar --add-to-start=3Dserver,client,webapp,webs=
ocket
INFO : webapp          initialised in ${jetty.base}/start.d/webapp.ini
INFO : server          initialised in ${jetty.base}/start.d/server.ini
INFO : websocket       initialised in ${jetty.base}/start.d/websocket.ini
INFO : client          initialised in ${jetty.base}/start.d/client.ini
INFO : Base directory was modified
[mybase]$ cd start.d/
[mybase]$ ls -all
total 32
drwxr-xr-x  6 staff  staff   204 Aug 29 15:19 .
drwxr-xr-x  3 staff  staff   102 Aug 29 15:16 ..
-rw-r--r--  1 staff  staff   175 Aug 29 15:19 client.ini
-rw-r--r--  1 staff  staff  2250 Aug 29 15:19 server.ini
-rw-r--r--  1 staff  staff   265 Aug 29 15:19 webapp.ini
-rw-r--r--  1 staff  staff   177 Aug 29 15:19 websocket.ini</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>In the example, we first create a new <code>${jetty.base}</code> and the=
n create the <code>start.d</code> directory with the <code>--create-startd<=
/code> command.
Next, we use the <code>--add-to-start</code> command which activates the mo=
dules and creates their respective ini files in the <code>start.d</code> di=
rectory.</p>
</div>
<div class=3D"paragraph">
<p>If you have an existing <code>start.ini</code> file but would like to us=
e the <code>start.d</code> structure for additional modules, you can use th=
e <code>--create-startd</code> command as well.
Doing this will create the <code>start.d</code> directory and copy your exi=
sting <code>start.ini</code> file in to it.
Any new modules added to the server will have their own <code>&lt;module na=
me&gt;.ini</code> file created in the <code>start.d</code> directory.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">[mybase]$ java -jar ../start.jar --add-to-start=3Dserver,client,webapp,w=
ebsocket
INFO : webapp          initialised in ${jetty.base}/start.ini
INFO : server          initialised in ${jetty.base}/start.ini
INFO : websocket       initialised in ${jetty.base}/start.ini
INFO : client          initialised in ${jetty.base}/start.ini
INFO : Base directory was modified

[mybase]$ java -jar ../start.jar --create-startd
INFO : Base directory was modified
[mybase]$ tree
.
=E2=94=94=E2=94=80=E2=94=80 start.d
    =E2=94=94=E2=94=80=E2=94=80 start.ini

[mybase]$ java -jar ../start.jar --add-to-start=3Dssl
INFO : ssl             initialised in ${jetty.base}/start.d/ssl.ini
INFO : Base directory was modified
[mybase]$ tree
.
=E2=94=9C=E2=94=80=E2=94=80 etc
=E2=94=82&nbsp;&nbsp; =E2=94=94=E2=94=80=E2=94=80 keystore
=E2=94=94=E2=94=80=E2=94=80 start.d
    =E2=94=9C=E2=94=80=E2=94=80 ssl.ini
    =E2=94=94=E2=94=80=E2=94=80 start.ini</code></pre>
</div>
</div>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Note</div>
</td>
<td class=3D"content">
<div class=3D"paragraph">
<p>It is <strong>not</strong> recommended to use both a <code>${jetty.base}=
/start.ini</code> file and a <code>${jetty.base}/start.d</code> directory a=
t the same time and doing so can cause issues.</p>
</div>
</td>
</tr>
</tbody></table>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"startup-configuring-modules">Configuring Modules</h4>
<div class=3D"paragraph">
<p>Once a module has been enabled for the server, it can be further configu=
red to meet your needs.
This is done by editing the associated ini file for the module.
If your server setup is using a centralized ini configuration, you will edi=
t the <code>${jetty.base}/server.ini</code> file.
If you have elected to manage each module within it=E2=80=99s own ini file,=
 you can find these files in the <code>${jetty.base}/start.d</code> directo=
ry.</p>
</div>
<div class=3D"paragraph">
<p>When a module is activated, a number of properties are set by default.
To view these defaults, open up the associated ini file.
Listed in the ini file is the associated module file and any properties tha=
t can be set.</p>
</div>
<div class=3D"paragraph">
<p>Below is an example of the <code>requestlog.ini</code> file:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n"># ---------------------------------------
# Module: requestlog
--module=3Drequestlog

## Logging directory (relative to $jetty.base)
# jetty.requestlog.dir=3Dlogs

## File path
# jetty.requestlog.filePath=3D${jetty.requestlog.dir}/yyyy_mm_dd.request.lo=
g

## Date format for rollovered files (uses SimpleDateFormat syntax)
# jetty.requestlog.filenameDateFormat=3Dyyyy_MM_dd

## How many days to retain old log files
# jetty.requestlog.retainDays=3D90

## Whether to append to existing file
# jetty.requestlog.append=3Dtrue

## Whether to use the extended log output
# jetty.requestlog.extended=3Dtrue

## Whether to log http cookie information
# jetty.requestlog.cookies=3Dtrue

## Timezone of the log entries
# jetty.requestlog.timezone=3DGMT

## Whether to log LogLatency
# jetty.requestlog.loglatency=3Dfalse</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The first lines name the module file being called (located in <code>{$je=
tty.home/modules}</code>).
Subsequent lines list properties that can be changed as well as a descripti=
on for each property.
To edit a property, first un-comment the line by deleting the <code>#</code=
> at the start of the line, then make the change after <code>=3D</code> sig=
n (such as changing a <code>true</code> value to <code>false</code>).</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"startup-disable-module">Disabling Modules</h4>
<div class=3D"paragraph">
<p>Disabling a module is an easy process.
To disable a module, comment out the <code>--module=3D</code> line in the a=
ssociated ini file.
Deleting the ini file associated with module is another option, but may not=
 be practical in all situations.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"startup-listing-modules">Listing Available and Active Modules</h4=
>
<div class=3D"paragraph">
<p>To see which modules are <em>available</em>, use the <code>--list-module=
s</code> command line argument.
This command will also show you which modules are <em>enabled</em>.
Modules are sorted by the value in the <code>[tags]</code> section of the a=
ssociated <code>.mod</code> file.
If there are multiple entries in the <code>[tags]</code> section, it sorts =
by the first tag in the list.</p>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Note</div>
</td>
<td class=3D"content">
By default, the <code>--list-modules</code> command line argument shows all=
 modules that do not include <code>internal</code> in the <code>[tags]</cod=
e> section of the associated <code>.mod</code> file.
If you would like to see <strong>all</strong> modules, use <code>--list-all=
-modules</code>
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
<div class=3D"paragraph">
<p>Here=E2=80=99s an example of the <code>--list-modules</code> command:</p=
>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">[mybase]$ java -jar ../start.jar --list-modules

Available Modules:
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D
tags: [-internal]

Modules for tag '*':
--------------------

     Module: alpn
           : Enables the ALPN extension to TLS(SSL) by adding modified clas=
ses to
           : the JVM bootpath.
           : This modification has a tight dependency on specific recent up=
dates of
           : Java 1.7 and Java 1.8 (Java versions prior to 1.7u40 are not s=
upported).
           : The alpn module will use an appropriate alpn-boot jar for your
           : specific version of Java.
     Depend: alpn-impl/alpn-${java.version}, ssl
        LIB: lib/jetty-alpn-client-${jetty.version}.jar
        LIB: lib/jetty-alpn-server-${jetty.version}.jar
        XML: etc/jetty-alpn.xml

     Module: annotations
           : Enables Annotation scanning for deployed webapplications.
     Depend: plus
        LIB: lib/jetty-annotations-${jetty.version}.jar
        LIB: lib/annotations/*.jar
        XML: etc/jetty-annotations.xml

     Module: apache-jsp
           : Enables use of the apache implementation of JSP
        LIB: lib/apache-jsp/*.jar

     Module: apache-jstl
           : Enables the apache version of JSTL
        LIB: lib/apache-jstl/*.jar

     Module: cdi
           : Experimental CDI/Weld integration
     Depend: jsp, annotations, plus, deploy
        LIB: lib/cdi/*.jar
        LIB: lib/cdi-core-${jetty.version}.jar
        LIB: lib/cdi-servlet-${jetty.version}.jar
        XML: etc/jetty-cdi.xml

     Module: client
           : Adds the Jetty HTTP client to the server classpath.
        LIB: lib/jetty-client-${jetty.version}.jar

     Module: continuation
           : Enables support for Continuation style asynchronous
           : Servlets.  Now deprecated in favour of Servlet 3.1
           : API
        LIB: lib/jetty-continuation-${jetty.version}.jar

     Module: deploy
           : Enables webapplication deployment from the webapps directory.
     Depend: webapp
        LIB: lib/jetty-deploy-${jetty.version}.jar
        XML: etc/jetty-deploy.xml

     Module: fcgi
           : Adds the FastCGI implementation to the classpath.
     Depend: servlet, client
        LIB: lib/jetty-proxy-${jetty.version}.jar
        LIB: lib/fcgi/*.jar

     Module: flight-recorder
     Depend: server
        JVM: -XX:+UnlockCommercialFeatures
        JVM: -XX:+FlightRecorder

     Module: home-base-warning
           : Generates a warning that server has been run from $JETTY_HOME
           : rather than from a $JETTY_BASE.
        XML: etc/home-base-warning.xml

     Module: jaas
           : Enable JAAS for deployed webapplications.
     Depend: server
        LIB: lib/jetty-jaas-${jetty.version}.jar
        XML: etc/jetty-jaas.xml

     Module: jaspi
           : Enable JASPI authentication for deployed webapplications.
     Depend: security
        LIB: lib/jetty-jaspi-${jetty.version}.jar
        LIB: lib/jaspi/*.jar

     Module: jmx
           : Enables JMX instrumentation for server beans and
           : enables JMX agent.
     Depend: server
        LIB: lib/jetty-jmx-${jetty.version}.jar
        XML: etc/jetty-jmx.xml

     Module: jmx-remote
           : Enables remote RMI access to JMX
     Depend: jmx
        XML: etc/jetty-jmx-remote.xml

     Module: jndi
           : Adds the Jetty JNDI implementation to the classpath.
     Depend: server
        LIB: lib/jetty-jndi-${jetty.version}.jar
        LIB: lib/jndi/*.jar

     Module: jsp
           : Enables JSP for all webapplications deployed on the server.
     Depend: apache-jsp, servlet, annotations

     Module: jstl
           : Enables JSTL for all webapplications deployed on the server
     Depend: jsp, apache-jstl

     Module: jvm
           : A noop module that creates an ini template useful for
           : setting JVM arguments (eg -Xmx )

     Module: lowresources
           : Enables a low resource monitor on the server
           : that can take actions if threads and/or connections
           : cross configured threshholds.
     Depend: server
        XML: etc/jetty-lowresources.xml

     Module: plus
           : Enables JNDI and resource injection for webapplications
           : and other servlet 3.x features not supported in the core
           : jetty webapps module.
     Depend: webapp, server, security, jndi
        LIB: lib/jetty-plus-${jetty.version}.jar
        XML: etc/jetty-plus.xml

     Module: proxy
           : Enable the Jetty Proxy, that allows the server to act
           : as a non-transparent proxy for browsers.
     Depend: servlet, client
        LIB: lib/jetty-proxy-${jetty.version}.jar
        XML: etc/jetty-proxy.xml

     Module: proxy-protocol
           : Enables the Proxy Protocol on the HTTP Connector.
           : http://www.haproxy.org/download/1.5/doc/proxy-protocol.txt
           : This allows a proxy operating in TCP mode to
           : transport details of the proxied connection to
           : the server.
           : Both V1 and V2 versions of the protocol are supported.
     Depend: http
        XML: etc/jetty-proxy-protocol.xml

     Module: quickstart
           : Enables the Jetty Quickstart module for rapid
           : deployment of preconfigured webapplications.
     Depend: server, annotations, plus
        LIB: lib/jetty-quickstart-${jetty.version}.jar

     Module: rewrite
           : Enables the jetty-rewrite handler.  Specific rewrite
           : rules must be added to either to etc/jetty-rewrite.xml or a cu=
stom xml/module
     Depend: server
        LIB: lib/jetty-rewrite-${jetty.version}.jar
        XML: etc/jetty-rewrite.xml

     Module: rewrite-compactpath
           : Add a rule to the rewrite module to compact paths so that doub=
le slashes
           : in the path are treated as a single slash.
     Depend: rewrite
        XML: etc/rewrite-compactpath.xml

     Module: rewrite-customizer [rewrite]
           : Enables a rewrite Rules container as a request customizer on
           : the servers default HttpConfiguration instance
     Depend: server
        LIB: lib/jetty-rewrite-${jetty.version}.jar
        XML: etc/jetty-rewrite-customizer.xml

     Module: security
           : Adds servlet standard security handling to the classpath.
     Depend: server
        LIB: lib/jetty-security-${jetty.version}.jar

     Module: server
           : Enables the core Jetty server on the classpath.
   Optional: jvm, ext, resources, logging
        LIB: lib/servlet-api-3.1.jar
        LIB: lib/jetty-schemas-3.1.jar
        LIB: lib/jetty-http-${jetty.version}.jar
        LIB: lib/jetty-server-${jetty.version}.jar
        LIB: lib/jetty-xml-${jetty.version}.jar
        LIB: lib/jetty-util-${jetty.version}.jar
        LIB: lib/jetty-io-${jetty.version}.jar
        XML: etc/jetty.xml

     Module: servlet
           : Enables standard Servlet handling.
     Depend: server
        LIB: lib/jetty-servlet-${jetty.version}.jar

     Module: servlets
           : Puts a collection of jetty utility servlets and filters
           : on the server classpath (CGI, CrossOriginFilter, DosFilter,
           : MultiPartFilter, PushCacheFilter, QoSFilter, etc.) for
           : use by all webapplications.
     Depend: servlet
        LIB: lib/jetty-servlets-${jetty.version}.jar

     Module: setuid
           : Enables the unix setUID configuration so that the server
           : may be started as root to open privileged ports/files before
           : changing to a restricted user (eg jetty).
     Depend: server
        LIB: lib/setuid/jetty-setuid-java-1.0.3.jar
        XML: etc/jetty-setuid.xml

     Module: spring
           : Enable spring configuration processing so all jetty style
           : xml files can optionally be written as spring beans
     Depend: server
        LIB: lib/spring/*.jar

     Module: webapp
           : Adds support for servlet specification webapplication to the s=
erver
           : classpath.  Without this, only Jetty specific handlers may be =
deployed.
     Depend: security, servlet
        LIB: lib/jetty-webapp-${jetty.version}.jar
        XML: etc/jetty-webapp.xml

     Module: websocket
           : Enable websockets for deployed web applications
     Depend: annotations
        LIB: lib/websocket/*.jar

Modules for tag '3rdparty':
---------------------------

     Module: gcloud
           : Control GCloud API classpath
       Tags: 3rdparty, gcloud
        LIB: lib/gcloud/*.jar

     Module: gcloud-datastore
           : Enables GCloud Datastore API and implementation
       Tags: 3rdparty, gcloud
     Depend: jcl-slf4j, gcloud

     Module: hawtio
           : Deploys the Hawtio console as a webapplication.
       Tags: 3rdparty
     Depend: jmx, stats, deploy
        XML: etc/hawtio.xml

     Module: jamon
           : Deploys the JAMon webapplication
       Tags: 3rdparty
     Depend: jmx, stats, jsp, deploy
        LIB: lib/jamon/**.jar
        XML: etc/jamon.xml

     Module: jminix
           : Deploys the Jminix JMX Console within the server
       Tags: 3rdparty
     Depend: jmx, stats, jcl-impl, jcl-api
        LIB: lib/jminix/**.jar
        XML: etc/jminix.xml

     Module: jolokia
           : Deploys the Jolokia console as a web application.
       Tags: 3rdparty
     Depend: jmx, stats, deploy
        XML: etc/jolokia.xml

Modules for tag 'classpath':
----------------------------

     Module: ext
           : Adds all jar files discovered in $JETTY_HOME/lib/ext
           : and $JETTY_BASE/lib/ext to the servers classpath.
       Tags: classpath
        LIB: lib/ext/**.jar

     Module: resources
           : Adds the $JETTY_HOME/resources and/or $JETTY_BASE/resources
           : directory to the server classpath. Useful for configuration
           : property files (eg jetty-logging.properties)
       Tags: classpath
        LIB: resources/

Modules for tag 'connector':
----------------------------

     Module: http
           : Enables a HTTP connector on the server.
           : By default HTTP/1 is support, but HTTP2C can
           : be added to the connector with the http2c module.
       Tags: connector, http
     Depend: server
        XML: etc/jetty-http.xml

     Module: http-forwarded
           : Adds a forwarded request customizer to the HTTP Connector
           : to process forwarded-for style headers from a proxy.
       Tags: connector
     Depend: http
        XML: etc/jetty-http-forwarded.xml

     Module: http2
           : Enables HTTP2 protocol support on the TLS(SSL) Connector,
           : using the ALPN extension to select which protocol to use.
       Tags: connector, http2, http, ssl
     Depend: alpn, ssl
        LIB: lib/http2/*.jar
        XML: etc/jetty-http2.xml

     Module: http2c
           : Enables the HTTP2C protocol on the HTTP Connector
           : The connector will accept both HTTP/1 and HTTP/2 connections.
       Tags: connector, http2, http
     Depend: http
        LIB: lib/http2/*.jar
        XML: etc/jetty-http2c.xml

     Module: https
           : Adds HTTPS protocol support to the TLS(SSL) Connector
       Tags: connector, https, http, ssl
     Depend: ssl
   Optional: http-forwarded, http2
        XML: etc/jetty-https.xml

     Module: proxy-protocol-ssl
           : Enables the Proxy Protocol on the TLS(SSL) Connector.
           : http://www.haproxy.org/download/1.5/doc/proxy-protocol.txt
           : This allows a Proxy operating in TCP mode to transport
           : details of the proxied connection to the server.
           : Both V1 and V2 versions of the protocol are supported.
       Tags: connector, ssl
     Depend: ssl
        XML: etc/jetty-proxy-protocol-ssl.xml

     Module: ssl
           : Enables a TLS(SSL) Connector on the server.
           : This may be used for HTTPS and/or HTTP2 by enabling
           : the associated support modules.
       Tags: connector, ssl
     Depend: server
        XML: etc/jetty-ssl.xml
        XML: etc/jetty-ssl-context.xml

     Module: unixsocket
           : Enables a Unix Domain Socket Connector that can receive
           : requests from a local proxy and/or SSL offloader (eg haproxy) =
in either
           : HTTP or TCP mode.  Unix Domain Sockets are more efficient than
           : localhost TCP/IP connections  as they reduce data copies, avoi=
d
           : needless fragmentation and have better dispatch behaviours.
           : When enabled with corresponding support modules, the connector=
 can
           : accept HTTP, HTTPS or HTTP2C traffic.
       Tags: connector
     Depend: server
        LIB: lib/jetty-unixsocket-${jetty.version}.jar
        LIB: lib/jnr/*.jar
        XML: etc/jetty-unixsocket.xml

     Module: unixsocket-forwarded
           : Adds a forwarded request customizer to the HTTP configuration =
used
           : by the Unix Domain Socket connector, for use when behind a pro=
xy operating
           : in HTTP mode that adds forwarded-for style HTTP headers. Typic=
ally this
           : is an alternate to the Proxy Protocol used mostly for TCP mode=
.
       Tags: connector
     Depend: unixsocket-http
        XML: etc/jetty-unixsocket-forwarded.xml

     Module: unixsocket-http
           : Adds a HTTP protocol support to the Unix Domain Socket connect=
or.
           : It should be used when a proxy is forwarding either HTTP or de=
crypted
           : HTTPS traffic to the connector and may be used with the
           : unix-socket-http2c modules to upgrade to HTTP/2.
       Tags: connector, http
     Depend: unixsocket
        XML: etc/jetty-unixsocket-http.xml

     Module: unixsocket-http2c
           : Adds a HTTP2C connetion factory to the Unix Domain Socket Conn=
ector
           : It can be used when either the proxy forwards direct
           : HTTP/2C (unecrypted) or decrypted HTTP/2 traffic.
       Tags: connector, http2
     Depend: unixsocket-http
        LIB: lib/http2/*.jar
        XML: etc/jetty-unixsocket-http2c.xml

     Module: unixsocket-proxy-protocol
           : Enables the proxy protocol on the Unix Domain Socket Connector
           : http://www.haproxy.org/download/1.5/doc/proxy-protocol.txt
           : This allows information about the proxied connection to be
           : efficiently forwarded as the connection is accepted.
           : Both V1 and V2 versions of the protocol are supported and any
           : SSL properties may be interpreted by the unixsocket-secure
           : module to indicate secure HTTPS traffic. Typically this
           : is an alternate to the forwarded module.
       Tags: connector
     Depend: unixsocket
        XML: etc/jetty-unixsocket-proxy-protocol.xml

     Module: unixsocket-secure
           : Enable a secure request customizer on the HTTP Configuration
           : used by the Unix Domain Socket Connector.
           : This looks for a secure scheme transported either by the
           : unixsocket-forwarded, unixsocket-proxy-protocol or in a
           : HTTP2 request.
       Tags: connector
     Depend: unixsocket-http
        XML: etc/jetty-unixsocket-secure.xml

Modules for tag 'debug':
------------------------

     Module: debug
           : Enables the DebugListener to generate additional
           : logging regarding detailed request handling events.
           : Renames threads to include request URI.
       Tags: debug
     Depend: deploy
        XML: etc/jetty-debug.xml

     Module: debuglog
           : Deprecated Debug Log using the DebugHandle.
           : Replaced with the debug module.
       Tags: debug
     Depend: server
        XML: etc/jetty-debuglog.xml

Modules for tag 'handler':
--------------------------

     Module: gzip
           : Enable GzipHandler for dynamic gzip compression
           : for the entire server.
       Tags: handler
     Depend: server
        XML: etc/jetty-gzip.xml

     Module: ipaccess
           : Enable the ipaccess handler to apply a white/black list
           : control of the remote IP of requests.
       Tags: handler
     Depend: server
        XML: etc/jetty-ipaccess.xml

     Module: stats
           : Enable detailed statistics collection for the server,
           : available via JMX.
       Tags: handler
     Depend: server
        XML: etc/jetty-stats.xml

     Module: threadlimit
       Tags: handler
     Depend: server
        XML: etc/jetty-threadlimit.xml

Modules for tag 'logging':
--------------------------

     Module: console-capture
           : Redirects JVMs console stderr and stdout to a log file,
           : including output from Jetty's default StdErrLog logging.
       Tags: logging
        LIB: resources/
        XML: etc/console-capture.xml

     Module: logging-jcl [logging]
           : Configure jetty logging to use Java Commons Logging (jcl)
           : SLF4J is used as the core logging mechanism.
       Tags: logging
     Depend: jcl-impl, slf4j-jcl
        JVM: -Dorg.eclipse.jetty.util.log.class=3Dorg.eclipse.jetty.util.lo=
g.Slf4jLog

     Module: logging-jetty [logging]
           : Configure jetty logging mechanism.
           : Provides a ${jetty.base}/resources/jetty-logging.properties.
       Tags: logging
     Depend: console-capture, resources

     Module: logging-jul [logging]
           : Configure jetty logging to use Java Util Logging (jul)
           : SLF4J is used as the core logging mechanism.
       Tags: logging
     Depend: jul-impl, slf4j-jul
        JVM: -Dorg.eclipse.jetty.util.log.class=3Dorg.eclipse.jetty.util.lo=
g.Slf4jLog

     Module: logging-log4j [logging]
           : Configure jetty logging to use Log4j Logging
           : SLF4J is used as the core logging mechanism.
       Tags: logging
     Depend: log4j-impl, slf4j-log4j
        JVM: -Dorg.eclipse.jetty.util.log.class=3Dorg.eclipse.jetty.util.lo=
g.Slf4jLog

     Module: logging-log4j2 [logging]
           : Configure jetty logging to use log4j version 2
           : SLF4J is used as the core logging mechanism.
       Tags: logging
     Depend: slf4j-log4j2, log4j2-impl
        JVM: -Dorg.eclipse.jetty.util.log.class=3Dorg.eclipse.jetty.util.lo=
g.Slf4jLog

     Module: logging-logback [logging]
           : Configure jetty logging to use Logback Logging.
           : SLF4J is used as the core logging mechanism.
       Tags: logging
     Depend: logback-impl, slf4j-logback
        JVM: -Dorg.eclipse.jetty.util.log.class=3Dorg.eclipse.jetty.util.lo=
g.Slf4jLog

     Module: logging-slf4j [logging]
           : Configure jetty logging to use slf4j.
           : Any slf4j-impl implementation is used
       Tags: logging
     Depend: slf4j-api, slf4j-impl
        JVM: -Dorg.eclipse.jetty.util.log.class=3Dorg.eclipse.jetty.util.lo=
g.Slf4jLog

Modules for tag 'requestlog':
-----------------------------

     Module: logback-access [requestlog]
           : Enables logback request log.
       Tags: requestlog, logging, logback
     Depend: server, logback-core, resources
        LIB: lib/logback/logback-access-${logback.version}.jar
        XML: etc/jetty-logback-access.xml

     Module: requestlog
           : Enables a NCSA style request log.
       Tags: requestlog
     Depend: server
        XML: etc/jetty-requestlog.xml

Modules for tag 'session':
--------------------------

     Module: session-cache-hash [session-cache]
           : Enable first level session cache in ConcurrentHashMap.
           : If not enabled, sessions will use a HashSessionCache by defaul=
t, so enabling
           : via this module is only needed if the configuration properties=
 need to be
           : changed.
       Tags: session
     Depend: sessions
        XML: etc/sessions/session-cache-hash.xml

     Module: session-cache-null [session-cache]
           : A trivial SessionCache that does not actually cache sessions.
       Tags: session
     Depend: sessions
        XML: etc/sessions/session-cache-null.xml

     Module: session-store-cache
           : Enables caching of SessionData in front of a SessionDataStore.
       Tags: session
     Depend: session-store, sessions/session-data-cache/${session-data-cach=
e}
        XML: etc/sessions/session-data-cache/session-caching-store.xml

     Module: session-store-file [session-store]
           : Enables session persistent storage in files.
       Tags: session
     Depend: sessions
        XML: etc/sessions/file/session-store.xml

     Module: session-store-gcloud [session-store]
           : Enables GCloudDatastore session management.
       Tags: session, gcloud
     Depend: webapp, sessions, gcloud-datastore, annotations
        LIB: lib/jetty-gcloud-session-manager-${jetty.version}.jar
        XML: etc/sessions/gcloud/session-store.xml

     Module: session-store-infinispan-embedded [session-store]
           : Enables session data store in a local Infinispan cache
       Tags: session
     Depend: sessions, sessions/infinispan/default
        LIB: lib/jetty-infinispan-${jetty.version}.jar
        LIB: lib/infinispan/*.jar

     Module: session-store-infinispan-remote [session-store]
           : Enables session data store in a remote Infinispan cache
       Tags: session
     Depend: sessions/infinispan/remote, sessions
        LIB: lib/jetty-infinispan-${jetty.version}.jar
        LIB: lib/infinispan/*.jar

     Module: session-store-jdbc [session-store]
           : Enables JDBC peristent/distributed session storage.
       Tags: session
     Depend: sessions, sessions/jdbc/${db-connection-type}
        XML: etc/sessions/jdbc/session-store.xml

     Module: session-store-mongo [session-store]
           : Enables NoSql session management with a MongoDB driver.
       Tags: session
     Depend: sessions
        LIB: lib/jetty-nosql-${jetty.version}.jar
        LIB: lib/nosql/*.jar
        XML: etc/sessions/mongo/session-store.xml

     Module: sessions
           : The session management. By enabling this module, it allows
           : session management to be configured via the ini templates
           : created or by enabling other session-cache or session-store
           : modules.  Without this module enabled, the server may still
           : use sessions, but their management cannot be configured.
       Tags: session
     Depend: server
        XML: etc/sessions/id-manager.xml</code></pre>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_searching_modules">Searching Modules</h5>
<div class=3D"paragraph">
<p>Since the introduction of the module system, many new modules have been =
added.
As a result, looking at the module list as a whole can be somewhat overwhel=
ming.
To narrow down which modules you would like to choose from, you can search =
by values listed under the <code>[tags]</code> section.
Note that when you search this way, all modules that include your criteria =
in it=E2=80=99s <code>[tags]</code> section, including internal modules, wi=
ll be shown.
To filter out internal modules when searching a specific module tag, simply=
 add <code>-internal</code> to the command line.
For example, if you wanted to look at only the logging modules (excluding t=
he internal implementation modules), you would use <code>--list-modules=3Dl=
ogging,-internal</code>.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">[mybase]$ java -jar ../start.jar --list-modules=3Dlogging,-internal

Available Modules:
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D
tags: [logging, -internal]

Modules for tag 'logging':
--------------------------

     Module: console-capture
           : Redirects JVMs console stderr and stdout to a log file,
           : including output from Jetty's default StdErrLog logging.
       Tags: logging
        LIB: resources/
        XML: etc/console-capture.xml

     Module: logging-jcl [logging]
           : Configure jetty logging to use Java Commons Logging (jcl)
           : SLF4J is used as the core logging mechanism.
       Tags: logging
     Depend: jcl-impl, slf4j-jcl
        JVM: -Dorg.eclipse.jetty.util.log.class=3Dorg.eclipse.jetty.util.lo=
g.Slf4jLog

     Module: logging-jetty [logging]
           : Configure jetty logging mechanism.
           : Provides a ${jetty.base}/resources/jetty-logging.properties.
       Tags: logging
     Depend: console-capture, resources

     Module: logging-jul [logging]
           : Configure jetty logging to use Java Util Logging (jul)
           : SLF4J is used as the core logging mechanism.
       Tags: logging
     Depend: jul-impl, slf4j-jul
        JVM: -Dorg.eclipse.jetty.util.log.class=3Dorg.eclipse.jetty.util.lo=
g.Slf4jLog

     Module: logging-log4j [logging]
           : Configure jetty logging to use Log4j Logging
           : SLF4J is used as the core logging mechanism.
       Tags: logging
     Depend: log4j-impl, slf4j-log4j
        JVM: -Dorg.eclipse.jetty.util.log.class=3Dorg.eclipse.jetty.util.lo=
g.Slf4jLog

     Module: logging-log4j2 [logging]
           : Configure jetty logging to use log4j version 2
           : SLF4J is used as the core logging mechanism.
       Tags: logging
     Depend: slf4j-log4j2, log4j2-impl
        JVM: -Dorg.eclipse.jetty.util.log.class=3Dorg.eclipse.jetty.util.lo=
g.Slf4jLog

     Module: logging-logback [logging]
           : Configure jetty logging to use Logback Logging.
           : SLF4J is used as the core logging mechanism.
       Tags: logging
     Depend: logback-impl, slf4j-logback
        JVM: -Dorg.eclipse.jetty.util.log.class=3Dorg.eclipse.jetty.util.lo=
g.Slf4jLog

     Module: logging-slf4j [logging]
           : Configure jetty logging to use slf4j.
           : Any slf4j-impl implementation is used
       Tags: logging
     Depend: slf4j-api, slf4j-impl
        JVM: -Dorg.eclipse.jetty.util.log.class=3Dorg.eclipse.jetty.util.lo=
g.Slf4jLog

Modules for tag 'requestlog':
-----------------------------

     Module: logback-access [requestlog]
           : Enables logback request log.
       Tags: requestlog, logging, logback
     Depend: server, logback-core, resources
        LIB: lib/logback/logback-access-${logback.version}.jar
        XML: etc/jetty-logback-access.xml</code></pre>
</div>
</div>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"startup-xml-config">Managing XML Based Startup Configuration</h3>
<div class=3D"paragraph">
<p>When you see XML files on the command line for startup of Jetty, they ar=
e always part of the Jetty IoC Configuration mechanism.</p>
</div>
<div class=3D"paragraph">
<p>Internally, Jetty uses these XML files to build up Jetty with the featur=
es that you wan to use.</p>
</div>
<div class=3D"paragraph">
<p>The module mechanism present in Jetty determines the load order of the X=
ML files.
The Jetty Base and Jetty Home resolution logic also applies, which allows y=
ou to override a XML file declared by a module with your XML by simply havi=
ng the same named XML in your <code>${jetty.base}/etc</code> directory loca=
tion.</p>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"startup-unix-service">Startup a Unix Service using jetty.sh</h3>
<div class=3D"paragraph">
<p>The standalone Jetty distribution ships with a <code>bin/jetty.sh</code>=
 script that can be used by various Unix distros (including OSX) to manage =
Jetty as a startup service.</p>
</div>
<div class=3D"paragraph">
<p>This script is suitable for setting up Jetty as a service in Unix.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"_quick_start_a_jetty_service">Quick-Start a Jetty Service</h4>
<div class=3D"paragraph">
<p>The minimum steps to get Jetty to run as a Service include:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">[/opt/jetty]# tar -zxf /home/user/downloads/jetty-distribution-{VERSION}=
.tar.gz
[/opt/jetty]# cd jetty-distribution-{VERSION}/
[/opt/jetty/jetty-distribution-{VERSION}]# ls
bin        lib                         modules      resources  start.jar
demo-base  license-eplv10-aslv20.html  notice.html  start.d    VERSION.txt
etc        logs                        README.TXT   start.ini  webapps

[/opt/jetty/jetty-distribution-{VERSION}]# cp bin/jetty.sh /etc/init.d/jett=
y
[/opt/jetty/jetty-distribution-{VERSION}]# echo JETTY_HOME=3D`pwd` &gt; /et=
c/default/jetty
[/opt/jetty/jetty-distribution-{VERSION}]# cat /etc/default/jetty
JETTY_HOME=3D/opt/jetty/jetty-distribution-{VERSION}

[/opt/jetty/jetty-distribution-{VERSION}]# service jetty start
Starting Jetty: OK Wed Nov 20 10:26:53 MST 2013</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>From this demonstration we can see that Jetty started successfully as a =
Unix Service from the <code>/opt/jetty/jetty-distribution-{VERSION}</code> =
directory.</p>
</div>
<div class=3D"paragraph">
<p>This configuration works well but it is running Jetty as the root user.<=
/p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_practical_setup_of_a_jetty_service">Practical Setup of a Jetty S=
ervice</h4>
<div class=3D"paragraph">
<p>There are various ways this can be accomplished, mostly depending on you=
r Unix environment (and possibly corporate policies).</p>
</div>
<div class=3D"paragraph">
<p>The techniques outlined here assume an installation on Linux (demonstrat=
ed on Ubuntu 12.04.3 LTS).</p>
</div>
<div class=3D"paragraph">
<p>Prepare some empty directories to work with.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n"># mkdir -p /opt/jetty
# mkdir -p /opt/web/mybase
# mkdir -p /opt/jetty/temp</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The directory purposes are as follows:</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">/opt/jetty</dt>
<dd>
<p>Where the Jetty Distribution will be unpacked into</p>
</dd>
<dt class=3D"hdlist1">/opt/web/mybase</dt>
<dd>
<p>Where your specific set of webapps will be located, including all of the=
 configuration required of the server to make them operational.</p>
</dd>
<dt class=3D"hdlist1">/opt/jetty/temp</dt>
<dd>
<p>This is the temporary directory assigned to Java by the Service Layer (t=
his is what Java sees as the <code>java.io.tmpdir</code> System Property).<=
/p>
<div class=3D"paragraph">
<p>This is intentionally kept separate from the standard temp directory of =
<code>/tmp</code>, as this location doubles as the Servlet Spec work direct=
ory.
It is our experience that the standard temp directory is often managed by v=
arious cleanup scripts that wreak havoc on a long running Jetty server.</p>
</div>
</dd>
</dl>
</div>
<div class=3D"paragraph">
<p>Jetty 9.3 requires Java 8 (or greater) to run.
Make sure you have it installed.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n"># apt-get install openjdk-7-jdk</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Or download Java 7 from: <a href=3D"http://www.oracle.com/technetwork/ja=
va/javase/downloads/index.html" class=3D"bare">http://www.oracle.com/techne=
twork/java/javase/downloads/index.html</a></p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n"># java -version
java version "1.6.0_27"
OpenJDK Runtime Environment (IcedTea6 1.12.6) (6b27-1.12.6-1ubuntu0.12.04.2=
)
OpenJDK 64-Bit Server VM (build 20.0-b12, mixed mode)

# update-alternatives --list java
/usr/lib/jvm/java-6-openjdk-amd64/jre/bin/java
/usr/lib/jvm/java-7-openjdk-amd64/jre/bin/java

# update-alternatives --config java
There are 2 choices for the alternative java (providing /usr/bin/java).

  Selection    Path                                            Priority   S=
tatus
------------------------------------------------------------
* 0            /usr/lib/jvm/java-6-openjdk-amd64/jre/bin/java   1061      a=
uto mode
  1            /usr/lib/jvm/java-6-openjdk-amd64/jre/bin/java   1061      m=
anual mode
  2            /usr/lib/jvm/java-7-openjdk-amd64/jre/bin/java   1051      m=
anual mode

Press enter to keep the current choice[*], or type selection number: 2
update-alternatives: using /usr/lib/jvm/java-7-openjdk-amd64/jre/bin/java t=
o provide /usr/bin/java (java) in manual mode.

# java -version
java version "1.7.0_25"
OpenJDK Runtime Environment (IcedTea 2.3.10) (7u25-2.3.10-1ubuntu0.12.04.2)
OpenJDK 64-Bit Server VM (build 23.7-b01, mixed mode)</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>It is recommended that you create a user to specifically run Jetty.
This user should have the minimum set of privileges needed to run Jetty.</p=
>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n"># useradd --user-group --shell /bin/false --home-dir /opt/jetty/temp jet=
ty</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>This will create a user called <code>jetty</code>, belonging to the grou=
p called <code>jetty</code>, with no shell access (aka <code>/bin/false</co=
de>), and home directory at <code>/opt/jetty/temp</code>.</p>
</div>
<div class=3D"paragraph">
<p>Download a copy of the Jetty distribution from the <a href=3D"file:///ho=
me/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/s=
rc/main/asciidoc/index.html#jetty-downloading">Official Eclipse Download Si=
te</a></p>
</div>
<div class=3D"paragraph">
<p>Unpack it into place.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">[/opt/jetty]# tar -zxf /home/user/Downloads/jetty-distribution-{VERSION}=
.tar.gz
[/opt/jetty]# ls -F
jetty-distribution-{VERSION}/
[/opt/jetty]# mkdir /opt/jetty/temp</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>It might seem strange or undesirable to unpack the first portion of the =
jetty-distribution directory name too.
But starting with Jetty 9.1 the split between <code>${jetty.home}</code> an=
d <code>${jetty.base}</code> allows for easier upgrades of Jetty itself whi=
le isolating your webapp specific configuration.
For more information on the Jetty home and base concepts see the section on=
 managing a Jetty installation <a href=3D"file:///home/tian/Downloads/b60/e=
book/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.=
html#startup-base-and-home">earlier in this Chapter.</a></p>
</div>
<div class=3D"paragraph">
<p>The <code>/opt/jetty/temp</code> directory is created as a durable place=
 for Jetty to use for temp and working directories.
Many Unix systems will periodically clean out the /tmp directory, this beha=
vior is undesired in a Servlet container and has been known to cause proble=
ms.
This durable directory at <code>/opt/jetty/temp</code> solves for that beha=
vior.</p>
</div>
<div class=3D"paragraph">
<p>The directory at <code>/opt/web/mybase</code> is going to be a <code>${j=
etty.base}</code>, so lets configure it to hold your webapp and its configu=
ration.</p>
</div>
<div class=3D"admonitionblock tip">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Tip</div>
</td>
<td class=3D"content">
<div class=3D"paragraph">
<p>In past versions of Jetty, you would configure / modify / add to the <co=
de>jetty-distribution</code> directory directly.
While this is still supported, we encourage you to setup a proper <code>${j=
etty.base}</code> directory, as it will benefit you with easier <code>jetty=
-distribution</code> upgrades in the future.</p>
</div>
</td>
</tr>
</tbody></table>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n"># cd /opt/web/mybase/
[/opt/web/mybase]# ls
[/opt/web/mybase]# java -jar /opt/jetty/jetty-distribution-{VERSION}/start.=
jar \
   --add-to-start=3Ddeploy,http,logging
WARNING: deploy          initialised in ${jetty.base}/start.ini (appended)
WARNING: deploy          enabled in     ${jetty.base}/start.ini
WARNING: server          initialised in ${jetty.base}/start.ini (appended)
WARNING: server          enabled in     ${jetty.base}/start.ini
WARNING: http            initialised in ${jetty.base}/start.ini (appended)
WARNING: http            enabled in     ${jetty.base}/start.ini
WARNING: server          enabled in     ${jetty.base}/start.ini
WARNING: logging         initialised in ${jetty.base}/start.ini (appended)
WARNING: logging         enabled in     ${jetty.base}/start.ini
[/opt/web/mybase]# ls -F
start.ini  webapps/</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>At this point you have configured your <code>/opt/web/mybase</code> to e=
nable the following modules:</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">deploy</dt>
<dd>
<p>This is the module that will perform deployment of web applications (WAR=
 files or exploded directories), or Jetty IoC XML context deployables, from=
 the <code>/opt/web/mybase/webapps</code> directory.</p>
</dd>
<dt class=3D"hdlist1">http</dt>
<dd>
<p>This sets up a single Connector that listens for basic HTTP requests.</p=
>
<div class=3D"paragraph">
<p>See the created <code>start.ini</code> for configuring this connector.</=
p>
</div>
</dd>
<dt class=3D"hdlist1">logging</dt>
<dd>
<p>When running Jetty as a service it is very important to have logging ena=
bled.
This module will enable the basic STDOUT and STDERR capture logging to the =
<code>/opt/web/mybase/logs/</code> directory.</p>
</dd>
</dl>
</div>
<div class=3D"paragraph">
<p>See <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty=
-9.4.x/jetty-documentation/src/main/asciidoc/index.html#start-jar">Using st=
art.jar</a> for more details and options on setting up and configuring a <c=
ode>${jetty.base}</code> directory.</p>
</div>
<div class=3D"paragraph">
<p>Copy your war file into place.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n"># cp /home/user/projects/mywebsite.war /opt/web/mybase/webapps/</code></=
pre>
</div>
</div>
<div class=3D"paragraph">
<p>Most service installations will want Jetty to run on port 80, now is the=
 opportunity to change this from the default value of <code>8080</code> to =
<code>80</code>.</p>
</div>
<div class=3D"paragraph">
<p>Edit the <code>/opt/web/mybase/start.ini</code> and change the <code>jet=
ty.http.port</code> value.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n"># grep jetty.http.port /opt/web/mybase/start.ini
jetty.port=3D80</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Change the permissions on the Jetty distribution and webapp directories =
so that the user you created can access it.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n"># chown --recursive jetty /opt/jetty
# chown --recursive jetty /opt/web/mybase</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Next we need to make the Unix System aware that we have a new Jetty Serv=
ice that can be managed by the standard <code>service</code> calls.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n"># cp /opt/jetty/jetty-distribution-{VERSION}/bin/jetty.sh /etc/init.d/je=
tty
# echo "JETTY_HOME=3D/opt/jetty/jetty-distribution-{VERSION}" &gt; /etc/def=
ault/jetty
# echo "JETTY_BASE=3D/opt/web/mybase" &gt;&gt; /etc/default/jetty
# echo "TMPDIR=3D/opt/jetty/temp" &gt;&gt; /etc/default/jetty</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Test out the configuration:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n"># service jetty status
Checking arguments to Jetty:
START_INI      =3D  /opt/web/mybase/start.ini
JETTY_HOME     =3D  /opt/jetty/jetty-distribution-{VERSION}
JETTY_BASE     =3D  /opt/web/mybase
JETTY_CONF     =3D  /opt/jetty/jetty-distribution-{VERSION}/etc/jetty.conf
JETTY_PID      =3D  /var/run/jetty.pid
JETTY_START    =3D  /opt/jetty/jetty-distribution-{VERSION}/start.jar
CLASSPATH      =3D
JAVA           =3D  /usr/bin/java
JAVA_OPTIONS   =3D  -Djetty.state=3D/opt/web/mybase/jetty.state
       -Djetty.logs=3D/opt/web/mybase/logs
       -Djetty.home=3D/opt/jetty/jetty-distribution-{VERSION}
       -Djetty.base=3D/opt/web/mybase
       -Djava.io.tmpdir=3D/opt/jetty/temp
JETTY_ARGS     =3D  jetty-logging.xml jetty-started.xml
RUN_CMD        =3D  /usr/bin/java
       -Djetty.state=3D/opt/web/mybase/jetty.state
       -Djetty.logs=3D/opt/web/mybase/logs
       -Djetty.home=3D/opt/jetty/jetty-distribution-{VERSION}
       -Djetty.base=3D/opt/web/mybase
       -Djava.io.tmpdir=3D/opt/jetty/temp
       -jar /opt/jetty/jetty-distribution-{VERSION}/start.jar
       jetty-logging.xml
       jetty-started.xml</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>You now have a configured <code>${jetty.base}</code> in <code>/opt/web/m=
ybase</code> and a jetty-distribution in <code>/opt/jetty/jetty-distributio=
n-{VERSION}</code>, along with the service level files necessary to start t=
he service.</p>
</div>
<div class=3D"paragraph">
<p>Test the service to make sure it starts up and runs successfully.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n"># service jetty start
Starting Jetty: OK Wed Nov 20 12:35:28 MST 2013

# service jetty check
..(snip)..
Jetty running pid=3D2958

[/opt/web/mybase]# ps u 2958
USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
jetty     2958  5.3  0.1 11179176 53984 ?      Sl   12:46   0:00 /usr/bin/j=
ava -Djetty...</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>You should now have your server running. Try it out</p>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"startup-windows-service">Startup via Windows Service</h3>
<div class=3D"paragraph">
<p>There are no components that ship with the Jetty Distribution to make it=
 a formal Windows Service.</p>
</div>
<div class=3D"paragraph">
<p>However, we recommend the use of <a href=3D"https://commons.apache.org/p=
roper/commons-daemon/procrun.html">Apache ProcRun=E2=80=99s Daemon</a>.</p>
</div>
<div class=3D"paragraph">
<p>The techniques outlined here are based on Windows 7 (64-bit), using JDK =
8 (64-bit), running on an Intel i7 architecture machine.</p>
</div>
<div class=3D"paragraph">
<p>Prepare some empty directories to work with.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">C:\&gt; mkdir opt
C:\&gt; cd opt
C:\opt&gt; mkdir jetty
C:\opt&gt; mkdir logs
C:\opt&gt; mkdir myappbase
C:\opt&gt; mkdir temp
C:\opt&gt; dir
 Volume in drive C has no label.
 Volume Serial Number is DEAD-BEEF

 Directory of C:\opt

11/21/2013  04:06 PM    </code><dir><code class=3D"language-screen" data-la=
ng=3D"screen">          .
11/21/2013  04:06 PM    </code><dir><code class=3D"language-screen" data-la=
ng=3D"screen">          ..
11/21/2013  04:06 PM    </code><dir><code class=3D"language-screen" data-la=
ng=3D"screen">          jetty
11/21/2013  04:06 PM    </code><dir><code class=3D"language-screen" data-la=
ng=3D"screen">          logs
11/21/2013  04:06 PM    </code><dir><code class=3D"language-screen" data-la=
ng=3D"screen">          myappbase
11/21/2013  04:06 PM    </code><dir><code class=3D"language-screen" data-la=
ng=3D"screen">          temp
               0 File(s)              0 bytes</code></dir></dir></dir></dir=
></dir></dir></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The directory purposes are as follows:</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">C:\opt</dt>
<dd>
<p>Where the service layer utilities, scripts, and binaries will eventually=
 be.</p>
</dd>
<dt class=3D"hdlist1">C:\opt\logs</dt>
<dd>
<p>Where the logs for the service layer will put its own logs.</p>
<div class=3D"paragraph">
<p>Typically you will see the audit logs (install/update/delete), StdOutput=
, and StdError logs here.</p>
</div>
</dd>
<dt class=3D"hdlist1">C:\opt\jetty</dt>
<dd>
<p>Where the Jetty Distribution will be unpacked into.</p>
</dd>
<dt class=3D"hdlist1">C:\opt\myappbase</dt>
<dd>
<p>Where your specific set of webapps will be located, including all of the=
 configuration required of the server to make them operational.</p>
</dd>
<dt class=3D"hdlist1">C:\opt\temp</dt>
<dd>
<p>This is the temporary directory assigned to Java by the Service Layer (t=
his is what Java sees as the <code>java.io.tmpdir</code> System Property).<=
/p>
<div class=3D"paragraph">
<p>This is intentionally kept separate from the standard temp directories o=
f Windows, as this location doubles as the Servlet Spec work directory.</p>
</div>
</dd>
</dl>
</div>
<div class=3D"paragraph">
<p>Or download Java 8 from: <a href=3D"http://www.oracle.com/technetwork/ja=
va/javase/downloads/index.html" class=3D"bare">http://www.oracle.com/techne=
twork/java/javase/downloads/index.html</a></p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">C:\opt&gt;java -version
java version "1.7.0_45"
Java(TM) SE Runtime Environment (build 1.7.0_45-b18)
Java HotSpot(TM) 64-Bit Server VM (build 24.45-b08, mixed mode)</code></pre=
>
</div>
</div>
<div class=3D"paragraph">
<p>Download a copy of the ZIP distribution from the <a href=3D"file:///home=
/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src=
/main/asciidoc/index.html#jetty-downloading">Official Eclipse Download Site=
</a></p>
</div>
<div class=3D"paragraph">
<p>Extract the contents of the <code>jetty-distribution-{VERSION}</code> di=
rectory to <code>C:\opt\jetty</code></p>
</div>
<div class=3D"paragraph">
<p>Once complete, the contents of the <code>C:\opt\jetty</code> directory s=
hould look like this:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">C:\opt\jetty&gt;dir
 Volume in drive C has no label.
 Volume Serial Number is C8CF-820B

 Directory of C:\opt\jetty

11/21/2013  12:13 PM    </code><dir><code class=3D"language-screen" data-la=
ng=3D"screen">          .
11/21/2013  12:13 PM    </code><dir><code class=3D"language-screen" data-la=
ng=3D"screen">          ..
11/21/2013  12:13 PM    </code><dir><code class=3D"language-screen" data-la=
ng=3D"screen">          bin
11/21/2013  12:13 PM    </code><dir><code class=3D"language-screen" data-la=
ng=3D"screen">          demo-base
11/21/2013  12:13 PM    </code><dir><code class=3D"language-screen" data-la=
ng=3D"screen">          etc
11/21/2013  12:13 PM    </code><dir><code class=3D"language-screen" data-la=
ng=3D"screen">          lib
11/21/2013  12:13 PM            30,012 license-eplv10-aslv20.html
11/21/2013  12:13 PM    </code><dir><code class=3D"language-screen" data-la=
ng=3D"screen">          logs
11/21/2013  12:13 PM    </code><dir><code class=3D"language-screen" data-la=
ng=3D"screen">          modules
11/21/2013  12:13 PM             6,262 notice.html
11/21/2013  12:13 PM             1,249 README.TXT
11/21/2013  12:13 PM    <dir>          resources
11/21/2013  12:13 PM    <dir>          start.d
11/21/2013  12:13 PM             2,126 start.ini
11/21/2013  12:13 PM            72,226 start.jar
11/21/2013  12:13 PM           341,784 VERSION.txt
11/21/2013  12:13 PM    <dir>          webapps
               6 File(s)        453,659 bytes
              11 Dir(s)  306,711,420,928 bytes free</dir></dir></dir></code=
></dir></dir></dir></dir></dir></dir></dir></dir></pre><code class=3D"langu=
age-screen" data-lang=3D"screen">
</code></div><code class=3D"language-screen" data-lang=3D"screen">
</code></div><code class=3D"language-screen" data-lang=3D"screen">
<div class=3D"paragraph">
<p>Download a copy of the <a href=3D"https://commons.apache.org/proper/comm=
ons-daemon/binaries.html">Apache ProcRun</a> native binaries.</p>
</div>
<div class=3D"paragraph">
<p>You should have downloaded a file named <code>commons-daemon-1.0.15-bin-=
windows.zip</code> (the version might be different).
Open the ZIP file and extract the <code>prunmgr.exe</code> and <code>prunsr=
v.exe</code> files into the <code>C:\opt</code> directory.</p>
</div>
<div class=3D"paragraph">
<p>Make sure to get the right version of <code>prunsrv.exe</code> for your =
environment.
The ZIP file has both 32 bit and 64 bit versions of this file.</p>
</div>
<div class=3D"paragraph">
<p>Once you are complete, the contents of <code>C:\opt</code> directory sho=
uld look like this:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">C:\opt&gt; dir
 Volume in drive C has no label.
 Volume Serial Number is DEAD-BEEF

 Directory of C:\opt

11/21/2013  04:06 PM    </code><dir><code class=3D"language-screen" data-la=
ng=3D"screen">          .
11/21/2013  04:06 PM    </code><dir><code class=3D"language-screen" data-la=
ng=3D"screen">          ..
11/21/2013  04:06 PM    </code><dir><code class=3D"language-screen" data-la=
ng=3D"screen">          jetty
11/21/2013  04:06 PM    </code><dir><code class=3D"language-screen" data-la=
ng=3D"screen">          logs
11/21/2013  04:06 PM    </code><dir><code class=3D"language-screen" data-la=
ng=3D"screen">          myappbase
11/21/2013  04:06 PM    </code><dir><code class=3D"language-screen" data-la=
ng=3D"screen">          temp
11/21/2013  04:11 PM           104,448 prunmgr.exe
11/21/2013  04:11 PM            80,896 prunsrv.exe
               2 File(s)        185,344 bytes</code></dir></dir></dir></dir=
></dir></dir></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Now it=E2=80=99s time to setup your new <code>${jetty.base}</code> direc=
tory to have all of your WebApps and the configurations that they need.</p>
</div>
<div class=3D"paragraph">
<p>We=E2=80=99ll start by specifying which modules we want to use (this wil=
l create a start.ini file and also create a few empty directories for you)<=
/p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">C:\opt\myappbase&gt;java -jar ..\jetty\start.jar --add-to-start=3Ddeploy=
,http,logging

WARNING: deploy          initialised in ${jetty.base}\start.ini (appended)
WARNING: deploy          enabled in     ${jetty.base}\start.ini
MKDIR: ${jetty.base}\webapps
WARNING: server          initialised in ${jetty.base}\start.ini (appended)
WARNING: server          enabled in     ${jetty.base}\start.ini
WARNING: http            initialised in ${jetty.base}\start.ini (appended)
WARNING: http            enabled in     ${jetty.base}\start.ini
WARNING: server          enabled in     ${jetty.base}\start.ini
WARNING: logging         initialised in ${jetty.base}\start.ini (appended)
WARNING: logging         enabled in     ${jetty.base}\start.ini
MKDIR: ${jetty.base}\logs

C:\opt\myappbase&gt;dir
 Volume in drive C has no label.
 Volume Serial Number is C8CF-820B

 Directory of C:\opt\myappbase

11/21/2013  12:49 PM    </code><dir><code class=3D"language-screen" data-la=
ng=3D"screen">          .
11/21/2013  12:49 PM    </code><dir><code class=3D"language-screen" data-la=
ng=3D"screen">          ..
11/21/2013  12:49 PM    </code><dir><code class=3D"language-screen" data-la=
ng=3D"screen">          logs
11/21/2013  12:49 PM             1,355 start.ini
11/21/2013  12:49 PM    </code><dir><code class=3D"language-screen" data-la=
ng=3D"screen">          webapps
               1 File(s)          1,355 bytes
               4 Dir(s)  306,711,064,576 bytes free</code></dir></dir></dir=
></dir></pre>
</div>
</div>
<div class=3D"paragraph">
<p>At this point you have configured your <code>C:\opt\myappbase</code> to =
enable the following modules:</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">deploy</dt>
<dd>
<p>This is the module that will perform deployment of web applications (WAR=
 files or exploded directories), or Jetty IoC XML context deployables, from=
 the <code>C:\opt\myappbase\webapps</code> directory.</p>
</dd>
<dt class=3D"hdlist1">http</dt>
<dd>
<p>This sets up a single Connector that listens for basic HTTP requests.</p=
>
<div class=3D"paragraph">
<p>See the created <code>start.ini</code> for configuring this connector.</=
p>
</div>
</dd>
<dt class=3D"hdlist1">logging</dt>
<dd>
<p>When running Jetty as a service it is very important to have logging ena=
bled.
This module will enable the basic STDOUT and STDERR capture logging to the =
<code>C:\opt\myappbase\logs</code> directory.</p>
</dd>
</dl>
</div>
<div class=3D"paragraph">
<p>See the section on <a href=3D"file:///home/tian/Downloads/b60/ebook/jett=
y.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#star=
t-jar">Using start.jar</a> for more details and options on setting up and c=
onfiguring a <code>${jetty.base}</code> directory.</p>
</div>
<div class=3D"paragraph">
<p>At this point you merely have to copy your WAR files into the <code>{$je=
tty.base}/webapps</code> directory.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">C:\opt\myappbase&gt; copy C:\projects\mywebsite.war webapps\</code></pre=
>
</div>
</div>
<div class=3D"paragraph">
<p>At this point you should have your directories, Java, the Jetty distribu=
tion, and your webapp specifics setup and ready for operation.</p>
</div>
<div class=3D"paragraph">
<p>We will use the <a href=3D"https://commons.apache.org/proper/commons-dae=
mon/binaries.html">Apache ProcRun=E2=80=99s prunsrv.exe</a> to install a Je=
tty Service.</p>
</div>
<div class=3D"paragraph">
<p>The basic command line syntax is outlined in the link above.</p>
</div>
<div class=3D"paragraph">
<p>A example <code>install-jetty-service.bat</code> is provided here as an =
example, based on the above directories.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-bat" data-lang=3D"bat">@ec=
ho off
set SERVICE_NAME=3DJettyService
set JETTY_HOME=3DC:\opt\jetty
set JETTY_BASE=3DC:\opt\myappbase
set STOPKEY=3Dsecret
set STOPPORT=3D50001

set PR_INSTALL=3DC:\opt\prunsrv.exe

@REM Service Log Configuration
set PR_LOGPREFIX=3D%SERVICE_NAME%
set PR_LOGPATH=3DC:\opt\logs
set PR_STDOUTPUT=3Dauto
set PR_STDERROR=3Dauto
set PR_LOGLEVEL=3DDebug

@REM Path to Java Installation
set JAVA_HOME=3DC:\Program Files\Java\jdk1.7.0_45
set PR_JVM=3D%JAVA_HOME%\jre\bin\server\jvm.dll
set PR_CLASSPATH=3D%JETTY_HOME%\start.jar;%JAVA_HOME%\lib\tools.jar

@REM JVM Configuration
set PR_JVMMS=3D128
set PR_JVMMX=3D512
set PR_JVMSS=3D4000
set PR_JVMOPTIONS=3D-Duser.dir=3D"%JETTY_BASE%";-Djava.io.tmpdir=3D"C:\opt\=
temp";-Djetty.home=3D"%JETTY_HOME%";-Djetty.base=3D"%JETTY_BASE%"
@REM Startup Configuration
set JETTY_START_CLASS=3Dorg.eclipse.jetty.start.Main

set PR_STARTUP=3Dauto
set PR_STARTMODE=3Djava
set PR_STARTCLASS=3D%JETTY_START_CLASS%
set PR_STARTPARAMS=3DSTOP.KEY=3D"%STOPKEY%";STOP.PORT=3D%STOPPORT%

@REM Shutdown Configuration
set PR_STOPMODE=3Djava
set PR_STOPCLASS=3D%JETTY_START_CLASS%
set PR_STOPPARAMS=3D--stop;STOP.KEY=3D"%STOPKEY%";STOP.PORT=3D%STOPPORT%;ST=
OP.WAIT=3D10

"%PR_INSTALL%" //IS/%SERVICE_NAME% ^
  --DisplayName=3D"%SERVICE_NAME%" ^
  --Install=3D"%PR_INSTALL%" ^
  --Startup=3D"%PR_STARTUP%" ^
  --LogPath=3D"%PR_LOGPATH%" ^
  --LogPrefix=3D"%PR_LOGPREFIX%" ^
  --LogLevel=3D"%PR_LOGLEVEL%" ^
  --StdOutput=3D"%PR_STDOUTPUT%" ^
  --StdError=3D"%PR_STDERROR%" ^
  --JavaHome=3D"%JAVA_HOME%" ^
  --Jvm=3D"%PR_JVM%" ^
  --JvmMs=3D"%PR_JVMMS%" ^
  --JvmMx=3D"%PR_JVMMX%" ^
  --JvmSs=3D"%PR_JVMSS%" ^
  --JvmOptions=3D"%PR_JVMOPTIONS%" ^
  --Classpath=3D"%PR_CLASSPATH%" ^
  --StartMode=3D"%PR_STARTMODE%" ^
  --StartClass=3D"%JETTY_START_CLASS%" ^
  --StartParams=3D"%PR_STARTPARAMS%" ^
  --StopMode=3D"%PR_STOPMODE%" ^
  --StopClass=3D"%PR_STOPCLASS%" ^
  --StopParams=3D"%PR_STOPPARAMS%"

if not errorlevel 1 goto installed
echo Failed to install "%SERVICE_NAME%" service.  Refer to log in %PR_LOGPA=
TH%
goto end

:installed
echo The Service "%SERVICE_NAME%" has been installed

:end</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Configuration=E2=80=99s of note in this batch file:</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">SERVICE_NAME</dt>
<dd>
<p>This is the name of the service that Windows sees.
The name in the Services window will show this name.</p>
</dd>
<dt class=3D"hdlist1">STOPKEY</dt>
<dd>
<p>This is the secret key (password) for the ShutdownMonitor, used to issue=
 a formal command to stop the server.</p>
</dd>
<dt class=3D"hdlist1">STOPPORT</dt>
<dd>
<p>The port that the Shutdown Monitor listens on for the stop command.</p>
<div class=3D"paragraph">
<p>If you have multiple Jetty servers on the same machine, this port will n=
eed to be different for each Service.</p>
</div>
</dd>
</dl>
</div>
<div class=3D"paragraph">
<p>Once you have run <code>prunsrv.exe //IS/&lt;service-name&gt;</code> (do=
ne for you in the above batch file) to install the service, you can use the=
 standard Windows utilities to manage (start/stop/restart) the Jetty servic=
e.</p>
</div>
<div class=3D"paragraph">
<p>Open the Service View and start your service.</p>
</div>
<div class=3D"paragraph">
<p><span class=3D"image"><img src=3D"file:///home/tian/Downloads/b60/ebook/=
jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/images/wind=
ows-service-jetty.png" alt=3D"image" width=3D"576"></span></p>
</div>
</code></div><code class=3D"language-screen" data-lang=3D"screen">
</code></div><code class=3D"language-screen" data-lang=3D"screen">
</code></div><code class=3D"language-screen" data-lang=3D"screen">
<div class=3D"sect1">
<h2 id=3D"session-management">Session Management</h2>
<div class=3D"sectionbody">
<div class=3D"paragraph">
<p>Sessions are a concept within the Servlet api which allow requests to st=
ore and retrieve information across the time a user spends in an applicatio=
n.
Choosing the correct session manager implementation is an important conside=
ration for every application as each can fit and perform optimally in diffe=
rent situations.
If you need a simple in-memory session manager that can persist to disk the=
n session management using the local file system can be a good place to sta=
rt.
If you need a session manager that can work in a clustered scenario with mu=
ltiple instances of Jetty, then the JDBC session manager can be an excellen=
t option.
Jetty also offers more niche session managers that leverage backends such a=
s MongoDB, Inifinispan, or even Google=E2=80=99s Cloud Data Store.</p>
</div>
<div class=3D"sect2">
<h3 id=3D"jetty-sessions-architecture">Session Architecture</h3>
<div class=3D"sect3">
<h4 id=3D"_changes_in_session_architecture">Changes in Session Architecture=
</h4>
<div class=3D"paragraph">
<p>The architecture of Session Management Jetty changed significantly in Je=
tty 9.4.
These changes have resulted in Sessions not only being easier to configure =
but making them much more pluggable for various technologies.</p>
</div>
<div class=3D"paragraph">
<p>In previous versions of Jetty, users were required to configure a separa=
te <code>SessionIdManager</code> for each kind of session clustering techno=
logy being implemented (JDBC, MongoDB..etc.).
In Jetty 9.4, there is now a single <code>SessionIdManager</code> implement=
ation which works across all types of session clustering technologies.
Likewise, prior to Jetty 9.4 there were several different instances of the =
<code>SessionManager</code> class.
Instead of a single <code>SessionManager</code> though, it has been done aw=
ay with entirely, with most of it=E2=80=99s functionality moved to the <cod=
e>SesssionHandler</code> class.
Additionally, Jetty 9.4 introduced the concepts of a <code>SessionCache</co=
de> and an associated <code>SessionDataStore</code> (both explained below).=
</p>
</div>
<div class=3D"paragraph">
<p>Finally, Session scavenging has been re-worked.
Where previously each <code>SessionManager</code> instance would periodical=
ly scan the in-memory (or clustered) sessions for expired sessions, there i=
s now a single generic scavenger thread which instructs the <code>SessionHa=
ndler</code> to clean up expired sessions.
Session expiration has been changed to use a much more efficient timer-base=
d mechanism that avoids constant iteration over all current sessions in mem=
ory by the scavenger.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_session_architecture_hierarchy">Session Architecture Hierarchy</=
h4>
<div class=3D"paragraph">
<p>Each Jetty instance has a singular <code>SessionIdManager</code> to hand=
le all session requests, regardless of clustering technology.
For each context on the server there is one (1) <code>SessionCache</code> w=
hich contains all of the Session objects for the given context.
The benefit of the <code>SessionCache</code> is to ensure that simultaneous=
 requests accessing the same Session Id in the same context always operate =
on the same Session object.
The SessionCache implementation supplied with the Jetty distribution does j=
ust that: keeps Session objects in memory so that they can be shared betwee=
n simultaneous requests.
However, it is possible to provide your own implementation that never share=
s Session objects should you require it.</p>
</div>
<div class=3D"paragraph">
<p>Where the <code>SessionCache</code> handles Session information, Session=
 data is stored in a <code>SessionDataStore</code> that is specific to the =
clustering technology being implemented.
There is only one (1) <code>SessionDataStore</code> per <code>SessionCache<=
/code>.</p>
</div>
<div class=3D"paragraph">
<p>Visually the session architecture can be represented like this:</p>
</div>
<div class=3D"imageblock">
<div class=3D"content">
<img src=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x=
/jetty-documentation/src/main/asciidoc/images/SessionsHierarchy.png" alt=3D=
"SessionsHierarchy">
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_configuring_sessions_in_the_jetty_distribution">Configuring Sess=
ions in the Jetty Distribution</h4>
<div class=3D"paragraph">
<p>Jetty provides support for several different Session Management technolo=
gies.
Both <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9=
.4.x/jetty-documentation/src/main/asciidoc/index.html#configuring-sessions-=
file-system">local file storage</a> and in-memory session management can be=
 implemented for standard implementations.
For implementations using clustered technologies, <a href=3D"file:///home/t=
ian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/m=
ain/asciidoc/index.html#configuring-sessions-jdbc">JDBC</a>, <a href=3D"fil=
e:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-document=
ation/src/main/asciidoc/index.html#configuring-sessions-mongo">MongoDB</a>,=
 <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x=
/jetty-documentation/src/main/asciidoc/index.html#configuring-sessions-infi=
nispan">Inifinispan</a> and <a href=3D"file:///home/tian/Downloads/b60/eboo=
k/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.htm=
l#configuring-sessions-gcloud">Google Cloud Datastore</a> are all supported=
.
Setting up these technologies is as easy as enabling it=E2=80=99s <a href=
=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-d=
ocumentation/src/main/asciidoc/index.html#startup-modules">module</a> and e=
diting it=E2=80=99s associated ini file with any usernames, passwords or ch=
anges you need to make for your instance.
The following sections will cover how exactly to enable the required module=
s as well as an overview of what options are available for customization.</=
p>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"sessions-details">Session Configuration and Use Cases</h3>
<div class=3D"sect3">
<h4 id=3D"_configuration_2">Configuration</h4>
<div class=3D"sect4">
<h5 id=3D"_sessionidmanager">SessionIdManager</h5>
<div class=3D"paragraph">
<p>There is a maximum of 1 <code>SessionIdManager</code> per jetty Server i=
nstance.
Its purpose is to generate fresh, unique session ids and to coordinate the =
re-use of session ids amongst co-operating contexts.</p>
</div>
<div class=3D"paragraph">
<p>Unlike in previous versions of Jetty, the <code>SessionIdManager</code> =
is agnostic with respect to the type of clustering technology chosen.</p>
</div>
<div class=3D"paragraph">
<p>Jetty provides a default implementation - the <code>DefaultSessionIdMana=
ger</code> - which should meet the needs of most users.
If you do not explicitly enable one of the session modules, or otherwise co=
nfigure a <code>SessionIdManager</code>, the <code>DefaultSessionIdManager<=
/code> will be used.</p>
</div>
<div class=3D"paragraph">
<p>If the <code>DefaultSessionIdManager</code> does not meet your needs, yo=
u can extend the <code>org.eclipse.jetty.server.session.AbstractSessionIdMa=
nager</code> or do a fresh implementation of the <code>org.eclipse.jetty.se=
rver.session.SessionIdManager</code> interface.</p>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_housekeeper">HouseKeeper</h5>
<div class=3D"paragraph">
<p>There is a maximum of 1 <code>HouseKeeper</code> per <code>SessionIdMana=
ger</code>.
Its purpose is to periodically poll the <code>SessionHandlers</code> to cle=
an out expired sessions.</p>
</div>
<div class=3D"paragraph">
<p>By default the <code>HouseKeeper</code> will poll the <code>SessionHandl=
ers</code> every 10 mins to find and delete expired sessions, although this=
 interval is configurable.</p>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_sessioncache">SessionCache</h5>
<div class=3D"paragraph">
<p>There is 1 <code>SessionCache</code> per context.
Its purpose is to provide an L1 cache of Session objects.
Having a working set of Session objects in memory allows multiple simultane=
ous requests for the same session to share the same Session object.</p>
</div>
<div class=3D"paragraph">
<p>Jetty provides 2 <code>SessionCache</code> implementations: the <code>De=
faultSessionCache</code> and the <code>NullSessionCache</code>.
The <code>DefaultSessionCache</code> retains Session objects in memory in a=
 cache and has a number of configuration options to control cache behavior.
It is the default that is used if no other <code>SessionCache</code> has be=
en configured.
It is suitable for non-clustered and clustered deployments with a sticky lo=
ad balancer, as well as clustered deployments with a non-sticky load balanc=
er, with some caveats.
The <code>NullSessionCache</code> does not actually cache any objects: each=
 request uses a fresh Session object.
It is suitable for clustered deployments without a sticky load balancer and=
 non-clustered deployments when purely minimal support for sessions is need=
ed.</p>
</div>
<div class=3D"paragraph">
<p><code>SessionCaches</code> always write out a Session to the <code>Sessi=
onDataStore</code> whenever the last request for the Session exits.</p>
</div>
<div class=3D"paragraph">
<p>They can also be configured to do an immediate, eager write of a freshly=
 created session.
This can be useful if you are likely to experience multiple, near simultane=
ous requests referencing the same session, e.g. with HTTP/2 and you don=E2=
=80=99t have a sticky load balancer.
Alternatively, if the eager write is not done, application paths which crea=
te and then invalidate a session within a single request never incur the co=
st of writing to persistent storage.</p>
</div>
<div class=3D"paragraph">
<p>Additionally, if the <code>EVICT_ON_INACTIVITY</code> eviction policy is=
 in use, you can configure the <code>DefaultSessionCache</code> to force a =
write of the Session to the SessionDataStore just before the Session is evi=
cted.</p>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_sessiondatastore">SessionDataStore</h5>
<div class=3D"paragraph">
<p>There is 1 <code>SessionDataStore</code> per context. Its purpose is to =
handle all persistence related operations on sessions.</p>
</div>
<div class=3D"paragraph">
<p>The common characteristics for all <code>SessionDataStores</code> are wh=
ether or not they support passivation, and the length of the grace period.<=
/p>
</div>
<div class=3D"paragraph">
<p>Supporting passivation means that session data is serialized.
Some persistence mechanisms serialize, such as JDBC, GCloud Datastore etc, =
 whereas others may store an object in shared memory eg Infinispan when con=
figured with a local cache.</p>
</div>
<div class=3D"paragraph">
<p>Whether or not a clustering technology entails passivation controls whet=
her or not the session passivation/activation listeners will be called.</p>
</div>
<div class=3D"paragraph">
<p>The grace period is an interval, configured in seconds, that attempts to=
 deal with the non-transactional nature of sessions with regard to finding =
sessions that have expired.
Due to the lack of transactionality, in a clustered configuration, even wit=
h a sticky load balancer, it is always possible that a Session is live on a=
 node but has not yet been updated in the persistent store.
When <code>SessionDataStores</code> search their persistent store to find s=
essions that have expired, they typically perform a few sequential searches=
:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>The first verifies the expiration of a list of candidate session ids sug=
gested by the SessionCache</p>
</li>
<li>
<p>The second finds sessions in the store that have expired which were last=
 live on the current node</p>
</li>
<li>
<p>The third finds sessions that expired a "while" ago, irrespective of on =
which node they were last used: the definition of "a while" is based on the=
 grace period.</p>
</li>
</ul>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_cachingsessiondatastore">CachingSessionDataStore</h5>
<div class=3D"paragraph">
<p>The <code>CachingSessionDataStore</code> is a special type of <code>Sess=
ionDataStore</code> that inserts an L2 cache of SessionData - the <code>Ses=
sionDataMap</code> - in front of a delegate <code>SessionDataStore</code>.
The <code>SessionDataMap</code> is preferentially consulted before the actu=
al SessionDataStore on reads.
This can improve the performance of slow stores.</p>
</div>
<div class=3D"paragraph">
<p>Jetty provides one implementation of the this L2 cache based on <code>Me=
mcached</code>, the <code>MemcachedSessionDataMap</code>.</p>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_use_cases">Use Cases</h4>
<div class=3D"sect4">
<h5 id=3D"_clustering_with_a_sticky_load_balancer">Clustering with a Sticky=
 Load Balancer</h5>
<div class=3D"paragraph">
<p>Preferably, your cluster will utilize a sticky load balancer.
This will route requests for the same session to the same Jetty instance.
In this case, the <code>DefaultSessionCache</code> can be used to keep in-u=
se Session objects in memory.
You can fine-tune the cache by controlling how long Session objects remain =
in memory with the eviction policy settings.</p>
</div>
<div class=3D"paragraph">
<p>If you have a large number of Sessions or very large Session objects, th=
en you might want to manage your memory allocation by controlling the amoun=
t of time Session objects spend in the cache.
The <code>EVICT_ON_SESSION_EXIT</code> eviction policy will remove a Sessio=
n object from the cache as soon as the last simultaneous request referencin=
g it exits.
Alternatively, the <code>EVICT_ON_INACTIVITY</code> policy will remove a Se=
ssion object from the cache after a configurable amount of time has passed =
without a request referencing it.</p>
</div>
<div class=3D"paragraph">
<p>If your Sessions are very long lived and infrequently referenced, you mi=
ght use the <code>EVICT_ON_INACTIVITY_POLICY</code> to control the size of =
the cache.</p>
</div>
<div class=3D"paragraph">
<p>If your Sessions are small, or relatively few or stable in number or the=
y are read-mostly, then you might select the <code>NEVER_EVICT</code> polic=
y.
With this policy, Session objects will remain in the cache until they eithe=
r expire or are explicitly invalidated.</p>
</div>
<div class=3D"paragraph">
<p>If you have a high likelihood of simultaneous requests for the same sess=
ion object, then the <code>EVICT_ON_SESSION_EXIT</code> policy will ensure =
the Session object stays in the cache as long as it is needed.</p>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_clustering_without_a_sticky_load_balancer">Clustering without a =
Sticky Load Balancer</h5>
<div class=3D"paragraph">
<p>Without a sticky load balancer requests for the same session may arrive =
on any node in the cluster.
This means it is likely that the copy of the Session object in any <code>Se=
ssionCache</code> is likely to be out-of-date, as the Session was probably =
last accessed on a different node.
In this case, your <code>choices</code> are to use either the <code>NullSes=
sionCache</code> or to de-tuned the <code>DefaultSessionCache</code>.
If you use the NullSessionCache all Session object caching is avoided.
This means that every time a request references a session it must be brough=
t in from persistent storage.
It also means that there can be no sharing of Session objects for multiple =
requests for the same session: each will have their own Session object.
Furthermore, the outcome of session writes are indeterminate because the Se=
rvlet Specification does not mandate ACID transactions for sessions.</p>
</div>
<div class=3D"paragraph">
<p>If you use the <code>DefaultSessionCache</code>, there is a risk that th=
e caches on some nodes will contain out-of-date session information as simu=
ltaneous requests for the same session are scattered over the cluster.
To mitigate this somewhat you can use the <code>EVICT_ON_SESSION_EXIT</code=
> eviction policy: this will ensure that the Session is removed from the ca=
che as soon as the last simultaneous request for it exits.
Again, due to the lack of session transactionality, the ordering outcome of=
 write operations cannot be guaranteed.
As the Session is cached while at least one request is accessing it, it is =
possible for multiple simultaneous requests to share the same Session objec=
t.</p>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_handling_corrupted_or_unloadable_session_data">Handling corrupte=
d or unloadable session data</h5>
<div class=3D"paragraph">
<p>For various reasons it might not be possible for the SessionDataStore to=
 re-read a stored session.
One scenario is that the session stores a serialized object in it=E2=80=99s=
 attributes, and after a redeployment there in an incompatible class change=
.
Using the setter <code>SessionCache.setRemoveUnloadableSessions(true)</code=
> will allow the <code>SessionDataStore</code> to delete the unreadable ses=
sion from persistent storage.
This can be useful from preventing the scavenger from continually generatin=
g errors on the same expired, but un-restorable, session.</p>
</div>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"configuring-sessions-memory">Non-Clustered Session Management: Me=
mory</h3>
<div class=3D"paragraph">
<p>Non-clustered, in-memory-only is the default style of Session Management=
.
In previous versions of Jetty this was referred to as "hash" sessions, as t=
hey were stored in a <code>HashMap</code> in  memory.
When using the Jetty distribution, if you do not configure any session modu=
le, this will be enabled by default.</p>
</div>
<div class=3D"paragraph">
<p>Specifically, Jetty will hook up:</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">A <code>DefaultSessionIdManager</code></dt>
<dd>
<div class=3D"ulist">
<ul>
<li>
<p>Produces unique session ids and supports cross-context dispatch re-use o=
f session ids</p>
</li>
</ul>
</div>
</dd>
<dt class=3D"hdlist1">A <code>HouseKeeper</code></dt>
<dd>
<div class=3D"ulist">
<ul>
<li>
<p>Scavenges for expired sessions every 10 mins</p>
</li>
</ul>
</div>
</dd>
<dt class=3D"hdlist1">A <code>DefaultSessionCache</code> per context</dt>
<dd>
<div class=3D"ulist">
<ul>
<li>
<p>Keeps session objects in memory</p>
</li>
</ul>
</div>
</dd>
<dt class=3D"hdlist1">A <code>NullSessionDataStore</code> per context</dt>
<dd>
<div class=3D"ulist">
<ul>
<li>
<p>No persistence of sessions</p>
</li>
</ul>
</div>
</dd>
</dl>
</div>
<div class=3D"paragraph">
<p>If you wish to change any of the default configuration, enable the <code=
>session-cache-hash</code> module.</p>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"configuring-sessions-file-system">Non-Clustered Session Managemen=
t: File System</h3>
<div class=3D"paragraph">
<p>When using the Jetty distribution, you will first need to enable the <co=
de>session-store-file</code> <a href=3D"file:///home/tian/Downloads/b60/ebo=
ok/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.ht=
ml#startup-modules">module</a> for your <a href=3D"file:///home/tian/Downlo=
ads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciid=
oc/index.html#startup-base-and-home">Jetty base</a> using the <code>--add-t=
o-start</code> argument on the command line.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">$ java -jar ../start.jar --create-startd
INFO : Base directory was modified

$ java -jar ../start.jar --add-to-start=3Dsession-store-file
INFO : server          initialised (transitively) in ${jetty.base}/start.d/=
server.ini
INFO : sessions        initialised (transitively) in ${jetty.base}/start.d/=
sessions.ini
INFO : session-store-file initialised in ${jetty.base}/start.d/session-stor=
e-file.ini
MKDIR: ${jetty.base}/sessions
INFO : Base directory was modified</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Doing this enables the File System Session module and any dependent modu=
les or files needed for it to run on the server.
The example above is running an fresh <code>${jetty.base}</code> with nothi=
ng enabled.
When the <code>--add-to-start</code> argument was added to the command line=
, it enabled the the <code>session-store-file</code> module as well as the =
<code>sessions</code> and <code>server</code> modules, which are required f=
or the File System session management to operate.
Additionally a <code>${jetty.base}/sessions</code> directory was created.
By default Session files will be saved to this directory.</p>
</div>
<div class=3D"paragraph">
<p>In addition to adding these modules to the classpath of the server it al=
so added several ini configuration files to the <code>start.d</code> direct=
ory of the <code>${jetty.base}</code>.</p>
</div>
<div class=3D"paragraph">
<p>Opening the <code>start.d/session-store-file.ini</code> will show a list=
 of all the configurable options for the file system session module:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n"># ---------------------------------------
# Module: session-store-file
# Enables session persistent storage in files.
# ---------------------------------------
--module=3Dsession-store-file

jetty.session.file.storeDir=3D${jetty.base}/sessions
#jetty.session.file.deleteUnrestorableFiles=3Dfalse</code></pre>
</div>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">jetty.session.storeDir</dt>
<dd>
<p>This defines the location for storage of Session files.</p>
</dd>
<dt class=3D"hdlist1">jetty.session.file.deleteUnrestorableFiles</dt>
<dd>
<p>Boolean.
If set to true, unreadable files will be deleted: this is useful to prevent=
 repeated logging of the same error when the scavenger periodically (re-) a=
ttempts to load the corrupted information for a session in order to expire =
it.</p>
</dd>
</dl>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"configuring-sessions-jdbc">Clustered Session Management: JDBC</h3=
>
<div class=3D"paragraph">
<p>When using the Jetty distribution, you will first need to enable the <co=
de>session-store-jdbc</code> <a href=3D"file:///home/tian/Downloads/b60/ebo=
ok/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.ht=
ml#startup-modules">module</a> for your <a href=3D"file:///home/tian/Downlo=
ads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciid=
oc/index.html#startup-base-and-home">Jetty base</a> using the <code>--add-t=
o-start</code> argument on the command line.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">$ java -jar ../start.jar --create-startd
INFO : Base directory was modified

$ java -jar ../start.jar --add-to-start=3Dsession-store-jdbc
INFO : server          initialised (transitively) in ${jetty.base}/start.d/=
server.ini
INFO : sessions        initialised (transitively) in ${jetty.base}/start.d/=
sessions.ini
INFO : session-store-jdbc initialised in ${jetty.base}/start.d/session-stor=
e-jdbc.ini
INFO : Base directory was modified</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Doing this enables the JDBC Session module and any dependent modules or =
files needed for it to run on the server.
The example above is running an fresh <code>${jetty.base}</code> with nothi=
ng enabled.
When the <code>--add-to-start</code> argument was added to the command line=
, it enabled the the <code>session-store-jdbc</code> module as well as the =
<code>sessions</code> and <code>server</code> modules, which are required f=
or JDBC session management to operate.
In addition to adding these modules to the classpath of the server it also =
added several ini configuration files to the <code>start.d</code> directory=
 of the <code>${jetty.base}</code>.</p>
</div>
<div class=3D"paragraph">
<p>Opening the <code>start.d/session-store-jdbc.ini</code> will show a list=
 of all the configurable options for the JDBC module:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n"># ---------------------------------------
# Module: session-store-jdbc
# Enables JDBC peristent/distributed session storage.
# ---------------------------------------
--module=3Dsession-store-jdbc

##
##JDBC Session properties
##

#jetty.session.gracePeriod.seconds=3D3600

## Connection type:Datasource
db-connection-type=3Ddatasource
#jetty.session.jdbc.datasourceName=3D/jdbc/sessions

## Connection type:driver
#db-connection-type=3Ddriver
#jetty.session.jdbc.driverClass=3D
#jetty.session.jdbc.driverUrl=3D

## Session table schema
#jetty.session.jdbc.schema.accessTimeColumn=3DaccessTime
#jetty.session.jdbc.schema.contextPathColumn=3DcontextPath
#jetty.session.jdbc.schema.cookieTimeColumn=3DcookieTime
#jetty.session.jdbc.schema.createTimeColumn=3DcreateTime
#jetty.session.jdbc.schema.expiryTimeColumn=3DexpiryTime
#jetty.session.jdbc.schema.lastAccessTimeColumn=3DlastAccessTime
#jetty.session.jdbc.schema.lastSavedTimeColumn=3DlastSavedTime
#jetty.session.jdbc.schema.idColumn=3DsessionId
#jetty.session.jdbc.schema.lastNodeColumn=3DlastNode
#jetty.session.jdbc.schema.virtualHostColumn=3DvirtualHost
#jetty.session.jdbc.schema.maxIntervalColumn=3DmaxInterval
#jetty.session.jdbc.schema.mapColumn=3Dmap
#jetty.session.jdbc.schema.table=3DJettySessions</code></pre>
</div>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">jetty.session.gracePeriod.seconds</dt>
<dd>
<p>Amount of time, in seconds, to wait for other nodes to be checked to ver=
ify an expired session is in fact expired throughout the cluster before clo=
sing it.</p>
</dd>
<dt class=3D"hdlist1">db-connection-type</dt>
<dd>
<p>Set to either <code>datasource</code> or <code>driver</code> depending o=
n the type of connection being used.</p>
</dd>
<dt class=3D"hdlist1">jetty.session.jdbc.datasourceName</dt>
<dd>
<p>Name of the remote datasource.</p>
</dd>
<dt class=3D"hdlist1">jetty.session.jdbc.driverClass</dt>
<dd>
<p>Name of the JDBC driver that controls access to the remote database, suc=
h as <code>com.mysql.jdbc.Driver</code></p>
</dd>
<dt class=3D"hdlist1">jetty.session.jdbc.driverUrl</dt>
<dd>
<p>Url of the database which includes the driver type, host name and port, =
service name and any specific attributes unique to the database, such as a =
username.
As an example, here is a mysql connection with the username appended: <code=
>jdbc:mysql://127.0.0.1:3306/sessions?user=3Dsessionsadmin</code>.</p>
</dd>
</dl>
</div>
<div class=3D"paragraph">
<p>The <code>jetty.sessionTableSchema</code> values represent the names for=
 the columns in the JDBC database and can be changed to suit your environme=
nt.</p>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"configuring-sessions-mongo">Clustered Session Management: MongoDB=
</h3>
<div class=3D"paragraph">
<p>When using the Jetty distribution, you will first need to enable the <co=
de>session-store-mongo</code> <a href=3D"file:///home/tian/Downloads/b60/eb=
ook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.h=
tml#startup-modules">module</a> for your <a href=3D"file:///home/tian/Downl=
oads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/ascii=
doc/index.html#startup-base-and-home">Jetty base</a> using the <code>--add-=
to-start</code> argument on the command line.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">$ java -jar ../start.jar --create-startd
INFO : Base directory was modified

$ java -jar ../start.jar --add-to-start=3Dsession-store-mongo

ALERT: There are enabled module(s) with licenses.
The following 1 module(s):
 + contains software not provided by the Eclipse Foundation!
 + contains software not covered by the Eclipse Public License!
 + has not been audited for compliance with its license

 Module: session-store-mongo
  + The java driver for the MongoDB document-based database system is hoste=
d on GitHub and released under the Apache 2.0 license.
  + http://www.mongodb.org/
  + http://www.apache.org/licenses/LICENSE-2.0.html

Proceed (y/N)? y
INFO : server          initialised (transitively) in ${jetty.base}/start.d/=
server.ini
INFO : sessions        initialised (transitively) in ${jetty.base}/start.d/=
sessions.ini
INFO : session-store-mongo initialised in ${jetty.base}/start.d/session-sto=
re-mongo.ini
DOWNLOAD: http://central.maven.org/maven2/org/mongodb/mongo-java-driver/2.6=
.1/mongo-java-driver-2.6.1.jar to ${jetty.base}/lib/nosql/mongo-java-driver=
-2.6.1.jar
INFO : Base directory was modified</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Doing this enables the MongoDB Session module and any dependent modules =
or files needed for it to run on the server.
The example above is running an fresh <code>${jetty.base}</code> with nothi=
ng enabled.
Because MongoDB is not a technology provided by the Eclipse Foundation, use=
rs are prompted to assent to the licenses of the external vendor (Apache in=
 this case).
When the <code>--add-to-start</code> argument was added to the command line=
, it enabled the the <code>session-store-mongo</code> module as well as the=
 <code>sessions</code> and <code>server</code> modules, which are required =
for MongoDB session management to operate..
It also downloaded the needed Mongo-specific jar file and created a directo=
ry named <code>${jetty.base}/lib/nosql/</code> to house it.
In addition to adding these modules to the classpath of the server it also =
added several ini configuration files to the <code>start.d</code> directory=
 of the <code>${jetty.base}</code>.</p>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Note</div>
</td>
<td class=3D"content">
If you have updated versions of the jar files automatically downloaded by J=
etty, you can place them in the associated <code>${jetty.base}/lib/</code> =
directory and use the <code>--skip-file-validation=3D&lt;module name&gt;</c=
ode> command line option to prevent errors when starting your server.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
<div class=3D"paragraph">
<p>Opening the <code>start.d/session-store-mongo.ini</code> will show a lis=
t of all the configurable options for the MongoDB module:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n"># ---------------------------------------
# Module: session-store-mongo
# Enables NoSql session management with a MongoDB driver.
# ---------------------------------------
--module=3Dsession-store-mongo

#jetty.session.mongo.dbName=3DHttpSessions
#jetty.session.mongo.collectionName=3DjettySessions
#jetty.session.mongo.host=3Dlocalhost
#jetty.session.mongo.port=3D27017
#jetty.session.gracePeriod.seconds=3D3600</code></pre>
</div>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">jetty.session.mongo.dbName</dt>
<dd>
<p>Name of the database in Mongo used to store the Session collection.</p>
</dd>
<dt class=3D"hdlist1">jetty.session.mongo.collectionName</dt>
<dd>
<p>Name of the collection in Mongo used to keep all of the Sessions.</p>
</dd>
<dt class=3D"hdlist1">jetty.session.mongo.host</dt>
<dd>
<p>Host name or address for the remote Mongo instance.</p>
</dd>
<dt class=3D"hdlist1">jetty.session.mongo.port</dt>
<dd>
<p>Port number for the remote Mongo instance.</p>
</dd>
<dt class=3D"hdlist1">jetty.session.gracePeriod.seconds</dt>
<dd>
<p>Amount of time, in seconds, to wait for other nodes to be checked to ver=
ify an expired session is in fact expired throughout the cluster before clo=
sing it.</p>
</dd>
</dl>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"configuring-sessions-infinispan">Clustered Session Management: In=
ifinspan</h3>
<div class=3D"paragraph">
<p>When using the Jetty distribution, you will first need to enable the <co=
de>session-store-infinispan-remote</code> <a href=3D"file:///home/tian/Down=
loads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asci=
idoc/index.html#startup-modules">module</a> for your <a href=3D"file:///hom=
e/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/sr=
c/main/asciidoc/index.html#startup-base-and-home">Jetty base</a> using the =
<code>--add-to-start</code> argument on the command line.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">$ java -jar ../start.jar --create-startd
INFO : Base directory was modified

$ java -jar ../start.jar --add-to-start=3Dsession-store-infinispan-remote

ALERT: There are enabled module(s) with licenses.
The following 1 module(s):
 + contains software not provided by the Eclipse Foundation!
 + contains software not covered by the Eclipse Public License!
 + has not been audited for compliance with its license

 Module: session-store-infinispan-remote
  + Infinispan is an open source project hosted on Github and released unde=
r the Apache 2.0 license.
  + http://infinispan.org/
  + http://www.apache.org/licenses/LICENSE-2.0.html

Proceed (y/N)? y
INFO : server          initialised (transitively) in ${jetty.base}/start.d/=
server.ini
INFO : sessions        initialised (transitively) in ${jetty.base}/start.d/=
sessions.ini
INFO : session-store-infinispan-remote initialised in ${jetty.base}/start.d=
/session-store-infinispan-remote.ini
DOWNLOAD: https://raw.githubusercontent.com/eclipse/jetty.project/master/je=
tty-infinispan/src/main/infinispan-resources/hotrod-client.properties?id=3D=
master to ${jetty.base}/resources/hotrod-client.properties
DOWNLOAD: http://central.maven.org/maven2/org/infinispan/infinispan-remote/=
7.1.1.Final/infinispan-remote-7.1.1.Final.jar to ${jetty.base}/lib/infinisp=
an/infinispan-remote-7.1.1.Final.jar
INFO : Base directory was modified</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Doing this enables the remote Infinispan Session module and any dependen=
t modules or files needed for it to run on the server.
The example above is running an fresh <code>${jetty.base}</code> with nothi=
ng enabled.
Because Infinispan is not a technology provided by the Eclipse Foundation, =
users are prompted to assent to the licenses of the external vendor (Apache=
 in this case).
When the <code>--add-to-start</code> argument was added to the command line=
, it enabled the the <code>session-store-infinispan-remote</code> module as=
 well as the <code>sessions</code> and <code>server</code> modules, which a=
re required for Infinispan session management to operate.
It also downloaded the needed Infinispan-specific jar files and created a d=
irectory named <code>${jetty.base}/lib/infinispan/</code> to house them.
In addition to adding these modules to the classpath of the server it also =
added several ini configuration files to the <code>start.d</code> directory=
 of the <code>${jetty.base}</code>.</p>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Note</div>
</td>
<td class=3D"content">
If you have updated versions of the jar files automatically downloaded by J=
etty, you can place them in the associated <code>${jetty.base}/lib/</code> =
directory and use the <code>--skip-file-validation=3D&lt;module name&gt;</c=
ode> command line option to prevent errors when starting your server.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
<div class=3D"paragraph">
<p>Opening the <code>start.d/session-store-infinispan-remote.ini</code> wil=
l show a list of all the configurable options for the JDBC module:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n"># ---------------------------------------
# Module: session-store-infinispan-remote
# Enables session data store in a remote Infinispan cache
# ---------------------------------------
--module=3Dsession-store-infinispan-remote

#jetty.session.infinispan.remoteCacheName=3Dsessions
#jetty.session.infinispan.idleTimeout.seconds=3D0
#jetty.session.gracePeriod.seconds=3D3600</code></pre>
</div>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">jetty.session.infinispan.remoteCacheName</dt>
<dd>
<p>Name of the cache in Infinispan where sessions will be stored.</p>
</dd>
<dt class=3D"hdlist1">jetty.session.infinispan.idleTimeout.seconds</dt>
<dd>
<p>Amount of time, in seconds, that the system allows the connector to rema=
in idle before closing the connection.</p>
</dd>
<dt class=3D"hdlist1">jetty.session.gracePeriod.seconds</dt>
<dd>
<p>Amount of time, in seconds, to wait for other nodes to be checked to ver=
ify an expired session is in fact expired throughout the cluster before clo=
sing it.</p>
</dd>
</dl>
</div>
<div class=3D"sect3">
<h4 id=3D"_configuring_embedded_inifinspan_clustering">Configuring Embedded=
 Inifinspan Clustering</h4>
<div class=3D"paragraph">
<p>During testing, it can be helpful to run an in-process instance of Infin=
ispan.
To enable this you will first need to enable the <code>session-store-infini=
span-embedded</code> <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty=
.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#start=
up-modules">module</a> for your <a href=3D"file:///home/tian/Downloads/b60/=
ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index=
.html#startup-base-and-home">Jetty base</a> using the <code>--add-to-start<=
/code> argument on the command line.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">java -jar ../start.jar --add-to-start=3Dsession-store-infinispan-embedde=
d

ALERT: There are enabled module(s) with licenses.
The following 1 module(s):
+ contains software not provided by the Eclipse Foundation!
+ contains software not covered by the Eclipse Public License!
+ has not been audited for compliance with its license

Module: session-store-infinispan-embedded
 + Infinispan is an open source project hosted on Github and released under=
 the Apache 2.0 license.
 + http://infinispan.org/
 + http://www.apache.org/licenses/LICENSE-2.0.html

Proceed (y/N)? y
INFO : server          initialised (transitively) in ${jetty.base}/start.d/=
server.ini
INFO : sessions        initialised (transitively) in ${jetty.base}/start.d/=
sessions.ini
INFO : session-store-infinispan-embedded initialised in ${jetty.base}/start=
.d/session-store-infinispan-embedded.ini
DOWNLOAD: http://central.maven.org/maven2/org/infinispan/infinispan-embedde=
d/7.1.1.Final/infinispan-embedded-7.1.1.Final.jar to ${jetty.base}/lib/infi=
nispan/infinispan-embedded-7.1.1.Final.jar
INFO : Base directory was modified</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Doing this enables the embedded Infinispan Session module and any depend=
ent modules or files needed for it to run on the server.
The example above is running an fresh <code>${jetty.base}</code> with nothi=
ng enabled.
Because Infinispan is not a technology provided by the Eclipse Foundation, =
users are prompted to assent to the licenses of the external vendor (Apache=
 in this case).
When the <code>--add-to-start</code> argument was added to the command line=
, it enabled the the <code>session-store-infinispan-embedded</code> module =
as well as the <code>sessions</code> and <code>server</code> modules, which=
 are required for Infinispan session management to operate.
It also downloaded the needed Infinispan-specific jar files and created a d=
irectory named <code>${jetty.base}/lib/infinispan/</code> to house them.
In addition to adding these modules to the classpath of the server it also =
added several ini configuration files to the <code>start.d</code> directory=
 of the <code>${jetty.base}</code>.</p>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"configuring-sessions-gcloud">Clustered Session Management: Google=
 Cloud DataStore</h3>
<div class=3D"sect3">
<h4 id=3D"_preparation">Preparation</h4>
<div class=3D"paragraph">
<p>You will first need to create a project and enable the Google Cloud api:=
 <a href=3D"https://cloud.google.com/docs/authentication#preparation" class=
=3D"bare">https://cloud.google.com/docs/authentication#preparation</a>.
Take note of the project id that you create in this step as you need to sup=
ply it in later steps.</p>
</div>
<div class=3D"sect4">
<h5 id=3D"_communicating_with_gclouddatastore">Communicating with GCloudDat=
aStore</h5>
<div class=3D"sect5">
<h6 id=3D"_when_running_jetty_outside_of_google_infrastructure">When runnin=
g Jetty outside of google infrastructure</h6>
<div class=3D"paragraph">
<p>Before running Jetty, you will need to choose one of the following metho=
ds to set up the local environment to enable remote GCloud DataStore commun=
ications.</p>
</div>
<div class=3D"olist arabic">
<ol class=3D"arabic">
<li>
<p>Using the GCloud SDK:</p>
<div class=3D"ulist">
<ul>
<li>
<p>Ensure you have the GCloud SDK installed:  <a href=3D"https://cloud.goog=
le.com/sdk/?hl=3Den" class=3D"bare">https://cloud.google.com/sdk/?hl=3Den</=
a>.</p>
</li>
<li>
<p>Use the GCloud tool to set up the project you created in the preparation=
 step: <code>gcloud config set project PROJECT_ID</code></p>
</li>
<li>
<p>Use the GCloud tool to authenticate a google account associated with the=
 project created in the preparation step: <code>gcloud auth login ACCOUNT</=
code></p>
</li>
</ul>
</div>
</li>
<li>
<p>Using environment variables</p>
<div class=3D"ulist">
<ul>
<li>
<p>Define the environment variable <code>GCLOUD_PROJECT</code> with the pro=
ject id you created in the preparation step.</p>
</li>
<li>
<p>Generate a JSON <a href=3D"https://cloud.google.com/storage/docs/authent=
ication?hl=3Den#service_accounts">service account key</a> and then define t=
he environment variable <code>GOOGLE_APPLICATION_CREDENTIALS=3D/path/to/my/=
key.json</code></p>
</li>
</ul>
</div>
</li>
</ol>
</div>
</div>
<div class=3D"sect5">
<h6 id=3D"_when_running_jetty_inside_of_google_infrastructure">When Running=
 Jetty Inside of Google Infrastructure</h6>
<div class=3D"paragraph">
<p>The Google deployment tools will automatically configure the project and=
 authentication information for you.</p>
</div>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_configuring_indexes_for_session_data">Configuring Indexes for Se=
ssion Data</h4>
<div class=3D"paragraph">
<p>Using some special, composite indexes can speed up session search operat=
ions, although it may make write operations slower.
By default, indexes will not be used.
In order to use them, you will need to manually upload a file that defines =
the indexes.
This file is named <code>index.yaml</code> and you can find it in your dist=
ribution in <code>${jetty.base}/etc/sessions/gcloud/index.yaml</code>.</p>
</div>
<div class=3D"paragraph">
<p>Follow the instructions <a href=3D"https://cloud.google.com/datastore/do=
cs/tools/#the_development_workflow_using_gcloud">here</a> to upload the pre=
-generated <code>index.yaml</code> file.</p>
</div>
<div class=3D"sect4">
<h5 id=3D"_communicating_with_the_gclouddatastore_emulator">Communicating w=
ith the GCloudDataStore Emulator</h5>
<div class=3D"paragraph">
<p>To enable communication using the GCloud Emulator:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>Ensure you have the GCloud SDK installed:  <a href=3D"https://cloud.goog=
le.com/sdk/?hl=3Den" class=3D"bare">https://cloud.google.com/sdk/?hl=3Den</=
a></p>
</li>
<li>
<p>Follow the instructions <a href=3D"https://cloud.google.com/datastore/do=
cs/tools/datastore-emulator">here</a> on how to start the GCloud datastore =
emulator, and how to propagate the environment variables that it creates to=
 the terminal in which you run Jetty.</p>
</li>
</ul>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_configuring_the_google_cloud_datastore_module">Configuring the G=
oogle Cloud DataStore Module</h4>
<div class=3D"paragraph">
<p>When using the Jetty distribution, you will first need to enable the <co=
de>session-store-gcloud</code> <a href=3D"file:///home/tian/Downloads/b60/e=
book/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.=
html#startup-modules">module</a> for your <a href=3D"file:///home/tian/Down=
loads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asci=
idoc/index.html#startup-base-and-home">Jetty base</a> using the <code>--add=
-to-start</code> argument on the command line.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">$ java -jar ../start.jar --create-startd
INFO : Base directory was modified

$ java -jar ../start.jar --add-to-start=3Dsession-store-gcloud

ALERT: There are enabled module(s) with licenses.
The following 2 module(s):
 + contains software not provided by the Eclipse Foundation!
 + contains software not covered by the Eclipse Public License!
 + has not been audited for compliance with its license

 Module: gcloud
  + GCloudDatastore is an open source project hosted on Github and released=
 under the Apache 2.0 license.
  + https://github.com/GoogleCloudPlatform/gcloud-java
  + http://www.apache.org/licenses/LICENSE-2.0.html

 Module: slf4j-api
  + SLF4J is distributed under the MIT License.
  + Copyright (c) 2004-2013 QOS.ch
  + All rights reserved.
  + Permission is hereby granted, free  of charge, to any person obtaining
  + a  copy  of this  software  and  associated  documentation files  (the
  + "Software"), to  deal in  the Software without  restriction, including
  + without limitation  the rights to  use, copy, modify,  merge, publish,
  + distribute,  sublicense, and/or sell  copies of  the Software,  and to
  + permit persons to whom the Software  is furnished to do so, subject to
  + the following conditions:
  + The  above  copyright  notice  and  this permission  notice  shall  be
  + included in all copies or substantial portions of the Software.
  + THE  SOFTWARE IS  PROVIDED  "AS  IS", WITHOUT  WARRANTY  OF ANY  KIND,
  + EXPRESS OR  IMPLIED, INCLUDING  BUT NOT LIMITED  TO THE  WARRANTIES OF
  + MERCHANTABILITY,    FITNESS    FOR    A   PARTICULAR    PURPOSE    AND
  + NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
  + LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
  + OF CONTRACT, TORT OR OTHERWISE,  ARISING FROM, OUT OF OR IN CONNECTION
  + WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

Proceed (y/N)? y
INFO  : webapp          transitively enabled, ini template available with -=
-add-to-start=3Dwebapp
INFO  : jul-impl        transitively enabled
INFO  : server          transitively enabled, ini template available with -=
-add-to-start=3Dserver
INFO  : sessions        transitively enabled, ini template available with -=
-add-to-start=3Dsessions
INFO  : servlet         transitively enabled
INFO  : gcloud          transitively enabled, ini template available with -=
-add-to-start=3Dgcloud
INFO  : annotations     transitively enabled
INFO  : plus            transitively enabled
INFO  : slf4j-api       transitively enabled
INFO  : security        transitively enabled
INFO  : gcloud-datastore transitively enabled
INFO  : jcl-slf4j       transitively enabled
INFO  : session-store-gcloud initialized in ${jetty.base}/start.d/session-s=
tore-gcloud.ini
INFO  : jndi            transitively enabled
MKDIR : ${jetty.base}/etc
COPY  : ${jetty.home}/modules/jul-impl/etc/java-util-logging.properties to =
${jetty.base}/etc/java-util-logging.properties
MKDIR : ${jetty.base}/lib/slf4j
DOWNLD: http://central.maven.org/maven2/org/slf4j/slf4j-api/1.7.21/slf4j-ap=
i-1.7.21.jar to ${jetty.base}/lib/slf4j/slf4j-api-1.7.21.jar
MKDIR : ${jetty.base}/lib/gcloud
COPY  : /Users/chris/.m2/repository/aopalliance/aopalliance/1.0/aopalliance=
-1.0.jar to ${jetty.base}/lib/gcloud/aopalliance-1.0.jar
COPY  : /Users/chris/.m2/repository/com/fasterxml/jackson/core/jackson-core=
/2.1.3/jackson-core-2.1.3.jar to ${jetty.base}/lib/gcloud/jackson-core-2.1.=
3.jar
COPY  : /Users/chris/.m2/repository/com/google/api-client/google-api-client=
-appengine/1.21.0/google-api-client-appengine-1.21.0.jar to ${jetty.base}/l=
ib/gcloud/google-api-client-appengine-1.21.0.jar
COPY  : /Users/chris/.m2/repository/com/google/api-client/google-api-client=
/1.20.0/google-api-client-1.20.0.jar to ${jetty.base}/lib/gcloud/google-api=
-client-1.20.0.jar
COPY  : /Users/chris/.m2/repository/com/google/api-client/google-api-client=
-servlet/1.21.0/google-api-client-servlet-1.21.0.jar to ${jetty.base}/lib/g=
cloud/google-api-client-servlet-1.21.0.jar
DOWNLD: http://central.maven.org/maven2/com/google/api/gax/0.0.21/gax-0.0.2=
1.jar to ${jetty.base}/lib/gcloud/gax-0.0.21.jar
COPY  : /Users/chris/.m2/repository/com/google/api/grpc/grpc-google-common-=
protos/0.1.0/grpc-google-common-protos-0.1.0.jar to ${jetty.base}/lib/gclou=
d/grpc-google-common-protos-0.1.0.jar
COPY  : /Users/chris/.m2/repository/com/google/api/grpc/grpc-google-iam-v1/=
0.1.0/grpc-google-iam-v1-0.1.0.jar to ${jetty.base}/lib/gcloud/grpc-google-=
iam-v1-0.1.0.jar
COPY  : /Users/chris/.m2/repository/com/google/auth/google-auth-library-cre=
dentials/0.3.1/google-auth-library-credentials-0.3.1.jar to ${jetty.base}/l=
ib/gcloud/google-auth-library-credentials-0.3.1.jar
COPY  : /Users/chris/.m2/repository/com/google/auth/google-auth-library-oau=
th2-http/0.3.1/google-auth-library-oauth2-http-0.3.1.jar to ${jetty.base}/l=
ib/gcloud/google-auth-library-oauth2-http-0.3.1.jar
DOWNLD: http://central.maven.org/maven2/com/google/auto/value/auto-value/1.=
2/auto-value-1.2.jar to ${jetty.base}/lib/gcloud/auto-value-1.2.jar
DOWNLD: http://central.maven.org/maven2/com/google/cloud/datastore/datastor=
e-v1-proto-client/1.3.0/datastore-v1-proto-client-1.3.0.jar to ${jetty.base=
}/lib/gcloud/datastore-v1-proto-client-1.3.0.jar
DOWNLD: http://central.maven.org/maven2/com/google/cloud/datastore/datastor=
e-v1-protos/1.3.0/datastore-v1-protos-1.3.0.jar to ${jetty.base}/lib/gcloud=
/datastore-v1-protos-1.3.0.jar
DOWNLD: http://central.maven.org/maven2/com/google/cloud/google-cloud-core/=
0.5.1/google-cloud-core-0.5.1.jar to ${jetty.base}/lib/gcloud/google-cloud-=
core-0.5.0.jar
DOWNLD: http://central.maven.org/maven2/com/google/cloud/google-cloud-datas=
tore/0.5.1/google-cloud-datastore-0.5.1.jar to ${jetty.base}/lib/gcloud/goo=
gle-cloud-datastore-0.5.1.jar
COPY  : /Users/chris/.m2/repository/com/google/code/findbugs/jsr305/1.3.9/j=
sr305-1.3.9.jar to ${jetty.base}/lib/gcloud/jsr305-1.3.9.jar
COPY  : /Users/chris/.m2/repository/com/google/code/gson/gson/2.3/gson-2.3.=
jar to ${jetty.base}/lib/gcloud/gson-2.3.jar
COPY  : /Users/chris/.m2/repository/com/google/guava/guava/19.0/guava-19.0.=
jar to ${jetty.base}/lib/gcloud/guava-19.0.jar
COPY  : /Users/chris/.m2/repository/com/google/http-client/google-http-clie=
nt-appengine/1.21.0/google-http-client-appengine-1.21.0.jar to ${jetty.base=
}/lib/gcloud/google-http-client-appengine-1.21.0.jar
COPY  : /Users/chris/.m2/repository/com/google/http-client/google-http-clie=
nt-jackson2/1.19.0/google-http-client-jackson2-1.19.0.jar to ${jetty.base}/=
lib/gcloud/google-http-client-jackson2-1.19.0.jar
COPY  : /Users/chris/.m2/repository/com/google/http-client/google-http-clie=
nt-jackson/1.21.0/google-http-client-jackson-1.21.0.jar to ${jetty.base}/li=
b/gcloud/google-http-client-jackson-1.21.0.jar
COPY  : /Users/chris/.m2/repository/com/google/http-client/google-http-clie=
nt/1.21.0/google-http-client-1.21.0.jar to ${jetty.base}/lib/gcloud/google-=
http-client-1.21.0.jar
COPY  : /Users/chris/.m2/repository/com/google/http-client/google-http-clie=
nt-jdo/1.21.0/google-http-client-jdo-1.21.0.jar to ${jetty.base}/lib/gcloud=
/google-http-client-jdo-1.21.0.jar
COPY  : /Users/chris/.m2/repository/com/google/http-client/google-http-clie=
nt-protobuf/1.20.0/google-http-client-protobuf-1.20.0.jar to ${jetty.base}/=
lib/gcloud/google-http-client-protobuf-1.20.0.jar
COPY  : /Users/chris/.m2/repository/com/google/inject/guice/4.0/guice-4.0.j=
ar to ${jetty.base}/lib/gcloud/guice-4.0.jar
COPY  : /Users/chris/.m2/repository/com/google/oauth-client/google-oauth-cl=
ient-appengine/1.21.0/google-oauth-client-appengine-1.21.0.jar to ${jetty.b=
ase}/lib/gcloud/google-oauth-client-appengine-1.21.0.jar
COPY  : /Users/chris/.m2/repository/com/google/oauth-client/google-oauth-cl=
ient/1.21.0/google-oauth-client-1.21.0.jar to ${jetty.base}/lib/gcloud/goog=
le-oauth-client-1.21.0.jar
COPY  : /Users/chris/.m2/repository/com/google/oauth-client/google-oauth-cl=
ient-servlet/1.21.0/google-oauth-client-servlet-1.21.0.jar to ${jetty.base}=
/lib/gcloud/google-oauth-client-servlet-1.21.0.jar
COPY  : /Users/chris/.m2/repository/com/google/protobuf/protobuf-java/3.0.0=
/protobuf-java-3.0.0.jar to ${jetty.base}/lib/gcloud/protobuf-java-3.0.0.ja=
r
COPY  : /Users/chris/.m2/repository/com/google/protobuf/protobuf-java-util/=
3.0.0/protobuf-java-util-3.0.0.jar to ${jetty.base}/lib/gcloud/protobuf-jav=
a-util-3.0.0.jar
COPY  : /Users/chris/.m2/repository/commons-codec/commons-codec/1.3/commons=
-codec-1.3.jar to ${jetty.base}/lib/gcloud/commons-codec-1.3.jar
COPY  : /Users/chris/.m2/repository/io/grpc/grpc-context/1.0.1/grpc-context=
-1.0.1.jar to ${jetty.base}/lib/gcloud/grpc-context-1.0.1.jar
COPY  : /Users/chris/.m2/repository/io/grpc/grpc-core/1.0.1/grpc-core-1.0.1=
.jar to ${jetty.base}/lib/gcloud/grpc-core-1.0.1.jar
COPY  : /Users/chris/.m2/repository/io/grpc/grpc-protobuf/1.0.1/grpc-protob=
uf-1.0.1.jar to ${jetty.base}/lib/gcloud/grpc-protobuf-1.0.1.jar
COPY  : /Users/chris/.m2/repository/io/grpc/grpc-protobuf-lite/1.0.1/grpc-p=
rotobuf-lite-1.0.1.jar to ${jetty.base}/lib/gcloud/grpc-protobuf-lite-1.0.1=
.jar
COPY  : /Users/chris/.m2/repository/javax/inject/javax.inject/1/javax.injec=
t-1.jar to ${jetty.base}/lib/gcloud/javax.inject-1.jar
COPY  : /Users/chris/.m2/repository/javax/jdo/jdo2-api/2.3-eb/jdo2-api-2.3-=
eb.jar to ${jetty.base}/lib/gcloud/jdo2-api-2.3-eb.jar
COPY  : /Users/chris/.m2/repository/javax/transaction/transaction-api/1.1/t=
ransaction-api-1.1.jar to ${jetty.base}/lib/gcloud/transaction-api-1.1.jar
COPY  : /Users/chris/.m2/repository/joda-time/joda-time/2.9.2/joda-time-2.9=
.2.jar to ${jetty.base}/lib/gcloud/joda-time-2.9.2.jar
COPY  : /Users/chris/.m2/repository/org/apache/httpcomponents/httpclient/4.=
0.1/httpclient-4.0.1.jar to ${jetty.base}/lib/gcloud/httpclient-4.0.1.jar
COPY  : /Users/chris/.m2/repository/org/apache/httpcomponents/httpcore/4.0.=
1/httpcore-4.0.1.jar to ${jetty.base}/lib/gcloud/httpcore-4.0.1.jar
COPY  : /Users/chris/.m2/repository/org/codehaus/jackson/jackson-core-asl/1=
.9.11/jackson-core-asl-1.9.11.jar to ${jetty.base}/lib/gcloud/jackson-core-=
asl-1.9.11.jar
COPY  : /Users/chris/.m2/repository/org/json/json/20151123/json-20151123.ja=
r to ${jetty.base}/lib/gcloud/json-20151123.jar
DOWNLD: http://central.maven.org/maven2/org/slf4j/jcl-over-slf4j/1.7.21/jcl=
-over-slf4j-1.7.21.jar to ${jetty.base}/lib/slf4j/jcl-over-slf4j-1.7.21.jar
COPY  : ${jetty.home}/modules/gcloud/index.yaml to ${jetty.base}/etc/index.=
yaml
INFO  : Base directory was modified
ERROR : Module jcl-slf4j requires a module providing slf4j-impl from one of=
 [slf4j-simple-impl, slf4j-logback, slf4j-jul, slf4j-log4j2, slf4j-log4j]

ERROR : Unsatisfied module dependencies: jcl-slf4j

Usage: java -jar $JETTY_HOME/start.jar [options] [properties] [configs]
       java -jar $JETTY_HOME/start.jar --help  # for more information</code=
></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Doing this enables the GCloud Session module and any dependent session m=
odules or files needed for it to run on the server.
The example above is running an fresh <code>${jetty.base}</code> with nothi=
ng enabled.
Because the Google Cloud DataStore is not a technology provided by the Ecli=
pse Foundation, users are prompted to assent to the licenses of the externa=
l vendor (Apache in this case).</p>
</div>
<div class=3D"paragraph">
<p>You will notice, however, that the above output presented a warning: GCl=
oud requires certain Java Commons Logging features to work correctly.
GCloud has a dependency on Java Commons Logging, and by default Jetty will =
route this through SLF4J.
Enabling the GCloud Sessions module will also enable the <code>jcl-slf4j</c=
ode> module, which sends JCL logging information to SLF4J.
It does <strong>not</strong>, however, configure a SLF4J implementation for=
 the users.</p>
</div>
<div class=3D"paragraph">
<p>As such, you will also need to enable one of the SLF4J implementation mo=
dules listed.
In this example, we will enable the <code>slf4j-simple-impl</code> module t=
o provide a SLF4J implementation.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">$ java -jar ../start.jar --add-to-start=3Dslf4j-simple-impl
INFO  : slf4j-simple-impl initialized in ${jetty.base}/start.d/slf4j-simple=
-impl.ini
INFO  : resources       transitively enabled
DOWNLD: http://central.maven.org/maven2/org/slf4j/slf4j-simple/1.7.21/slf4j=
-simple-1.7.21.jar to ${jetty.base}/lib/slf4j/slf4j-simple-1.7.21.jar
MKDIR : ${jetty.base}/resources
COPY  : ${jetty.home}/modules/slf4j-simple-impl/resources/simplelogger.prop=
erties to ${jetty.base}/resources/simplelogger.properties
INFO  : Base directory was modified</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>When the <code>--add-to-start</code> argument was added to the command l=
ine the first time, it enabled the the <code>session-store-gcloud</code> mo=
dule as well as several others, such as as <code>server</code>, <code>sessi=
ons</code>, <code>webapp</code> and others which are required for GCloud se=
ssion management to operate; the <code>slf4j-simple-impl</code> and its dep=
endent modules were added when the the command was run the second time.
In addition to adding these modules to the classpath of the server it also =
added the respective configuration files to the <code>start.d</code> direct=
ory of the <code>${jetty.base}</code>.</p>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Note</div>
</td>
<td class=3D"content">
If you have updated versions of the jar files automatically downloaded by J=
etty, you can place them in the associated <code>${jetty.base}/lib/</code> =
directory and use the <code>--skip-file-validation=3D&lt;module name&gt;</c=
ode> command line option to prevent errors when starting your server.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
<div class=3D"paragraph">
<p>Opening the <code>start.d/session-store-gcloud.ini</code> will display a=
 list of all the configurable properties for the Google Cloud DataStore mod=
ule:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n"># ---------------------------------------
# Module: session-store-gcloud
# Enables GCloudDatastore session management.
# ---------------------------------------
--module=3Dsession-store-gcloud


## GCloudDatastore Session config
#jetty.session.gcloud.maxRetries=3D5
#jetty.session.gcloud.backoffMs=3D1000
#jetty.session.gcloud.namespace=3D
#jetty.session.gcloud.model.kind=3DGCloudSession
#jetty.session.gcloud.model.id=3Did
#jetty.session.gcloud.model.contextPath=3DcontextPath
#jetty.session.gcloud.model.vhost=3Dvhost
#jetty.session.gcloud.model.accessed=3Daccessed
#jetty.session.gcloud.model.lastAccessed=3DlastAccessed
#jetty.session.gcloud.model.createTime=3DcreateTime
#jetty.session.gcloud.model.cookieSetTime=3DcookieSetTime
#jetty.session.gcloud.model.lastNode=3DlastNode
#jetty.session.gcloud.model.expiry=3Dexpiry
#jetty.session.gcloud.model.maxInactive=3DmaxInactive
#jetty.session.gcloud.model.attributes=3Dattributes</code></pre>
</div>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">jetty.session.gcloud.maxRetries</dt>
<dd>
<p>Maxmium number of tries to connect to GCloud DataStore to write sessions=
.</p>
</dd>
<dt class=3D"hdlist1">jetty.session.gcloud.backoffMs</dt>
<dd>
<p>Amount of time, in milliseconds, between attempts to connect to the GClo=
ud DataStore to write sessions.</p>
</dd>
<dt class=3D"hdlist1">jetty.session.gcloud.namespace</dt>
<dd>
<p>Optional.
Sets the namespace for GCloud Datastore to use.
If set, partitions the visibility of session data between webapps, which is=
 helpful for multi-tenant deployments.
More information can be found <a href=3D"https://cloud.google.com/datastore=
/docs/concepts/multitenancy">here.</a></p>
</dd>
</dl>
</div>
<div class=3D"paragraph">
<p>The other values listed are simply the names of properties that represen=
t stored session data, and can be changed if needed.</p>
</div>
</div>
</div>
</div>
</div>
<div class=3D"sect1">
<h2 id=3D"configuring-logging">Jetty Logging</h2>
<div class=3D"sectionbody">
<div class=3D"paragraph">
<p>This chapter discusses various options for configuring logging.</p>
</div>
<div class=3D"sect2">
<h3 id=3D"configuring-jetty-logging">Configuring Jetty Logging</h3>
<div class=3D"paragraph">
<p>Jetty provides logging via its own <code>org.eclipse.jetty.util.log.Logg=
er</code> layer, and does not natively use any existing Java logging framew=
ork.
All logging events, produced via the Jetty logging layer, have a name, a le=
vel, and a message.
The name is a FQCN (fully qualified class name) similar to how all existing=
 Java logging frameworks operate.</p>
</div>
<div class=3D"paragraph">
<p>Jetty logging, however, has a slightly different set of levels that it u=
ses internally:</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">WARN</dt>
<dd>
<p>For events serious enough to inform and log, but not fatal.</p>
</dd>
<dt class=3D"hdlist1">INFO</dt>
<dd>
<p>Informational events.</p>
</dd>
<dt class=3D"hdlist1">DEBUG</dt>
<dd>
<p>Debugging events (very noisy).</p>
</dd>
<dt class=3D"hdlist1">IGNORE</dt>
<dd>
<p>Exception events that you can safely ignore, but useful for some people.
You might see this level as DEBUG under some Java logging framework configu=
rations, where it retains the <em>ignore</em> phrase somewhere in the loggi=
ng.</p>
</dd>
</dl>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Note</div>
</td>
<td class=3D"content">
Jetty logging produces no FATAL or SEVERE events.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
<div class=3D"sect3">
<h4 id=3D"selecting-log-framework">Selecting the Log Framework</h4>
<div class=3D"paragraph">
<p>Configure the Jetty logging layer via the <code>org.eclipse.jetty.util.l=
og.Log</code> class, following <a href=3D"file:///home/tian/Downloads/b60/e=
book/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BGIT=
BROWSEURL%7D/jetty-util/src/main/java/org/eclipse/jetty/util/log/Log.java">=
these rules</a>.</p>
</div>
<div class=3D"olist arabic">
<ol class=3D"arabic">
<li>
<p>Load Properties</p>
<div class=3D"ulist">
<ul>
<li>
<p>First from a Classpath Resource called <code>jetty-logging.properties</c=
ode> (if found).</p>
</li>
<li>
<p>Then from the <code>System.getProperties()</code>.</p>
</li>
</ul>
</div>
</li>
<li>
<p>Determine the log implementation.</p>
<div class=3D"ulist">
<ul>
<li>
<p>If property <code>org.eclipse.jetty.util.log.class</code> is defined, lo=
ad the class it defines as the logger implementation from the server <code>=
classpath</code>.</p>
</li>
<li>
<p>If the class <code>org.slf4j.Logger</code> exists in server classpath, t=
he Jetty implementation becomes <code>org.eclipse.jetty.util.log.Slf4jLog</=
code>.</p>
</li>
<li>
<p>If no logger implementation is specified, default to <code>org.eclipse.j=
etty.util.log.StdErrLog</code>.</p>
</li>
</ul>
</div>
</li>
</ol>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Note</div>
</td>
<td class=3D"content">
You can create your own custom logging by providing an implementation of th=
e <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.=
x/jetty-documentation/src/main/asciidoc/%7BJDURL%7Dorg/eclipse/jetty/util/l=
og/Logger.html">Jetty Logger API</a>.
For an example of a custom logger, see <a href=3D"file:///home/tian/Downloa=
ds/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciido=
c/%7BGITBROWSEURL%7D/jetty-util/src/main/java/org/eclipse/jetty/util/log/Ja=
vaUtilLog.java">JavaUtilLog.java</a>.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"configuring-jetty-stderrlog">The jetty-logging.properties file</h=
4>
<div class=3D"paragraph">
<p>By default, the internal Jetty Logging discovery mechanism will load log=
ging specific properties from a classpath resource called <code>jetty-loggi=
ng.properties</code> and then initialize the Logging from a combination of =
properties found in that file, along with any System Properties.
A typical jetty-logging.properties file will include at least the declarati=
on of which logging implementation you want to use by defining a value for =
the <code>org.eclipse.jetty.util.log.class</code> property.</p>
</div>
<div class=3D"paragraph">
<p>Examples for various logging frameworks can be found later in this docum=
entation.</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>Default Logging with <a href=3D"file:///home/tian/Downloads/b60/ebook/je=
tty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#de=
fault-logging-with-stderrlog">Jetty=E2=80=99s StdErrLog</a></p>
</li>
<li>
<p>Using <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jet=
ty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#example-logging-l=
og4j">Log4j or Log4j2 via SLF4J</a></p>
</li>
<li>
<p>Using <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jet=
ty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#example-logging-l=
ogback">Logback via SLF4J</a></p>
</li>
<li>
<p>Using <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jet=
ty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#example-logging-j=
ava-util-logging">Java Util Logging via SLF4J</a></p>
</li>
<li>
<p>Using <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jet=
ty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#example-logging-j=
ava-commons-logging">Java Commons Logging via SLF4J</a></p>
</li>
<li>
<p><a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/index.html#example-logging-logback=
-centralized">Centralized Logging with Logback and Sfl4jLog</a></p>
</li>
</ul>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"default-logging-with-stderrlog">Default Logging with Jetty=E2=80=
=99s StdErrLog</h3>
<div class=3D"sect3">
<h4 id=3D"stderrlog-configuration">StdErrLog Configuration</h4>
<div class=3D"paragraph">
<p>If you do nothing to configure a separate logging framework, Jetty will =
default to using an internal <code>org.eclipse.jetty.util.log.StdErrLog</co=
de> implementation.
This will output all logging events to STDERR (aka <code>System.err</code>)=
.</p>
</div>
<div class=3D"paragraph">
<p>Simply use Jetty and <code>StdErrLog</code>-based logging is output to t=
he console.</p>
</div>
<div class=3D"paragraph">
<p>Included in the Jetty distribution is a logging module named <code>conso=
le-capture</code> that is capable of performing simple capturing of all STD=
OUT (<code>System.out</code>) and STDERR (<code>System.err</code>) output t=
o a file that is rotated daily.</p>
</div>
<div class=3D"paragraph">
<p>To enable this feature, simply activate the <code>console-capture</code>=
 module on the command line:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">[my-base]$ java -jar ../start.jar --add-to-start=3Dconsole-capture
INFO  : console-capture initialized in ${jetty.base}/start.d/console-captur=
e.ini
MKDIR : ${jetty.base}/logs
INFO  : Base directory was modified

[my-base]$ tree
.
=E2=94=9C=E2=94=80=E2=94=80 logs
=E2=94=94=E2=94=80=E2=94=80 start.d
    =E2=94=94=E2=94=80=E2=94=80 console-capture.ini</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The default configuration for logging output will create a file <code>${=
jetty.base}/logs/yyyy_mm_dd.stderrout.log</code> which allows configuration=
 of the output directory by setting the <code>jetty.logs</code> property.</=
p>
</div>
<div class=3D"paragraph">
<p>Just enabling the <code>console-capture</code> will simply output the va=
lues of STDERR and STDOUT to a log file.
To customize the log further, a module named <code>logging-jetty</code> is =
available to provides a default properties file to configure.
As with <code>console-capture</code>, you activate the <code>logging-jetty<=
/code> on the command line.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">[my-base]$ java -jar ../start.jar --add-to-start=3Dlogging-jetty
INFO  : logging-jetty   initialized in ${jetty.base}/start.d/logging-jetty.=
ini
INFO  : resources       transitively enabled
MKDIR : ${jetty.base}/resources
COPY  : ${jetty.home}/modules/logging-jetty/resources/jetty-logging.propert=
ies to ${jetty.base}/resources/jetty-logging.properties
INFO  : Base directory was modified

[my-base]$ tree
.
=E2=94=9C=E2=94=80=E2=94=80 logs
=E2=94=9C=E2=94=80=E2=94=80 resources
=E2=94=82&nbsp;&nbsp; =E2=94=94=E2=94=80=E2=94=80 jetty-logging.properties
=E2=94=94=E2=94=80=E2=94=80 start.d
    =E2=94=9C=E2=94=80=E2=94=80 console-capture.ini
    =E2=94=94=E2=94=80=E2=94=80 logging-jetty.ini</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Once activated, you can find the properties file at <code>${jetty.base}/=
resources/jetty-logging.properties</code>.
By default, the following parameters are defined.
To change them, un-comment the line and substitute your naming scheme and c=
onfiguration choices.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-properties" data-lang=3D"p=
roperties">## Force jetty logging implementation
#org.eclipse.jetty.util.log.class=3Dorg.eclipse.jetty.util.log.StdErrLog

## Set logging levels from: ALL, DEBUG, INFO, WARN, OFF
#org.eclipse.jetty.LEVEL=3DINFO
#com.example.LEVEL=3DINFO

## Hide stacks traces in logs?
#com.example.STACKS=3Dfalse

## Show the source file of a log location?
#com.example.SOURCE=3Dfalse</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>There are a number of properties that can be defined in the configuratio=
n that will affect the behavior of StdErr logging with <code>console-captur=
e</code>.</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1"><code>&lt;name&gt;.LEVEL=3D&lt;level&gt;</code></dt>
<dd>
<p>Sets the logging level for all loggers within the <code>name</code> spec=
ified to the level, which can be (in increasing order of restriction) <code=
>ALL</code>, <code>DEBUG</code>, <code>INFO</code>, <code>WARN</code>, <cod=
e>OFF</code>.
The name (or hierarchy) can be a specific fully qualified class or a packag=
e namespace.
For example, <code>org.eclipse.jetty.http.LEVEL=3DDEBUG</code> is a package=
 namespace approach to turn all loggers in the Jetty HTTP package to DEBUG =
level, and  <code>org.eclipse.jetty.io.ChanelEndPoint.LEVEL=3DALL</code> tu=
rns on all logging events for the specific class, including <code>DEBUG</co=
de>, <code>INFO</code>, <code>WARN</code> (and even special internally igno=
red exception classes).
If more than one system property specifies a logging level, the most specif=
ic one applies.</p>
</dd>
<dt class=3D"hdlist1"><code>&lt;name&gt;.SOURCE=3D&lt;boolean&gt;</code></d=
t>
<dd>
<p>Named Logger specific, attempts to print the Java source file name and l=
ine number from where the logging event originated.
Name must be a fully qualified class name (this configurable does not suppo=
rt package name hierarchy).
Default is false.
Be aware that this is a slow operation and has an impact on performance.</p=
>
</dd>
<dt class=3D"hdlist1"><code>&lt;name&gt;.STACKS=3D&lt;boolean&gt;</code></d=
t>
<dd>
<p>Named Logger specific, controls the display of stacktraces.
Name must be a fully qualified class name (this configurable does not suppo=
rt package name hierarchy).
Default is true.</p>
</dd>
<dt class=3D"hdlist1"><code>org.eclipse.jetty.util.log.stderr.SOURCE=3D&lt;=
boolean&gt;</code></dt>
<dd>
<p>Special Global Configuration.
Attempts to print the Java source file name and line number from where the =
logging event originated.
Default is false.</p>
</dd>
<dt class=3D"hdlist1"><code>org.eclipse.jetty.util.log.stderr.LONG=3D&lt;bo=
olean&gt;</code></dt>
<dd>
<p>Special Global Configuration.
When true, outputs logging events to <code>STDERR</code> using long form, f=
ully qualified class names.
When false, uses abbreviated package names.
Default is false.</p>
<div class=3D"ulist">
<ul>
<li>
<p>Example when set to false:</p>
</li>
</ul>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">2016-10-21 15:31:01.248:INFO::main: Logging initialized @332ms to org.ec=
lipse.jetty.util.log.StdErrLog
2016-10-21 15:31:01.370:INFO:oejs.Server:main: jetty-9.4.0-SNAPSHOT
2016-10-21 15:31:01.400:INFO:oejs.AbstractConnector:main: Started ServerCon=
nector@2c330fbc{HTTP/1.1,[http/1.1]}{0.0.0.0:8080}
2016-10-21 15:31:01.400:INFO:oejs.Server:main: Started @485ms</code></pre>
</div>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>Example when set to true:</p>
</li>
</ul>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">2016-10-21 15:31:35.020:INFO::main: Logging initialized @340ms to org.ec=
lipse.jetty.util.log.StdErrLog
2016-10-21 15:31:35.144:INFO:org.eclipse.jetty.server.Server:main: jetty-9.=
4.0-SNAPSHOT
2016-10-21 15:31:35.174:INFO:org.eclipse.jetty.server.AbstractConnector:mai=
n: Started ServerConnector@edf4efb{HTTP/1.1,[http/1.1]}{0.0.0.0:8080}
2016-10-21 15:31:35.175:INFO:org.eclipse.jetty.server.Server:main: Started =
@495ms</code></pre>
</div>
</div>
</dd>
</dl>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"deprecated-parameters">Deprecated Parameters</h4>
<div class=3D"paragraph">
<p>These parameters existed in prior versions of Jetty, and are no longer s=
upported.
They are included here for historical (and search engine) reasons.</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1"><code>org.eclipse.jetty.util.log.DEBUG</code></dt>
<dd>
<p>Formerly used to enable DEBUG level logging on any logger used within Je=
tty (not just Jetty=E2=80=99s own logger).</p>
<div class=3D"ulist">
<ul>
<li>
<p>Replaced with using the logger implementation specific configuration and=
 level filtering.</p>
</li>
</ul>
</div>
</dd>
<dt class=3D"hdlist1"><code>org.eclipse.jetty.util.log.stderr.DEBUG</code><=
/dt>
<dd>
<p>Formerly used to enable DEBUG level logging on the internal Jetty <code>=
StdErrLog</code> implementation.</p>
<div class=3D"ulist">
<ul>
<li>
<p>Replaced with level specific equivalent.
Example: <code>org.eclipse.jetty.LEVEL=3DDEBUG</code></p>
</li>
</ul>
</div>
</dd>
<dt class=3D"hdlist1"><code>DEBUG</code></dt>
<dd>
<p>Ancient debugging flag that turned on all debugging, even non-logging de=
bugging.</p>
<div class=3D"ulist">
<ul>
<li>
<p>Jetty no longer uses because many third party libraries employ this over=
ly simple property name, which would generate far too much console output.<=
/p>
</li>
</ul>
</div>
</dd>
</dl>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"configuring-jetty-request-logs">Configuring Jetty Request Logs</h=
3>
<div class=3D"paragraph">
<p>Request logs are a record of the requests that the server has processed.
There is one entry per request received, and commonly in the standard NCSA =
format, so you can use tools like <a href=3D"http://en.wikipedia.org/wiki/W=
ebalizer">Webalizer</a> to analyze them conveniently.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"constructing-request-log-entry">Constructing a Request Log Entry<=
/h4>
<div class=3D"paragraph">
<p>A standard request log entry includes the client IP address, date, metho=
d, URL, result, size, referrer, user agent and latency.
For example:</p>
</div>
<div class=3D"literalblock">
<div class=3D"content">
<pre>123.4.5.6 - - [20/Jul/2016:10:16:17 +0000]
  "GET /jetty/tut/XmlConfiguration.html HTTP/1.1"
  200 76793 "http://localhost:8080/jetty/tut/logging.html"
  "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.6) Gecko/20040614 Firefox/0=
.8" 342</pre>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"implementing-request-log">Implementing a Request Log</h4>
<div class=3D"paragraph">
<p>Jetty provides an implementation called <code>NCSARequestLog</code> whic=
h supports the NCSA format in files that will roll over on a daily basis.</=
p>
</div>
<div class=3D"paragraph">
<p>The <a href=3D"http://logback.qos.ch/">Logback Project</a> offers <a hre=
f=3D"http://logback.qos.ch/access.html">another implementation</a> of a <co=
de>RequestLog</code> interface, providing rich and powerful HTTP-access log=
 functionality.</p>
</div>
<div class=3D"paragraph">
<p>If neither of these options meets your needs, you can implement a custom=
 request logger by implementing Jetty=E2=80=99s <a href=3D"file:///home/tia=
n/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/mai=
n/asciidoc/%7BJDURL%7D/org/eclipse/jetty/server/RequestLog.html"><code>Requ=
estLog.java</code></a> interface and plugging it in similar to the <code>NC=
SARequestLog</code>, as shown below.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"configuring-request-log">Configuring the Request Log module</h4>
<div class=3D"paragraph">
<p>To enable the Request Log module for the entire server via the Jetty dis=
tribution, it first needs to be enabled on the command line:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">$ java -jar ../start.jar --add-to-start=3Drequestlog

INFO: requestlog      initialised in ${jetty.base}/start.d/requestlog.ini
MKDIR: ${jetty.base}/logs
INFO: Base directory was modified</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The above command will add a new <code>requestlog.ini</code> file to you=
r <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.=
x/jetty-documentation/src/main/asciidoc/index.html#start-vs-startd"><code>{=
$jetty.base}/start.d</code> directory</a>.</p>
</div>
<div class=3D"paragraph">
<p>The equivalent code for embedded usages of Jetty is:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">N=
CSARequestLog requestLog =3D new NCSARequestLog("/var/logs/jetty/jetty-yyyy=
_mm_dd.request.log");
requestLog.setAppend(true);
requestLog.setExtended(false);
requestLog.setLogTimeZone("GMT");
requestLog.setLogLatency(true);
requestLog.setRetainDays("90");

server.setRequestLog(requestLog);</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>This configures a request log in <code>{$jetty.home}/logs</code> with fi=
lenames including the date.
Existing log files are appended to and the extended NCSA format is used in =
the GMT time zone.</p>
</div>
<div class=3D"paragraph">
<p>The above configuration enables Log Latency, which is the amount of time=
 it took the server to handle the request.
This value is measured in milliseconds and is appended to the the log file =
for each request.</p>
</div>
<div class=3D"paragraph">
<p>You can also customize the number of days you wish to keep request logs.
By default, log files are kept for 90 days before being deleted.
The value for <code>retainDays</code> (xml) or <code>setRetainDays</code> (=
Java) should be configured as <em>1 + n</em> days.
For example, if you wanted to keep the logs for the current day and the day=
 prior you would set the <code>retainDays</code> (or <code>setRetainDays</c=
ode>) value to 2.</p>
</div>
<div class=3D"paragraph">
<p>To examine more configuration options, see <a href=3D"file:///home/tian/=
Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/=
asciidoc/%7BJDURL%7D/org/eclipse/jetty/server/NCSARequestLog.html">NCSARequ=
estLog.java</a>.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"configuring-separate-request-log-for-web-application">Configuring=
 a Separate Request Log For a Web Application</h4>
<div class=3D"paragraph">
<p>To configure a separate request log for specific a web application, add =
the following to the context XML file.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><co=
nfigure class=3D"org.eclipse.jetty.webapp.WebAppContext">
  ...
  <call name=3D"insertHandler">
    <arg>
      <new id=3D"RequestLog" class=3D"org.eclipse.jetty.server.handler.Requ=
estLogHandler">
        <set name=3D"requestLog">
          <new id=3D"RequestLogImpl" class=3D"org.eclipse.jetty.server.NCSA=
RequestLog">
            <set name=3D"filename"><property name=3D"jetty.logs" default=3D=
"./logs">/test-yyyy_mm_dd.request.log</property></set>
            <set name=3D"filenameDateFormat">yyyy_MM_dd</set>
            <set name=3D"LogTimeZone">GMT</set>
            <set name=3D"retainDays">90</set>
            <set name=3D"append">true</set>
            <set name=3D"LogLatency">true</set>
          </new>
        </set>
      </new>
    </arg>
  </call>
  ...
</configure></code></pre>
</div>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"configuring-logging-modules">Jetty Logging Integrations (SLF4J, L=
og4j, Logback, JCL, JUL)</h3>
<div class=3D"paragraph">
<p>Jetty provides support for several logging frameworks including SLF4J, J=
ava Commons Logging (JCL), Java Util Logging (JUL), Log4j (including versio=
n 2), and Logback.
This page includes examples of how to enable the associated modules for the=
se different frameworks.
These modules are designed to capture container/server logs; <a href=3D"fil=
e:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-document=
ation/src/main/asciidoc/index.html#configuring-jetty-request-logs">request =
logs</a> and application logs need to be configured separately.
Please note that enabling these modules provides typical and basic function=
ality for each framework; advanced implementations may require their <a hre=
f=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-=
documentation/src/main/asciidoc/index.html#startup-modules">own modules</a>=
 or additional configuration.</p>
</div>
<div class=3D"paragraph">
<p>Enabling these frameworks in the Jetty distribution is as easy as activa=
ting any other module, by adding <code>--add-to-start=3D&lt;module name&gt;=
</code> to the start command for your server, such as:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">[my-base]$ java -jar ../start.jar --add-to-start=3Dlogging-jetty
INFO  : logging-jetty   initialized in ${jetty.base}/start.d/logging-jetty.=
ini
INFO  : resources       transitively enabled
MKDIR : ${jetty.base}/resources
COPY  : ${jetty.home}/modules/logging-jetty/resources/jetty-logging.propert=
ies to ${jetty.base}/resources/jetty-logging.properties
INFO  : Base directory was modified</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>As noted above, Jetty supports a wide array of logging technologies.
If a particular logging framework requires additional jar files, Jetty will=
 automatically download these as part of enabling the associated module and=
 any dependent modules will be transitively enabled.</p>
</div>
<div class=3D"paragraph">
<p>A list of the base Jetty logging modules by running <code>java -jar &lt;=
path-to-jetty.home&gt;/start.jar --list-modules=3Dlogging,-internal</code>.=
</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">logging-jcl</dt>
<dd>
<p>Configures Jetty logging to use Java Commons Logging (JCL), using SLF4J =
as a binding.</p>
</dd>
<dt class=3D"hdlist1">logging-jetty</dt>
<dd>
<p>Standard Jetty logging that captures <code>System.err</code> and <code>S=
ystem.out</code> output.</p>
</dd>
<dt class=3D"hdlist1">logging-jul</dt>
<dd>
<p>Configures Jetty logging to use Java Util Logging (JUL), using SLF4J as =
a binding.</p>
</dd>
<dt class=3D"hdlist1">logging-log4j</dt>
<dd>
<p>Configures Jetty logging to use Log4j as the logging implementation, usi=
ng SLF4J as a binding.</p>
</dd>
<dt class=3D"hdlist1">logging-log4j2</dt>
<dd>
<p>Configures Jetty logging to use Log4j2 as the logging implementation, us=
ing SLF4J as a binding.</p>
</dd>
<dt class=3D"hdlist1">logging-logback</dt>
<dd>
<p>Configures Jetty logging to use Logback as the logging implementation, u=
sing SLF4J as a binding.</p>
</dd>
<dt class=3D"hdlist1">logging-slf4j</dt>
<dd>
<p>Configures Jetty logging to use SLF4J and provides a <code>slf4j-impl</c=
ode> which can be used by other logging frameworks.
If no other logging is configured, <code>slf4j-simple</code> is used.</p>
</dd>
</dl>
</div>
<div class=3D"paragraph">
<p>You can view a list of <strong>all</strong> the Jetty logging modules by=
 running <code>java -jar &lt;path-to-jetty.home&gt;/start.jar --list-module=
s=3Dlogging</code>.
This will display all logging modules, including implementation and binding=
 modules.</p>
</div>
<div class=3D"paragraph">
<p>All these modules (with the exception of <code>logging-jetty</code>) arr=
ange for the Jetty private logging API to be routed to the named technology=
 to actually be logged.
For example, enabling the <code>logging-log4j</code> module will do several=
 things:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>it enables an internal Log4j API module so that any container code that =
uses Log4j will find the API.</p>
</li>
<li>
<p>it enables an internal Log4j Implementation so that any container code t=
hat uses the Log4j API will also use a Log4j implementation to handle the l=
ogs (and all the normal Log4j configuration mechanisms etc.)</p>
</li>
<li>
<p>it enables the internal <code>slf4j-log4j</code> logging binding so that=
 any container code that uses the SLF4j API to also use the Log4j implement=
ation via the Log4j API.</p>
</li>
<li>
<p>it configures the Jetty logging API to use the SLF4J API, which is then =
bound to Log4j.</p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>So, after enabling <code>logging-log4j</code>, within the server contain=
er there are 3 logging APIs available: Jetty, SLF4J and Log4J.
But there is only a single logging <strong>implementation</strong> - Log4j;=
 the 3 APIs act only as facades over the Log4j implementation.</p>
</div>
<div class=3D"paragraph">
<p>Note that you can add additional APIs to this configuration.
For example, enabling the internal module <code>jcl-slf4j</code> would add =
in a Java Commons Logging facade that also would use the Log4j implementati=
on via the SLF4J binding.</p>
</div>
<div class=3D"paragraph">
<p>Most other top level logging modules work in the same way: <code>logging=
-jcl</code>, <code>logging-jul</code>, <code>logging-slf4j</code>, <code>lo=
gging-log4j2</code> and <code>logging-logback</code> all bind their impleme=
ntation via SLF4J.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"example-logging-slf4j">Logging with SLF4J</h4>
<div class=3D"paragraph">
<p>Jetty uses the SLF4J api as a binding to provide logging information to =
additional frameworks such as Log4j or Logback.
It can also be used on it=E2=80=99s own to provide simple server logging.
To enable the SLF4J framework, you need to activate the <code>logging-slf4j=
</code> module.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">[my-base]$ java -jar ../start.jar --add-to-start=3Dlogging-slf4j

ALERT: There are enabled module(s) with licenses.
The following 1 module(s):
 + contains software not provided by the Eclipse Foundation!
 + contains software not covered by the Eclipse Public License!
 + has not been audited for compliance with its license

 Module: slf4j-api
  + SLF4J is distributed under the MIT License.
  + Copyright (c) 2004-2013 QOS.ch
  + All rights reserved.
  + Permission is hereby granted, free  of charge, to any person obtaining
  + a  copy  of this  software  and  associated  documentation files  (the
  + "Software"), to  deal in  the Software without  restriction, including
  + without limitation  the rights to  use, copy, modify,  merge, publish,
  + distribute,  sublicense, and/or sell  copies of  the Software,  and to
  + permit persons to whom the Software  is furnished to do so, subject to
  + the following conditions:
  + The  above  copyright  notice  and  this permission  notice  shall  be
  + included in all copies or substantial portions of the Software.
  + THE  SOFTWARE IS  PROVIDED  "AS  IS", WITHOUT  WARRANTY  OF ANY  KIND,
  + EXPRESS OR  IMPLIED, INCLUDING  BUT NOT LIMITED  TO THE  WARRANTIES OF
  + MERCHANTABILITY,    FITNESS    FOR    A   PARTICULAR    PURPOSE    AND
  + NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
  + LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
  + OF CONTRACT, TORT OR OTHERWISE,  ARISING FROM, OUT OF OR IN CONNECTION
  + WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

Proceed (y/N)? y
INFO  : slf4j-api       transitively enabled
INFO  : logging-slf4j   initialized in ${jetty.base}/start.d/logging-slf4j.=
ini
MKDIR : ${jetty.base}/lib/slf4j
DOWNLD: http://central.maven.org/maven2/org/slf4j/slf4j-api/1.7.21/slf4j-ap=
i-1.7.21.jar to ${jetty.base}/lib/slf4j/slf4j-api-1.7.21.jar
INFO  : Base directory was modified
ERROR : Module logging-slf4j requires a module providing slf4j-impl from on=
e of [slf4j-simple-impl, slf4j-logback, slf4j-jul, slf4j-log4j2, slf4j-log4=
j]

ERROR : Unsatisfied module dependencies: logging-slf4j

Usage: java -jar $JETTY_HOME/start.jar [options] [properties] [configs]
       java -jar $JETTY_HOME/start.jar --help  # for more information</code=
></pre>
</div>
</div>
<div class=3D"paragraph">
<p>As you probably noticed, the system gives an <code>ERROR</code> when try=
ing to enable the <code>logging-slf4j</code> on it=E2=80=99s own.
The <code>logging-slf4j</code> module itself provides the SLF4J api, but as=
 SLF4J is often used as a binding for other logging frameworks does not by =
default provide an implementation.
To enable the simple SLF4J implementation, we will also need to activate th=
e <code>slf4j-simple-impl</code> module.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">[my-base]$ java -jar ../start.jar --add-to-start=3Dslf4j-simple-impl
INFO  : slf4j-simple-impl initialized in ${jetty.base}/start.d/slf4j-simple=
-impl.ini
INFO  : resources       transitively enabled
DOWNLD: http://central.maven.org/maven2/org/slf4j/slf4j-simple/1.7.21/slf4j=
-simple-1.7.21.jar to ${jetty.base}/lib/slf4j/slf4j-simple-1.7.21.jar
MKDIR : ${jetty.base}/resources
COPY  : ${jetty.home}/modules/slf4j-simple-impl/resources/simplelogger.prop=
erties to ${jetty.base}/resources/simplelogger.properties
INFO  : Base directory was modified

[my-base]$ tree
.
=E2=94=9C=E2=94=80=E2=94=80 lib
=E2=94=82&nbsp;&nbsp; =E2=94=94=E2=94=80=E2=94=80 slf4j
=E2=94=82&nbsp;&nbsp;     =E2=94=9C=E2=94=80=E2=94=80 slf4j-api-1.7.21.jar
=E2=94=82&nbsp;&nbsp;     =E2=94=94=E2=94=80=E2=94=80 slf4j-simple-1.7.21.j=
ar
=E2=94=9C=E2=94=80=E2=94=80 resources
=E2=94=82&nbsp;&nbsp; =E2=94=94=E2=94=80=E2=94=80 simplelogger.properties
=E2=94=94=E2=94=80=E2=94=80 start.d
    =E2=94=9C=E2=94=80=E2=94=80 logging-slf4j.ini
    =E2=94=94=E2=94=80=E2=94=80 slf4j-simple-impl.ini</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Jetty is now configured to log using the SLF4J framework.
A standard SLF4J properties file is located in <code>${jetty.base}/resource=
s/simplelogger.properties</code>.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"example-logging-log4j">Logging with Log4j and Log4j2</h4>
<div class=3D"paragraph">
<p>It is possible to have the Jetty Server logging configured so that Log4j=
 or Log4j2 controls the output of logging events produced by Jetty.
This is accomplished by configuring Jetty for logging to <a href=3D"http://=
logging.apache.org/log4j/">Apache Log4j</a> via <a href=3D"http://slf4j.org=
/manual.html">Slf4j</a> and the <a href=3D"http://slf4j.org/manual.html#swa=
pping">Slf4j binding layer for Log4j</a>.
Implementation of Log4j can be done by enabling the <code>logging-log4j</co=
de> module.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">[my-base]$ java -jar ../start.jar --add-to-start=3Dlogging-log4j

ALERT: There are enabled module(s) with licenses.
The following 2 module(s):
 + contains software not provided by the Eclipse Foundation!
 + contains software not covered by the Eclipse Public License!
 + has not been audited for compliance with its license

 Module: log4j-impl
  + Log4j is released under the Apache 2.0 license.
  + http://www.apache.org/licenses/LICENSE-2.0.html

 Module: slf4j-api
  + SLF4J is distributed under the MIT License.
  + Copyright (c) 2004-2013 QOS.ch
  + All rights reserved.
  + Permission is hereby granted, free  of charge, to any person obtaining
  + a  copy  of this  software  and  associated  documentation files  (the
  + "Software"), to  deal in  the Software without  restriction, including
  + without limitation  the rights to  use, copy, modify,  merge, publish,
  + distribute,  sublicense, and/or sell  copies of  the Software,  and to
  + permit persons to whom the Software  is furnished to do so, subject to
  + the following conditions:
  + The  above  copyright  notice  and  this permission  notice  shall  be
  + included in all copies or substantial portions of the Software.
  + THE  SOFTWARE IS  PROVIDED  "AS  IS", WITHOUT  WARRANTY  OF ANY  KIND,
  + EXPRESS OR  IMPLIED, INCLUDING  BUT NOT LIMITED  TO THE  WARRANTIES OF
  + MERCHANTABILITY,    FITNESS    FOR    A   PARTICULAR    PURPOSE    AND
  + NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
  + LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
  + OF CONTRACT, TORT OR OTHERWISE,  ARISING FROM, OUT OF OR IN CONNECTION
  + WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

Proceed (y/N)? y
INFO  : slf4j-api       transitively enabled
INFO  : log4j-impl      transitively enabled
INFO  : resources       transitively enabled
INFO  : slf4j-log4j     transitively enabled
INFO  : logging-log4j   initialized in ${jetty.base}/start.d/logging-log4j.=
ini
MKDIR : ${jetty.base}/lib/slf4j
DOWNLD: http://central.maven.org/maven2/org/slf4j/slf4j-api/1.7.21/slf4j-ap=
i-1.7.21.jar to ${jetty.base}/lib/slf4j/slf4j-api-1.7.21.jar
MKDIR : ${jetty.base}/lib/log4j
COPY  : /Users/chris/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar to =
${jetty.base}/lib/log4j/log4j-1.2.17.jar
MKDIR : ${jetty.base}/resources
COPY  : ${jetty.home}/modules/log4j-impl/resources/log4j.xml to ${jetty.bas=
e}/resources/log4j.xml
DOWNLD: http://central.maven.org/maven2/org/slf4j/slf4j-log4j12/1.7.21/slf4=
j-log4j12-1.7.21.jar to ${jetty.base}/lib/slf4j/slf4j-log4j12-1.7.21.jar
INFO  : Base directory was modified

[my-base]$ tree
.
=E2=94=9C=E2=94=80=E2=94=80 lib
=E2=94=82&nbsp;&nbsp; =E2=94=9C=E2=94=80=E2=94=80 log4j
=E2=94=82&nbsp;&nbsp; =E2=94=82&nbsp;&nbsp; =E2=94=94=E2=94=80=E2=94=80 log=
4j-1.2.17.jar
=E2=94=82&nbsp;&nbsp; =E2=94=94=E2=94=80=E2=94=80 slf4j
=E2=94=82&nbsp;&nbsp;     =E2=94=9C=E2=94=80=E2=94=80 slf4j-api-1.7.21.jar
=E2=94=82&nbsp;&nbsp;     =E2=94=94=E2=94=80=E2=94=80 slf4j-log4j12-1.7.21.=
jar
=E2=94=9C=E2=94=80=E2=94=80 resources
=E2=94=82&nbsp;&nbsp; =E2=94=94=E2=94=80=E2=94=80 log4j.xml
=E2=94=94=E2=94=80=E2=94=80 start.d
    =E2=94=94=E2=94=80=E2=94=80 logging-log4j.ini</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Jetty is now configured to log using the Log4j framework.
A standard Log4j configuration file is located in <code>${jetty.base}/resou=
rces/log4j.xml</code>.</p>
</div>
<div class=3D"paragraph">
<p>Or, to set up Log4j2, enable the <code>logging-log4j2</code> module.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">[my-base]$ java -jar ../start.jar --add-to-start=3Dlogging-log4j2

ALERT: There are enabled module(s) with licenses.
The following 2 module(s):
 + contains software not provided by the Eclipse Foundation!
 + contains software not covered by the Eclipse Public License!
 + has not been audited for compliance with its license

 Module: log4j2-api
  + Log4j is released under the Apache 2.0 license.
  + http://www.apache.org/licenses/LICENSE-2.0.html

 Module: slf4j-api
  + SLF4J is distributed under the MIT License.
  + Copyright (c) 2004-2013 QOS.ch
  + All rights reserved.
  + Permission is hereby granted, free  of charge, to any person obtaining
  + a  copy  of this  software  and  associated  documentation files  (the
  + "Software"), to  deal in  the Software without  restriction, including
  + without limitation  the rights to  use, copy, modify,  merge, publish,
  + distribute,  sublicense, and/or sell  copies of  the Software,  and to
  + permit persons to whom the Software  is furnished to do so, subject to
  + the following conditions:
  + The  above  copyright  notice  and  this permission  notice  shall  be
  + included in all copies or substantial portions of the Software.
  + THE  SOFTWARE IS  PROVIDED  "AS  IS", WITHOUT  WARRANTY  OF ANY  KIND,
  + EXPRESS OR  IMPLIED, INCLUDING  BUT NOT LIMITED  TO THE  WARRANTIES OF
  + MERCHANTABILITY,    FITNESS    FOR    A   PARTICULAR    PURPOSE    AND
  + NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
  + LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
  + OF CONTRACT, TORT OR OTHERWISE,  ARISING FROM, OUT OF OR IN CONNECTION
  + WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

Proceed (y/N)? y
INFO  : slf4j-api       transitively enabled
INFO  : logging-log4j2  initialized in ${jetty.base}/start.d/logging-log4j2=
.ini
INFO  : log4j2-api      transitively enabled
INFO  : resources       transitively enabled
INFO  : slf4j-log4j2    transitively enabled
INFO  : log4j2-impl     transitively enabled
MKDIR : ${jetty.base}/lib/slf4j
DOWNLD: http://central.maven.org/maven2/org/slf4j/slf4j-api/1.7.21/slf4j-ap=
i-1.7.21.jar to ${jetty.base}/lib/slf4j/slf4j-api-1.7.21.jar
MKDIR : ${jetty.base}/lib/log4j2
DOWNLD: http://central.maven.org/maven2/org/apache/logging/log4j/log4j-api/=
2.6.1/log4j-api-2.6.1.jar to ${jetty.base}/lib/log4j2/log4j-api-2.6.1.jar
MKDIR : ${jetty.base}/resources
DOWNLD: http://central.maven.org/maven2/org/apache/logging/log4j/log4j-slf4=
j-impl/2.6.1/log4j-slf4j-impl-2.6.1.jar to ${jetty.base}/lib/log4j2/log4j-s=
lf4j-impl-2.6.1.jar
DOWNLD: http://central.maven.org/maven2/org/apache/logging/log4j/log4j-core=
/2.6.1/log4j-core-2.6.1.jar to ${jetty.base}/lib/log4j2/log4j-core-2.6.1.ja=
r
COPY  : ${jetty.home}/modules/log4j2-impl/resources/log4j2.xml to ${jetty.b=
ase}/resources/log4j2.xml
INFO  : Base directory was modified

[my-base]$ tree
.
=E2=94=9C=E2=94=80=E2=94=80 lib
=E2=94=82&nbsp;&nbsp; =E2=94=9C=E2=94=80=E2=94=80 log4j2
=E2=94=82&nbsp;&nbsp; =E2=94=82&nbsp;&nbsp; =E2=94=9C=E2=94=80=E2=94=80 log=
4j-api-2.6.1.jar
=E2=94=82&nbsp;&nbsp; =E2=94=82&nbsp;&nbsp; =E2=94=9C=E2=94=80=E2=94=80 log=
4j-core-2.6.1.jar
=E2=94=82&nbsp;&nbsp; =E2=94=82&nbsp;&nbsp; =E2=94=94=E2=94=80=E2=94=80 log=
4j-slf4j-impl-2.6.1.jar
=E2=94=82&nbsp;&nbsp; =E2=94=94=E2=94=80=E2=94=80 slf4j
=E2=94=82&nbsp;&nbsp;     =E2=94=94=E2=94=80=E2=94=80 slf4j-api-1.7.21.jar
=E2=94=9C=E2=94=80=E2=94=80 resources
=E2=94=82&nbsp;&nbsp; =E2=94=94=E2=94=80=E2=94=80 log4j2.xml
=E2=94=94=E2=94=80=E2=94=80 start.d
    =E2=94=94=E2=94=80=E2=94=80 logging-log4j2.ini</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>At this point Jetty is configured so that the Jetty server itself will l=
og using Log4j2, using the Log4j2 configuration found in <code>{$jetty.base=
}/resources/log4j2.xml</code>.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"example-logging-logback">Logging with Logback</h4>
<div class=3D"paragraph">
<p>It is possible to have the Jetty Server logging configured so that Logba=
ck controls the output of logging events produced by Jetty.
This is accomplished by configuring Jetty for logging to <code>Logback</cod=
e>, which uses <a href=3D"http://slf4j.org/manual.html">Slf4j</a> and the <=
a href=3D"http://logback.qos.ch/">Logback Implementation for Slf4j</a>.</p>
</div>
<div class=3D"paragraph">
<p>To set up Jetty logging via Logback, enable the <code>logging-logback</c=
ode> module.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">[my-base]$ java -jar ../start.jar --add-to-start=3Dlogging-logback

ALERT: There are enabled module(s) with licenses.
The following 2 module(s):
 + contains software not provided by the Eclipse Foundation!
 + contains software not covered by the Eclipse Public License!
 + has not been audited for compliance with its license

 Module: logback-impl
  + Logback: the reliable, generic, fast and flexible logging framework.
  + Copyright (C) 1999-2012, QOS.ch. All rights reserved.
  + This program and the accompanying materials are dual-licensed under
  + either:
  + the terms of the Eclipse Public License v1.0
  + as published by the Eclipse Foundation:
  + http://www.eclipse.org/legal/epl-v10.html
  + or (per the licensee's choosing) under
  + the terms of the GNU Lesser General Public License version 2.1
  + as published by the Free Software Foundation:
  + http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html

 Module: slf4j-api
  + SLF4J is distributed under the MIT License.
  + Copyright (c) 2004-2013 QOS.ch
  + All rights reserved.
  + Permission is hereby granted, free  of charge, to any person obtaining
  + a  copy  of this  software  and  associated  documentation files  (the
  + "Software"), to  deal in  the Software without  restriction, including
  + without limitation  the rights to  use, copy, modify,  merge, publish,
  + distribute,  sublicense, and/or sell  copies of  the Software,  and to
  + permit persons to whom the Software  is furnished to do so, subject to
  + the following conditions:
  + The  above  copyright  notice  and  this permission  notice  shall  be
  + included in all copies or substantial portions of the Software.
  + THE  SOFTWARE IS  PROVIDED  "AS  IS", WITHOUT  WARRANTY  OF ANY  KIND,
  + EXPRESS OR  IMPLIED, INCLUDING  BUT NOT LIMITED  TO THE  WARRANTIES OF
  + MERCHANTABILITY,    FITNESS    FOR    A   PARTICULAR    PURPOSE    AND
  + NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
  + LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
  + OF CONTRACT, TORT OR OTHERWISE,  ARISING FROM, OUT OF OR IN CONNECTION
  + WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

Proceed (y/N)? y
INFO  : slf4j-api       transitively enabled
INFO  : logback-impl    transitively enabled
INFO  : slf4j-logback   transitively enabled
INFO  : logging-logback initialized in ${jetty.base}/start.d/logging-logbac=
k.ini
INFO  : resources       transitively enabled
MKDIR : ${jetty.base}/lib/slf4j
DOWNLD: http://central.maven.org/maven2/org/slf4j/slf4j-api/1.7.21/slf4j-ap=
i-1.7.21.jar to ${jetty.base}/lib/slf4j/slf4j-api-1.7.21.jar
MKDIR : ${jetty.base}/lib/logback
DOWNLD: http://central.maven.org/maven2/ch/qos/logback/logback-core/1.1.7/l=
ogback-core-1.1.7.jar to ${jetty.base}/lib/logback/logback-core-1.1.7.jar
MKDIR : ${jetty.base}/resources
COPY  : ${jetty.home}/modules/logback-impl/resources/logback.xml to ${jetty=
.base}/resources/logback.xml
DOWNLD: http://central.maven.org/maven2/ch/qos/logback/logback-classic/1.1.=
7/logback-classic-1.1.7.jar to ${jetty.base}/lib/logback/logback-classic-1.=
1.7.jar
INFO  : Base directory was modified

[my-base]$ tree
.
=E2=94=9C=E2=94=80=E2=94=80 lib
=E2=94=82&nbsp;&nbsp; =E2=94=9C=E2=94=80=E2=94=80 logback
=E2=94=82&nbsp;&nbsp; =E2=94=82&nbsp;&nbsp; =E2=94=9C=E2=94=80=E2=94=80 log=
back-classic-1.1.7.jar
=E2=94=82&nbsp;&nbsp; =E2=94=82&nbsp;&nbsp; =E2=94=94=E2=94=80=E2=94=80 log=
back-core-1.1.7.jar
=E2=94=82&nbsp;&nbsp; =E2=94=94=E2=94=80=E2=94=80 slf4j
=E2=94=82&nbsp;&nbsp;     =E2=94=94=E2=94=80=E2=94=80 slf4j-api-1.7.21.jar
=E2=94=9C=E2=94=80=E2=94=80 resources
=E2=94=82&nbsp;&nbsp; =E2=94=94=E2=94=80=E2=94=80 logback.xml
=E2=94=94=E2=94=80=E2=94=80 start.d
    =E2=94=94=E2=94=80=E2=94=80 logging-logback.ini</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>At this point Jetty is configured so that the Jetty server itself will l=
og using Logback, using the Logback configuration found in <code>{$jetty.ba=
se}/resources/logback.xml</code>.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_logging_with_java_util_logging">Logging with Java Util Logging</=
h4>
<div class=3D"sect4">
<h5 id=3D"example-logging-java-util-logging">Java Util Logging with SLF4J</=
h5>
<div class=3D"paragraph">
<p>It is possible to have the Jetty Server logging configured so that <code=
>java.util.logging</code> controls the output of logging events produced by=
 Jetty.</p>
</div>
<div class=3D"paragraph">
<p>This example demonstrates how to configuring Jetty for logging to <code>=
java.util.logging</code> via <a href=3D"http://slf4j.org/manual.html">SLF4J=
</a> as a binding layer.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">[my-base]$ java -jar ../start.jar --add-to-start=3Dlogging-jul

ALERT: There are enabled module(s) with licenses.
The following 1 module(s):
 + contains software not provided by the Eclipse Foundation!
 + contains software not covered by the Eclipse Public License!
 + has not been audited for compliance with its license

 Module: slf4j-api
  + SLF4J is distributed under the MIT License.
  + Copyright (c) 2004-2013 QOS.ch
  + All rights reserved.
  + Permission is hereby granted, free  of charge, to any person obtaining
  + a  copy  of this  software  and  associated  documentation files  (the
  + "Software"), to  deal in  the Software without  restriction, including
  + without limitation  the rights to  use, copy, modify,  merge, publish,
  + distribute,  sublicense, and/or sell  copies of  the Software,  and to
  + permit persons to whom the Software  is furnished to do so, subject to
  + the following conditions:
  + The  above  copyright  notice  and  this permission  notice  shall  be
  + included in all copies or substantial portions of the Software.
  + THE  SOFTWARE IS  PROVIDED  "AS  IS", WITHOUT  WARRANTY  OF ANY  KIND,
  + EXPRESS OR  IMPLIED, INCLUDING  BUT NOT LIMITED  TO THE  WARRANTIES OF
  + MERCHANTABILITY,    FITNESS    FOR    A   PARTICULAR    PURPOSE    AND
  + NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
  + LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
  + OF CONTRACT, TORT OR OTHERWISE,  ARISING FROM, OUT OF OR IN CONNECTION
  + WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

Proceed (y/N)? y
INFO  : jul-impl        transitively enabled
INFO  : slf4j-api       transitively enabled
INFO  : slf4j-jul       transitively enabled
INFO  : logging-jul     initialized in ${jetty.base}/start.d/logging-jul.in=
i
INFO  : resources       transitively enabled
MKDIR : ${jetty.base}/etc
COPY  : ${jetty.home}/modules/jul-impl/etc/java-util-logging.properties to =
${jetty.base}/etc/java-util-logging.properties
MKDIR : ${jetty.base}/lib/slf4j
DOWNLD: http://central.maven.org/maven2/org/slf4j/slf4j-api/1.7.21/slf4j-ap=
i-1.7.21.jar to ${jetty.base}/lib/slf4j/slf4j-api-1.7.21.jar
DOWNLD: http://central.maven.org/maven2/org/slf4j/slf4j-jdk14/1.7.21/slf4j-=
jdk14-1.7.21.jar to ${jetty.base}/lib/slf4j/slf4j-jdk14-1.7.21.jar
INFO  : Base directory was modified

[my-base]$ tree
.
=E2=94=9C=E2=94=80=E2=94=80 etc
=E2=94=82&nbsp;&nbsp; =E2=94=94=E2=94=80=E2=94=80 java-util-logging.propert=
ies
=E2=94=9C=E2=94=80=E2=94=80 lib
=E2=94=82&nbsp;&nbsp; =E2=94=94=E2=94=80=E2=94=80 slf4j
=E2=94=82&nbsp;&nbsp;     =E2=94=9C=E2=94=80=E2=94=80 slf4j-api-1.7.21.jar
=E2=94=82&nbsp;&nbsp;     =E2=94=94=E2=94=80=E2=94=80 slf4j-jdk14-1.7.21.ja=
r
=E2=94=94=E2=94=80=E2=94=80 start.d
    =E2=94=94=E2=94=80=E2=94=80 logging-jul.ini</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Jetty is now configured to log using the JUL framework.
A standard JUL properties file is located in <code>${jetty.base}/etc/java-u=
til-logging.properties</code>.</p>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_capturing_console_output">Capturing Console Output</h4>
<div class=3D"paragraph">
<p>By default, enabling the above modules will output log information to th=
e console.
Included in the distribution is the <code>console-capture</code> module, wh=
ich can be used in lieu of additional configuration to the selected logging=
 module to capture this output to a <code>logs</code> directory in your <co=
de>${jetty.base}</code>.
To enable this functionality, activate the <code>console-capture</code> mod=
ule.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">[my-base]$ java -jar ../start.jar --add-to-start=3Dconsole-capture
INFO  : console-capture initialized in ${jetty.base}/start.d/console-captur=
e.ini
MKDIR : ${jetty.base}/logs
INFO  : Base directory was modified

[my-base]$ tree
.
=E2=94=9C=E2=94=80=E2=94=80 logs
=E2=94=94=E2=94=80=E2=94=80 start.d
    =E2=94=94=E2=94=80=E2=94=80 console-capture.ini</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>As an example, here is the output from Logback before using the <code>co=
nsole-capture</code> module:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">[my-base]$ java -jar ../start.jar
419  [main] INFO  org.eclipse.jetty.util.log - Logging initialized @508ms t=
o org.eclipse.jetty.util.log.Slf4jLog
540  [main] INFO  org.eclipse.jetty.server.Server - jetty-9.4.0-SNAPSHOT
575  [main] INFO  o.e.jetty.server.AbstractConnector - Started ServerConnec=
tor@3c0ecd4b{HTTP/1.1,[http/1.1]}{0.0.0.0:8080}
575  [main] INFO  org.eclipse.jetty.server.Server - Started @668ms</code></=
pre>
</div>
</div>
<div class=3D"paragraph">
<p>After enabling <code>console-capture</code>, the output is as follows, w=
hich displays the location the log is being saved to:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">[my-base]$ java -jar ../start.jar
151  [main] INFO  org.eclipse.jetty.util.log - Logging initialized @238ms t=
o org.eclipse.jetty.util.log.Slf4jLog
196  [main] INFO  org.eclipse.jetty.util.log - Console stderr/stdout captur=
ed to /installs/jetty-distribution/mybase/logs/2016_10_21.jetty.log</code><=
/pre>
</div>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"example-logging-logback-centralized">Centralized Logging using Lo=
gback</h3>
<div class=3D"paragraph">
<p>The term <em>Centralized Logging</em> refers to a forced logging configu=
ration for the Jetty Server and all web applications that are deployed on t=
he server.
It routes all logging events from the web applications to a single configur=
ation on the Server side.</p>
</div>
<div class=3D"paragraph">
<p>The example below shows how to accomplish this with Jetty and Slf4j, usi=
ng <code>Logback</code> to manage the final writing of logs to disk.</p>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock important">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Important</div>
</td>
<td class=3D"content">
This mechanism forces all webapps to use the server=E2=80=99s configuration=
 for logging, something that isn=E2=80=99t 100% appropriate for all webapps=
.
An example would be having Jenkins-CI deployed as an webapp, if you force i=
ts logging configuration to the server side, you lose the ability on <a hre=
f=3D"http://jenkins-ci.org/">Jenkins-CI</a> to see the logs from the variou=
s builds (as now those logs are actually going to the main server log).
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
<div class=3D"paragraph">
<p>This configuration is essentially the multiple logger configuration with=
 added configuration to the deployers to force a <code>WebAppClassLoader</c=
ode> change to use the server classpath over the webapps classpath for the =
logger specific classes.</p>
</div>
<div class=3D"paragraph">
<p>The technique used by this configuration is to provide an <a href=3D"fil=
e:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-document=
ation/src/main/asciidoc/%7BJDURL%7Dorg/eclipse/jetty/deploy/AppLifeCycle.Bi=
nding.html">AppLifeCycle.Binding</a> against the <a href=3D"file:///home/ti=
an/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/ma=
in/asciidoc/%7BJDURL%7D/org/eclipse/jetty/deploy/AppLifeCycle.html">`"deplo=
ying"`node</a> that modifies the <a href=3D"file:///home/tian/Downloads/b60=
/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJ=
DURL%7D/org/eclipse/jetty/webapp/WebAppContext.html#addSystemClass(java.lan=
g.String)">WebAppContext.addSystemClass(String)</a> for the common logging =
classes.
See <a href=3D"https://github.com/jetty-project/jetty-webapp-logging/blob/m=
aster/src/main/java/org/eclipse/jetty/webapp/logging/CentralizedWebAppLoggi=
ngBinding.java">org.eclipse.jetty.logging.CentralizedWebAppLoggingBinding</=
a> for actual implementation.</p>
</div>
<div class=3D"paragraph">
<p>A convenient replacement <code>logging</code> module has been created to=
 bootstrap your <code>${jetty.base}</code> directory for capturing all Jett=
y server logging from multiple logging frameworks into a single logging out=
put file managed by Logback.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">[mybase]$ mkdir modules
[mybase]$ cd modules

[modules]$ curl -O https://raw.githubusercontent.com/jetty-project/logging-=
modules/master/capture-all/logging.mod
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Cur=
rent
                                 Dload  Upload   Total   Spent    Left  Spe=
ed
100  1416  100  1416    0     0   4241      0 --:--:-- --:--:-- --:--:--  4=
252

[master]$ curl -O https://raw.githubusercontent.com/jetty-project/logging-m=
odules/master/centralized/webapp-logging.mod
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Cur=
rent
                                 Dload  Upload   Total   Spent    Left  Spe=
ed
100   660  100   660    0     0   2032      0 --:--:-- --:--:-- --:--:--  2=
037
[modules]$ cd ..

[mybase]$ java -jar /opt/jetty-dist/start.jar --add-to-start=3Dlogging,weba=
pp-logging
INFO: logging         initialised in ${jetty.base}/start.ini (appended)
MKDIR: ${jetty.base}/logs
DOWNLOAD: http://central.maven.org/maven2/org/slf4j/slf4j-api/1.6.6/slf4j-a=
pi-1.6.6.jar to lib/logging/slf4j-api-1.6.6.jar
DOWNLOAD: http://central.maven.org/maven2/org/slf4j/log4j-over-slf4j/1.6.6/=
log4j-over-slf4j-1.6.6.jar to lib/logging/log4j-over-slf4j-1.6.6.jar
DOWNLOAD: http://central.maven.org/maven2/org/slf4j/jul-to-slf4j/1.6.6/jul-=
to-slf4j-1.6.6.jar to lib/logging/jul-to-slf4j-1.6.6.jar
DOWNLOAD: http://central.maven.org/maven2/org/slf4j/jcl-over-slf4j/1.6.6/jc=
l-over-slf4j-1.6.6.jar to lib/logging/jcl-over-slf4j-1.6.6.jar
DOWNLOAD: http://central.maven.org/maven2/ch/qos/logback/logback-core/1.0.7=
/logback-core-1.0.7.jar to lib/logging/logback-core-1.0.7.jar
DOWNLOAD: http://central.maven.org/maven2/ch/qos/logback/logback-classic/1.=
0.7/logback-classic-1.0.7.jar to lib/logging/logback-classic-1.0.7.jar
DOWNLOAD: https://raw.githubusercontent.com/jetty-project/logging-modules/m=
aster/capture-all/logback.xml to resources/logback.xml
DOWNLOAD: https://raw.githubusercontent.com/jetty-project/logging-modules/m=
aster/capture-all/jetty-logging.properties to resources/jetty-logging.prope=
rties
DOWNLOAD: https://raw.githubusercontent.com/jetty-project/logging-modules/m=
aster/capture-all/jetty-logging.xml to etc/jetty-logging.xml
INFO: resources       initialised transitively
INFO: resources       enabled in     ${jetty.base}/start.ini
INFO: webapp-logging  initialised in ${jetty.base}/start.ini (appended)
DOWNLOAD: http://central.maven.org/maven2/org/eclipse/jetty/jetty-webapp-lo=
gging/9.0.0/jetty-webapp-logging-9.0.0.jar to lib/webapp-logging/jetty-weba=
pp-logging-9.0.0.jar
DOWNLOAD: https://raw.githubusercontent.com/jetty-project/jetty-webapp-logg=
ing/master/src/main/config/etc/jetty-webapp-logging.xml to etc/jetty-webapp=
-logging.xml
DOWNLOAD: https://raw.githubusercontent.com/jetty-project/jetty-webapp-logg=
ing/master/src/main/config/etc/jetty-mdc-handler.xml to etc/jetty-mdc-handl=
er.xml
INFO: deploy          initialised transitively
INFO: deploy          enabled in     ${jetty.base}/start.ini
INFO: logging         initialised transitively
INFO: resources       initialised transitively
INFO: resources       enabled in     ${jetty.base}/start.ini

[mybase]$ java -jar /opt/jetty-dist/start.jar</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The replacement <code>logging.mod</code> performs a number of tasks.</p>
</div>
<div class=3D"olist arabic">
<ol class=3D"arabic">
<li>
<p><code>mybase</code> is a <code>${jetty.base}</code> directory.</p>
</li>
<li>
<p>The jetty-distribution is unpacked (and untouched) into <code>/opt/jetty=
-dist/ `and becomes the `${jetty.home}</code> directory for this demonstrat=
ion.</p>
</li>
<li>
<p>The <code>curl</code> command downloads the replacement <code>logging.mo=
d</code> and puts it into the <code>${jetty.base}/modules/</code> directory=
 for use by mybase only.</p>
</li>
<li>
<p>The <code>start.jar --add-to-start=3Dlogging,webapp-logging</code> comma=
nd performs a number of steps to make the logging module available to the <=
code>${jetty.base}</code> configuration.</p>
<div class=3D"olist loweralpha">
<ol class=3D"loweralpha" type=3D"a">
<li>
<p>Several entries are added to the <code>${jetty.base}/start.ini</code> co=
nfiguration.</p>
<div class=3D"ulist">
<ul>
<li>
<p><code>--module=3Dlogging</code> is added to enable the logging module.</=
p>
</li>
<li>
<p><code>--module=3Dwebapp-logging</code> is added to enable the webapp-log=
ging module.</p>
</li>
</ul>
</div>
</li>
<li>
<p>Required <code>${jetty.base}</code> directories are created: <code>${jet=
ty.base}/logs</code> and <code>${jetty.base}/resources</code>.</p>
</li>
<li>
<p>Required logging libraries are downloaded (if not present already) to th=
e <code>${jetty.base}/lib/logging/</code> directory:</p>
<div class=3D"ulist">
<ul>
<li>
<p><code>slf4j-api.jar</code> - API jar for Slf4j (used by most of the rest=
 of the jars)</p>
</li>
<li>
<p><code>log4j-over-slf4j.jar</code> - Slf4j jar that captures all log4j em=
itted logging events</p>
</li>
<li>
<p><code>jul-to-slf4j.jar</code> - Slf4j jar that captures all java.util.lo=
gging events</p>
</li>
<li>
<p><code>jcl-over-slf4j.jar</code> - Slf4j jar that captures all commons-lo=
gging events</p>
</li>
<li>
<p><code>logback-classic.jar</code> - the Slf4j adapter jar that routes all=
 of the captured logging events to logback itself.</p>
</li>
<li>
<p><code>logback-core.jar</code> - the logback implementation jar, that han=
dles all of the filtering and output of the logging events.</p>
</li>
</ul>
</div>
</li>
<li>
<p>Required webapp-logging library is downloaded (if not present already) t=
o the <code>${jetty.base}/lib/webapp-logging/</code> directory:</p>
<div class=3D"ulist">
<ul>
<li>
<p><code>jetty-webapp-logging.jar</code> - the Jetty side deployment manger=
 app-lifecycle bindings for modifying the <code>WebAppClassloaders</code> o=
f deployed webapps.</p>
</li>
</ul>
</div>
</li>
<li>
<p>Required configuration files are downloaded (if not present already) to =
the <code>${jetty.base}/resources/</code> directory: <code>jetty-logging.pr=
operties</code>, and <code>logback.xml</code>.</p>
</li>
<li>
<p>Required initialization commands are downloaded (if not present already)=
 to the <code>${jetty.base}/etc/</code> directory: <code>jetty-logging.xml<=
/code>, <code>jetty-webapp-logging.xml</code>, and <code>jetty-mdc-handler.=
xml</code>.</p>
</li>
</ol>
</div>
</li>
</ol>
</div>
<div class=3D"paragraph">
<p>At this point the Jetty <code>mybase</code> is configured so that the je=
tty server itself will log using slf4j, and all other logging events from o=
ther Jetty Server components (such as database drivers, security layers, js=
p, mail, and other 3rd party server components) are routed to logback for f=
iltering and output.</p>
</div>
<div class=3D"paragraph">
<p>All webapps deployed via the <code>DeploymentManager</code> have their <=
code>WebAppClassLoader</code> modified to use server side classes and confi=
guration for all logging implementations.</p>
</div>
<div class=3D"paragraph">
<p>The server classpath can be verified by using the <code>start.jar --list=
-config</code> command.</p>
</div>
<div class=3D"paragraph">
<p>In essence, Jetty is now configured to emit its own logging events to sl=
f4j, and various slf4j bridge jars are acting on behalf of log4j, <code>jav=
a.util.logging</code>, and <code>commons-logging</code>, routing all of the=
 logging events to logback (a slf4j adapter) for routing (to console, file,=
 etc=E2=80=A6=E2=80=8B).</p>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"jetty-dump-tool">Jetty Dump Tool</h3>
<div class=3D"paragraph">
<p>The dump feature in Jetty provides a good snapshot of the status of the =
threadpool, select sets, classloaders, and so forth.
To get maximum detail from the dump, you need to <code>setDetailDump(true)<=
/code> on any <code>QueuedThreadPools</code> you are using.
You can do this by a direct call if you are embedding Jetty, or in <code>je=
tty.xml</code>.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"configuring-dump-feature">Configuring the Dump Feature in jetty.x=
ml</h4>
<div class=3D"paragraph">
<p>You can request that Jetty do a dump immediately after starting and just=
 before stopping by calling the appropriate setters on the <code>Server</co=
de> instance.
This can be accomplished in <code>jetty.xml</code> with:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><se=
t name=3D"dumpAfterStart">true</set>
<set name=3D"dumpBeforeStop">true</set></code></pre>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"extra-threadpool-info">Extra ThreadPool Information</h4>
<div class=3D"paragraph">
<p>You can get additional detail from the <code>QueuedThreadPool</code> if =
<code>setDetailedDump(true)</code> is called on the thread pool instance.
Do this in <code>jetty.xml</code> as follows:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><co=
nfigure id=3D"Server" class=3D"org.eclipse.jetty.server.Server">
  <!-- =3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D -->
  <!-- Server Thread Pool                   -->
  <!-- =3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D -->
  <set name=3D"ThreadPool">
     <!-- Default queued blocking threadpool -->
     <new class=3D"org.eclipse.jetty.util.thread.QueuedThreadPool">
       <set name=3D"minThreads">10</set>
       <set name=3D"maxThreads">200</set>
       <set name=3D"detailedDump">true</set>
     </new>
  </set></configure></code></pre>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"dump-tool-via-jmx">Using the Dump Feature via JMX</h4>
<div class=3D"paragraph">
<p>The <code>dump</code> method is on the Server instance and many of its n=
ested components (Handlers, Connectors, and so forth).
Dumps may be obtained by calling these methods either in code or via JMX (s=
ee <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/index.html#using-jmx">Using JMX wi=
th Jetty</a>).</p>
</div>
<div class=3D"paragraph">
<p>The Server MBean has a <code>dump()</code> method, which dumps everythin=
g, plus a <code>dumpStdErr()</code> operation that dumps to StdErr rather t=
han replying to JConsole.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"examing-jetty-distro-dump">Examining a Jetty Distribution Dump</h=
4>
<div class=3D"paragraph">
<p>This is a dump of the stock jetty-distribution with extra threadpool inf=
ormation:</p>
</div>
<div class=3D"literalblock">
<div class=3D"content">
<pre>org.eclipse.jetty.server.Server@76f08fe1 - STARTING
 +=3D qtp1062680061{STARTED,10&lt;=3D13&lt;=3D200,i=3D1,q=3D0} - STARTED
 |   +- 12 qtp1062680061-12-selector-0 RUNNABLE
 |   |   +- sun.nio.ch.KQueueArrayWrapper.kevent0(Native Method)
 |   |   +- sun.nio.ch.KQueueArrayWrapper.poll(KQueueArrayWrapper.java:159)
 |   |   +- sun.nio.ch.KQueueSelectorImpl.doSelect(KQueueSelectorImpl.java:=
103)
 |   |   +- sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:87)
 |   |   +- sun.nio.ch.SelectorImpl.select(SelectorImpl.java:98)
 |   |   +- sun.nio.ch.SelectorImpl.select(SelectorImpl.java:102)
 |   |   +- org.eclipse.jetty.io.SelectorManager$ManagedSelector.select(Sel=
ectorManager.java:459)
 |   |   +- org.eclipse.jetty.io.SelectorManager$ManagedSelector.run(Select=
orManager.java:435)
 |   |   +- org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThr=
eadPool.java:596)
 |   |   +- org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThre=
adPool.java:527)
 |   |   +- java.lang.Thread.run(Thread.java:722)
 |   +- 13 qtp1062680061-13-selector-6 RUNNABLE
 |   |   +- sun.nio.ch.KQueueArrayWrapper.kevent0(Native Method)
 |   |   +- sun.nio.ch.KQueueArrayWrapper.poll(KQueueArrayWrapper.java:159)
 |   |   +- sun.nio.ch.KQueueSelectorImpl.doSelect(KQueueSelectorImpl.java:=
103)
 |   |   +- sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:87)
 |   |   +- sun.nio.ch.SelectorImpl.select(SelectorImpl.java:98)
 |   |   +- sun.nio.ch.SelectorImpl.select(SelectorImpl.java:102)
 |   |   +- org.eclipse.jetty.io.SelectorManager$ManagedSelector.select(Sel=
ectorManager.java:459)
 |   |   +- org.eclipse.jetty.io.SelectorManager$ManagedSelector.run(Select=
orManager.java:435)
 |   |   +- org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThr=
eadPool.java:596)
 |   |   +- org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThre=
adPool.java:527)
 |   |   +- java.lang.Thread.run(Thread.java:722)
 |   +- 14 qtp1062680061-14-selector-5 RUNNABLE
 |   |   +- sun.nio.ch.KQueueArrayWrapper.kevent0(Native Method)
 |   |   +- sun.nio.ch.KQueueArrayWrapper.poll(KQueueArrayWrapper.java:159)
 |   |   +- sun.nio.ch.KQueueSelectorImpl.doSelect(KQueueSelectorImpl.java:=
103)
 |   |   +- sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:87)
 |   |   +- sun.nio.ch.SelectorImpl.select(SelectorImpl.java:98)
 |   |   +- sun.nio.ch.SelectorImpl.select(SelectorImpl.java:102)
 |   |   +- org.eclipse.jetty.io.SelectorManager$ManagedSelector.select(Sel=
ectorManager.java:459)
 |   |   +- org.eclipse.jetty.io.SelectorManager$ManagedSelector.run(Select=
orManager.java:435)
 |   |   +- org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThr=
eadPool.java:596)
 |   |   +- org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThre=
adPool.java:527)
 |   |   +- java.lang.Thread.run(Thread.java:722)
 |   +- 15 qtp1062680061-15-acceptor-0-ServerConnector@3d0f282{HTTP/1.1}{0.=
0.0.0:9090} BLOCKED
 |   |   +- sun.nio.ch.ServerSocketChannelImpl.accept(ServerSocketChannelIm=
pl.java:210)
 |   |   +- org.eclipse.jetty.server.ServerConnector.accept(ServerConnector=
.java:284)
 |   |   +- org.eclipse.jetty.server.AbstractConnector$Acceptor.run(Abstrac=
tConnector.java:460)
 |   |   +- org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThr=
eadPool.java:596)
 |   |   +- org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThre=
adPool.java:527)
 |   |   +- java.lang.Thread.run(Thread.java:722)
 |   +- 16 qtp1062680061-16-selector-1 RUNNABLE
 |   |   +- sun.nio.ch.KQueueArrayWrapper.kevent0(Native Method)
 |   |   +- sun.nio.ch.KQueueArrayWrapper.poll(KQueueArrayWrapper.java:159)
 |   |   +- sun.nio.ch.KQueueSelectorImpl.doSelect(KQueueSelectorImpl.java:=
103)
 |   |   +- sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:87)
 |   |   +- sun.nio.ch.SelectorImpl.select(SelectorImpl.java:98)
 |   |   +- sun.nio.ch.SelectorImpl.select(SelectorImpl.java:102)
 |   |   +- org.eclipse.jetty.io.SelectorManager$ManagedSelector.select(Sel=
ectorManager.java:459)
 |   |   +- org.eclipse.jetty.io.SelectorManager$ManagedSelector.run(Select=
orManager.java:435)
 |   |   +- org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThr=
eadPool.java:596)
 |   |   +- org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThre=
adPool.java:527)
 |   |   +- java.lang.Thread.run(Thread.java:722)
 |   +- 17 qtp1062680061-17-selector-2 RUNNABLE
 |   |   +- sun.nio.ch.KQueueArrayWrapper.kevent0(Native Method)
 |   |   +- sun.nio.ch.KQueueArrayWrapper.poll(KQueueArrayWrapper.java:159)
 |   |   +- sun.nio.ch.KQueueSelectorImpl.doSelect(KQueueSelectorImpl.java:=
103)
 |   |   +- sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:87)
 |   |   +- sun.nio.ch.SelectorImpl.select(SelectorImpl.java:98)
 |   |   +- sun.nio.ch.SelectorImpl.select(SelectorImpl.java:102)
 |   |   +- org.eclipse.jetty.io.SelectorManager$ManagedSelector.select(Sel=
ectorManager.java:459)
 |   |   +- org.eclipse.jetty.io.SelectorManager$ManagedSelector.run(Select=
orManager.java:435)
 |   |   +- org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThr=
eadPool.java:596)
 |   |   +- org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThre=
adPool.java:527)
 |   |   +- java.lang.Thread.run(Thread.java:722)
 |   +- 18 qtp1062680061-18-selector-3 RUNNABLE
 |   |   +- sun.nio.ch.KQueueArrayWrapper.kevent0(Native Method)
 |   |   +- sun.nio.ch.KQueueArrayWrapper.poll(KQueueArrayWrapper.java:159)
 |   |   +- sun.nio.ch.KQueueSelectorImpl.doSelect(KQueueSelectorImpl.java:=
103)
 |   |   +- sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:87)
 |   |   +- sun.nio.ch.SelectorImpl.select(SelectorImpl.java:98)
 |   |   +- sun.nio.ch.SelectorImpl.select(SelectorImpl.java:102)
 |   |   +- org.eclipse.jetty.io.SelectorManager$ManagedSelector.select(Sel=
ectorManager.java:459)
 |   |   +- org.eclipse.jetty.io.SelectorManager$ManagedSelector.run(Select=
orManager.java:435)
 |   |   +- org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThr=
eadPool.java:596)
 |   |   +- org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThre=
adPool.java:527)
 |   |   +- java.lang.Thread.run(Thread.java:722)
 |   +- 19 qtp1062680061-19-selector-4 RUNNABLE
 |   |   +- sun.nio.ch.KQueueArrayWrapper.kevent0(Native Method)
 |   |   +- sun.nio.ch.KQueueArrayWrapper.poll(KQueueArrayWrapper.java:159)
 |   |   +- sun.nio.ch.KQueueSelectorImpl.doSelect(KQueueSelectorImpl.java:=
103)
 |   |   +- sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:87)
 |   |   +- sun.nio.ch.SelectorImpl.select(SelectorImpl.java:98)
 |   |   +- sun.nio.ch.SelectorImpl.select(SelectorImpl.java:102)
 |   |   +- org.eclipse.jetty.io.SelectorManager$ManagedSelector.select(Sel=
ectorManager.java:459)
 |   |   +- org.eclipse.jetty.io.SelectorManager$ManagedSelector.run(Select=
orManager.java:435)
 |   |   +- org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThr=
eadPool.java:596)
 |   |   +- org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThre=
adPool.java:527)
 |   |   +- java.lang.Thread.run(Thread.java:722)
 |   +- 20 qtp1062680061-20-selector-7 RUNNABLE
 |   |   +- sun.nio.ch.KQueueArrayWrapper.kevent0(Native Method)
 |   |   +- sun.nio.ch.KQueueArrayWrapper.poll(KQueueArrayWrapper.java:159)
 |   |   +- sun.nio.ch.KQueueSelectorImpl.doSelect(KQueueSelectorImpl.java:=
103)
 |   |   +- sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:87)
 |   |   +- sun.nio.ch.SelectorImpl.select(SelectorImpl.java:98)
 |   |   +- sun.nio.ch.SelectorImpl.select(SelectorImpl.java:102)
 |   |   +- org.eclipse.jetty.io.SelectorManager$ManagedSelector.select(Sel=
ectorManager.java:459)
 |   |   +- org.eclipse.jetty.io.SelectorManager$ManagedSelector.run(Select=
orManager.java:435)
 |   |   +- org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThr=
eadPool.java:596)
 |   |   +- org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThre=
adPool.java:527)
 |   |   +- java.lang.Thread.run(Thread.java:722)
 |   +- 21 qtp1062680061-21-acceptor-1-ServerConnector@3d0f282{HTTP/1.1}{0.=
0.0.0:9090} RUNNABLE
 |   |   +- sun.nio.ch.ServerSocketChannelImpl.accept0(Native Method)
 |   |   +- sun.nio.ch.ServerSocketChannelImpl.accept(ServerSocketChannelIm=
pl.java:226)
 |   |   +- org.eclipse.jetty.server.ServerConnector.accept(ServerConnector=
.java:284)
 |   |   +- org.eclipse.jetty.server.AbstractConnector$Acceptor.run(Abstrac=
tConnector.java:460)
 |   |   +- org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThr=
eadPool.java:596)
 |   |   +- org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThre=
adPool.java:527)
 |   |   +- java.lang.Thread.run(Thread.java:722)
 |   +- 49 qtp1062680061-49-acceptor-2-ServerConnector@3d0f282{HTTP/1.1}{0.=
0.0.0:9090} BLOCKED
 |   |   +- sun.nio.ch.ServerSocketChannelImpl.accept(ServerSocketChannelIm=
pl.java:210)
 |   |   +- org.eclipse.jetty.server.ServerConnector.accept(ServerConnector=
.java:284)
 |   |   +- org.eclipse.jetty.server.AbstractConnector$Acceptor.run(Abstrac=
tConnector.java:460)
 |   |   +- org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThr=
eadPool.java:596)
 |   |   +- org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThre=
adPool.java:527)
 |   |   +- java.lang.Thread.run(Thread.java:722)
 |   +- 50 qtp1062680061-50-acceptor-3-ServerConnector@3d0f282{HTTP/1.1}{0.=
0.0.0:9090} BLOCKED
 |   |   +- sun.nio.ch.ServerSocketChannelImpl.accept(ServerSocketChannelIm=
pl.java:210)
 |   |   +- org.eclipse.jetty.server.ServerConnector.accept(ServerConnector=
.java:284)
 |   |   +- org.eclipse.jetty.server.AbstractConnector$Acceptor.run(Abstrac=
tConnector.java:460)
 |   |   +- org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThr=
eadPool.java:596)
 |   |   +- org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThre=
adPool.java:527)
 |   |   +- java.lang.Thread.run(Thread.java:722)
 |   +- 52 qtp1062680061-52 TIMED_WAITING IDLE
 +=3D org.eclipse.jetty.util.thread.ScheduledExecutorScheduler@725f5 - STAR=
TED
 +=3D org.eclipse.jetty.server.handler.HandlerCollection@58b37561 - STARTED
 |   +=3D org.eclipse.jetty.server.handler.ContextHandlerCollection@64c6e29=
0 - STARTED
 |   |   +~ org.eclipse.jetty.jmx.MBeanContainer@644a5ddd
 |   |   +=3D o.e.j.w.WebAppContext@7ea88b1c{/async-rest,[file:/private/var=
/folders/br/kbs2g3753c54wmv4j31pnw5r0000gn/T/jetty-0.0.0.0-9090-async-rest.=
war-_async-rest-any-/webapp/, jar:file:/private/var/folders/br/kbs2g3753c54=
wmv4j31pnw5r0000gn/T/jetty-0.0.0.0-9090-async-rest.war-_async-rest-any-/web=
app/WEB-INF/lib/example-async-rest-jar-9.0.2.v20130417.jar!/META-INF/resour=
ces/],AVAILABLE}{/async-rest.war} - STARTED
 |   |   |   +=3D org.eclipse.jetty.server.session.SessionHandler@6dfb8d2e =
- STARTED
 |   |   |   |   +=3D org.eclipse.jetty.server.session.HashSessionManager@6=
cb83869 - STARTED
 |   |   |   |   +=3D org.eclipse.jetty.security.ConstraintSecurityHandler@=
2848c90e - STARTED
 |   |   |   |   |   +- org.eclipse.jetty.security.DefaultAuthenticatorFact=
ory@52b12fef
 |   |   |   |   |   +=3D org.eclipse.jetty.servlet.ServletHandler@46bac287=
 - STARTED
 |   |   |   |   |   |   +=3D default@5c13d641=3D=3Dorg.eclipse.jetty.servl=
et.DefaultServlet,0,true - STARTED
 |   |   |   |   |   |   |   +- maxCacheSize=3D256000000
 |   |   |   |   |   |   |   +- etags=3Dtrue
 |   |   |   |   |   |   |   +- dirAllowed=3Dtrue
 |   |   |   |   |   |   |   +- gzip=3Dtrue
 |   |   |   |   |   |   |   +- maxCachedFileSize=3D200000000
 |   |   |   |   |   |   |   +- redirectWelcome=3Dfalse
 |   |   |   |   |   |   |   +- acceptRanges=3Dtrue
 |   |   |   |   |   |   |   +- welcomeServlets=3Dfalse
 |   |   |   |   |   |   |   +- aliases=3Dfalse
 |   |   |   |   |   |   |   +- useFileMappedBuffer=3Dtrue
 |   |   |   |   |   |   |   +- maxCachedFiles=3D2048
 |   |   |   |   |   |   +- [/]=3D&gt;default
 |   |   |   |   |   |   +=3D jsp@19c47=3D=3Dorg.apache.jasper.servlet.JspS=
ervlet,0,true - STARTED
 |   |   |   |   |   |   |   +- logVerbosityLevel=3DDEBUG
 |   |   |   |   |   |   |   +- fork=3Dfalse
 |   |   |   |   |   |   |   +- com.sun.appserv.jsp.classpath=3D/home/user/=
jetty-distribution-{VERSION}/lib/jetty-xml-{VERSION}.jar:/home/user/jetty-d=
istribution-{VERSION}/lib/servlet-api-3.0.jar:/home/user/jetty-distribution=
-{VERSION}/lib/jetty-http-{VERSION}.jar:/home/user/jetty-distribution-{VERS=
ION}/lib/jetty-continuation-{VERSION}.jar:/home/user/jetty-distribution-{VE=
RSION}/lib/jetty-server-{VERSION}.jar:/home/user/jetty-distribution-{VERSIO=
N}/lib/jetty-security-{VERSION}.jar:/home/user/jetty-distribution-{VERSION}=
/lib/jetty-servlet-{VERSION}.jar:/home/user/jetty-distribution-{VERSION}/li=
b/jetty-webapp-{VERSION}.jar:/home/user/jetty-distribution-{VERSION}/lib/je=
tty-deploy-{VERSION}.jar:/home/user/jetty-distribution-{VERSION}/lib/jetty-=
client-{VERSION}.jar:/home/user/jetty-distribution-{VERSION}/lib/jetty-jmx-=
{VERSION}.jar:/home/user/jetty-distribution-{VERSION}/lib/jsp/com.sun.el-2.=
2.0.v201303151357.jar:/home/user/jetty-distribution-{VERSION}/lib/jsp/javax=
.el-2.2.0.v201303151357.jar:/home/user/jetty-distribution-{VERSION}/lib/jsp=
/javax.servlet.jsp.jstl-1.2.0.v201105211821.jar:/home/user/jetty-distributi=
on-{VERSION}/lib/jsp/javax.servlet.jsp-2.2.0.v201112011158.jar:/home/user/j=
etty-distribution-{VERSION}/lib/jsp/org.apache.jasper.glassfish-2.2.2.v2011=
12011158.jar:/home/user/jetty-distribution-{VERSION}/lib/jsp/org.apache.tag=
libs.standard.glassfish-1.2.0.v201112081803.jar:/home/user/jetty-distributi=
on-{VERSION}/lib/jsp/org.eclipse.jdt.core-3.8.2.v20130121.jar:/home/user/je=
tty-distribution-{VERSION}/resources:/home/user/jetty-distribution-{VERSION=
}/lib/websocket/websocket-api-9.0.2.v20130417.jar:/home/user/jetty-distribu=
tion-{VERSION}/lib/websocket/websocket-common-9.0.2.v20130417.jar:/home/use=
r/jetty-distribution-{VERSION}/lib/websocket/websocket-server-9.0.2.v201304=
17.jar:/home/user/jetty-distribution-{VERSION}/lib/websocket/websocket-serv=
let-9.0.2.v20130417.jar:/home/user/jetty-distribution-{VERSION}/lib/jetty-u=
til-{VERSION}.jar:/home/user/jetty-distribution-{VERSION}/lib/jetty-io-{VER=
SION}.jar:/home/user/jetty-distribution-{VERSION}/start.jar:/Library/Java/J=
avaVirtualMachines/jdk1.7.0_17.jdk/Contents/Home/jre/lib/ext/dnsns.jar:/Lib=
rary/Java/JavaVirtualMachines/jdk1.7.0_17.jdk/Contents/Home/jre/lib/ext/loc=
aledata.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_17.jdk/Contents/Home=
/jre/lib/ext/sunec.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_17.jdk/Co=
ntents/Home/jre/lib/ext/sunjce_provider.jar:/Library/Java/JavaVirtualMachin=
es/jdk1.7.0_17.jdk/Contents/Home/jre/lib/ext/sunpkcs11.jar:/Library/Java/Ja=
vaVirtualMachines/jdk1.7.0_17.jdk/Contents/Home/jre/lib/ext/zipfs.jar:/opt/=
local/lib/libsvnjavahl-1.0.dylib:/System/Library/Java/Extensions/AppleScrip=
tEngine.jar:/System/Library/Java/Extensions/dns_sd.jar:/System/Library/Java=
/Extensions/j3daudio.jar:/System/Library/Java/Extensions/j3dcore.jar:/Syste=
m/Library/Java/Extensions/j3dutils.jar:/System/Library/Java/Extensions/jai_=
codec.jar:/System/Library/Java/Extensions/jai_core.jar:/System/Library/Java=
/Extensions/libAppleScriptEngine.jnilib:/System/Library/Java/Extensions/lib=
J3D.jnilib:/System/Library/Java/Extensions/libJ3DAudio.jnilib:/System/Libra=
ry/Java/Extensions/libJ3DUtils.jnilib:/System/Library/Java/Extensions/libml=
ib_jai.jnilib:/System/Library/Java/Extensions/libQTJNative.jnilib:/System/L=
ibrary/Java/Extensions/mlibwrapper_jai.jar:/System/Library/Java/Extensions/=
MRJToolkit.jar:/System/Library/Java/Extensions/QTJava.zip:/System/Library/J=
ava/Extensions/vecmath.jar:/usr/lib/java/libjdns_sd.jnilib
 |   |   |   |   |   |   |   +- scratchdir=3D/private/var/folders/br/kbs2g3=
753c54wmv4j31pnw5r0000gn/T/jetty-0.0.0.0-9090-async-rest.war-_async-rest-an=
y-/jsp
 |   |   |   |   |   |   |   +- xpoweredBy=3Dfalse
 |   |   |   |   |   |   +- [*.jsp, *.jspf, *.jspx, *.xsp, *.JSP, *.JSPF, *=
.JSPX, *.XSP]=3D&gt;jsp
 |   |   |   |   |   |   +=3D SerialRestServlet@461411d=3D=3Dorg.eclipse.je=
tty.example.asyncrest.SerialRestServlet,-1,false - STARTED
 |   |   |   |   |   |   +- [/testSerial]=3D&gt;SerialRestServlet
 |   |   |   |   |   |   +=3D AsyncRestServlet@73eb9bd5=3D=3Dorg.eclipse.je=
tty.example.asyncrest.AsyncRestServlet,-1,false - STARTED
 |   |   |   |   |   |   +- [/testAsync]=3D&gt;AsyncRestServlet
 |   |   |   |   |   |   +~ org.eclipse.jetty.jmx.MBeanContainer@644a5ddd
 |   |   |   |   |   +~ org.eclipse.jetty.jmx.MBeanContainer@644a5ddd
 |   |   |   |   |   +=3D HashLoginService[Test Realm] - STARTED
 |   |   |   |   |   +- org.eclipse.jetty.security.DefaultIdentityService@d=
2539a6
 |   |   |   |   |   +- org.eclipse.jetty.security.authentication.BasicAuth=
enticator@7b239469
 |   |   |   |   |   |
 |   |   |   |   |   +&gt; HashLoginService[Test Realm] - STARTED
 |   |   |   |   |   +&gt; org.eclipse.jetty.security.DefaultIdentityServic=
e@d2539a6
 |   |   |   |   |   +&gt; org.eclipse.jetty.security.authentication.BasicA=
uthenticator@7b239469
 |   |   |   |   |   +&gt; []
 |   |   |   |   |   +&gt; /=3D{TRACE=3D{RoleInfo,F,C[]}}
 |   |   |   |   +~ org.eclipse.jetty.jmx.MBeanContainer@644a5ddd
 |   |   |   +=3D org.eclipse.jetty.servlet.ErrorPageErrorHandler@3c121009 =
- STARTED
 |   |   |   |   +~ org.eclipse.jetty.jmx.MBeanContainer@644a5ddd
 |   |   |   +~ org.eclipse.jetty.jmx.MBeanContainer@644a5ddd
 |   |   |   |
 |   |   |   +&gt; WebAppClassLoader=3DAsync REST Webservice Example@52934e=
a0
 |   |   |   |   +- file:/private/var/folders/br/kbs2g3753c54wmv4j31pnw5r00=
00gn/T/jetty-0.0.0.0-9090-async-rest.war-_async-rest-any-/webapp/WEB-INF/cl=
asses/
 |   |   |   |   +- file:/private/var/folders/br/kbs2g3753c54wmv4j31pnw5r00=
00gn/T/jetty-0.0.0.0-9090-async-rest.war-_async-rest-any-/webapp/WEB-INF/li=
b/example-async-rest-jar-9.0.2.v20130417.jar
 |   |   |   |   +- file:/private/var/folders/br/kbs2g3753c54wmv4j31pnw5r00=
00gn/T/jetty-0.0.0.0-9090-async-rest.war-_async-rest-any-/webapp/WEB-INF/li=
b/jetty-client-{VERSION}.jar
 |   |   |   |   +- file:/private/var/folders/br/kbs2g3753c54wmv4j31pnw5r00=
00gn/T/jetty-0.0.0.0-9090-async-rest.war-_async-rest-any-/webapp/WEB-INF/li=
b/jetty-http-{VERSION}.jar
 |   |   |   |   +- file:/private/var/folders/br/kbs2g3753c54wmv4j31pnw5r00=
00gn/T/jetty-0.0.0.0-9090-async-rest.war-_async-rest-any-/webapp/WEB-INF/li=
b/jetty-io-{VERSION}.jar
 |   |   |   |   +- file:/private/var/folders/br/kbs2g3753c54wmv4j31pnw5r00=
00gn/T/jetty-0.0.0.0-9090-async-rest.war-_async-rest-any-/webapp/WEB-INF/li=
b/jetty-util-{VERSION}.jar
 |   |   |   |   +- file:/private/var/folders/br/kbs2g3753c54wmv4j31pnw5r00=
00gn/T/jetty-0.0.0.0-9090-async-rest.war-_async-rest-any-/webapp/WEB-INF/li=
b/jetty-util-ajax-{VERSION}.jar
 |   |   |   |   +- startJarLoader@7194b34a
 |   |   |   |       +- file:/home/user/jetty-distribution-{VERSION}/lib/je=
tty-xml-{VERSION}.jar
 |   |   |   |       +- file:/home/user/jetty-distribution-{VERSION}/lib/se=
rvlet-api-3.0.jar
 |   |   |   |       +- file:/home/user/jetty-distribution-{VERSION}/lib/je=
tty-http-{VERSION}.jar
 |   |   |   |       +- file:/home/user/jetty-distribution-{VERSION}/lib/je=
tty-continuation-{VERSION}.jar
 |   |   |   |       +- file:/home/user/jetty-distribution-{VERSION}/lib/je=
tty-server-{VERSION}.jar
 |   |   |   |       +- file:/home/user/jetty-distribution-{VERSION}/lib/je=
tty-security-{VERSION}.jar
 |   |   |   |       +- file:/home/user/jetty-distribution-{VERSION}/lib/je=
tty-servlet-{VERSION}.jar
 |   |   |   |       +- file:/home/user/jetty-distribution-{VERSION}/lib/je=
tty-webapp-{VERSION}.jar
 |   |   |   |       +- file:/home/user/jetty-distribution-{VERSION}/lib/je=
tty-deploy-{VERSION}.jar
 |   |   |   |       +- file:/home/user/jetty-distribution-{VERSION}/lib/je=
tty-client-{VERSION}.jar
 |   |   |   |       +- file:/home/user/jetty-distribution-{VERSION}/lib/je=
tty-jmx-{VERSION}.jar
 |   |   |   |       +- file:/home/user/jetty-distribution-{VERSION}/lib/js=
p/com.sun.el-2.2.0.v201303151357.jar
 |   |   |   |       +- file:/home/user/jetty-distribution-{VERSION}/lib/js=
p/javax.el-2.2.0.v201303151357.jar
 |   |   |   |       +- file:/home/user/jetty-distribution-{VERSION}/lib/js=
p/javax.servlet.jsp.jstl-1.2.0.v201105211821.jar
 |   |   |   |       +- file:/home/user/jetty-distribution-{VERSION}/lib/js=
p/javax.servlet.jsp-2.2.0.v201112011158.jar
 |   |   |   |       +- file:/home/user/jetty-distribution-{VERSION}/lib/js=
p/org.apache.jasper.glassfish-2.2.2.v201112011158.jar
 |   |   |   |       +- file:/home/user/jetty-distribution-{VERSION}/lib/js=
p/org.apache.taglibs.standard.glassfish-1.2.0.v201112081803.jar
 |   |   |   |       +- file:/home/user/jetty-distribution-{VERSION}/lib/js=
p/org.eclipse.jdt.core-3.8.2.v20130121.jar
 |   |   |   |       +- file:/home/user/jetty-distribution-{VERSION}/resour=
ces/
 |   |   |   |       +- file:/home/user/jetty-distribution-{VERSION}/lib/we=
bsocket/websocket-api-9.0.2.v20130417.jar
 |   |   |   |       +- file:/home/user/jetty-distribution-{VERSION}/lib/we=
bsocket/websocket-common-9.0.2.v20130417.jar
 |   |   |   |       +- file:/home/user/jetty-distribution-{VERSION}/lib/we=
bsocket/websocket-server-9.0.2.v20130417.jar
 |   |   |   |       +- file:/home/user/jetty-distribution-{VERSION}/lib/we=
bsocket/websocket-servlet-9.0.2.v20130417.jar
 |   |   |   |       +- file:/home/user/jetty-distribution-{VERSION}/lib/je=
tty-util-{VERSION}.jar
 |   |   |   |       +- file:/home/user/jetty-distribution-{VERSION}/lib/je=
tty-io-{VERSION}.jar
 |   |   |   |       +- sun.misc.Launcher$AppClassLoader@19d1b44b
 |   |   |   |           +- file:/home/user/jetty-distribution-{VERSION}/st=
art.jar
 |   |   |   |           +- sun.misc.Launcher$ExtClassLoader@1693b52b
 |   |   |   +&gt; javax.servlet.context.tempdir=3D/private/var/folders/br/=
kbs2g3753c54wmv4j31pnw5r0000gn/T/jetty-0.0.0.0-9090-async-rest.war-_async-r=
est-any-
 |   |   |   +&gt; org.apache.catalina.jsp_classpath=3D/private/var/folders=
/br/kbs2g3753c54wmv4j31pnw5r0000gn/T/jetty-0.0.0.0-9090-async-rest.war-_asy=
nc-rest-any-/webapp/WEB-INF/classes:/private/var/folders/br/kbs2g3753c54wmv=
4j31pnw5r0000gn/T/jetty-0.0.0.0-9090-async-rest.war-_async-rest-any-/webapp=
/WEB-INF/lib/example-async-rest-jar-9.0.2.v20130417.jar:/private/var/folder=
s/br/kbs2g3753c54wmv4j31pnw5r0000gn/T/jetty-0.0.0.0-9090-async-rest.war-_as=
ync-rest-any-/webapp/WEB-INF/lib/jetty-client-{VERSION}.jar:/private/var/fo=
lders/br/kbs2g3753c54wmv4j31pnw5r0000gn/T/jetty-0.0.0.0-9090-async-rest.war=
-_async-rest-any-/webapp/WEB-INF/lib/jetty-http-{VERSION}.jar:/private/var/=
folders/br/kbs2g3753c54wmv4j31pnw5r0000gn/T/jetty-0.0.0.0-9090-async-rest.w=
ar-_async-rest-any-/webapp/WEB-INF/lib/jetty-io-{VERSION}.jar:/private/var/=
folders/br/kbs2g3753c54wmv4j31pnw5r0000gn/T/jetty-0.0.0.0-9090-async-rest.w=
ar-_async-rest-any-/webapp/WEB-INF/lib/jetty-util-{VERSION}.jar:/private/va=
r/folders/br/kbs2g3753c54wmv4j31pnw5r0000gn/T/jetty-0.0.0.0-9090-async-rest=
.war-_async-rest-any-/webapp/WEB-INF/lib/jetty-util-ajax-{VERSION}.jar
 |   |   |   +&gt; org.eclipse.jetty.server.webapp.ContainerIncludeJarPatte=
rn=3D.*/servlet-api-[^/]*\.jar$
 |   |   |   +&gt; com.sun.jsp.taglibraryCache=3D{}
 |   |   |   +&gt; com.sun.jsp.tagFileJarUrlsCache=3D{}
 |   |   +=3D o.e.j.s.h.MovedContextHandler@5e0c8d24{/oldContextPath,null,A=
VAILABLE} - STARTED
 |   |   |   +=3D org.eclipse.jetty.server.handler.MovedContextHandler$Redi=
rector@2a4200d3 - STARTED
 |   |   |   |   +~ org.eclipse.jetty.jmx.MBeanContainer@644a5ddd
 |   |   |   +~ org.eclipse.jetty.jmx.MBeanContainer@644a5ddd
 |   |   |   |
 |   |   |   +&gt; No ClassLoader
 |   |   |   +&gt; org.eclipse.jetty.server.webapp.ContainerIncludeJarPatte=
rn=3D.*/servlet-api-[^/]*\.jar$
 |   |   +=3D o.e.j.w.WebAppContext@6f01ba6f{/,file:/home/user/jetty-distri=
bution-{VERSION}/webapps/ROOT/,AVAILABLE}{/ROOT} - STARTED
 |   |   |   +=3D org.eclipse.jetty.server.session.SessionHandler@5a770658 =
- STARTED
 |   |   |   |   +=3D org.eclipse.jetty.server.session.HashSessionManager@7=
46a95ae - STARTED
 |   |   |   |   +=3D org.eclipse.jetty.security.ConstraintSecurityHandler@=
1890e38 - STARTED
 |   |   |   |   |   +- org.eclipse.jetty.security.DefaultAuthenticatorFact=
ory@6242c657
 |   |   |   |   |   +=3D org.eclipse.jetty.servlet.ServletHandler@debac27 =
- STARTED
 |   |   |   |   |   |   +=3D default@5c13d641=3D=3Dorg.eclipse.jetty.servl=
et.DefaultServlet,0,true - STARTED
 |   |   |   |   |   |   |   +- maxCacheSize=3D256000000
 |   |   |   |   |   |   |   +- etags=3Dtrue
 |   |   |   |   |   |   |   +- dirAllowed=3Dtrue
 |   |   |   |   |   |   |   +- gzip=3Dtrue
 |   |   |   |   |   |   |   +- maxCachedFileSize=3D200000000
 |   |   |   |   |   |   |   +- redirectWelcome=3Dfalse
 |   |   |   |   |   |   |   +- acceptRanges=3Dtrue
 |   |   |   |   |   |   |   +- welcomeServlets=3Dfalse
 |   |   |   |   |   |   |   +- aliases=3Dfalse
 |   |   |   |   |   |   |   +- useFileMappedBuffer=3Dtrue
 |   |   |   |   |   |   |   +- maxCachedFiles=3D2048
 |   |   |   |   |   |   +- [/]=3D&gt;default
 |   |   |   |   |   |   +=3D jsp@19c47=3D=3Dorg.apache.jasper.servlet.JspS=
ervlet,0,true - STARTED
 |   |   |   |   |   |   |   +- logVerbosityLevel=3DDEBUG
 |   |   |   |   |   |   |   +- fork=3Dfalse
 |   |   |   |   |   |   |   +- com.sun.appserv.jsp.classpath=3D/home/user/=
jetty-distribution-{VERSION}/lib/jetty-xml-{VERSION}.jar:/home/user/jetty-d=
istribution-{VERSION}/lib/servlet-api-3.0.jar:/home/user/jetty-distribution=
-{VERSION}/lib/jetty-http-{VERSION}.jar:/home/user/jetty-distribution-{VERS=
ION}/lib/jetty-continuation-{VERSION}.jar:/home/user/jetty-distribution-{VE=
RSION}/lib/jetty-server-{VERSION}.jar:/home/user/jetty-distribution-{VERSIO=
N}/lib/jetty-security-{VERSION}.jar:/home/user/jetty-distribution-{VERSION}=
/lib/jetty-servlet-{VERSION}.jar:/home/user/jetty-distribution-{VERSION}/li=
b/jetty-webapp-{VERSION}.jar:/home/user/jetty-distribution-{VERSION}/lib/je=
tty-deploy-{VERSION}.jar:/home/user/jetty-distribution-{VERSION}/lib/jetty-=
client-{VERSION}.jar:/home/user/jetty-distribution-{VERSION}/lib/jetty-jmx-=
{VERSION}.jar:/home/user/jetty-distribution-{VERSION}/lib/jsp/com.sun.el-2.=
2.0.v201303151357.jar:/home/user/jetty-distribution-{VERSION}/lib/jsp/javax=
.el-2.2.0.v201303151357.jar:/home/user/jetty-distribution-{VERSION}/lib/jsp=
/javax.servlet.jsp.jstl-1.2.0.v201105211821.jar:/home/user/jetty-distributi=
on-{VERSION}/lib/jsp/javax.servlet.jsp-2.2.0.v201112011158.jar:/home/user/j=
etty-distribution-{VERSION}/lib/jsp/org.apache.jasper.glassfish-2.2.2.v2011=
12011158.jar:/home/user/jetty-distribution-{VERSION}/lib/jsp/org.apache.tag=
libs.standard.glassfish-1.2.0.v201112081803.jar:/home/user/jetty-distributi=
on-{VERSION}/lib/jsp/org.eclipse.jdt.core-3.8.2.v20130121.jar:/home/user/je=
tty-distribution-{VERSION}/resources:/home/user/jetty-distribution-{VERSION=
}/lib/websocket/websocket-api-9.0.2.v20130417.jar:/home/user/jetty-distribu=
tion-{VERSION}/lib/websocket/websocket-common-9.0.2.v20130417.jar:/home/use=
r/jetty-distribution-{VERSION}/lib/websocket/websocket-server-9.0.2.v201304=
17.jar:/home/user/jetty-distribution-{VERSION}/lib/websocket/websocket-serv=
let-9.0.2.v20130417.jar:/home/user/jetty-distribution-{VERSION}/lib/jetty-u=
til-{VERSION}.jar:/home/user/jetty-distribution-{VERSION}/lib/jetty-io-{VER=
SION}.jar:/home/user/jetty-distribution-{VERSION}/start.jar:/Library/Java/J=
avaVirtualMachines/jdk1.7.0_17.jdk/Contents/Home/jre/lib/ext/dnsns.jar:/Lib=
rary/Java/JavaVirtualMachines/jdk1.7.0_17.jdk/Contents/Home/jre/lib/ext/loc=
aledata.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_17.jdk/Contents/Home=
/jre/lib/ext/sunec.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_17.jdk/Co=
ntents/Home/jre/lib/ext/sunjce_provider.jar:/Library/Java/JavaVirtualMachin=
es/jdk1.7.0_17.jdk/Contents/Home/jre/lib/ext/sunpkcs11.jar:/Library/Java/Ja=
vaVirtualMachines/jdk1.7.0_17.jdk/Contents/Home/jre/lib/ext/zipfs.jar:/opt/=
local/lib/libsvnjavahl-1.0.dylib:/System/Library/Java/Extensions/AppleScrip=
tEngine.jar:/System/Library/Java/Extensions/dns_sd.jar:/System/Library/Java=
/Extensions/j3daudio.jar:/System/Library/Java/Extensions/j3dcore.jar:/Syste=
m/Library/Java/Extensions/j3dutils.jar:/System/Library/Java/Extensions/jai_=
codec.jar:/System/Library/Java/Extensions/jai_core.jar:/System/Library/Java=
/Extensions/libAppleScriptEngine.jnilib:/System/Library/Java/Extensions/lib=
J3D.jnilib:/System/Library/Java/Extensions/libJ3DAudio.jnilib:/System/Libra=
ry/Java/Extensions/libJ3DUtils.jnilib:/System/Library/Java/Extensions/libml=
ib_jai.jnilib:/System/Library/Java/Extensions/libQTJNative.jnilib:/System/L=
ibrary/Java/Extensions/mlibwrapper_jai.jar:/System/Library/Java/Extensions/=
MRJToolkit.jar:/System/Library/Java/Extensions/QTJava.zip:/System/Library/J=
ava/Extensions/vecmath.jar:/usr/lib/java/libjdns_sd.jnilib
 |   |   |   |   |   |   |   +- scratchdir=3D/private/var/folders/br/kbs2g3=
753c54wmv4j31pnw5r0000gn/T/jetty-0.0.0.0-9090-ROOT-_-any-/jsp
 |   |   |   |   |   |   |   +- xpoweredBy=3Dfalse
 |   |   |   |   |   |   +- [*.jsp, *.jspf, *.jspx, *.xsp, *.JSP, *.JSPF, *=
.JSPX, *.XSP]=3D&gt;jsp
 |   |   |   |   |   |   +~ org.eclipse.jetty.jmx.MBeanContainer@644a5ddd
 |   |   |   |   |   +~ org.eclipse.jetty.jmx.MBeanContainer@644a5ddd
 |   |   |   |   |   +~ HashLoginService[Test Realm] - STARTED
 |   |   |   |   |   +- org.eclipse.jetty.security.DefaultIdentityService@d=
2539a6
 |   |   |   |   |   +- org.eclipse.jetty.security.authentication.BasicAuth=
enticator@6b733b94
 |   |   |   |   |   |
 |   |   |   |   |   +&gt; HashLoginService[Test Realm] - STARTED
 |   |   |   |   |   +&gt; org.eclipse.jetty.security.DefaultIdentityServic=
e@d2539a6
 |   |   |   |   |   +&gt; org.eclipse.jetty.security.authentication.BasicA=
uthenticator@6b733b94
 |   |   |   |   |   +&gt; []
 |   |   |   |   |   +&gt; /=3D{TRACE=3D{RoleInfo,F,C[]}}
 |   |   |   |   +~ org.eclipse.jetty.jmx.MBeanContainer@644a5ddd
 |   |   |   +=3D org.eclipse.jetty.servlet.ErrorPageErrorHandler@3c41a9ce =
- STARTED
 |   |   |   |   +~ org.eclipse.jetty.jmx.MBeanContainer@644a5ddd
 |   |   |   +~ org.eclipse.jetty.jmx.MBeanContainer@644a5ddd
 |   |   |   |
 |   |   |   +&gt; WebAppClassLoader=3DROOT@7af33249
 |   |   |   |   +- startJarLoader@7194b34a
 |   |   |   |       +- file:/home/user/jetty-distribution-{VERSION}/lib/je=
tty-xml-{VERSION}.jar
 |   |   |   |       +- file:/home/user/jetty-distribution-{VERSION}/lib/se=
rvlet-api-3.0.jar
 |   |   |   |       +- file:/home/user/jetty-distribution-{VERSION}/lib/je=
tty-http-{VERSION}.jar
 |   |   |   |       +- file:/home/user/jetty-distribution-{VERSION}/lib/je=
tty-continuation-{VERSION}.jar
 |   |   |   |       +- file:/home/user/jetty-distribution-{VERSION}/lib/je=
tty-server-{VERSION}.jar
 |   |   |   |       +- file:/home/user/jetty-distribution-{VERSION}/lib/je=
tty-security-{VERSION}.jar
 |   |   |   |       +- file:/home/user/jetty-distribution-{VERSION}/lib/je=
tty-servlet-{VERSION}.jar
 |   |   |   |       +- file:/home/user/jetty-distribution-{VERSION}/lib/je=
tty-webapp-{VERSION}.jar
 |   |   |   |       +- file:/home/user/jetty-distribution-{VERSION}/lib/je=
tty-deploy-{VERSION}.jar
 |   |   |   |       +- file:/home/user/jetty-distribution-{VERSION}/lib/je=
tty-client-{VERSION}.jar
 |   |   |   |       +- file:/home/user/jetty-distribution-{VERSION}/lib/je=
tty-jmx-{VERSION}.jar
 |   |   |   |       +- file:/home/user/jetty-distribution-{VERSION}/lib/js=
p/com.sun.el-2.2.0.v201303151357.jar
 |   |   |   |       +- file:/home/user/jetty-distribution-{VERSION}/lib/js=
p/javax.el-2.2.0.v201303151357.jar
 |   |   |   |       +- file:/home/user/jetty-distribution-{VERSION}/lib/js=
p/javax.servlet.jsp.jstl-1.2.0.v201105211821.jar
 |   |   |   |       +- file:/home/user/jetty-distribution-{VERSION}/lib/js=
p/javax.servlet.jsp-2.2.0.v201112011158.jar
 |   |   |   |       +- file:/home/user/jetty-distribution-{VERSION}/lib/js=
p/org.apache.jasper.glassfish-2.2.2.v201112011158.jar
 |   |   |   |       +- file:/home/user/jetty-distribution-{VERSION}/lib/js=
p/org.apache.taglibs.standard.glassfish-1.2.0.v201112081803.jar
 |   |   |   |       +- file:/home/user/jetty-distribution-{VERSION}/lib/js=
p/org.eclipse.jdt.core-3.8.2.v20130121.jar
 |   |   |   |       +- file:/home/user/jetty-distribution-{VERSION}/resour=
ces/
 |   |   |   |       +- file:/home/user/jetty-distribution-{VERSION}/lib/we=
bsocket/websocket-api-9.0.2.v20130417.jar
 |   |   |   |       +- file:/home/user/jetty-distribution-{VERSION}/lib/we=
bsocket/websocket-common-9.0.2.v20130417.jar
 |   |   |   |       +- file:/home/user/jetty-distribution-{VERSION}/lib/we=
bsocket/websocket-server-9.0.2.v20130417.jar
 |   |   |   |       +- file:/home/user/jetty-distribution-{VERSION}/lib/we=
bsocket/websocket-servlet-9.0.2.v20130417.jar
 |   |   |   |       +- file:/home/user/jetty-distribution-{VERSION}/lib/je=
tty-util-{VERSION}.jar
 |   |   |   |       +- file:/home/user/jetty-distribution-{VERSION}/lib/je=
tty-io-{VERSION}.jar
 |   |   |   |       +- sun.misc.Launcher$AppClassLoader@19d1b44b
 |   |   |   |           +- file:/home/user/jetty-distribution-{VERSION}/st=
art.jar
 |   |   |   |           +- sun.misc.Launcher$ExtClassLoader@1693b52b
 |   |   |   +&gt; javax.servlet.context.tempdir=3D/private/var/folders/br/=
kbs2g3753c54wmv4j31pnw5r0000gn/T/jetty-0.0.0.0-9090-ROOT-_-any-
 |   |   |   +&gt; org.eclipse.jetty.server.webapp.ContainerIncludeJarPatte=
rn=3D.*/servlet-api-[^/]*\.jar$
 |   |   |   +&gt; com.sun.jsp.taglibraryCache=3D{}
 |   |   |   +&gt; com.sun.jsp.tagFileJarUrlsCache=3D{}
 |   |   +=3D o.e.j.s.h.ContextHandler@7b2dffdf{/javadoc,file:/home/user/je=
tty-distribution-{VERSION}/javadoc,AVAILABLE} - STARTED
 |   |   |   +=3D org.eclipse.jetty.server.handler.ResourceHandler@8f9c8a7 =
- STARTED
 |   |   |   |   +~ org.eclipse.jetty.jmx.MBeanContainer@644a5ddd
 |   |   |   +~ org.eclipse.jetty.jmx.MBeanContainer@644a5ddd
 |   |   |   |
 |   |   |   +&gt; No ClassLoader
 |   |   |   +&gt; org.eclipse.jetty.server.webapp.ContainerIncludeJarPatte=
rn=3D.*/servlet-api-[^/]*\.jar$
 |   |   +=3D o.e.j.w.WebAppContext@716d9094{/test,file:/private/var/folder=
s/br/kbs2g3753c54wmv4j31pnw5r0000gn/T/jetty-0.0.0.0-9090-test.war-_test-any=
-/webapp/,AVAILABLE}{/test.war} - STARTED
 |   |   |   +=3D org.eclipse.jetty.server.session.SessionHandler@336abd81 =
- STARTED
 |   |   |   |   +=3D org.eclipse.jetty.server.session.HashSessionManager@1=
246f8d0 - STARTED
 |   |   |   |   +=3D org.eclipse.jetty.security.ConstraintSecurityHandler@=
7179290f - STARTED
 |   |   |   |   |   +- org.eclipse.jetty.security.DefaultAuthenticatorFact=
ory@17d41d12
 |   |   |   |   |   +=3D org.eclipse.jetty.servlet.ServletHandler@5034037e=
 - STARTED
 |   |   |   |   |   |   +=3D default@5c13d641=3D=3Dorg.eclipse.jetty.servl=
et.DefaultServlet,0,true - STARTED
 |   |   |   |   |   |   |   +- maxCacheSize=3D256000000
 |   |   |   |   |   |   |   +- etags=3Dtrue
 |   |   |   |   |   |   |   +- dirAllowed=3Dtrue
 |   |   |   |   |   |   |   +- gzip=3Dtrue
 |   |   |   |   |   |   |   +- maxCachedFileSize=3D200000000
 |   |   |   |   |   |   |   +- redirectWelcome=3Dfalse
 |   |   |   |   |   |   |   +- acceptRanges=3Dtrue
 |   |   |   |   |   |   |   +- welcomeServlets=3Dfalse
 |   |   |   |   |   |   |   +- aliases=3Dfalse
 |   |   |   |   |   |   |   +- useFileMappedBuffer=3Dtrue
 |   |   |   |   |   |   |   +- maxCachedFiles=3D2048
 |   |   |   |   |   |   +- [/]=3D&gt;default
 |   |   |   |   |   |   +=3D jsp@19c47=3D=3Dorg.apache.jasper.servlet.JspS=
ervlet,0,true - STARTED
 |   |   |   |   |   |   |   +- logVerbosityLevel=3DDEBUG
 |   |   |   |   |   |   |   +- fork=3Dfalse
 |   |   |   |   |   |   |   +- com.sun.appserv.jsp.classpath=3D/home/user/=
jetty-distribution-{VERSION}/lib/jetty-xml-{VERSION}.jar:/home/user/jetty-d=
istribution-{VERSION}/lib/servlet-api-3.0.jar:/home/user/jetty-distribution=
-{VERSION}/lib/jetty-http-{VERSION}.jar:/home/user/jetty-distribution-{VERS=
ION}/lib/jetty-continuation-{VERSION}.jar:/home/user/jetty-distribution-{VE=
RSION}/lib/jetty-server-{VERSION}.jar:/home/user/jetty-distribution-{VERSIO=
N}/lib/jetty-security-{VERSION}.jar:/home/user/jetty-distribution-{VERSION}=
/lib/jetty-servlet-{VERSION}.jar:/home/user/jetty-distribution-{VERSION}/li=
b/jetty-webapp-{VERSION}.jar:/home/user/jetty-distribution-{VERSION}/lib/je=
tty-deploy-{VERSION}.jar:/home/user/jetty-distribution-{VERSION}/lib/jetty-=
client-{VERSION}.jar:/home/user/jetty-distribution-{VERSION}/lib/jetty-jmx-=
{VERSION}.jar:/home/user/jetty-distribution-{VERSION}/lib/jsp/com.sun.el-2.=
2.0.v201303151357.jar:/home/user/jetty-distribution-{VERSION}/lib/jsp/javax=
.el-2.2.0.v201303151357.jar:/home/user/jetty-distribution-{VERSION}/lib/jsp=
/javax.servlet.jsp.jstl-1.2.0.v201105211821.jar:/home/user/jetty-distributi=
on-{VERSION}/lib/jsp/javax.servlet.jsp-2.2.0.v201112011158.jar:/home/user/j=
etty-distribution-{VERSION}/lib/jsp/org.apache.jasper.glassfish-2.2.2.v2011=
12011158.jar:/home/user/jetty-distribution-{VERSION}/lib/jsp/org.apache.tag=
libs.standard.glassfish-1.2.0.v201112081803.jar:/home/user/jetty-distributi=
on-{VERSION}/lib/jsp/org.eclipse.jdt.core-3.8.2.v20130121.jar:/home/user/je=
tty-distribution-{VERSION}/resources:/home/user/jetty-distribution-{VERSION=
}/lib/websocket/websocket-api-9.0.2.v20130417.jar:/home/user/jetty-distribu=
tion-{VERSION}/lib/websocket/websocket-common-9.0.2.v20130417.jar:/home/use=
r/jetty-distribution-{VERSION}/lib/websocket/websocket-server-9.0.2.v201304=
17.jar:/home/user/jetty-distribution-{VERSION}/lib/websocket/websocket-serv=
let-9.0.2.v20130417.jar:/home/user/jetty-distribution-{VERSION}/lib/jetty-u=
til-{VERSION}.jar:/home/user/jetty-distribution-{VERSION}/lib/jetty-io-{VER=
SION}.jar:/home/user/jetty-distribution-{VERSION}/start.jar:/Library/Java/J=
avaVirtualMachines/jdk1.7.0_17.jdk/Contents/Home/jre/lib/ext/dnsns.jar:/Lib=
rary/Java/JavaVirtualMachines/jdk1.7.0_17.jdk/Contents/Home/jre/lib/ext/loc=
aledata.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_17.jdk/Contents/Home=
/jre/lib/ext/sunec.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_17.jdk/Co=
ntents/Home/jre/lib/ext/sunjce_provider.jar:/Library/Java/JavaVirtualMachin=
es/jdk1.7.0_17.jdk/Contents/Home/jre/lib/ext/sunpkcs11.jar:/Library/Java/Ja=
vaVirtualMachines/jdk1.7.0_17.jdk/Contents/Home/jre/lib/ext/zipfs.jar:/opt/=
local/lib/libsvnjavahl-1.0.dylib:/System/Library/Java/Extensions/AppleScrip=
tEngine.jar:/System/Library/Java/Extensions/dns_sd.jar:/System/Library/Java=
/Extensions/j3daudio.jar:/System/Library/Java/Extensions/j3dcore.jar:/Syste=
m/Library/Java/Extensions/j3dutils.jar:/System/Library/Java/Extensions/jai_=
codec.jar:/System/Library/Java/Extensions/jai_core.jar:/System/Library/Java=
/Extensions/libAppleScriptEngine.jnilib:/System/Library/Java/Extensions/lib=
J3D.jnilib:/System/Library/Java/Extensions/libJ3DAudio.jnilib:/System/Libra=
ry/Java/Extensions/libJ3DUtils.jnilib:/System/Library/Java/Extensions/libml=
ib_jai.jnilib:/System/Library/Java/Extensions/libQTJNative.jnilib:/System/L=
ibrary/Java/Extensions/mlibwrapper_jai.jar:/System/Library/Java/Extensions/=
MRJToolkit.jar:/System/Library/Java/Extensions/QTJava.zip:/System/Library/J=
ava/Extensions/vecmath.jar:/usr/lib/java/libjdns_sd.jnilib
 |   |   |   |   |   |   |   +- scratchdir=3D/private/var/folders/br/kbs2g3=
753c54wmv4j31pnw5r0000gn/T/jetty-0.0.0.0-9090-test.war-_test-any-/jsp
 |   |   |   |   |   |   |   +- xpoweredBy=3Dfalse
 |   |   |   |   |   |   +- [*.jsp, *.jspf, *.jspx, *.xsp, *.JSP, *.JSPF, *=
.JSPX, *.XSP]=3D&gt;jsp
 |   |   |   |   |   |   +=3D QoSFilter - STARTED
 |   |   |   |   |   |   |   +- managedAttr=3Dtrue
 |   |   |   |   |   |   |   +- maxRequests=3D10000
 |   |   |   |   |   |   +- [/*]/[]=3D=3D0=3D&gt;QoSFilter
 |   |   |   |   |   |   +=3D MultiPart - STARTED
 |   |   |   |   |   |   |   +- deleteFiles=3Dtrue
 |   |   |   |   |   |   +- [/dump/*]/[]=3D=3D0=3D&gt;MultiPart
 |   |   |   |   |   |   +=3D GzipFilter - STARTED
 |   |   |   |   |   |   |   +- bufferSize=3D8192
 |   |   |   |   |   |   |   +- excludedAgents=3DMSIE 6.0
 |   |   |   |   |   |   |   +- userAgent=3D(?:Mozilla[^\(]*\(compatible;\s=
*+([^;]*);.*)|(?:.*?([^\s]+/[^\s]+).*)
 |   |   |   |   |   |   |   +- mimeTypes=3Dtext/plain,application/xml
 |   |   |   |   |   |   |   +- uncheckedPrintWriter=3Dtrue
 |   |   |   |   |   |   |   +- cacheSize=3D1024
 |   |   |   |   |   |   |   +- minGzipSize=3D2048
 |   |   |   |   |   |   +- [/dump/gzip/*, *.txt]/[]=3D=3D0=3D&gt;GzipFilte=
r
 |   |   |   |   |   |   +=3D Login@462ff49=3D=3Dcom.acme.LoginServlet,1,tr=
ue - STARTED
 |   |   |   |   |   |   +- [/login/*]=3D&gt;Login
 |   |   |   |   |   |   +=3D Hello@42628b2=3D=3Dcom.acme.HelloWorld,1,true=
 - STARTED
 |   |   |   |   |   |   +- [/hello/*]=3D&gt;Hello
 |   |   |   |   |   |   +=3D Dump@20ae14=3D=3Dcom.acme.Dump,1,true - START=
ED
 |   |   |   |   |   |   |   +- servlet-override-example=3Da servlet value
 |   |   |   |   |   |   +- [/dump/*, *.dump]=3D&gt;Dump
 |   |   |   |   |   |   +=3D Session@d9891a76=3D=3Dcom.acme.SessionDump,5,=
true - STARTED
 |   |   |   |   |   |   +- [/session/*]=3D&gt;Session
 |   |   |   |   |   |   +=3D Cookie@78a4f684=3D=3Dcom.acme.CookieDump,1,tr=
ue - STARTED
 |   |   |   |   |   |   +- [/cookie/*]=3D&gt;Cookie
 |   |   |   |   |   |   +=3D Dispatch@14d3a89a=3D=3Dcom.acme.DispatchServl=
et,1,true - STARTED
 |   |   |   |   |   |   +- [/dispatch/*]=3D&gt;Dispatch
 |   |   |   |   |   |   +=3D CGI@10465=3D=3Dorg.eclipse.jetty.servlets.CGI=
,1,true - STARTED
 |   |   |   |   |   |   +- [/cgi-bin/*]=3D&gt;CGI
 |   |   |   |   |   |   +=3D Chat@200778=3D=3Dcom.acme.ChatServlet,1,true =
- STARTED
 |   |   |   |   |   |   +- [/chat/*]=3D&gt;Chat
 |   |   |   |   |   |   +=3D WSChat@99274454=3D=3Dcom.acme.WebSocketChatSe=
rvlet,1,true - STARTED
 |   |   |   |   |   |   +- [/ws/*]=3D&gt;WSChat
 |   |   |   |   |   |   +=3D Rewrite@a4dac96c=3D=3Dcom.acme.RewriteServlet=
,-1,false - STARTED
 |   |   |   |   |   |   +- [/rewritten/*, /redirected/*]=3D&gt;Rewrite
 |   |   |   |   |   |   +=3D SecureMode@d45951da=3D=3Dcom.acme.SecureModeS=
ervlet,1,true - STARTED
 |   |   |   |   |   |   +- [/secureMode/*]=3D&gt;SecureMode
 |   |   |   |   |   |   +=3D foo.jsp@d7583f1f=3D=3Dorg.apache.jasper.servl=
et.JspServlet,-1,false - STARTED
 |   |   |   |   |   |   +- [/jsp/foo/]=3D&gt;foo.jsp
 |   |   |   |   |   |   +- [*.more]=3D&gt;Dump
 |   |   |   |   |   |   +~ org.eclipse.jetty.jmx.MBeanContainer@644a5ddd
 |   |   |   |   |   |   +=3D RegoTest@dafcd1ad=3D=3Dcom.acme.RegTest,-1,fa=
lse - STARTED
 |   |   |   |   |   |   +- [/rego/*]=3D&gt;RegoTest
 |   |   |   |   |   |   +=3D RegoTest2@849d6425=3D=3Dcom.acme.RegTest,-1,f=
alse - STARTED
 |   |   |   |   |   |   +- [/rego2/*]=3D&gt;RegoTest2
 |   |   |   |   |   |   +=3D TestFilter - STARTED
 |   |   |   |   |   |   |   +- remote=3Dfalse
 |   |   |   |   |   |   +- [/*]/[]=3D=3D31=3D&gt;TestFilter
 |   |   |   |   |   +=3D HashLoginService[Test Realm] - STARTED
 |   |   |   |   |   +- org.eclipse.jetty.security.authentication.FormAuthe=
nticator@1fa291f2
 |   |   |   |   |   +~ org.eclipse.jetty.jmx.MBeanContainer@644a5ddd
 |   |   |   |   |   +- org.eclipse.jetty.security.DefaultIdentityService@4=
1917d6d
 |   |   |   |   |   |
 |   |   |   |   |   +&gt; HashLoginService[Test Realm] - STARTED
 |   |   |   |   |   +&gt; org.eclipse.jetty.security.DefaultIdentityServic=
e@41917d6d
 |   |   |   |   |   +&gt; org.eclipse.jetty.security.authentication.FormAu=
thenticator@1fa291f2
 |   |   |   |   |   +&gt; [server-administrator, *, admin, user]
 |   |   |   |   |   +&gt; /rego2/*=3D{*=3D{RoleInfo,C[server-administrator=
]}}
 |   |   |   |   |   +&gt; *.htm=3D{*=3D{RoleInfo,C[server-administrator, *=
, admin, user]}}
 |   |   |   |   |   +&gt; /dump/auth/ssl/*=3D{*=3D{RoleInfo[]}}
 |   |   |   |   |   +&gt; /dump/auth/noaccess/*=3D{*=3D{RoleInfo,F,C[]}}
 |   |   |   |   |   +&gt; /auth/*=3D{*=3D{RoleInfo,F,C[]}}
 |   |   |   |   |   +&gt; /dump/auth/admin/*=3D{*=3D{RoleInfo,C[admin]}}
 |   |   |   |   |   +&gt; /dump/auth/relax/*=3D{GET=3D{RoleInfo[]}, HEAD=
=3D{RoleInfo[]}}
 |   |   |   |   |   +&gt; /rego/*=3D{*=3D{RoleInfo,C[admin]}}
 |   |   |   |   |   +&gt; /dump/auth/*=3D{*=3D{RoleInfo,C[server-administr=
ator, *, admin, user]}}
 |   |   |   |   |   +&gt; /=3D{TRACE=3D{RoleInfo,F,C[]}}
 |   |   |   |   |   +&gt; /auth/relax.txt=3D{GET=3D{RoleInfo[]}, HEAD=3D{R=
oleInfo[]}}
 |   |   |   |   |   +&gt; /auth2/*=3D{*=3D{RoleInfo,C[server-administrator=
, *, admin, user]}}
 |   |   |   |   +~ org.eclipse.jetty.jmx.MBeanContainer@644a5ddd
 |   |   |   +=3D org.eclipse.jetty.servlet.ErrorPageErrorHandler@24bf7a86 =
- STARTED
 |   |   |   |   +~ org.eclipse.jetty.jmx.MBeanContainer@644a5ddd
 |   |   |   +~ org.eclipse.jetty.jmx.MBeanContainer@644a5ddd
 |   |   |   +- org.eclipse.jetty.servlets.QoSFilter@6df3d1f5
 |   |   |   |
 |   |   |   +&gt; WebAppClassLoader=3DTest WebApp@3e2f3adb
 |   |   |   |   +- file:/private/var/folders/br/kbs2g3753c54wmv4j31pnw5r00=
00gn/T/jetty-0.0.0.0-9090-test.war-_test-any-/webapp/WEB-INF/classes/
 |   |   |   |   +- file:/private/var/folders/br/kbs2g3753c54wmv4j31pnw5r00=
00gn/T/jetty-0.0.0.0-9090-test.war-_test-any-/webapp/WEB-INF/lib/jetty-cont=
inuation-{VERSION}.jar
 |   |   |   |   +- file:/private/var/folders/br/kbs2g3753c54wmv4j31pnw5r00=
00gn/T/jetty-0.0.0.0-9090-test.war-_test-any-/webapp/WEB-INF/lib/jetty-http=
-{VERSION}.jar
 |   |   |   |   +- file:/private/var/folders/br/kbs2g3753c54wmv4j31pnw5r00=
00gn/T/jetty-0.0.0.0-9090-test.war-_test-any-/webapp/WEB-INF/lib/jetty-io-{=
VERSION}.jar
 |   |   |   |   +- file:/private/var/folders/br/kbs2g3753c54wmv4j31pnw5r00=
00gn/T/jetty-0.0.0.0-9090-test.war-_test-any-/webapp/WEB-INF/lib/jetty-serv=
lets-{VERSION}.jar
 |   |   |   |   +- file:/private/var/folders/br/kbs2g3753c54wmv4j31pnw5r00=
00gn/T/jetty-0.0.0.0-9090-test.war-_test-any-/webapp/WEB-INF/lib/jetty-util=
-{VERSION}.jar
 |   |   |   |   +- file:/private/var/folders/br/kbs2g3753c54wmv4j31pnw5r00=
00gn/T/jetty-0.0.0.0-9090-test.war-_test-any-/webapp/WEB-INF/lib/websocket-=
api-9.0.2.v20130417.jar
 |   |   |   |   +- file:/private/var/folders/br/kbs2g3753c54wmv4j31pnw5r00=
00gn/T/jetty-0.0.0.0-9090-test.war-_test-any-/webapp/WEB-INF/lib/websocket-=
servlet-9.0.2.v20130417.jar
 |   |   |   |   +- startJarLoader@7194b34a
 |   |   |   |       +- file:/home/user/jetty-distribution-{VERSION}/lib/je=
tty-xml-{VERSION}.jar
 |   |   |   |       +- file:/home/user/jetty-distribution-{VERSION}/lib/se=
rvlet-api-3.0.jar
 |   |   |   |       +- file:/home/user/jetty-distribution-{VERSION}/lib/je=
tty-http-{VERSION}.jar
 |   |   |   |       +- file:/home/user/jetty-distribution-{VERSION}/lib/je=
tty-continuation-{VERSION}.jar
 |   |   |   |       +- file:/home/user/jetty-distribution-{VERSION}/lib/je=
tty-server-{VERSION}.jar
 |   |   |   |       +- file:/home/user/jetty-distribution-{VERSION}/lib/je=
tty-security-{VERSION}.jar
 |   |   |   |       +- file:/home/user/jetty-distribution-{VERSION}/lib/je=
tty-servlet-{VERSION}.jar
 |   |   |   |       +- file:/home/user/jetty-distribution-{VERSION}/lib/je=
tty-webapp-{VERSION}.jar
 |   |   |   |       +- file:/home/user/jetty-distribution-{VERSION}/lib/je=
tty-deploy-{VERSION}.jar
 |   |   |   |       +- file:/home/user/jetty-distribution-{VERSION}/lib/je=
tty-client-{VERSION}.jar
 |   |   |   |       +- file:/home/user/jetty-distribution-{VERSION}/lib/je=
tty-jmx-{VERSION}.jar
 |   |   |   |       +- file:/home/user/jetty-distribution-{VERSION}/lib/js=
p/com.sun.el-2.2.0.v201303151357.jar
 |   |   |   |       +- file:/home/user/jetty-distribution-{VERSION}/lib/js=
p/javax.el-2.2.0.v201303151357.jar
 |   |   |   |       +- file:/home/user/jetty-distribution-{VERSION}/lib/js=
p/javax.servlet.jsp.jstl-1.2.0.v201105211821.jar
 |   |   |   |       +- file:/home/user/jetty-distribution-{VERSION}/lib/js=
p/javax.servlet.jsp-2.2.0.v201112011158.jar
 |   |   |   |       +- file:/home/user/jetty-distribution-{VERSION}/lib/js=
p/org.apache.jasper.glassfish-2.2.2.v201112011158.jar
 |   |   |   |       +- file:/home/user/jetty-distribution-{VERSION}/lib/js=
p/org.apache.taglibs.standard.glassfish-1.2.0.v201112081803.jar
 |   |   |   |       +- file:/home/user/jetty-distribution-{VERSION}/lib/js=
p/org.eclipse.jdt.core-3.8.2.v20130121.jar
 |   |   |   |       +- file:/home/user/jetty-distribution-{VERSION}/resour=
ces/
 |   |   |   |       +- file:/home/user/jetty-distribution-{VERSION}/lib/we=
bsocket/websocket-api-9.0.2.v20130417.jar
 |   |   |   |       +- file:/home/user/jetty-distribution-{VERSION}/lib/we=
bsocket/websocket-common-9.0.2.v20130417.jar
 |   |   |   |       +- file:/home/user/jetty-distribution-{VERSION}/lib/we=
bsocket/websocket-server-9.0.2.v20130417.jar
 |   |   |   |       +- file:/home/user/jetty-distribution-{VERSION}/lib/we=
bsocket/websocket-servlet-9.0.2.v20130417.jar
 |   |   |   |       +- file:/home/user/jetty-distribution-{VERSION}/lib/je=
tty-util-{VERSION}.jar
 |   |   |   |       +- file:/home/user/jetty-distribution-{VERSION}/lib/je=
tty-io-{VERSION}.jar
 |   |   |   |       +- sun.misc.Launcher$AppClassLoader@19d1b44b
 |   |   |   |           +- file:/home/user/jetty-distribution-{VERSION}/st=
art.jar
 |   |   |   |           +- sun.misc.Launcher$ExtClassLoader@1693b52b
 |   |   |   +&gt; org.eclipse.jetty.server.context.ManagedAttributes=3DQoS=
Filter,TransparentProxy.ThreadPool,TransparentProxy.HttpClient
 |   |   |   +&gt; context-override-example=3Da context value
 |   |   |   +&gt; javax.servlet.context.tempdir=3D/private/var/folders/br/=
kbs2g3753c54wmv4j31pnw5r0000gn/T/jetty-0.0.0.0-9090-test.war-_test-any-
 |   |   |   +&gt; org.apache.catalina.jsp_classpath=3D/private/var/folders=
/br/kbs2g3753c54wmv4j31pnw5r0000gn/T/jetty-0.0.0.0-9090-test.war-_test-any-=
/webapp/WEB-INF/classes:/private/var/folders/br/kbs2g3753c54wmv4j31pnw5r000=
0gn/T/jetty-0.0.0.0-9090-test.war-_test-any-/webapp/WEB-INF/lib/jetty-conti=
nuation-{VERSION}.jar:/private/var/folders/br/kbs2g3753c54wmv4j31pnw5r0000g=
n/T/jetty-0.0.0.0-9090-test.war-_test-any-/webapp/WEB-INF/lib/jetty-http-{V=
ERSION}.jar:/private/var/folders/br/kbs2g3753c54wmv4j31pnw5r0000gn/T/jetty-=
0.0.0.0-9090-test.war-_test-any-/webapp/WEB-INF/lib/jetty-io-{VERSION}.jar:=
/private/var/folders/br/kbs2g3753c54wmv4j31pnw5r0000gn/T/jetty-0.0.0.0-9090=
-test.war-_test-any-/webapp/WEB-INF/lib/jetty-servlets-{VERSION}.jar:/priva=
te/var/folders/br/kbs2g3753c54wmv4j31pnw5r0000gn/T/jetty-0.0.0.0-9090-test.=
war-_test-any-/webapp/WEB-INF/lib/jetty-util-{VERSION}.jar:/private/var/fol=
ders/br/kbs2g3753c54wmv4j31pnw5r0000gn/T/jetty-0.0.0.0-9090-test.war-_test-=
any-/webapp/WEB-INF/lib/websocket-api-9.0.2.v20130417.jar:/private/var/fold=
ers/br/kbs2g3753c54wmv4j31pnw5r0000gn/T/jetty-0.0.0.0-9090-test.war-_test-a=
ny-/webapp/WEB-INF/lib/websocket-servlet-9.0.2.v20130417.jar
 |   |   |   +&gt; org.eclipse.jetty.server.webapp.ContainerIncludeJarPatte=
rn=3D.*/servlet-api-[^/]*\.jar$
 |   |   |   +&gt; QoSFilter=3Dorg.eclipse.jetty.servlets.QoSFilter@6df3d1f=
5
 |   |   |   +&gt; com.sun.jsp.taglibraryCache=3D{}
 |   |   |   +&gt; com.sun.jsp.tagFileJarUrlsCache=3D{}
 |   |   +=3D o.e.j.w.WebAppContext@4ac92718{/proxy,file:/private/var/folde=
rs/br/kbs2g3753c54wmv4j31pnw5r0000gn/T/jetty-0.0.0.0-9090-xref-proxy.war-_x=
ref-proxy-any-/webapp/,AVAILABLE}{/xref-proxy.war} - STARTED
 |   |       +=3D org.eclipse.jetty.server.session.SessionHandler@5c25bf03 =
- STARTED
 |   |       |   +=3D org.eclipse.jetty.server.session.HashSessionManager@3=
3053093 - STARTED
 |   |       |   +=3D org.eclipse.jetty.security.ConstraintSecurityHandler@=
3bab0b5a - STARTED
 |   |       |   |   +- org.eclipse.jetty.security.DefaultAuthenticatorFact=
ory@11ad5296
 |   |       |   |   +=3D org.eclipse.jetty.servlet.ServletHandler@a08feeb =
- STARTED
 |   |       |   |   |   +=3D default@5c13d641=3D=3Dorg.eclipse.jetty.servl=
et.DefaultServlet,0,true - STARTED
 |   |       |   |   |   |   +- maxCacheSize=3D256000000
 |   |       |   |   |   |   +- etags=3Dtrue
 |   |       |   |   |   |   +- dirAllowed=3Dtrue
 |   |       |   |   |   |   +- gzip=3Dtrue
 |   |       |   |   |   |   +- maxCachedFileSize=3D200000000
 |   |       |   |   |   |   +- redirectWelcome=3Dfalse
 |   |       |   |   |   |   +- acceptRanges=3Dtrue
 |   |       |   |   |   |   +- welcomeServlets=3Dfalse
 |   |       |   |   |   |   +- aliases=3Dfalse
 |   |       |   |   |   |   +- useFileMappedBuffer=3Dtrue
 |   |       |   |   |   |   +- maxCachedFiles=3D2048
 |   |       |   |   |   +- [/]=3D&gt;default
 |   |       |   |   |   +=3D jsp@19c47=3D=3Dorg.apache.jasper.servlet.JspS=
ervlet,0,true - STARTED
 |   |       |   |   |   |   +- logVerbosityLevel=3DDEBUG
 |   |       |   |   |   |   +- fork=3Dfalse
 |   |       |   |   |   |   +- com.sun.appserv.jsp.classpath=3D/home/user/=
jetty-distribution-{VERSION}/lib/jetty-xml-{VERSION}.jar:/home/user/jetty-d=
istribution-{VERSION}/lib/servlet-api-3.0.jar:/home/user/jetty-distribution=
-{VERSION}/lib/jetty-http-{VERSION}.jar:/home/user/jetty-distribution-{VERS=
ION}/lib/jetty-continuation-{VERSION}.jar:/home/user/jetty-distribution-{VE=
RSION}/lib/jetty-server-{VERSION}.jar:/home/user/jetty-distribution-{VERSIO=
N}/lib/jetty-security-{VERSION}.jar:/home/user/jetty-distribution-{VERSION}=
/lib/jetty-servlet-{VERSION}.jar:/home/user/jetty-distribution-{VERSION}/li=
b/jetty-webapp-{VERSION}.jar:/home/user/jetty-distribution-{VERSION}/lib/je=
tty-deploy-{VERSION}.jar:/home/user/jetty-distribution-{VERSION}/lib/jetty-=
client-{VERSION}.jar:/home/user/jetty-distribution-{VERSION}/lib/jetty-jmx-=
{VERSION}.jar:/home/user/jetty-distribution-{VERSION}/lib/jsp/com.sun.el-2.=
2.0.v201303151357.jar:/home/user/jetty-distribution-{VERSION}/lib/jsp/javax=
.el-2.2.0.v201303151357.jar:/home/user/jetty-distribution-{VERSION}/lib/jsp=
/javax.servlet.jsp.jstl-1.2.0.v201105211821.jar:/home/user/jetty-distributi=
on-{VERSION}/lib/jsp/javax.servlet.jsp-2.2.0.v201112011158.jar:/home/user/j=
etty-distribution-{VERSION}/lib/jsp/org.apache.jasper.glassfish-2.2.2.v2011=
12011158.jar:/home/user/jetty-distribution-{VERSION}/lib/jsp/org.apache.tag=
libs.standard.glassfish-1.2.0.v201112081803.jar:/home/user/jetty-distributi=
on-{VERSION}/lib/jsp/org.eclipse.jdt.core-3.8.2.v20130121.jar:/home/user/je=
tty-distribution-{VERSION}/resources:/home/user/jetty-distribution-{VERSION=
}/lib/websocket/websocket-api-9.0.2.v20130417.jar:/home/user/jetty-distribu=
tion-{VERSION}/lib/websocket/websocket-common-9.0.2.v20130417.jar:/home/use=
r/jetty-distribution-{VERSION}/lib/websocket/websocket-server-9.0.2.v201304=
17.jar:/home/user/jetty-distribution-{VERSION}/lib/websocket/websocket-serv=
let-9.0.2.v20130417.jar:/home/user/jetty-distribution-{VERSION}/lib/jetty-u=
til-{VERSION}.jar:/home/user/jetty-distribution-{VERSION}/lib/jetty-io-{VER=
SION}.jar:/home/user/jetty-distribution-{VERSION}/start.jar:/Library/Java/J=
avaVirtualMachines/jdk1.7.0_17.jdk/Contents/Home/jre/lib/ext/dnsns.jar:/Lib=
rary/Java/JavaVirtualMachines/jdk1.7.0_17.jdk/Contents/Home/jre/lib/ext/loc=
aledata.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_17.jdk/Contents/Home=
/jre/lib/ext/sunec.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_17.jdk/Co=
ntents/Home/jre/lib/ext/sunjce_provider.jar:/Library/Java/JavaVirtualMachin=
es/jdk1.7.0_17.jdk/Contents/Home/jre/lib/ext/sunpkcs11.jar:/Library/Java/Ja=
vaVirtualMachines/jdk1.7.0_17.jdk/Contents/Home/jre/lib/ext/zipfs.jar:/opt/=
local/lib/libsvnjavahl-1.0.dylib:/System/Library/Java/Extensions/AppleScrip=
tEngine.jar:/System/Library/Java/Extensions/dns_sd.jar:/System/Library/Java=
/Extensions/j3daudio.jar:/System/Library/Java/Extensions/j3dcore.jar:/Syste=
m/Library/Java/Extensions/j3dutils.jar:/System/Library/Java/Extensions/jai_=
codec.jar:/System/Library/Java/Extensions/jai_core.jar:/System/Library/Java=
/Extensions/libAppleScriptEngine.jnilib:/System/Library/Java/Extensions/lib=
J3D.jnilib:/System/Library/Java/Extensions/libJ3DAudio.jnilib:/System/Libra=
ry/Java/Extensions/libJ3DUtils.jnilib:/System/Library/Java/Extensions/libml=
ib_jai.jnilib:/System/Library/Java/Extensions/libQTJNative.jnilib:/System/L=
ibrary/Java/Extensions/mlibwrapper_jai.jar:/System/Library/Java/Extensions/=
MRJToolkit.jar:/System/Library/Java/Extensions/QTJava.zip:/System/Library/J=
ava/Extensions/vecmath.jar:/usr/lib/java/libjdns_sd.jnilib
 |   |       |   |   |   |   +- scratchdir=3D/private/var/folders/br/kbs2g3=
753c54wmv4j31pnw5r0000gn/T/jetty-0.0.0.0-9090-xref-proxy.war-_xref-proxy-an=
y-/jsp
 |   |       |   |   |   |   +- xpoweredBy=3Dfalse
 |   |       |   |   |   +- [*.jsp, *.jspf, *.jspx, *.xsp, *.JSP, *.JSPF, *=
.JSPX, *.XSP]=3D&gt;jsp
 |   |       |   |   |   +=3D XrefTransparentProxy@b0222797=3D=3Dorg.eclips=
e.jetty.proxy.ProxyServlet$Transparent,1,true - STARTED
 |   |       |   |   |   |   +- proxyTo=3Dhttp://download.eclipse.org/jetty=
/stable-9
 |   |       |   |   |   |   +- hostHeader=3Ddownload.eclipse.org
 |   |       |   |   |   +- [/xref/*]=3D&gt;XrefTransparentProxy
 |   |       |   |   |   +=3D JavadocTransparentProxy@8ab9c012=3D=3Dorg.ecl=
ipse.jetty.proxy.ProxyServlet$Transparent,1,true - STARTED
 |   |       |   |   |   |   +- proxyTo=3Dhttp://download.eclipse.org/jetty=
/stable-9
 |   |       |   |   |   |   +- hostHeader=3Ddownload.eclipse.org
 |   |       |   |   |   +- [/apidocs/*]=3D&gt;JavadocTransparentProxy
 |   |       |   |   |   +~ org.eclipse.jetty.jmx.MBeanContainer@644a5ddd
 |   |       |   |   +~ org.eclipse.jetty.jmx.MBeanContainer@644a5ddd
 |   |       |   |   +~ HashLoginService[Test Realm] - STARTED
 |   |       |   |   +- org.eclipse.jetty.security.DefaultIdentityService@d=
2539a6
 |   |       |   |   +- org.eclipse.jetty.security.authentication.BasicAuth=
enticator@5497fb72
 |   |       |   |   |
 |   |       |   |   +&gt; HashLoginService[Test Realm] - STARTED
 |   |       |   |   +&gt; org.eclipse.jetty.security.DefaultIdentityServic=
e@d2539a6
 |   |       |   |   +&gt; org.eclipse.jetty.security.authentication.BasicA=
uthenticator@5497fb72
 |   |       |   |   +&gt; []
 |   |       |   |   +&gt; /=3D{TRACE=3D{RoleInfo,F,C[]}}
 |   |       |   +~ org.eclipse.jetty.jmx.MBeanContainer@644a5ddd
 |   |       +=3D org.eclipse.jetty.servlet.ErrorPageErrorHandler@321f8d38 =
- STARTED
 |   |       |   +~ org.eclipse.jetty.jmx.MBeanContainer@644a5ddd
 |   |       +~ org.eclipse.jetty.jmx.MBeanContainer@644a5ddd
 |   |       |
 |   |       +&gt; WebAppClassLoader=3DTransparent Proxy WebApp@3570713d
 |   |       |   +- file:/private/var/folders/br/kbs2g3753c54wmv4j31pnw5r00=
00gn/T/jetty-0.0.0.0-9090-xref-proxy.war-_xref-proxy-any-/webapp/WEB-INF/cl=
asses/
 |   |       |   +- file:/private/var/folders/br/kbs2g3753c54wmv4j31pnw5r00=
00gn/T/jetty-0.0.0.0-9090-xref-proxy.war-_xref-proxy-any-/webapp/WEB-INF/li=
b/jetty-client-{VERSION}.jar
 |   |       |   +- file:/private/var/folders/br/kbs2g3753c54wmv4j31pnw5r00=
00gn/T/jetty-0.0.0.0-9090-xref-proxy.war-_xref-proxy-any-/webapp/WEB-INF/li=
b/jetty-http-{VERSION}.jar
 |   |       |   +- file:/private/var/folders/br/kbs2g3753c54wmv4j31pnw5r00=
00gn/T/jetty-0.0.0.0-9090-xref-proxy.war-_xref-proxy-any-/webapp/WEB-INF/li=
b/jetty-io-{VERSION}.jar
 |   |       |   +- file:/private/var/folders/br/kbs2g3753c54wmv4j31pnw5r00=
00gn/T/jetty-0.0.0.0-9090-xref-proxy.war-_xref-proxy-any-/webapp/WEB-INF/li=
b/jetty-proxy-{VERSION}.jar
 |   |       |   +- file:/private/var/folders/br/kbs2g3753c54wmv4j31pnw5r00=
00gn/T/jetty-0.0.0.0-9090-xref-proxy.war-_xref-proxy-any-/webapp/WEB-INF/li=
b/jetty-util-{VERSION}.jar
 |   |       |   +- startJarLoader@7194b34a
 |   |       |       +- file:/home/user/jetty-distribution-{VERSION}/lib/je=
tty-xml-{VERSION}.jar
 |   |       |       +- file:/home/user/jetty-distribution-{VERSION}/lib/se=
rvlet-api-3.0.jar
 |   |       |       +- file:/home/user/jetty-distribution-{VERSION}/lib/je=
tty-http-{VERSION}.jar
 |   |       |       +- file:/home/user/jetty-distribution-{VERSION}/lib/je=
tty-continuation-{VERSION}.jar
 |   |       |       +- file:/home/user/jetty-distribution-{VERSION}/lib/je=
tty-server-{VERSION}.jar
 |   |       |       +- file:/home/user/jetty-distribution-{VERSION}/lib/je=
tty-security-{VERSION}.jar
 |   |       |       +- file:/home/user/jetty-distribution-{VERSION}/lib/je=
tty-servlet-{VERSION}.jar
 |   |       |       +- file:/home/user/jetty-distribution-{VERSION}/lib/je=
tty-webapp-{VERSION}.jar
 |   |       |       +- file:/home/user/jetty-distribution-{VERSION}/lib/je=
tty-deploy-{VERSION}.jar
 |   |       |       +- file:/home/user/jetty-distribution-{VERSION}/lib/je=
tty-client-{VERSION}.jar
 |   |       |       +- file:/home/user/jetty-distribution-{VERSION}/lib/je=
tty-jmx-{VERSION}.jar
 |   |       |       +- file:/home/user/jetty-distribution-{VERSION}/lib/js=
p/com.sun.el-2.2.0.v201303151357.jar
 |   |       |       +- file:/home/user/jetty-distribution-{VERSION}/lib/js=
p/javax.el-2.2.0.v201303151357.jar
 |   |       |       +- file:/home/user/jetty-distribution-{VERSION}/lib/js=
p/javax.servlet.jsp.jstl-1.2.0.v201105211821.jar
 |   |       |       +- file:/home/user/jetty-distribution-{VERSION}/lib/js=
p/javax.servlet.jsp-2.2.0.v201112011158.jar
 |   |       |       +- file:/home/user/jetty-distribution-{VERSION}/lib/js=
p/org.apache.jasper.glassfish-2.2.2.v201112011158.jar
 |   |       |       +- file:/home/user/jetty-distribution-{VERSION}/lib/js=
p/org.apache.taglibs.standard.glassfish-1.2.0.v201112081803.jar
 |   |       |       +- file:/home/user/jetty-distribution-{VERSION}/lib/js=
p/org.eclipse.jdt.core-3.8.2.v20130121.jar
 |   |       |       +- file:/home/user/jetty-distribution-{VERSION}/resour=
ces/
 |   |       |       +- file:/home/user/jetty-distribution-{VERSION}/lib/we=
bsocket/websocket-api-9.0.2.v20130417.jar
 |   |       |       +- file:/home/user/jetty-distribution-{VERSION}/lib/we=
bsocket/websocket-common-9.0.2.v20130417.jar
 |   |       |       +- file:/home/user/jetty-distribution-{VERSION}/lib/we=
bsocket/websocket-server-9.0.2.v20130417.jar
 |   |       |       +- file:/home/user/jetty-distribution-{VERSION}/lib/we=
bsocket/websocket-servlet-9.0.2.v20130417.jar
 |   |       |       +- file:/home/user/jetty-distribution-{VERSION}/lib/je=
tty-util-{VERSION}.jar
 |   |       |       +- file:/home/user/jetty-distribution-{VERSION}/lib/je=
tty-io-{VERSION}.jar
 |   |       |       +- sun.misc.Launcher$AppClassLoader@19d1b44b
 |   |       |           +- file:/home/user/jetty-distribution-{VERSION}/st=
art.jar
 |   |       |           +- sun.misc.Launcher$ExtClassLoader@1693b52b
 |   |       +&gt; javax.servlet.context.tempdir=3D/private/var/folders/br/=
kbs2g3753c54wmv4j31pnw5r0000gn/T/jetty-0.0.0.0-9090-xref-proxy.war-_xref-pr=
oxy-any-
 |   |       +&gt; org.apache.catalina.jsp_classpath=3D/private/var/folders=
/br/kbs2g3753c54wmv4j31pnw5r0000gn/T/jetty-0.0.0.0-9090-xref-proxy.war-_xre=
f-proxy-any-/webapp/WEB-INF/classes:/private/var/folders/br/kbs2g3753c54wmv=
4j31pnw5r0000gn/T/jetty-0.0.0.0-9090-xref-proxy.war-_xref-proxy-any-/webapp=
/WEB-INF/lib/jetty-client-{VERSION}.jar:/private/var/folders/br/kbs2g3753c5=
4wmv4j31pnw5r0000gn/T/jetty-0.0.0.0-9090-xref-proxy.war-_xref-proxy-any-/we=
bapp/WEB-INF/lib/jetty-http-{VERSION}.jar:/private/var/folders/br/kbs2g3753=
c54wmv4j31pnw5r0000gn/T/jetty-0.0.0.0-9090-xref-proxy.war-_xref-proxy-any-/=
webapp/WEB-INF/lib/jetty-io-{VERSION}.jar:/private/var/folders/br/kbs2g3753=
c54wmv4j31pnw5r0000gn/T/jetty-0.0.0.0-9090-xref-proxy.war-_xref-proxy-any-/=
webapp/WEB-INF/lib/jetty-proxy-{VERSION}.jar:/private/var/folders/br/kbs2g3=
753c54wmv4j31pnw5r0000gn/T/jetty-0.0.0.0-9090-xref-proxy.war-_xref-proxy-an=
y-/webapp/WEB-INF/lib/jetty-util-{VERSION}.jar
 |   |       +&gt; org.eclipse.jetty.server.webapp.ContainerIncludeJarPatte=
rn=3D.*/servlet-api-[^/]*\.jar$
 |   |       +&gt; JavadocTransparentProxy.HttpClient=3Dorg.eclipse.jetty.c=
lient.HttpClient@580f016d
 |   |       +&gt; XrefTransparentProxy.HttpClient=3Dorg.eclipse.jetty.clie=
nt.HttpClient@70c7e52b
 |   |       +&gt; com.sun.jsp.taglibraryCache=3D{}
 |   |       +&gt; com.sun.jsp.tagFileJarUrlsCache=3D{}
 |   +=3D org.eclipse.jetty.server.handler.DefaultHandler@4de4926a - STARTE=
D
 |   |   +~ org.eclipse.jetty.jmx.MBeanContainer@644a5ddd
 |   +=3D org.eclipse.jetty.server.handler.RequestLogHandler@3dc087a2 - STA=
RTED
 |   |   +=3D org.eclipse.jetty.server.AsyncNCSARequestLog@108a1cf6 - START=
ED
 |   |   +~ org.eclipse.jetty.jmx.MBeanContainer@644a5ddd
 |   +~ org.eclipse.jetty.jmx.MBeanContainer@644a5ddd
 +- org.eclipse.jetty.jmx.MBeanContainer@644a5ddd
 |   +- [/rego/*]=3D&gt;RegoTest=3Dorg.eclipse.jetty.servlet:context=3Dtest=
,type=3Dservletmapping,name=3DRegoTest,id=3D0
 |   +- org.eclipse.jetty.security.DefaultAuthenticatorFactory@17d41d12=3Do=
rg.eclipse.jetty.security:context=3Dtest,type=3Ddefaultauthenticatorfactory=
,id=3D0
 |   +- org.eclipse.jetty.server.session.HashSessionManager@1246f8d0=3Dorg.=
eclipse.jetty.server.session:context=3Dtest,type=3Dhashsessionmanager,id=3D=
0
 |   +- org.eclipse.jetty.security.ConstraintSecurityHandler@1890e38=3Dorg.=
eclipse.jetty.security:context=3DROOT,type=3Dconstraintsecurityhandler,id=
=3D0
 |   +- WSChat@99274454=3D=3Dcom.acme.WebSocketChatServlet,1,true=3Dorg.ecl=
ipse.jetty.servlet:context=3Dtest,type=3Dservletholder,name=3DWSChat,id=3D0
 |   +- org.eclipse.jetty.deploy.DeploymentManager@c8e4be2=3Dorg.eclipse.je=
tty.deploy:type=3Ddeploymentmanager,id=3D0
 |   +- org.eclipse.jetty.jmx.MBeanContainer@644a5ddd=3Dorg.eclipse.jetty.j=
mx:type=3Dmbeancontainer,id=3D0
 |   +- [/dump/gzip/*, *.txt]/[]=3D=3D0=3D&gt;GzipFilter=3Dorg.eclipse.jett=
y.servlet:context=3Dtest,type=3Dfiltermapping,name=3DGzipFilter,id=3D0
 |   +- Hello@42628b2=3D=3Dcom.acme.HelloWorld,1,true=3Dorg.eclipse.jetty.s=
ervlet:context=3Dtest,type=3Dservletholder,name=3DHello,id=3D0
 |   +- [/]=3D&gt;default=3Dorg.eclipse.jetty.servlet:context=3Dxref-proxy,=
type=3Dservletmapping,name=3Ddefault,id=3D0
 |   +- [/login/*]=3D&gt;Login=3Dorg.eclipse.jetty.servlet:context=3Dtest,t=
ype=3Dservletmapping,name=3DLogin,id=3D0
 |   +- org.eclipse.jetty.server.handler.DefaultHandler@4de4926a=3Dorg.ecli=
pse.jetty.server.handler:type=3Ddefaulthandler,id=3D0
 |   +- org.eclipse.jetty.server.session.SessionHandler@5c25bf03=3Dorg.ecli=
pse.jetty.server.session:context=3Dxref-proxy,type=3Dsessionhandler,id=3D0
 |   +- [/ws/*]=3D&gt;WSChat=3Dorg.eclipse.jetty.servlet:context=3Dtest,typ=
e=3Dservletmapping,name=3DWSChat,id=3D0
 |   +- o.e.j.w.WebAppContext@6f01ba6f{/,file:/home/user/jetty-distribution=
-{VERSION}/webapps/ROOT/,AVAILABLE}{/ROOT}=3Dorg.eclipse.jetty.webapp:conte=
xt=3DROOT,type=3Dwebappcontext,id=3D0
 |   +- o.e.j.w.WebAppContext@7ea88b1c{/async-rest,[file:/private/var/folde=
rs/br/kbs2g3753c54wmv4j31pnw5r0000gn/T/jetty-0.0.0.0-9090-async-rest.war-_a=
sync-rest-any-/webapp/, jar:file:/private/var/folders/br/kbs2g3753c54wmv4j3=
1pnw5r0000gn/T/jetty-0.0.0.0-9090-async-rest.war-_async-rest-any-/webapp/WE=
B-INF/lib/example-async-rest-jar-9.0.2.v20130417.jar!/META-INF/resources/],=
AVAILABLE}{/async-rest.war}=3Dorg.eclipse.jetty.webapp:context=3Dasync-rest=
,type=3Dwebappcontext,id=3D0
 |   +- ServerConnector@3d0f282{HTTP/1.1}{0.0.0.0:9090}=3Dorg.eclipse.jetty=
.server:context=3DHTTP/1.1@3d0f282,type=3Dserverconnector,id=3D0
 |   +- org.eclipse.jetty.security.DefaultAuthenticatorFactory@6242c657=3Do=
rg.eclipse.jetty.security:context=3DROOT,type=3Ddefaultauthenticatorfactory=
,id=3D0
 |   +- JavadocTransparentProxy@8ab9c012=3D=3Dorg.eclipse.jetty.proxy.Proxy=
Servlet$Transparent,1,true=3Dorg.eclipse.jetty.servlet:context=3Dxref-proxy=
,type=3Dservletholder,name=3DJavadocTransparentProxy,id=3D0
 |   +- [/dump/*, *.dump]=3D&gt;Dump=3Dorg.eclipse.jetty.servlet:context=3D=
test,type=3Dservletmapping,name=3DDump,id=3D0
 |   +- [/jsp/foo/]=3D&gt;foo.jsp=3Dorg.eclipse.jetty.servlet:context=3Dtes=
t,type=3Dservletmapping,name=3Dfoo.jsp,id=3D0
 |   +- org.eclipse.jetty.servlet.ServletHandler@46bac287=3Dorg.eclipse.jet=
ty.servlet:context=3Dasync-rest,type=3Dservlethandler,id=3D0
 |   +- GzipFilter=3Dorg.eclipse.jetty.servlet:context=3Dtest,type=3Dfilter=
holder,name=3DGzipFilter,id=3D0
 |   +- o.e.j.w.WebAppContext@4ac92718{/proxy,file:/private/var/folders/br/=
kbs2g3753c54wmv4j31pnw5r0000gn/T/jetty-0.0.0.0-9090-xref-proxy.war-_xref-pr=
oxy-any-/webapp/,AVAILABLE}{/xref-proxy.war}=3Dorg.eclipse.jetty.webapp:con=
text=3Dxref-proxy,type=3Dwebappcontext,id=3D0
 |   +- qtp1062680061{STARTED,10&lt;=3D13&lt;=3D200,i=3D1,q=3D0}=3Dorg.ecli=
pse.jetty.util.thread:type=3Dqueuedthreadpool,id=3D0
 |   +- org.eclipse.jetty.server.session.HashSessionManager@33053093=3Dorg.=
eclipse.jetty.server.session:context=3Dxref-proxy,type=3Dhashsessionmanager=
,id=3D0
 |   +- org.eclipse.jetty.security.DefaultAuthenticatorFactory@52b12fef=3Do=
rg.eclipse.jetty.security:context=3Dasync-rest,type=3Ddefaultauthenticatorf=
actory,id=3D0
 |   +- Login@462ff49=3D=3Dcom.acme.LoginServlet,1,true=3Dorg.eclipse.jetty=
.servlet:context=3Dtest,type=3Dservletholder,name=3DLogin,id=3D0
 |   +- org.eclipse.jetty.security.authentication.BasicAuthenticator@7b2394=
69=3Dorg.eclipse.jetty.security.authentication:context=3Dasync-rest,type=3D=
basicauthenticator,id=3D0
 |   +- MultiPart=3Dorg.eclipse.jetty.servlet:context=3Dtest,type=3Dfilterh=
older,name=3DMultiPart,id=3D0
 |   +- default@5c13d641=3D=3Dorg.eclipse.jetty.servlet.DefaultServlet,0,tr=
ue=3Dorg.eclipse.jetty.servlet:context=3Dxref-proxy,type=3Dservletholder,na=
me=3Ddefault,id=3D0
 |   +- default@5c13d641=3D=3Dorg.eclipse.jetty.servlet.DefaultServlet,0,tr=
ue=3Dorg.eclipse.jetty.servlet:context=3DROOT,type=3Dservletholder,name=3Dd=
efault,id=3D0
 |   +- default@5c13d641=3D=3Dorg.eclipse.jetty.servlet.DefaultServlet,0,tr=
ue=3Dorg.eclipse.jetty.servlet:context=3Dasync-rest,type=3Dservletholder,na=
me=3Ddefault,id=3D0
 |   +- default@5c13d641=3D=3Dorg.eclipse.jetty.servlet.DefaultServlet,0,tr=
ue=3Dorg.eclipse.jetty.servlet:context=3Dtest,type=3Dservletholder,name=3Dd=
efault,id=3D0
 |   +- org.eclipse.jetty.server.session.HashSessionManager@746a95ae=3Dorg.=
eclipse.jetty.server.session:context=3DROOT,type=3Dhashsessionmanager,id=3D=
0
 |   +- RegoTest2@849d6425=3D=3Dcom.acme.RegTest,-1,false=3Dorg.eclipse.jet=
ty.servlet:context=3Dtest,type=3Dservletholder,name=3DRegoTest2,id=3D0
 |   +- org.eclipse.jetty.server.ServerConnector$ServerConnectorManager@6f0=
ac4be=3Dorg.eclipse.jetty.server:context=3DHTTP/1.1@3d0f282,type=3Dserverco=
nnector$serverconnectormanager,id=3D0
 |   +- [/]=3D&gt;default=3Dorg.eclipse.jetty.servlet:context=3Dtest,type=
=3Dservletmapping,name=3Ddefault,id=3D0
 |   +- SecureMode@d45951da=3D=3Dcom.acme.SecureModeServlet,1,true=3Dorg.ec=
lipse.jetty.servlet:context=3Dtest,type=3Dservletholder,name=3DSecureMode,i=
d=3D0
 |   +- org.eclipse.jetty.security.authentication.BasicAuthenticator@6b733b=
94=3Dorg.eclipse.jetty.security.authentication:context=3DROOT,type=3Dbasica=
uthenticator,id=3D0
 |   +- org.eclipse.jetty.server.session.SessionHandler@6dfb8d2e=3Dorg.ecli=
pse.jetty.server.session:context=3Dasync-rest,type=3Dsessionhandler,id=3D0
 |   +- org.eclipse.jetty.security.DefaultIdentityService@41917d6d=3Dorg.ec=
lipse.jetty.security:context=3Dtest,type=3Ddefaultidentityservice,id=3D0
 |   +- jsp@19c47=3D=3Dorg.apache.jasper.servlet.JspServlet,0,true=3Dorg.ec=
lipse.jetty.servlet:context=3Dxref-proxy,type=3Dservletholder,name=3Djsp,id=
=3D0
 |   +- jsp@19c47=3D=3Dorg.apache.jasper.servlet.JspServlet,0,true=3Dorg.ec=
lipse.jetty.servlet:context=3DROOT,type=3Dservletholder,name=3Djsp,id=3D0
 |   +- jsp@19c47=3D=3Dorg.apache.jasper.servlet.JspServlet,0,true=3Dorg.ec=
lipse.jetty.servlet:context=3Dasync-rest,type=3Dservletholder,name=3Djsp,id=
=3D0
 |   +- jsp@19c47=3D=3Dorg.apache.jasper.servlet.JspServlet,0,true=3Dorg.ec=
lipse.jetty.servlet:context=3Dtest,type=3Dservletholder,name=3Djsp,id=3D0
 |   +- [/*]/[]=3D=3D31=3D&gt;TestFilter=3Dorg.eclipse.jetty.servlet:contex=
t=3Dtest,type=3Dfiltermapping,name=3DTestFilter,id=3D0
 |   +- org.eclipse.jetty.server.session.HashSessionManager@6cb83869=3Dorg.=
eclipse.jetty.server.session:context=3Dasync-rest,type=3Dhashsessionmanager=
,id=3D0
 |   +- org.eclipse.jetty.io.ArrayByteBufferPool@30ad8942=3Dorg.eclipse.jet=
ty.io:context=3DHTTP/1.1@3d0f282,type=3Darraybytebufferpool,id=3D0
 |   +- [/cgi-bin/*]=3D&gt;CGI=3Dorg.eclipse.jetty.servlet:context=3Dtest,t=
ype=3Dservletmapping,name=3DCGI,id=3D0
 |   +- org.eclipse.jetty.server.handler.HandlerCollection@58b37561=3Dorg.e=
clipse.jetty.server.handler:type=3Dhandlercollection,id=3D0
 |   +- Session@d9891a76=3D=3Dcom.acme.SessionDump,5,true=3Dorg.eclipse.jet=
ty.servlet:context=3Dtest,type=3Dservletholder,name=3DSession,id=3D0
 |   +- org.eclipse.jetty.servlet.ServletHandler@a08feeb=3Dorg.eclipse.jett=
y.servlet:context=3Dxref-proxy,type=3Dservlethandler,id=3D0
 |   +- org.eclipse.jetty.util.thread.ScheduledExecutorScheduler@725f5=3Dor=
g.eclipse.jetty.util.thread:type=3Dscheduledexecutorscheduler,id=3D0
 |   +- [/*]/[]=3D=3D0=3D&gt;QoSFilter=3Dorg.eclipse.jetty.servlet:context=
=3Dtest,type=3Dfiltermapping,name=3DQoSFilter,id=3D0
 |   +- org.eclipse.jetty.server.session.SessionHandler@5a770658=3Dorg.ecli=
pse.jetty.server.session:context=3DROOT,type=3Dsessionhandler,id=3D0
 |   +- org.eclipse.jetty.server.session.SessionHandler@336abd81=3Dorg.ecli=
pse.jetty.server.session:context=3Dtest,type=3Dsessionhandler,id=3D0
 |   +- o.e.j.s.h.ContextHandler@7b2dffdf{/javadoc,file:/home/user/jetty-di=
stribution-{VERSION}/javadoc,AVAILABLE}=3Dorg.eclipse.jetty.server.handler:=
context=3Djavadoc,type=3Dcontexthandler,id=3D0
 |   +- org.eclipse.jetty.servlets.QoSFilter@6df3d1f5=3Dorg.eclipse.jetty.s=
ervlets:context=3Dtest,type=3Dqosfilter,id=3D0
 |   +- [*.more]=3D&gt;Dump=3Dorg.eclipse.jetty.servlet:context=3Dtest,type=
=3Dservletmapping,name=3DDump,id=3D1
 |   +- Dump@20ae14=3D=3Dcom.acme.Dump,1,true=3Dorg.eclipse.jetty.servlet:c=
ontext=3Dtest,type=3Dservletholder,name=3DDump,id=3D0
 |   +- HttpConnectionFactory@5e47b1b9{HTTP/1.1}=3Dorg.eclipse.jetty.server=
:context=3DHTTP/1.1@3d0f282,type=3Dhttpconnectionfactory,id=3D0
 |   +- org.eclipse.jetty.servlet.ServletHandler@debac27=3Dorg.eclipse.jett=
y.servlet:context=3DROOT,type=3Dservlethandler,id=3D0
 |   +- [*.jsp, *.jspf, *.jspx, *.xsp, *.JSP, *.JSPF, *.JSPX, *.XSP]=3D&gt;=
jsp=3Dorg.eclipse.jetty.servlet:context=3Dxref-proxy,type=3Dservletmapping,=
name=3Djsp,id=3D0
 |   +- org.eclipse.jetty.server.handler.MovedContextHandler$Redirector@2a4=
200d3=3Dorg.eclipse.jetty.server.handler:context=3DoldContextPath,type=3Dmo=
vedcontexthandler$redirector,id=3D0
 |   +- TestFilter=3Dorg.eclipse.jetty.servlet:context=3Dtest,type=3Dfilter=
holder,name=3DTestFilter,id=3D0
 |   +- Rewrite@a4dac96c=3D=3Dcom.acme.RewriteServlet,-1,false=3Dorg.eclips=
e.jetty.servlet:context=3Dtest,type=3Dservletholder,name=3DRewrite,id=3D0
 |   +- [/dispatch/*]=3D&gt;Dispatch=3Dorg.eclipse.jetty.servlet:context=3D=
test,type=3Dservletmapping,name=3DDispatch,id=3D0
 |   +- [/testSerial]=3D&gt;SerialRestServlet=3Dorg.eclipse.jetty.servlet:c=
ontext=3Dasync-rest,type=3Dservletmapping,name=3DSerialRestServlet,id=3D0
 |   +- org.eclipse.jetty.servlet.ErrorPageErrorHandler@24bf7a86=3Dorg.ecli=
pse.jetty.servlet:context=3Dtest,type=3Derrorpageerrorhandler,id=3D0
 |   +- [/secureMode/*]=3D&gt;SecureMode=3Dorg.eclipse.jetty.servlet:contex=
t=3Dtest,type=3Dservletmapping,name=3DSecureMode,id=3D0
 |   +- [/]=3D&gt;default=3Dorg.eclipse.jetty.servlet:context=3Dasync-rest,=
type=3Dservletmapping,name=3Ddefault,id=3D0
 |   +- Dispatch@14d3a89a=3D=3Dcom.acme.DispatchServlet,1,true=3Dorg.eclips=
e.jetty.servlet:context=3Dtest,type=3Dservletholder,name=3DDispatch,id=3D0
 |   +- org.eclipse.jetty.server.handler.ContextHandlerCollection@64c6e290=
=3Dorg.eclipse.jetty.server.handler:type=3Dcontexthandlercollection,id=3D0
 |   +- org.eclipse.jetty.security.ConstraintSecurityHandler@2848c90e=3Dorg=
.eclipse.jetty.security:context=3Dasync-rest,type=3Dconstraintsecurityhandl=
er,id=3D0
 |   +- [/rego2/*]=3D&gt;RegoTest2=3Dorg.eclipse.jetty.servlet:context=3Dte=
st,type=3Dservletmapping,name=3DRegoTest2,id=3D0
 |   +- [/rewritten/*, /redirected/*]=3D&gt;Rewrite=3Dorg.eclipse.jetty.ser=
vlet:context=3Dtest,type=3Dservletmapping,name=3DRewrite,id=3D0
 |   +- org.eclipse.jetty.servlet.ServletHandler@5034037e=3Dorg.eclipse.jet=
ty.servlet:context=3Dtest,type=3Dservlethandler,id=3D0
 |   +- org.eclipse.jetty.servlet.ErrorPageErrorHandler@3c121009=3Dorg.ecli=
pse.jetty.servlet:context=3Dasync-rest,type=3Derrorpageerrorhandler,id=3D0
 |   +- sun.nio.ch.ServerSocketChannelImpl[/0:0:0:0:0:0:0:0:9090]=3Dsun.nio=
.ch:context=3DHTTP/1.1@3d0f282,type=3Dserversocketchannelimpl,id=3D0
 |   +- org.eclipse.jetty.security.ConstraintSecurityHandler@7179290f=3Dorg=
.eclipse.jetty.security:context=3Dtest,type=3Dconstraintsecurityhandler,id=
=3D0
 |   +- org.eclipse.jetty.server.session.HashSessionIdManager@289eb857=3Dor=
g.eclipse.jetty.server.session:type=3Dhashsessionidmanager,id=3D0
 |   +- org.eclipse.jetty.security.authentication.BasicAuthenticator@5497fb=
72=3Dorg.eclipse.jetty.security.authentication:context=3Dxref-proxy,type=3D=
basicauthenticator,id=3D0
 |   +- org.eclipse.jetty.security.DefaultAuthenticatorFactory@11ad5296=3Do=
rg.eclipse.jetty.security:context=3Dxref-proxy,type=3Ddefaultauthenticatorf=
actory,id=3D0
 |   +- [/dump/*]/[]=3D=3D0=3D&gt;MultiPart=3Dorg.eclipse.jetty.servlet:con=
text=3Dtest,type=3Dfiltermapping,name=3DMultiPart,id=3D0
 |   +- o.e.j.s.h.MovedContextHandler@5e0c8d24{/oldContextPath,null,AVAILAB=
LE}=3Dorg.eclipse.jetty.server.handler:context=3DoldContextPath,type=3Dmove=
dcontexthandler,id=3D0
 |   +- QoSFilter=3Dorg.eclipse.jetty.servlet:context=3Dtest,type=3Dfilterh=
older,name=3DQoSFilter,id=3D0
 |   +- org.eclipse.jetty.security.authentication.FormAuthenticator@1fa291f=
2=3Dorg.eclipse.jetty.security.authentication:context=3Dtest,type=3Dformaut=
henticator,id=3D0
 |   +- o.e.j.w.WebAppContext@716d9094{/test,file:/private/var/folders/br/k=
bs2g3753c54wmv4j31pnw5r0000gn/T/jetty-0.0.0.0-9090-test.war-_test-any-/weba=
pp/,AVAILABLE}{/test.war}=3Dorg.eclipse.jetty.webapp:context=3Dtest,type=3D=
webappcontext,id=3D0
 |   +- [/]=3D&gt;default=3Dorg.eclipse.jetty.servlet:context=3DROOT,type=
=3Dservletmapping,name=3Ddefault,id=3D0
 |   +- [/hello/*]=3D&gt;Hello=3Dorg.eclipse.jetty.servlet:context=3Dtest,t=
ype=3Dservletmapping,name=3DHello,id=3D0
 |   +- [/chat/*]=3D&gt;Chat=3Dorg.eclipse.jetty.servlet:context=3Dtest,typ=
e=3Dservletmapping,name=3DChat,id=3D0
 |   +- [/testAsync]=3D&gt;AsyncRestServlet=3Dorg.eclipse.jetty.servlet:con=
text=3Dasync-rest,type=3Dservletmapping,name=3DAsyncRestServlet,id=3D0
 |   +- org.eclipse.jetty.security.DefaultIdentityService@d2539a6=3Dorg.ecl=
ipse.jetty.security:context=3Dasync-rest,type=3Ddefaultidentityservice,id=
=3D0
 |   +- org.eclipse.jetty.server.handler.RequestLogHandler@3dc087a2=3Dorg.e=
clipse.jetty.server.handler:type=3Drequestloghandler,id=3D0
 |   +- org.eclipse.jetty.servlet.ErrorPageErrorHandler@321f8d38=3Dorg.ecli=
pse.jetty.servlet:context=3Dxref-proxy,type=3Derrorpageerrorhandler,id=3D0
 |   +- org.eclipse.jetty.server.handler.ResourceHandler@8f9c8a7=3Dorg.ecli=
pse.jetty.server.handler:context=3Djavadoc,type=3Dresourcehandler,id=3D0
 |   +- CGI@10465=3D=3Dorg.eclipse.jetty.servlets.CGI,1,true=3Dorg.eclipse.=
jetty.servlet:context=3Dtest,type=3Dservletholder,name=3DCGI,id=3D0
 |   +- SerialRestServlet@461411d=3D=3Dorg.eclipse.jetty.example.asyncrest.=
SerialRestServlet,-1,false=3Dorg.eclipse.jetty.servlet:context=3Dasync-rest=
,type=3Dservletholder,name=3DSerialRestServlet,id=3D0
 |   +- HashLoginService[Test Realm]=3Dorg.eclipse.jetty.security:type=3Dha=
shloginservice,id=3D0
 |   +- AsyncRestServlet@73eb9bd5=3D=3Dorg.eclipse.jetty.example.asyncrest.=
AsyncRestServlet,-1,false=3Dorg.eclipse.jetty.servlet:context=3Dasync-rest,=
type=3Dservletholder,name=3DAsyncRestServlet,id=3D0
 |   +- org.eclipse.jetty.server.Server@76f08fe1=3Dorg.eclipse.jetty.server=
:type=3Dserver,id=3D0
 |   +- org.eclipse.jetty.servlet.ErrorPageErrorHandler@3c41a9ce=3Dorg.ecli=
pse.jetty.servlet:context=3DROOT,type=3Derrorpageerrorhandler,id=3D0
 |   +- [/apidocs/*]=3D&gt;JavadocTransparentProxy=3Dorg.eclipse.jetty.serv=
let:context=3Dxref-proxy,type=3Dservletmapping,name=3DJavadocTransparentPro=
xy,id=3D0
 |   +- Chat@200778=3D=3Dcom.acme.ChatServlet,1,true=3Dorg.eclipse.jetty.se=
rvlet:context=3Dtest,type=3Dservletholder,name=3DChat,id=3D0
 |   +- [/cookie/*]=3D&gt;Cookie=3Dorg.eclipse.jetty.servlet:context=3Dtest=
,type=3Dservletmapping,name=3DCookie,id=3D0
 |   +- [/session/*]=3D&gt;Session=3Dorg.eclipse.jetty.servlet:context=3Dte=
st,type=3Dservletmapping,name=3DSession,id=3D0
 |   +- org.eclipse.jetty.deploy.providers.WebAppProvider@7b26b7df=3Dorg.ec=
lipse.jetty.deploy.providers:type=3Dwebappprovider,id=3D0
 |   +- org.eclipse.jetty.server.AsyncNCSARequestLog@108a1cf6=3Dorg.eclipse=
.jetty.server:type=3Dasyncncsarequestlog,id=3D0
 |   +- [*.jsp, *.jspf, *.jspx, *.xsp, *.JSP, *.JSPF, *.JSPX, *.XSP]=3D&gt;=
jsp=3Dorg.eclipse.jetty.servlet:context=3Dtest,type=3Dservletmapping,name=
=3Djsp,id=3D0
 |   +- [*.jsp, *.jspf, *.jspx, *.xsp, *.JSP, *.JSPF, *.JSPX, *.XSP]=3D&gt;=
jsp=3Dorg.eclipse.jetty.servlet:context=3DROOT,type=3Dservletmapping,name=
=3Djsp,id=3D0
 |   +- HashLoginService[Test Realm]=3Dorg.eclipse.jetty.security:context=
=3Dtest,type=3Dhashloginservice,id=3D0
 |   +- [*.jsp, *.jspf, *.jspx, *.xsp, *.JSP, *.JSPF, *.JSPX, *.XSP]=3D&gt;=
jsp=3Dorg.eclipse.jetty.servlet:context=3Dasync-rest,type=3Dservletmapping,=
name=3Djsp,id=3D0
 |   +- foo.jsp@d7583f1f=3D=3Dorg.apache.jasper.servlet.JspServlet,-1,false=
=3Dorg.eclipse.jetty.servlet:context=3Dtest,type=3Dservletholder,name=3Dfoo=
.jsp,id=3D0
 |   +- RegoTest@dafcd1ad=3D=3Dcom.acme.RegTest,-1,false=3Dorg.eclipse.jett=
y.servlet:context=3Dtest,type=3Dservletholder,name=3DRegoTest,id=3D0
 |   +- [/xref/*]=3D&gt;XrefTransparentProxy=3Dorg.eclipse.jetty.servlet:co=
ntext=3Dxref-proxy,type=3Dservletmapping,name=3DXrefTransparentProxy,id=3D0
 |   +- org.eclipse.jetty.security.ConstraintSecurityHandler@3bab0b5a=3Dorg=
.eclipse.jetty.security:context=3Dxref-proxy,type=3Dconstraintsecurityhandl=
er,id=3D0
 |   +- HttpConfiguration@703b16bb{32768,8192/8192,https://:8443,[]}=3Dorg.=
eclipse.jetty.server:context=3DHTTP/1.1@3d0f282,type=3Dhttpconfiguration,id=
=3D0
 |   +- org.eclipse.jetty.util.log.Log@dda4f7b=3Dorg.eclipse.jetty.util.log=
:type=3Dlog,id=3D0
 |   +- Cookie@78a4f684=3D=3Dcom.acme.CookieDump,1,true=3Dorg.eclipse.jetty=
.servlet:context=3Dtest,type=3Dservletholder,name=3DCookie,id=3D0
 |   +- XrefTransparentProxy@b0222797=3D=3Dorg.eclipse.jetty.proxy.ProxySer=
vlet$Transparent,1,true=3Dorg.eclipse.jetty.servlet:context=3Dxref-proxy,ty=
pe=3Dservletholder,name=3DXrefTransparentProxy,id=3D0
 +- org.eclipse.jetty.util.log.Log@dda4f7b
 +=3D ServerConnector@3d0f282{HTTP/1.1}{0.0.0.0:9090} - STARTED
 |   +~ org.eclipse.jetty.server.Server@76f08fe1 - STARTING
 |   +~ qtp1062680061{STARTED,10&lt;=3D13&lt;=3D200,i=3D1,q=3D0} - STARTED
 |   +~ org.eclipse.jetty.util.thread.ScheduledExecutorScheduler@725f5 - ST=
ARTED
 |   +- org.eclipse.jetty.io.ArrayByteBufferPool@30ad8942
 |   +=3D HttpConnectionFactory@5e47b1b9{HTTP/1.1} - STARTED
 |   |   +- HttpConfiguration@703b16bb{32768,8192/8192,https://:8443,[]}
 |   |   +~ org.eclipse.jetty.jmx.MBeanContainer@644a5ddd
 |   +=3D org.eclipse.jetty.server.ServerConnector$ServerConnectorManager@6=
f0ac4be - STARTED
 |   |   +- org.eclipse.jetty.io.SelectorManager$ManagedSelector@61454787 k=
eys=3D0 selected=3D0 id=3D0
 |   |   |   +- org.eclipse.jetty.io.SelectorManager$ManagedSelector.select=
(SelectorManager.java:459)
 |   |   |   +- sun.nio.ch.KQueueSelectorImpl@a0c508b keys=3D0
 |   |   +- org.eclipse.jetty.io.SelectorManager$ManagedSelector@2e7bdad4 k=
eys=3D0 selected=3D0 id=3D1
 |   |   |   +- org.eclipse.jetty.io.SelectorManager$ManagedSelector.select=
(SelectorManager.java:459)
 |   |   |   +- sun.nio.ch.KQueueSelectorImpl@5825168 keys=3D0
 |   |   +- org.eclipse.jetty.io.SelectorManager$ManagedSelector@2eae85ab k=
eys=3D0 selected=3D0 id=3D2
 |   |   |   +- org.eclipse.jetty.io.SelectorManager$ManagedSelector.select=
(SelectorManager.java:459)
 |   |   |   +- sun.nio.ch.KQueueSelectorImpl@6faa85f6 keys=3D0
 |   |   +- org.eclipse.jetty.io.SelectorManager$ManagedSelector@244112c0 k=
eys=3D0 selected=3D0 id=3D3
 |   |   |   +- org.eclipse.jetty.io.SelectorManager$ManagedSelector.select=
(SelectorManager.java:459)
 |   |   |   +- sun.nio.ch.KQueueSelectorImpl@10c6f695 keys=3D0
 |   |   +- org.eclipse.jetty.io.SelectorManager$ManagedSelector@7666b8cd k=
eys=3D0 selected=3D0 id=3D4
 |   |   |   +- org.eclipse.jetty.io.SelectorManager$ManagedSelector.select=
(SelectorManager.java:459)
 |   |   |   +- sun.nio.ch.KQueueSelectorImpl@17836c59 keys=3D0
 |   |   +- org.eclipse.jetty.io.SelectorManager$ManagedSelector@353e531e k=
eys=3D0 selected=3D0 id=3D5
 |   |   |   +- org.eclipse.jetty.io.SelectorManager$ManagedSelector.select=
(SelectorManager.java:459)
 |   |   |   +- sun.nio.ch.KQueueSelectorImpl@2095f259 keys=3D0
 |   |   +- org.eclipse.jetty.io.SelectorManager$ManagedSelector@5459c1c5 k=
eys=3D0 selected=3D0 id=3D6
 |   |   |   +- org.eclipse.jetty.io.SelectorManager$ManagedSelector.select=
(SelectorManager.java:459)
 |   |   |   +- sun.nio.ch.KQueueSelectorImpl@142c7195 keys=3D0
 |   |   +- org.eclipse.jetty.io.SelectorManager$ManagedSelector@71d4f78b k=
eys=3D0 selected=3D0 id=3D7
 |   |       +- org.eclipse.jetty.io.SelectorManager$ManagedSelector.select=
(SelectorManager.java:459)
 |   |       +- sun.nio.ch.KQueueSelectorImpl@16bdab45 keys=3D0
 |   +~ org.eclipse.jetty.jmx.MBeanContainer@644a5ddd
 |   +- sun.nio.ch.ServerSocketChannelImpl[/0:0:0:0:0:0:0:0:9090]
 +=3D org.eclipse.jetty.deploy.DeploymentManager@c8e4be2 - STARTED
 |   +~ org.eclipse.jetty.deploy.providers.WebAppProvider@7b26b7df - STARTE=
D
 |   +~ org.eclipse.jetty.jmx.MBeanContainer@644a5ddd
 +~ HashLoginService[Test Realm] - STARTED
 +=3D org.eclipse.jetty.server.session.HashSessionIdManager@289eb857 - STAR=
TED
 |
 +&gt; startJarLoader@7194b34a
     +- file:/home/user/jetty-distribution-{VERSION}/lib/jetty-xml-{VERSION=
}.jar
     +- file:/home/user/jetty-distribution-{VERSION}/lib/servlet-api-3.0.ja=
r
     +- file:/home/user/jetty-distribution-{VERSION}/lib/jetty-http-{VERSIO=
N}.jar
     +- file:/home/user/jetty-distribution-{VERSION}/lib/jetty-continuation=
-{VERSION}.jar
     +- file:/home/user/jetty-distribution-{VERSION}/lib/jetty-server-{VERS=
ION}.jar
     +- file:/home/user/jetty-distribution-{VERSION}/lib/jetty-security-{VE=
RSION}.jar
     +- file:/home/user/jetty-distribution-{VERSION}/lib/jetty-servlet-{VER=
SION}.jar
     +- file:/home/user/jetty-distribution-{VERSION}/lib/jetty-webapp-{VERS=
ION}.jar
     +- file:/home/user/jetty-distribution-{VERSION}/lib/jetty-deploy-{VERS=
ION}.jar
     +- file:/home/user/jetty-distribution-{VERSION}/lib/jetty-client-{VERS=
ION}.jar
     +- file:/home/user/jetty-distribution-{VERSION}/lib/jetty-jmx-{VERSION=
}.jar
     +- file:/home/user/jetty-distribution-{VERSION}/lib/jsp/com.sun.el-2.2=
.0.v201303151357.jar
     +- file:/home/user/jetty-distribution-{VERSION}/lib/jsp/javax.el-2.2.0=
.v201303151357.jar
     +- file:/home/user/jetty-distribution-{VERSION}/lib/jsp/javax.servlet.=
jsp.jstl-1.2.0.v201105211821.jar
     +- file:/home/user/jetty-distribution-{VERSION}/lib/jsp/javax.servlet.=
jsp-2.2.0.v201112011158.jar
     +- file:/home/user/jetty-distribution-{VERSION}/lib/jsp/org.apache.jas=
per.glassfish-2.2.2.v201112011158.jar
     +- file:/home/user/jetty-distribution-{VERSION}/lib/jsp/org.apache.tag=
libs.standard.glassfish-1.2.0.v201112081803.jar
     +- file:/home/user/jetty-distribution-{VERSION}/lib/jsp/org.eclipse.jd=
t.core-3.8.2.v20130121.jar
     +- file:/home/user/jetty-distribution-{VERSION}/resources/
     +- file:/home/user/jetty-distribution-{VERSION}/lib/websocket/websocke=
t-api-9.0.2.v20130417.jar
     +- file:/home/user/jetty-distribution-{VERSION}/lib/websocket/websocke=
t-common-9.0.2.v20130417.jar
     +- file:/home/user/jetty-distribution-{VERSION}/lib/websocket/websocke=
t-server-9.0.2.v20130417.jar
     +- file:/home/user/jetty-distribution-{VERSION}/lib/websocket/websocke=
t-servlet-9.0.2.v20130417.jar
     +- file:/home/user/jetty-distribution-{VERSION}/lib/jetty-util-{VERSIO=
N}.jar
     +- file:/home/user/jetty-distribution-{VERSION}/lib/jetty-io-{VERSION}=
.jar
     +- sun.misc.Launcher$AppClassLoader@19d1b44b
         +- file:/home/user/jetty-distribution-{VERSION}/start.jar
         +- sun.misc.Launcher$ExtClassLoader@1693b52b
2013-04-29 14:38:39.422:INFO:oejs.Server:Thread-2: Graceful shutdown org.ec=
lipse.jetty.server.Server@76f08fe1 by  Mon Apr 29 14:38:44 CDT 2013
2013-04-29 14:38:39.429:INFO:oejs.ServerConnector:Thread-2: Stopped ServerC=
onnector@3d0f282{HTTP/1.1}{0.0.0.0:9090}
2013-04-29 14:38:39.444:INFO:oejsl.ELContextCleaner:Thread-2: javax.el.Bean=
ELResolver purged
2013-04-29 14:38:39.444:INFO:oejsh.ContextHandler:Thread-2: stopped o.e.j.w=
.WebAppContext@4ac92718{/proxy,file:/private/var/folders/br/kbs2g3753c54wmv=
4j31pnw5r0000gn/T/jetty-0.0.0.0-9090-xref-proxy.war-_xref-proxy-any-/webapp=
/,UNAVAILABLE}{/xref-proxy.war}
2013-04-29 14:38:39.447:INFO:oejsl.ELContextCleaner:Thread-2: javax.el.Bean=
ELResolver purged
2013-04-29 14:38:39.447:INFO:oejsh.ContextHandler:Thread-2: stopped o.e.j.w=
.WebAppContext@716d9094{/test,file:/private/var/folders/br/kbs2g3753c54wmv4=
j31pnw5r0000gn/T/jetty-0.0.0.0-9090-test.war-_test-any-/webapp/,UNAVAILABLE=
}{/test.war}
2013-04-29 14:38:39.455:INFO:oejsh.ContextHandler:Thread-2: stopped o.e.j.s=
.h.ContextHandler@7b2dffdf{/javadoc,file:/home/user/jetty-distribution-{VER=
SION}/javadoc,UNAVAILABLE}
2013-04-29 14:38:39.456:INFO:oejsl.ELContextCleaner:Thread-2: javax.el.Bean=
ELResolver purged
2013-04-29 14:38:39.456:INFO:oejsh.ContextHandler:Thread-2: stopped o.e.j.w=
.WebAppContext@6f01ba6f{/,file:/home/user/jetty-distribution-{VERSION}/weba=
pps/ROOT/,UNAVAILABLE}{/ROOT}
2013-04-29 14:38:39.456:INFO:oejsh.ContextHandler:Thread-2: stopped o.e.j.s=
.h.MovedContextHandler@5e0c8d24{/oldContextPath,null,UNAVAILABLE}
2013-04-29 14:38:39.457:INFO:oejsl.ELContextCleaner:Thread-2: javax.el.Bean=
ELResolver purged
2013-04-29 14:38:39.457:INFO:oejsh.ContextHandler:Thread-2: stopped o.e.j.w=
.WebAppContext@7ea88b1c{/async-rest,[file:/private/var/folders/br/kbs2g3753=
c54wmv4j31pnw5r0000gn/T/jetty-0.0.0.0-9090-async-rest.war-_async-rest-any-/=
webapp/, jar:file:/private/var/folders/br/kbs2g3753c54wmv4j31pnw5r0000gn/T/=
jetty-0.0.0.0-9090-async-rest.war-_async-rest-any-/webapp/WEB-INF/lib/examp=
le-async-rest-jar-9.0.2.v20130417.jar!/META-INF/resources/],UNAVAILABLE}{/a=
sync-rest.war}</pre>
</div>
</div>
</div>
</div>
</div>
</div>
<div class=3D"sect1">
<h2 id=3D"jndi">Configuring JNDI</h2>
<div class=3D"sectionbody">
<div class=3D"paragraph">
<p>Jetty supports <code>java:comp/env</code> lookups in webapps.
This is an optional feature for which some configuration is required.</p>
</div>
<div class=3D"sect2">
<h3 id=3D"jndi-quick-setup">Quick Setup</h3>
<div class=3D"paragraph">
<p>If you are using the standard distribution of Jetty, you must enable the=
 <em>JNDI</em> <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.proje=
ct-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#startup-mod=
ules">module</a> to obtain Jetty=E2=80=99s JNDI implementation, and the <st=
rong>plus</strong> <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.p=
roject-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#startup=
-modules">module</a> which provides classes for interacting with JNDI.
As the <em>plus</em> module depends on the <em>JNDI</em> module, you only n=
eed to enable the <em>plus</em> module to enable both.
Assuming you have Jetty installed in <code>/opt/jetty</code>, and you have =
made a <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty=
-9.4.x/jetty-documentation/src/main/asciidoc/index.html#startup-base-and-ho=
me">jetty base</a> in <code>/opt/jetty/my-base</code>, do:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">cd /opt/jetty
cd my-base
java -jar $JETTY_HOME/start.jar --add-to-start=3Dplus</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>You can now start Jetty and use JNDI within your webapps.
See <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.=
4.x/jetty-documentation/src/main/asciidoc/index.html#using-jndi">Using JNDI=
</a> for information on how to add entries to the JNDI environment that Jet=
ty can look up within webapps.</p>
</div>
<div class=3D"paragraph">
<p>If you have extra jars associated with your JNDI resources, for example =
a database driver jar, and you haven=E2=80=99t made a custom <a href=3D"fil=
e:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-document=
ation/src/main/asciidoc/index.html#startup-modules">module</a> for it, you =
can put the jars into your <code>{$jetty base}ext/</code> directory.
You will then need to enable the <em>ext</em> module to ensure the jars in =
the <code>ext/</code> directory are on the classpath.
Assuming you have Jetty installed in <code>/opt/jetty</code>, and you have =
made a <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty=
-9.4.x/jetty-documentation/src/main/asciidoc/index.html#startup-base-and-ho=
me">jetty base</a> in <code>/opt/jetty/my-base</code>, do:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">cd /opt/jetty
cd my-base
java -jar $JETTY_HOME/start.jar --add-to-start=3Dext</code></pre>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"using-jetty-jndi">Working with Jetty JNDI</h3>
<div class=3D"sect3">
<h4 id=3D"_defining_the_web_xml">Defining the web.xml</h4>
<div class=3D"paragraph">
<p>You can configure naming resources to reference in a <code>web.xml</code=
> file and access from within the <code>java:comp/env</code> naming environ=
ment of the webapp during execution.
Specifically, you can configure support for the following <code>web.xml</co=
de> elements:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><en=
v-entry>
<resource-ref>
<resource-env-ref></resource-env-ref></resource-ref></env-entry></code></pr=
e>
</div>
</div>
<div class=3D"paragraph">
<p><a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/index.html#configuring-jndi-env-en=
tries">Configuring env-entries</a> shows you how to set up overrides for <c=
ode>env-entry</code> elements in <code>web.xml</code>, while <a href=3D"fil=
e:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-document=
ation/src/main/asciidoc/index.html#configuring-resource-refs-and-resource-e=
nv-refs">Configuring <code>resource-refs</code> and <code>resource-env-refs=
</code></a> discusses how to configure support resources such as <code>java=
x.sql.DataSource</code>.</p>
</div>
<div class=3D"paragraph">
<p>You can also plug a JTA <code>javax.transaction.UserTransaction</code> i=
mplementation into Jetty so that webapps can look up <code>java:comp/UserTr=
ansaction</code> to obtain a distributed transaction manager: see <a href=
=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-d=
ocumentation/src/main/asciidoc/index.html#configuring-xa-transactions">Conf=
iguring XA Transactions</a>.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"defining-jndi-naming-entries">Declaring Resources</h4>
<div class=3D"paragraph">
<p>You must declare the objects you want bound into the Jetty environment s=
o that you can then hook into your webapp via <code>env-entry</code>, <code=
>resource-ref</code> and <code>resource-env-refs</code> in <code>web.xml</c=
ode>.
You create these bindings by using declarations of the following types:</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1"><code>org.eclipse.jetty.plus.jndi.EnvEntry</code></dt=
>
<dd>
<p>For <code>env-entry</code> type of entries</p>
</dd>
<dt class=3D"hdlist1"><code>org.eclipse.jetty.plus.jndi.Resource</code></dt=
>
<dd>
<p>For all other type of resources</p>
</dd>
<dt class=3D"hdlist1"><code>org.eclipse.jetty.plus.jndi.Transaction</code><=
/dt>
<dd>
<p>For a JTA manager</p>
</dd>
<dt class=3D"hdlist1"><code>org.eclipse.jetty.plus.jndi.Link</code></dt>
<dd>
<p>For the link between a <code>web.xml</code> resource name and a naming e=
ntry</p>
</dd>
</dl>
</div>
<div class=3D"paragraph">
<p>Declarations of each of these types follow the same general pattern:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><ne=
w class=3D"org.eclipse.jetty.plus.jndi.xxxx">
  <arg><!-- scope --></arg>
  <arg><!-- name --></arg>
  <arg><!-- value --></arg>
</new></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>You can place these declarations into three different files, depending o=
n your needs and the <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty=
.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#jndi-=
name-scope">scope</a> of the resources being declared.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"jndi-where-to-declare">Deciding Where to Declare Resources</h4>
<div class=3D"paragraph">
<p>You can define naming resources in three places:</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1"><em>jetty.xml</em></dt>
<dd>
<p>Naming resources defined in a <code>jetty.xml</code> file are <a href=3D=
"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-docu=
mentation/src/main/asciidoc/index.html#jndi-name-scope">scoped</a> at eithe=
r the JVM level or the Server level.
The classes for the resource must be visible at the Jetty container level.
If the classes for the resource only exist inside your webapp, you must dec=
lare it in a <code>WEB-INF/jetty-env.xml</code> file.</p>
</dd>
<dt class=3D"hdlist1">WEB-INF/jetty-env.xml</dt>
<dd>
<p>Naming resources in a <code>WEB-INF/jetty-env.xml</code> file are <a hre=
f=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-=
documentation/src/main/asciidoc/index.html#jndi-name-scope">scoped</a> to t=
he web app in which the file resides.
While you can enter JVM or Server scopes if you choose, we do not recommend=
 doing so.
The resources defined here may use classes from inside your webapp.
This is a Jetty-specific mechanism.</p>
</dd>
<dt class=3D"hdlist1">Context xml file</dt>
<dd>
<p>Entries in a context xml file should be <a href=3D"file:///home/tian/Dow=
nloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asc=
iidoc/index.html#jndi-name-scope">scoped</a> at the level of the webapp to =
which they apply, although you can supply a less strict scoping level of Se=
rver or JVM if you choose.
As with resources declared in a <code>jetty.xml</code> file, classes associ=
ated with the resource must be visible on the container=E2=80=99s classpath=
.</p>
</dd>
</dl>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"jndi-name-scope">Scope of Resource Names</h4>
<div class=3D"paragraph">
<p>Naming resources within Jetty belong to one of three different scopes, i=
n increasing order of restrictiveness:</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">JVM scope</dt>
<dd>
<p>The name is unique across the JVM instance, and is visible to all applic=
ation code.
You represent this scope by a <code>null</code> first parameter to the reso=
urce declaration.
For example:</p>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><ne=
w id=3D"cf" class=3D"org.eclipse.jetty.plus.jndi.Resource">
  <arg></arg>  <!-- empty arg -->
  <arg>jms/connectionFactory</arg>
  <arg>
    <new class=3D"org.apache.activemq.ActiveMQConnectionFactory">
       <arg>vm://localhost?broker.persistent=3Dfalse</arg>
    </new>
  </arg>
</new></code></pre>
</div>
</div>
</dd>
<dt class=3D"hdlist1">Server scope</dt>
<dd>
<p>The name is unique to a Server instance, and is only visible to code ass=
ociated with that instance.
You represent this scope by referencing the Server instance as the first pa=
rameter to the resource declaration.
For example:</p>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><co=
nfigure id=3D"Server" class=3D"org.eclipse.jetty.Server">
  <new id=3D"cf" class=3D"org.eclipse.jetty.plus.jndi.Resource">
    <arg><ref refid=3D"Server"></ref></arg>  <!-- reference to Server insta=
nce -->
    <arg>jms/connectionFactory</arg>
    <arg>
      <new class=3D"org.apache.activemq.ActiveMQConnectionFactory">
        <arg>vm://localhost?broker.persistent=3Dfalse</arg>
      </new>
    </arg>
  </new>
</configure></code></pre>
</div>
</div>
</dd>
<dt class=3D"hdlist1">Webapp scope</dt>
<dd>
<p>The name is unique to the WebAppContext instance, and is only visible to=
 code associated with that instance.
You represent this scope by referencing the <code>WebAppContext</code> inst=
ance as the first parameter to the resource declaration.
For example:</p>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><co=
nfigure id=3D"wac" class=3D"org.eclipse.jetty.webapp.WebAppContext">
  <new id=3D"cf" class=3D"org.eclipse.jetty.plus.jndi.Resource">
    <arg><ref refid=3D"wac"></ref></arg> <!-- reference to WebAppContext --=
>
    <arg>jms/connectionFactory</arg>
    <arg>
      <new class=3D"org.apache.activemq.ActiveMQConnectionFactory">
        <arg>vm://localhost?broker.persistent=3Dfalse</arg>
      </new>
    </arg>
  </new>
</configure></code></pre>
</div>
</div>
</dd>
</dl>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"binding-objects-into-jetty-jndi">What Can Be Bound as a Resource?=
</h4>
<div class=3D"paragraph">
<p>You can bind four types of objects into a Jetty JNDI reference:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>An ordinary POJO instance.</p>
</li>
<li>
<p>A <a href=3D"http://docs.oracle.com/javase/1.5.0/docs/api/javax/naming/R=
eference.html">javax.naming.Reference</a> instance.</p>
</li>
<li>
<p>An object instance that implements the <a href=3D"http://docs.oracle.com=
/javase/1.5.0/docs/api/javax/naming/Referenceable.html">javax.naming.Refere=
nceable</a> interface.</p>
</li>
<li>
<p>A link between a name as referenced in <code>web.xml</code> and as refer=
enced in the Jetty environment.</p>
</li>
</ul>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"jndi-configuration">Configuring JNDI</h3>
<div class=3D"sect3">
<h4 id=3D"configuring-jndi-env-entries">Configuring JNDI <em>env-entries</e=
m></h4>
<div class=3D"paragraph">
<p>Sometimes it is useful to pass configuration information to a webapp at =
runtime that you either cannot or cannot conveniently code into a <code>web=
.xml</code> env-entry.
In such cases, you can use the <code>org.eclipse.jetty.plus.jndi.EnvEntry</=
code> class, and even override an entry of the same name in <code>web.xml</=
code>.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><ne=
w class=3D"org.eclipse.jetty.plus.jndi.EnvEntry">
  <arg></arg>
  <arg>mySpecialValue</arg>
  <arg type=3D"java.lang.Integer">4000</arg>
  <arg type=3D"boolean">true</arg>
</new></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>This example defines a virtual <code>env-entry</code> called <code>mySpe=
cialValue</code> with value <code>4000</code> that is <a href=3D"file:///ho=
me/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/s=
rc/main/asciidoc/index.html#jndi-name-scope">scoped</a> to the JVM.
It is put into JNDI at <code>java:comp/env/mySpecialValue</code> for <em>ev=
ery</em> web app deployed.
Moreover, the boolean argument indicates that this value overrides an <code=
>env-entry</code> of the same name in <code>web.xml</code>.
If you don=E2=80=99t want to override, omit this argument, or set it to <co=
de>false</code>.</p>
</div>
<div class=3D"paragraph">
<p>The Servlet Specification allows binding only the following object types=
 to an <code>env-entry</code>:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>java.lang.String</p>
</li>
<li>
<p>java.lang.Integer</p>
</li>
<li>
<p>java.lang.Float</p>
</li>
<li>
<p>java.lang.Double</p>
</li>
<li>
<p>java.lang.Long</p>
</li>
<li>
<p>java.lang.Short</p>
</li>
<li>
<p>java.lang.Character</p>
</li>
<li>
<p>java.lang.Byte</p>
</li>
<li>
<p>java.lang.Boolean</p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>That being said, Jetty is a little more flexible and allows you to also =
bind custom POJOs, <a href=3D"http://docs.oracle.com/javase/1.5.0/docs/api/=
javax/naming/Reference.html"><code>javax.naming.References</code></a> and <=
a href=3D"http://docs.oracle.com/javase/1.5.0/docs/api/javax/naming/Referen=
ceable.html"><code>javax.naming.Referenceables</code></a>.
Be aware that if you take advantage of this feature, your web application i=
s <em>not portable</em>.</p>
</div>
<div class=3D"paragraph">
<p>To use the <code>env-entry</code> configured above, use code in your <co=
de>servlet/filter/etc.</code>, such as:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">i=
mport javax.naming.InitialContext;

public class MyClass {

  public void myMethod() {

    InitialContext ic =3D new InitialContext();
    Integer mySpecialValue =3D (Integer)ic.lookup("java:comp/env/mySpecialV=
alue");
    ...
  }
}</code></pre>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"configuring-resource-refs-and-resource-env-refs">Configuring <em>=
resource-refs</em> and <em>resource-env-refs</em></h4>
<div class=3D"paragraph">
<p>You can configure any type of resource that you want to refer to in a <c=
ode>web.xml</code> file as a <code>resource-ref</code> or <code>resource-en=
v-ref</code>, using the <code>org.eclipse.jetty.plus.jndi.Resource</code> t=
ype of naming entry.
You provide the scope, the name of the object (relative to <code>java:comp/=
env</code>) and a POJO instance or a <code>javax.naming.Reference</code> in=
stance or <code>javax.naming.Referenceable</code> instance.</p>
</div>
<div class=3D"paragraph">
<p>The <a href=3D"http://jcp.org/aboutJava/communityprocess/pr/jsr244/index=
.html">J2EE Specification</a> recommends storing DataSources in <code>java:=
comp/env/jdbc</code>, JMS connection factories under <code>java:comp/env/jm=
s</code>, JavaMail connection factories under <code>java:comp/env/mail</cod=
e> and URL connection factories under <code>java:comp/env/url</code>.</p>
</div>
<div class=3D"paragraph">
<p>For example:</p>
</div>
<table class=3D"tableblock frame-all grid-all spread">
<caption class=3D"title">Table 11. DataSource Declaration Conventions</capt=
ion>
<colgroup>
<col style=3D"width: 33.3333%;">
<col style=3D"width: 33.3333%;">
<col style=3D"width: 33.3334%;">
</colgroup>
<thead>
<tr>
<th class=3D"tableblock halign-left valign-top">Resource Type</th>
<th class=3D"tableblock halign-left valign-top">Name in <code>jetty.xml</co=
de></th>
<th class=3D"tableblock halign-left valign-top">Environment Lookup</th>
</tr>
</thead>
<tbody>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">jav=
ax.sql.DataSource</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">jdb=
c/myDB</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">jav=
a:comp/env/jdbc/myDB</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">jav=
ax.jms.QueueConnectionFactory</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">jms=
/myQueue</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">jav=
a:comp/env/jms/myQueue</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">jav=
ax.mail.Session</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">mai=
l/myMailService</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">jav=
a:comp/env/mail/myMailService</p></td>
</tr>
</tbody>
</table>
</div>
<div class=3D"sect3">
<h4 id=3D"configuring-datasources">Configuring DataSources</h4>
<div class=3D"paragraph">
<p>Here is an example of configuring a <code>javax.sql.DataSource</code>.
Jetty can use any DataSource implementation available on its classpath.
In this example, the DataSource is from the <a href=3D"http://db.apache.org=
/derby">Derby</a> relational database, but you can use any implementation o=
f a <code>javax.sql.DataSource</code>.
This example configures it as scoped to a web app with the id of <em>wac</e=
m>:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><co=
nfigure id=3D"wac" class=3D"org.eclipse.jetty.webapp.WebAppContext">
  <new id=3D"myds" class=3D"org.eclipse.jetty.plus.jndi.Resource">
    <arg><ref refid=3D"wac"></ref></arg>
    <arg>jdbc/myds</arg>
    <arg>
      <new class=3D"org.apache.derby.jdbc.EmbeddedDataSource">
        <set name=3D"DatabaseName">test</set>
        <set name=3D"createDatabase">create</set>
      </new>
    </arg>
  </new>
</configure></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The code above creates an instance of <code>org.apache.derby.jdbc.Embedd=
edDataSource</code>, calls the two setter methods <code>setDatabaseName("te=
st"),</code> and <code>setCreateDatabase("create"),</code> and binds it int=
o the JNDI scope for the web app.
If you do not have the appropriate <code>resource-ref</code> set up in your=
 <code>web.xml</code>, it is available from application lookups as <code>ja=
va:comp/env/jdbc/myds</code>.</p>
</div>
<div class=3D"paragraph">
<p>Here=E2=80=99s an example <code>web.xml</code> declaration for the datas=
ource above:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><re=
source-ref>
  <res-ref-name>jdbc/myds</res-ref-name>
  <res-type>javax.sql.DataSource</res-type>
  <res-auth>Container</res-auth>
</resource-ref></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>To look up your DataSource in your <code>servlet/filter/etc.</code>:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">i=
mport javax.naming.InitialContext;
import javax.sql.DataSource;

public class MyClass {

  public void myMethod() {

    InitialContext ic =3D new InitialContext();
    DataSource myDS =3D (DataSource)ic.lookup("java:comp/env/jdbc/myds");

    ...
  }
}</code></pre>
</div>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Note</div>
</td>
<td class=3D"content">
Careful! When configuring Resources, ensure that the type of object you con=
figure matches the type of object you expect to look up in <code>java:comp/=
env</code>.
For database connection factories, this means that the object you register =
as a Resource <em>must</em> implement the <code>javax.sql.DataSource</code>=
&nbsp;interface.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
<div class=3D"paragraph">
<p>For more examples of datasource configurations, see <a href=3D"file:///h=
ome/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/=
src/main/asciidoc/index.html#jndi-datasource-examples">Datasource Examples<=
/a>.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"configuring-jms-queues-topics-connectionfactories">Configuring JM=
S Queues, Topics and ConnectionFactories</h4>
<div class=3D"paragraph">
<p>Jetty can bind any implementation of the JMS destinations and connection=
 factories.
You just need to ensure the implementation Jars are available on Jetty=E2=
=80=99s classpath.
Here is an example of binding an <a href=3D"http://activemq.apache.org/">Ac=
tiveMQ</a> in-JVM connection factory:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><co=
nfigure id=3D"wac" class=3D"org.eclipse.jetty.webapp.WebAppContext">
  <new id=3D"cf" class=3D"org.eclipse.jetty.plus.jndi.Resource">
    <arg><ref refid=3D"wac"></ref></arg>
    <arg>jms/connectionFactory</arg>
    <arg>
      <new class=3D"org.apache.activemq.ActiveMQConnectionFactory">
        <arg>vm://localhost?broker.persistent=3Dfalse</arg>
      </new>
    </arg>
  </new>
</configure></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The entry in <code>web.xml</code> would be:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><re=
source-ref>
  <res-ref-name>jms/connectionFactory</res-ref-name>
  <res-type>javax.jms.ConnectionFactory</res-type>
  <res-auth>Container</res-auth>
</resource-ref></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>TODO: put in an example of a QUEUE from progress demo</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"configuring-mail-with-jndi">Configuring Mail</h4>
<div class=3D"paragraph">
<p>Jetty also provides infrastructure for access to <code>javax.mail.Sessio=
ns</code> from within an application:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><co=
nfigure id=3D"wac" class=3D"org.eclipse.jetty.webapp.WebAppContext">
  <new id=3D"mail" class=3D"org.eclipse.jetty.plus.jndi.Resource">
    <arg><ref refid=3D"wac"></ref></arg>
    <arg>mail/Session</arg>
    <arg>
      <new class=3D"org.eclipse.jetty.jndi.factories.MailSessionReference">
        <set name=3D"user">fred</set>
        <set name=3D"password">OBF:1xmk1w261z0f1w1c1xmq</set>
        <set name=3D"properties">
          <new class=3D"java.util.Properties">
            <put name=3D"mail.smtp.host">XXX</put>
            <put name=3D"mail.from">me@me</put>
            <put name=3D"mail.debug">true</put>
          </new>
        </set>
      </new>
    </arg>
  </new>
</configure></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>This setup creates an instance of the <code>org.eclipse.jetty.jndi.facto=
ries.MailSessionReference</code> class, calls it=E2=80=99s setter methods t=
o set up the authentication for the mail system, and populates a set of Pro=
perties, setting them on the <code>MailSessionReference</code> instance.
The result is that an application can look up <code>java:comp/env/mail/Sess=
ion</code>&nbsp;at runtime and obtain access to a <code>javax.mail.Session<=
/code>&nbsp;that has the necessary configuration to permit it to send email=
 via SMTP.</p>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock tip">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Tip</div>
</td>
<td class=3D"content">
You can set the password to be plain text, or use Jetty=E2=80=99s <a href=
=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-d=
ocumentation/src/main/asciidoc/index.html#configuring-security-secure-passw=
ords">Secure Password Obfuscation</a> (OBF:) mechanism to make the config f=
ile a little more secure from prying eyes.
Remember that you cannot use the other Jetty encryption mechanisms of MD5 a=
nd Crypt because they do not allow you to recover the original password, wh=
ich the mail system requires.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"configuring-xa-transactions">Configuring XA Transactions</h4>
<div class=3D"paragraph">
<p>If you want to perform distributed transactions with your resources, you=
 need a <em>transaction manager</em> that supports the JTA interfaces, and =
that you can look up as <code>java:comp/UserTransaction</code> in your weba=
pp.
Jetty does not ship with one as standard, but you can plug in the one you p=
refer.
You can configure a transaction manager using the <a href=3D"file:///home/t=
ian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/m=
ain/asciidoc/%7BJDURL%7D/org/eclipse/jetty/plus/jndi/Transaction.html">JNDI=
 Transaction</a> object in a Jetty config file.
The following example configures the <a href=3D"http://www.atomikos.com/">A=
tomikos</a> transaction manager:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><ne=
w id=3D"tx" class=3D"org.eclipse.jetty.plus.jndi.Transaction">
  <arg>
    <new class=3D"com.atomikos.icatch.jta.J2eeUserTransaction">
  </new></arg>
</new></code></pre>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"configuring-links">Configuring Links</h4>
<div class=3D"paragraph">
<p>Generally, the name you set for your <code>Resource</code> should be the=
 same name you use for it in <code>web.xml</code>.
For example:</p>
</div>
<div class=3D"paragraph">
<p>In a context xml file:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><co=
nfigure id=3D"wac" class=3D"org.eclipse.jetty.webapp.WebAppContext">
  <new id=3D"myds" class=3D"org.eclipse.jetty.plus.jndi.Resource">
    <arg><ref refid=3D"wac"></ref></arg>
    <arg>jdbc/mydatasource</arg>
    <arg>
      <new class=3D"org.apache.derby.jdbc.EmbeddedDataSource">
        <set name=3D"DatabaseName">test</set>
        <set name=3D"createDatabase">create</set>
      </new>
    </arg>
  </new>
</configure></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>In a <code>web.xml</code> file:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><re=
source-ref>
  <res-ref-name>jdbc/mydatasource</res-ref-name>
  <res-type>javax.sql.DataSource</res-type>
  <res-auth>Container</res-auth>
  <injection-target>
    <injection-target-class>com.acme.JNDITest</injection-target-class>
    <injection-target-name>myDatasource</injection-target-name>
  </injection-target>
</resource-ref></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>However, you can refer to it in <code>web.xml</code> by a different name=
, and link it to the name in your <code>org.eclipse.jetty.plus.jndi.Resourc=
e</code> by using an <code>org.eclipse.jetty.plus.jndi.Link</code>.
For the example above, you can refer to the <code>jdbc/mydatasource</code> =
resource as <code>jdbc/mydatasource1</code> as follows:</p>
</div>
<div class=3D"paragraph">
<p>In a context xml file declare <code>jdbc/mydatasource</code>:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><co=
nfigure id=3D"wac" class=3D"org.eclipse.jetty.webapp.WebAppContext">
  <new id=3D"myds" class=3D"org.eclipse.jetty.plus.jndi.Resource">
    <arg><ref refid=3D"wac"></ref></arg>
    <arg>jdbc/mydatasource</arg>
    <arg>
      <new class=3D"org.apache.derby.jdbc.EmbeddedDataSource">
        <set name=3D"DatabaseName">test</set>
        <set name=3D"createDatabase">create</set>
      </new>
    </arg>
  </new>
</configure></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Then in a <code>WEB-INF/jetty-env.xml</code> file, link the name <code>j=
dbc/mydatasource</code> to the name you want to reference it as in
<code>web.xml</code>, which in this case is <code>jdbc/mydatasource1</code>=
:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><ne=
w id=3D"map1" class=3D"org.eclipse.jetty.plus.jndi.Link">
  <arg><ref refid=3D"wac"></ref></arg>
  <arg>jdbc/mydatasource1</arg> <!-- name in web.xml -->
  <arg>jdbc/mydatasource</arg>  <!-- name in container environment -->
</new></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Now you can refer to <code>jdbc/mydatasource1</code> in the <code>web.xm=
l</code> like this:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><re=
source-ref>
  <res-ref-name>jdbc/mydatasource1</res-ref-name>
  <res-type>javax.sql.DataSource</res-type>
  <res-auth>Container</res-auth>
  <injection-target>
    <injection-target-class>com.acme.JNDITest</injection-target-class>
    <injection-target-name>myDatasource</injection-target-name>
  </injection-target>
</resource-ref></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>This can be useful when you cannot change a JNDI resource directly in th=
e <code>web.xml</code> but need to link it to a specific resource in your d=
eployment environment.</p>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"jndi-embedded">Using JNDI with Jetty Embedded</h3>
<div class=3D"sect3">
<h4 id=3D"_setting_up_the_classpath">Setting up the Classpath</h4>
<div class=3D"paragraph">
<p>In addition to the jars that you require for your application, and the j=
ars needed for core Jetty, you will need to place the following jars onto y=
our classpath:</p>
</div>
<div class=3D"literalblock">
<div class=3D"content">
<pre>jetty-jndi.jar
jetty-plus.jar</pre>
</div>
</div>
<div class=3D"paragraph">
<p>If you are using transactions, you will also need the <code>javax.transa=
ction</code> api.
You can obtain this jar <a href=3D"file:///home/tian/Downloads/b60/ebook/je=
tty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BMVNCENTRAL=
%7D/org/eclipse/jetty/orbit/javax.transaction/1.1.1.v201105210645/javax.tra=
nsaction-1.1.1.v201105210645.jar">here.</a></p>
</div>
<div class=3D"paragraph">
<p>If you wish to use mail, you will also need the <code>javax.mail</code> =
api and implementation which <a href=3D"file:///home/tian/Downloads/b60/ebo=
ok/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BMVNCE=
NTRAL/org/eclipse/jetty/orbit/javax.mail.glassfish/1.4.1.v201005082020/java=
x.mail.glassfish-1.4.1.v201005082020.jar">you can download here.</a>
Note that this jar also requires the <code>javax.activation</code> classes,=
 which is available <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.=
project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BMVCENTRAL%7D/o=
rg/eclipse/jetty/orbit/javax.activation/1.1.0.v201105071233/javax.activatio=
n-1.1.0.v201105071233.jar">at this link.</a></p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_example_code">Example Code</h4>
<div class=3D"paragraph">
<p>Here is an example class that sets up some JNDI entries and deploys a we=
bapp that references these JNDI entries in code.
We=E2=80=99ll use some mocked up classes for the transaction manager and th=
e DataSource in this example for simplicity:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">i=
mport java.util.Properties;
import org.eclipse.jetty.server.Server;
import org.eclipse.jetty.webapp.WebAppContext;

/**
 * ServerWithJNDI
 *
 *
 */
public class ServerWithJNDI
{
    public static void main(String[] args) throws Exception
    {

        //Create the server
        Server server =3D new Server(8080);

        //Enable parsing of jndi-related parts of web.xml and jetty-env.xml
        org.eclipse.jetty.webapp.Configuration.ClassList classlist =3D org.=
eclipse.jetty.webapp.Configuration.ClassList.setServerDefault(server);
        classlist.addAfter("org.eclipse.jetty.webapp.FragmentConfiguration"=
, "org.eclipse.jetty.plus.webapp.EnvConfiguration", "org.eclipse.jetty.plus=
.webapp.PlusConfiguration");

        //Create a WebApp
        WebAppContext webapp =3D new WebAppContext();
        webapp.setContextPath("/");
        webapp.setWar("./my-foo-webapp.war");
        server.setHandler(webapp);

        //Register new transaction manager in JNDI
        //At runtime, the webapp accesses this as java:comp/UserTransaction
        org.eclipse.jetty.plus.jndi.Transaction transactionMgr =3D new org.=
eclipse.jetty.plus.jndi.Transaction(new com.acme.MockUserTransaction());

        //Define an env entry with Server scope.
        //At runtime, the webapp accesses this as java:comp/env/woggle
        //This is equivalent to putting an env-entry in web.xml:
        //<env-entry>
        //  <env-entry-name>woggle</env-entry-name>
        //  <env-entry-type>java.lang.Integer</env-entry-type>
        //  <env-entry-value>4000</env-entry-value>
        //</env-entry>
        org.eclipse.jetty.plus.jndi.EnvEntry woggle =3D new org.eclipse.jet=
ty.plus.jndi.EnvEntry(server, "woggle", new Integer(4000), false);


        //Define an env entry with webapp scope.
        //At runtime, the webapp accesses this as java:comp/env/wiggle
        //This is equivalent to putting a web.xml entry in web.xml:
        //<env-entry>
        //  <env-entry-name>wiggle</env-entry-name>
        //  <env-entry-value>100</env-entry-value>
        //  <env-entry-type>java.lang.Double</env-entry-type>
        //</env-entry>
        //Note that the last arg of "true" means that this definition for "=
wiggle" would override an entry of the
        //same name in web.xml
        org.eclipse.jetty.plus.jndi.EnvEntry wiggle =3D new org.eclipse.jet=
ty.plus.jndi.EnvEntry(webapp, "wiggle", new Double(100), true);

        //Register a reference to a mail service scoped to the webapp.
        //This must be linked to the webapp by an entry in web.xml:
        // <resource-ref>
        //  <res-ref-name>mail/Session</res-ref-name>
        //  <res-type>javax.mail.Session</res-type>
        //  <res-auth>Container</res-auth>
        // </resource-ref>
        //At runtime the webapp accesses this as java:comp/env/mail/Session
        org.eclipse.jetty.jndi.factories.MailSessionReference mailref =3D n=
ew org.eclipse.jetty.jndi.factories.MailSessionReference();
        mailref.setUser("CHANGE-ME");
        mailref.setPassword("CHANGE-ME");
        Properties props =3D new Properties();
        props.put("mail.smtp.auth", "false");
        props.put("mail.smtp.host","CHANGE-ME");
        props.put("mail.from","CHANGE-ME");
        props.put("mail.debug", "false");
        mailref.setProperties(props);
        org.eclipse.jetty.plus.jndi.Resource xxxmail =3D new org.eclipse.je=
tty.plus.jndi.Resource(webapp, "mail/Session", mailref);


        // Register a  mock DataSource scoped to the webapp
        //This must be linked to the webapp via an entry in web.xml:
        //<resource-ref>
        //  <res-ref-name>jdbc/mydatasource</res-ref-name>
        //  <res-type>javax.sql.DataSource</res-type>
        //  <res-auth>Container</res-auth>
        //</resource-ref>
        //At runtime the webapp accesses this as java:comp/env/jdbc/mydatas=
ource
        org.eclipse.jetty.plus.jndi.Resource mydatasource =3D new org.eclip=
se.jetty.plus.jndi.Resource(webapp, "jdbc/mydatasource",
                                                                           =
                          new com.acme.MockDataSource());

        server.start();
        server.join();
    }
}</code></pre>
</div>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"jndi-datasource-examples">Datasource Examples</h3>
<div class=3D"paragraph">
<p>Here are examples of configuring a JNDI datasource for various databases=
.</p>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Note</div>
</td>
<td class=3D"content">
Read <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9=
.4.x/jetty-documentation/src/main/asciidoc/index.html#configuring-datasourc=
es">Configuring DataSources</a> in <a href=3D"file:///home/tian/Downloads/b=
60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/in=
dex.html#jndi-configuration">Configuring JNDI</a> for more information abou=
t configuring datasources.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
<div class=3D"paragraph">
<p>All of these examples correspond to a <code>resource-ref</code> in <code=
>web.xml</code>.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml">  <=
resource-ref>
     <description>My DataSource Reference</description>
     <res-ref-name>jdbc/DSTest</res-ref-name>
     <res-type>javax.sql.DataSource</res-type>
     <res-auth>Container</res-auth>
  </resource-ref></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>These examples assume that all of the datasources are declared at the JV=
M scope, but you can use other scopes if desired.
You can configure all JNDI resources in a <code>jetty.xml</code> file, a <c=
ode>WEB-INF/jetty-env.xml</code> file, or a context XML file.
See the section <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.proj=
ect-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#jndi-where=
-to-declare">Deciding Where to Declare Resources</a> for more information.<=
/p>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock important">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Important</div>
</td>
<td class=3D"content">
You must provide Jetty with the libraries necessary to instantiate the data=
source you have configured by putting the corresponding Jar in <code>JETTY_=
HOME/lib/ext</code>.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
<div class=3D"sect3">
<h4 id=3D"pooling-datasources">Pooling DataSources</h4>
<div class=3D"paragraph">
<p>Pooling datasources enables connection pooling, which lets you reuse an =
existing connection instead of creating a new connection to the database.
This is highly efficient in terms of memory allocation and speed of the req=
uest to the database.
We highly recommend this option for production environments.</p>
</div>
<div class=3D"paragraph">
<p>The following is a list of the pooled datasource examples we have worked=
 with in the past:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p><a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/index.html#hikaricp-datasource">Hi=
kariCP</a></p>
</li>
<li>
<p><a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/index.html#bonecp-datasource">Bone=
CP</a></p>
</li>
<li>
<p><a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/index.html#c3p0-datasource">c3p0</=
a></p>
</li>
<li>
<p><a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/index.html#dbcp-datasource">DBCP</=
a></p>
</li>
<li>
<p><a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/index.html#atomikos-datasource">At=
omikos 3.3.2+</a></p>
</li>
<li>
<p><a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/index.html#mysql-pooled-datasource=
">MySQL</a></p>
</li>
<li>
<p><a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/index.html#postgreSQL-pooled-datas=
ource">PostgreSQL</a></p>
</li>
<li>
<p><a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/index.html#DB2-pooled-datasource">=
DB2</a></p>
</li>
</ul>
</div>
<div class=3D"sect4">
<h5 id=3D"hikaricp-datasource">HikariCP</h5>
<div class=3D"paragraph">
<p>Connection pooling, available at <a href=3D"http://search.maven.org/remo=
tecontent?filepath=3Dcom/zaxxer/HikariCP/1.4.0/HikariCP-1.4.0.jar">HikariCP=
 Download</a>.
All configuration options for HikariCP are described here: <a href=3D"https=
://github.com/brettwooldridge/HikariCP">HikariCP documentation</a>.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml">  <=
new id=3D"DSTest" class=3D"org.eclipse.jetty.plus.jndi.Resource">
     <arg></arg>
     <arg>jdbc/DSTest</arg>
     <arg>
       <new class=3D"com.zaxxer.hikari.HikariDataSource">
         <arg>
            <new class=3D"com.zaxxer.hikari.HikariConfig">
               <set name=3D"minimumPoolSize">5</set>
               <set name=3D"maximumPoolSize">20</set>
               <set name=3D"dataSourceClassName">com.mysql.jdbc.jdbc2.optio=
nal.MysqlDataSource</set>
               <set name=3D"username">jdbc.user</set>
               <set name=3D"password">jdbc.pass</set>
               <call name=3D"addDataSourceProperty">
                  <arg>url</arg>
                  <arg>jdbc.url</arg>
               </call>
            </new>
         </arg>
      </new>
    </arg>
  </new></code></pre>
</div>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"bonecp-datasource">BoneCP</h5>
<div class=3D"paragraph">
<p>Connection pooling, available at <a href=3D"http://jolbox.com/index.html=
?page=3Dhttp://jolbox.com/download.html">BoneCP Download</a>.
All configuration options for BoneCP are described here: <a href=3D"http://=
jolbox.com/bonecp/downloads/site/apidocs/com/jolbox/bonecp/BoneCPDataSource=
.html">BoneCP API</a>.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml">  <=
new id=3D"DSTest" class=3D"org.eclipse.jetty.plus.jndi.Resource">
     <arg></arg>
     <arg>jdbc/DSTest</arg>
     <arg>
       <new class=3D"com.jolbox.bonecp.BoneCPDataSource">
         <set name=3D"driverClass">com.mysql.jdbc.Driver</set>
         <set name=3D"jdbcUrl">jdbc.url</set>
         <set name=3D"username">jdbc.user</set>
         <set name=3D"password">jdbc.pass</set>
         <set name=3D"minConnectionsPerPartition">5</set>
         <set name=3D"maxConnectionsPerPartition">50</set>
         <set name=3D"acquireIncrement">5</set>
         <set name=3D"idleConnectionTestPeriod">30</set>
      </new>
    </arg>
  </new></code></pre>
</div>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"c3p0-datasource">c3p0</h5>
<div class=3D"paragraph">
<p>Connection pooling, available at <a href=3D"http://central.maven.org/mav=
en2/c3p0/c3p0/0.9.1.2/c3p0-0.9.1.2.jar">c3p0 Jar</a>.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml">  <=
new id=3D"DSTest" class=3D"org.eclipse.jetty.plus.jndi.Resource">
     <arg></arg>
     <arg>jdbc/DSTest</arg>
     <arg>
      <new class=3D"com.mchange.v2.c3p0.ComboPooledDataSource">
         <set name=3D"driverClass">org.some.Driver</set>
         <set name=3D"jdbcUrl">jdbc.url</set>
         <set name=3D"user">jdbc.user</set>
         <set name=3D"password">jdbc.pass</set>
      </new>
     </arg>
    </new></code></pre>
</div>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"dbcp-datasource">DBCP</h5>
<div class=3D"paragraph">
<p>Connection pooling, available at <a href=3D"http://central.maven.org/mav=
en2/commons-dbcp/commons-dbcp/1.2/commons-dbcp-1.2.jar">dbcp Jar</a>.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml">  <=
new id=3D"DSTest" class=3D"org.eclipse.jetty.plus.jndi.Resource">
     <arg></arg>
     <arg>jdbc/DSTest</arg>
     <arg>
         <new class=3D"org.apache.commons.dbcp.BasicDataSource">
            <set name=3D"driverClassName">org.some.Driver</set>
            <set name=3D"url">jdbc.url</set>
            <set name=3D"username">jdbc.user</set>
            <set name=3D"password">jdbc.pass</set>
         </new>
         </arg></new>
    =20
    </code></pre>
</div>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"atomikos-datasource">Atomikos 3.3.2+</h5>
<div class=3D"paragraph">
<p>Connection pooling + XA transactions.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml">   =
<new id=3D"DSTest" class=3D"org.eclipse.jetty.plus.jndi.Resource">
      <arg></arg>
      <arg>jdbc/DSTest</arg>
      <arg>
         <new class=3D"com.atomikos.jdbc.AtomikosDataSourceBean">
            <set name=3D"minPoolSize">2</set>
            <set name=3D"maxPoolSize">50</set>
            <set name=3D"xaDataSourceClassName">com.mysql.jdbc.jdbc2.option=
al.MysqlXADataSource</set>
            <set name=3D"UniqueResourceName">DSTest</set>
            <get name=3D"xaProperties">
               <call name=3D"setProperty">
                  <arg>url</arg>
                  <arg>jdbc:mysql://localhost:3306/databasename</arg>
               </call>
               <call name=3D"setProperty">
                  <arg>user</arg>
                  <arg>some_username</arg>
               </call>
               <call name=3D"setProperty">
                  <arg>password</arg>
                  <arg>some_password</arg>
               </call>
            </get>
         </new>
      </arg>
    </new></code></pre>
</div>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"mysql-pooled-datasource">MySQL</h5>
<div class=3D"paragraph">
<p>Implements <code>javax.sql.DataSource</code> and <code>javax.sql.Connect=
ionPoolDataSource</code>.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml">  <=
new id=3D"DSTest" class=3D"org.eclipse.jetty.plus.jndi.Resource">
     <arg></arg>
     <arg>jdbc/DSTest</arg>
     <arg>
        <new class=3D"com.mysql.jdbc.jdbc2.optional.MysqlConnectionPoolData=
Source">
           <set name=3D"Url">jdbc:mysql://localhost:3306/databasename</set>
           <set name=3D"User">user</set>
           <set name=3D"Password">pass</set>
        </new>
     </arg>
    </new></code></pre>
</div>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"postgreSQL-pooled-datasource">PostgreSQL</h5>
<div class=3D"paragraph">
<p>Implements <code>javax.sql.ConnectionPoolDataSource</code>.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml">  <=
new id=3D"DSTest" class=3D"org.eclipse.jetty.plus.jndi.Resource">
     <arg></arg>
     <arg>jdbc/DSTest</arg>
     <arg>
        <new class=3D"org.postgresql.ds.PGConnectionPoolDataSource">
           <set name=3D"User">user</set>
           <set name=3D"Password">pass</set>
           <set name=3D"DatabaseName">dbname</set>
           <set name=3D"ServerName">localhost</set>
           <set name=3D"PortNumber">5432</set>

        </new>
     </arg>
  </new></code></pre>
</div>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"DB2-pooled-datasource">DB2</h5>
<div class=3D"paragraph">
<p>Implements <code>javax.sql.ConnectionPoolDataSource</code>.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml">  <=
new id=3D"DSTest" class=3D"org.eclipse.jetty.plus.jndi.Resource">
     <arg></arg>
     <arg>jdbc/DSTest</arg>
     <arg>
        <new class=3D"com.ibm.db2.jcc.DB2ConnectionPoolDataSource">
           <set name=3D"DatabaseName">dbname</set>
           <set name=3D"User">user</set>
           <set name=3D"Password">pass</set>
           <set name=3D"ServerName">servername</set>
           <set name=3D"PortNumber">50000</set>
        </new>
     </arg>
  </new></code></pre>
</div>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"non-pooling-datasources">Non-pooling DataSources</h4>
<div class=3D"paragraph">
<p>If you are deploying in a production environment, we highly recommend us=
ing a Pooling DataSource.
Since that is not always an option we have a handful of examples for non-po=
oling datasources listed here as well.</p>
</div>
<div class=3D"paragraph">
<p>The following is a list of the non-pooled datasource examples:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p><a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/index.html#sql-server-2000-datasou=
rce">SQL Server 2000</a></p>
</li>
<li>
<p><a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/index.html#oracle-9i10g-datasource=
">Oracle 9i/10g</a></p>
</li>
<li>
<p><a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/index.html#postgreSQL-datasource">=
PostgreSQL</a></p>
</li>
<li>
<p><a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/index.html#sybase-datasource">Syba=
se</a></p>
</li>
<li>
<p><a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/index.html#DB2-datasource">DB2</a>=
</p>
</li>
</ul>
</div>
<div class=3D"sect4">
<h5 id=3D"sql-server-2000-datasource">SQL Server 2000</h5>
<div class=3D"paragraph">
<p>Implements <code>javax.sql.DataSource</code> and <code>javax.sql.Connect=
ionPoolDataSource</code>.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml">  <=
new id=3D"DSTest" class=3D"org.eclipse.jetty.plus.jndi.Resource">
     <arg></arg>
     <arg>jdbc/DSTest</arg>
     <arg>
        <new class=3D"net.sourceforge.jtds.jdbcx.JtdsDataSource">
           <set name=3D"User">user</set>
           <set name=3D"Password">pass</set>
           <set name=3D"DatabaseName">dbname</set>
           <set name=3D"ServerName">localhost</set>
           <set name=3D"PortNumber">1433</set>
        </new>
     </arg>
    </new></code></pre>
</div>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"oracle-9i10g-datasource">Oracle 9i/10g</h5>
<div class=3D"paragraph">
<p>Implements <code>javax.sql.DataSource</code> and <code>javax.sql.Connect=
ionPoolDataSource</code>.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml">  <=
new id=3D"DSTest" class=3D"org.eclipse.jetty.plus.jndi.Resource">
    <arg></arg>
    <arg>jdbc/DSTest</arg>
    <arg>
      <new class=3D"oracle.jdbc.pool.OracleDataSource">
        <set name=3D"DriverType">thin</set>
        <set name=3D"URL">jdbc:oracle:thin:@fmsswdb1:10017:otcd</set>
        <set name=3D"User">xxxx</set>
        <set name=3D"Password">xxxx</set>
        <set name=3D"connectionCachingEnabled">true</set>
        <set name=3D"connectionCacheProperties">
          <new class=3D"java.util.Properties">
            <call name=3D"setProperty">
              <arg>MinLimit</arg>
              <arg>5</arg>
            </call>
            <!-- put the other properties in here too -->
          </new>
        </set>
      </new>
    </arg>
  </new></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>For more information, refer to: <a href=3D"http://docs.oracle.com/cd/B14=
117_01/java.101/b10979/conncache.htm">Oracle Database JDBC documentation</a=
>.</p>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"postgreSQL-datasource">PostgreSQL</h5>
<div class=3D"paragraph">
<p>Implements <code>javax.sql.DataSource</code>.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml">  <=
new id=3D"DSTest" class=3D"org.eclipse.jetty.plus.jndi.Resource">
     <arg></arg>
     <arg>jdbc/DSTest</arg>
     <arg>
        <new class=3D"org.postgresql.ds.PGSimpleDataSource">
           <set name=3D"User">user</set>
           <set name=3D"Password">pass</set>
           <set name=3D"DatabaseName">dbname</set>
           <set name=3D"ServerName">localhost</set>
           <set name=3D"PortNumber">5432</set>
        </new>
     </arg>
  </new></code></pre>
</div>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"sybase-datasource">Sybase</h5>
<div class=3D"paragraph">
<p>Implements <code>javax.sql.DataSource</code>.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml">  <=
new id=3D"DSTest" class=3D"org.eclipse.jetty.plus.jndi.Resource">
     <arg></arg>
     <arg>jdbc/DSTest</arg>
     <arg>
        <new class=3D"com.sybase.jdbc2.jdbc.SybDataSource">
           <set name=3D"DatabaseName">dbname</set>
           <set name=3D"User">user</set>
           <set name=3D"Password">pass</set>
           <set name=3D"ServerName">servername</set>
           <set name=3D"PortNumber">5000</set>
        </new>
     </arg>
  </new></code></pre>
</div>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"DB2-datasource">DB2</h5>
<div class=3D"paragraph">
<p>Implements <code>javax.sql.DataSource</code>.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml">  <=
new id=3D"DSTest" class=3D"org.eclipse.jetty.plus.jndi.Resource">
     <arg></arg>
     <arg>jdbc/DSTest</arg>
     <arg>
        <new class=3D"com.ibm.db2.jcc.DB2SimpleDataSource">
           <set name=3D"DatabaseName">dbname</set>
           <set name=3D"User">user</set>
           <set name=3D"Password">pass</set>
           <set name=3D"ServerName">servername</set>
           <set name=3D"PortNumber">50000</set>
        </new>
     </arg>
  </new></code></pre>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
<div class=3D"sect1">
<h2 id=3D"annotations">Annotations</h2>
<div class=3D"sectionbody">
<div class=3D"paragraph">
<p>Jetty supports the servlet specification annotations.
It is not enable by default, so the following sections show you how to enab=
le it, and how to use them.</p>
</div>
<div class=3D"sect2">
<h3 id=3D"annotations-quick-setup">Quick Setup</h3>
<div class=3D"sect3">
<h4 id=3D"_jetty_distribution_2">Jetty Distribution</h4>
<div class=3D"paragraph">
<p>If you are using the jetty distribution, then annotations are enabled by=
 default.
The annotations <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.proj=
ect-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#startup-mo=
dules">module</a> and its transitive dependencies are responsible for makin=
g annotation processing available.</p>
</div>
<div class=3D"paragraph">
<p>Note that annotations that relate to <a href=3D"file:///home/tian/Downlo=
ads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciid=
oc/index.html#jndi">JNDI</a>, such as @Resource and @Resources are enabled =
via the JNDI module, which is a transitive dependency on the annotations mo=
dule.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_jetty_maven_plugin">Jetty Maven Plugin</h4>
<div class=3D"paragraph">
<p>Annotations and JNDI are pre-enabled for the Maven plugin.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_embedding_2">Embedding</h4>
<div class=3D"paragraph">
<p>To use annotations in an embedded scenario, you will need to include the=
 <code>jetty-annotations</code> jar and all its dependencies onto your clas=
spath.
You will also need to include the <code>org.eclipse.jetty.annotations.Annot=
ationConfiguration</code> class into the list of <a href=3D"file:///home/ti=
an/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/ma=
in/asciidoc/index.html#webapp-configurations">Configuration classes</a> app=
lied to the <code>org.eclipse.jetty.webapp.WebAppContext</code> class repre=
senting your webapp.</p>
</div>
<div class=3D"paragraph">
<p>Below is an example application that sets up the standard <code>test-spe=
c.war</code> webapp from the distribution in embedded fashion.
It can also be found in the Jetty GitHub repository on the examples/embedde=
d page as <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-je=
tty-9.4.x/jetty-documentation/src/main/asciidoc/%7BGITBROWSEURL%7D/examples=
/embedded/src/main/java/org/eclipse/jetty/embedded"><code>ServerWithAnnotat=
ions.java</code>.</a>
Note that the <code>test-spec.war</code> uses not only annotations, but als=
o <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.=
x/jetty-documentation/src/main/asciidoc/index.html#jndi">JNDI</a>, so this =
example also enables their processing (via the <a href=3D"file:///home/tian=
/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main=
/asciidoc/index.html#jndi-configuration-classes">org.eclipse.jetty.plus.web=
app.EnvConfiguration</a>, <a href=3D"file:///home/tian/Downloads/b60/ebook/=
jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#=
jndi-configuration-classes">org.eclipse.jetty.plus.webapp.PlusConfiguration=
</a> and their related jars).</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">U=
nresolved directive in administration/annotations/quick-annotations-setup.a=
doc - include::{SRCDIR}/examples/embedded/src/main/java/org/eclipse/jetty/e=
mbedded/ServerWithAnnotations.java[]</code></pre>
</div>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"using-annotations">Working with Annotations</h3>
<div class=3D"sect3">
<h4 id=3D"_which_annotations_are_supported">Which Annotations Are Supported=
</h4>
<div class=3D"paragraph">
<p>Jetty supports interpretation and application of the following annotatio=
ns:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>@Resource</p>
</li>
<li>
<p>@Resources</p>
</li>
<li>
<p>@PostConstruct</p>
</li>
<li>
<p>@PreDestroy</p>
</li>
<li>
<p>@DeclaredRoles</p>
</li>
<li>
<p>@RunAs</p>
</li>
<li>
<p>@MultipartConfig</p>
</li>
<li>
<p>@WebServlet</p>
</li>
<li>
<p>@WebFilter</p>
</li>
<li>
<p>@WebListener</p>
</li>
<li>
<p>@WebInitParam</p>
</li>
<li>
<p>@ServletSecurity, @HttpConstraint, @HttpMethodConstraint</p>
</li>
<li>
<p>@HandlesTypes (on ServletContainerInitializers)</p>
</li>
</ul>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"discoverable_introspectable_annotations">Discovered vs Introspect=
ed Annotations</h4>
<div class=3D"paragraph">
<p>Some types of annotation can be placed on any class, not necessarily jus=
t those with which the container interacts directly.
These type of annotations are refered to as "discovered" to indicate that t=
he container must take proactive action to go out and find them.
The other type of annotation is call "introspected", meaning that they occu=
r on classes with which the container interacts during their lifecycle (e.g=
. <code>javax.servlet.Servlet</code>, <code>javax.servlet.Filter</code>, =
=E2=80=A6=E2=80=8Betc.), and hence can be found by simple inspection of the=
 class at that point.</p>
</div>
<div class=3D"paragraph">
<p>Some examples of discovered annotations are:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>@WebServlet</p>
</li>
<li>
<p>@WebFilter</p>
</li>
<li>
<p>@WebListener</p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>Some examples of introspected annotations are:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>@PostConstruct</p>
</li>
<li>
<p>@PreDestroy</p>
</li>
<li>
<p>@Resource</p>
</li>
</ul>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"jars-scanned-for-annotations">Which Jar Files Are Scanned For Dis=
covered Annotations</h4>
<div class=3D"paragraph">
<p>The web.xml file can contain the attribute <code>metadata-complete</code=
>.
If this is set to <code>true</code>, then <em>no</em> scanning of discovera=
ble annotations takes place.
However, scanning of classes may <em>still</em> occur because of <a href=3D=
"http://docs.oracle.com/javaee/6/api/javax/servlet/ServletContainerInitiali=
zer.html">javax.servlet.ServletContainerInitializer</a>s.
Classes implementing this interface are found by Jetty using the <a href=3D=
"http://docs.oracle.com/javase/6/docs/api/java/util/ServiceLoader.html">jav=
ax.util.ServiceLoader</a> mechanism, and if one is present <em>and</em> it =
includes the @HandlesTypes annotation, then Jetty must scan the class hiera=
rchy of the web application.
This may be very time-consuming if you have many jars in the container=E2=
=80=99s path or in the webapp=E2=80=99s WEB-INF/lib.</p>
</div>
<div class=3D"paragraph">
<p>If scanning is to take place - because either <code>metadata-complete</c=
ode> is <code>false</code> or missing, or because there are one or more <a =
href=3D"http://docs.oracle.com/javaee/6/api/javax/servlet/ServletContainerI=
nitializer.html">javax.servlet.ServletContainerIntializer</a>s with @Handle=
sTypes - then Jetty must consider both the container=E2=80=99s classpath an=
d the webapp=E2=80=99s classpath.</p>
</div>
<div class=3D"paragraph">
<p>By default, Jetty will <em>not</em> scan any classes that are on the con=
tainer=E2=80=99s classpath.
If you need to cause jars and classes that are on the container=E2=80=99s c=
lasspath to be scanned, then you can use the <a href=3D"file:///home/tian/D=
ownloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/a=
sciidoc/index.html#container-include-jar-pattern"><code>org.eclipse.jetty.s=
erver.webapp.ContainerIncludeJarPattern</code></a> <a href=3D"file:///home/=
tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/=
main/asciidoc/index.html#context_attributes">context attribute</a> to speci=
fy a pattern for jars and directories from the container=E2=80=99s classpat=
h to scan.</p>
</div>
<div class=3D"paragraph">
<p>By default Jetty will scan <em>all</em>classes from <code>WEB-INF/classe=
s</code> and all jars from <code>WEB-INF/lib</code> according to the order,=
 if any, established by absolute or relative ordering clauses in web.xml.
If your webapp contains many jar files, you can significantly speed up depl=
oyment by omitting them from scanning.
To do this, use the <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.=
project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#web-in=
f-include-jar-pattern">org.eclipse.jetty.server.webapp.WebInfIncludeJarPatt=
ern</a> <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jett=
y-9.4.x/jetty-documentation/src/main/asciidoc/index.html#context_attributes=
">context attribute</a> to define the patterns of jars that you specificall=
y want to be scanned.</p>
</div>
<div class=3D"paragraph">
<p>Note that if you have configured an <a href=3D"file:///home/tian/Downloa=
ds/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciido=
c/index.html#using-extra-classpath-method">extraClasspath</a> for the webap=
p, then it participates in the scanning process too.
Any classes dirs are treated the same for scanning purposes as if they were=
 in WEB-INF/classes and jars are treated as if they were in WEB-INF/lib.</p=
>
</div>
<div class=3D"paragraph">
<p>See also the next section on <a href=3D"file:///home/tian/Downloads/b60/=
ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index=
.html#servlet-container-initializers">ServletContainerInitializers</a> if y=
ou need to <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-j=
etty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#servlet-contain=
er-initializers">control the order in which they are applied</a>.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_multi_threaded_annotation_scanning">Multi-threaded Annotation Sc=
anning</h4>
<div class=3D"paragraph">
<p><a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/index.html#jars-scanned-for-annota=
tions">If annotation scanning is to be performed</a>, by default Jetty will=
 do it in a multi-threaded manner in order to complete it in the minimum am=
ount of time.</p>
</div>
<div class=3D"paragraph">
<p>If for some reason you don=E2=80=99t want multi-threaded scanning, you c=
an configure Jetty to revert to single-threaded scanning.
There are several ways to configure this:</p>
</div>
<div class=3D"olist arabic">
<ol class=3D"arabic">
<li>
<p>Set the <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-j=
etty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#context_attribu=
tes">context attribute</a> <code>org.eclipse.jetty.annotations.multiThreade=
d</code> to <code>false</code></p>
</li>
<li>
<p>Set the <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-j=
etty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#server_attribut=
es">Server attribute</a> <code>org.eclipse.jetty.annotations.multiThreaded<=
/code> to <code>false</code></p>
</li>
<li>
<p>Set the System property <code>org.eclipse.jetty.annotations.multiThreade=
d</code> to <code>false</code></p>
</li>
</ol>
</div>
<div class=3D"paragraph">
<p>Method 1 will only affect the current webapp.
Method 2 will affect all webapps deployed to the same Server instance.
Method 3 will affect all webapps deployed in the same JVM.</p>
</div>
<div class=3D"paragraph">
<p>By default, Jetty will wait a maximum of 60 seconds for all of the scann=
ing threads to complete.
You can set this to a higher or lower number of seconds by doing one of the=
 following:</p>
</div>
<div class=3D"olist arabic">
<ol class=3D"arabic">
<li>
<p>Set the <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-j=
etty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#context_attribu=
tes">context attribute</a> <code>org.eclipse.jetty.annotations.maxWait</cod=
e></p>
</li>
<li>
<p>Set the <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-j=
etty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#server_attribut=
es">Server attribute</a> <code>org.eclipse.jetty.annotations.maxWait</code>=
</p>
</li>
<li>
<p>Set the System property <code>org.eclipse.jetty.annotations.maxWait</cod=
e></p>
</li>
</ol>
</div>
<div class=3D"paragraph">
<p>Method 1 will only affect the current webapp.
Method 2 will affect all webapps deployed to the same Server instance.
Method 3 will affect all webapps deployed in the same JVM.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"servlet-container-initializers">ServletContainerInitializers</h4>
<div class=3D"paragraph">
<p>The <a href=3D"http://docs.oracle.com/javaee/6/api/javax/servlet/Servlet=
ContainerInitializer.html">javax.servlet.ServletContainerInitializer</a> cl=
ass can exist in: the container=E2=80=99s classpath, the webapp=E2=80=99s <=
code>WEB-INF/classes</code> directory, the webapp=E2=80=99s <code>WEB-INF/l=
ib</code> jars, or any external <a href=3D"file:///home/tian/Downloads/b60/=
ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index=
.html#using-extra-classpath-method">extraClasspath</a> that you have config=
ured on the webapp.</p>
</div>
<div class=3D"paragraph">
<p>The <a href=3D"http://jcp.org/aboutJava/communityprocess/final/jsr340/">=
Servlet Specification</a> does not define any order in which a <code>Servle=
tContainerInitializer</code> must be called when the webapp starts.
By default Jetty will call them in the following order:</p>
</div>
<div class=3D"olist arabic">
<ol class=3D"arabic">
<li>
<p>ServletContainerInitializers from the container=E2=80=99s classpath</p>
</li>
<li>
<p>ServletContainerInitializers from WEB-INF/classes</p>
</li>
<li>
<p>ServletContainerInitializers from WEB-INF/lib jars <em>in the order esta=
blished in web.xml</em>, or in the order that the SCI is returned by the <a=
 href=3D"http://docs.oracle.com/javase/6/docs/api/java/util/ServiceLoader.h=
tml">javax.util.ServiceLoader</a> if there is <em>no</em> ordering</p>
</li>
</ol>
</div>
<div class=3D"paragraph">
<p>As is the case with annotation scanning, the <a href=3D"file:///home/tia=
n/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/mai=
n/asciidoc/index.html#using-extra-classpath-method">extraClasspath</a> is f=
ully considered for <code>ServletContainerInitializer</code> callbacks. <co=
de>ServletContainerInitializer</code> derived from a classes directory on t=
he <code>extraClasspath</code> and jars from an <code>extraClasspath</code>=
 for the webapp are called in step 2 and 3, respectively.</p>
</div>
<div class=3D"sect4">
<h5 id=3D"_controlling_the_order_of_servletcontainerinitializer_invocation"=
>Controlling the order of ServletContainerInitializer invocation</h5>
<div class=3D"paragraph">
<p>If you need <code>ServletContainerInitializer</code> classes called in a=
 specific order that is different from that outlined above, you can use the=
 <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x=
/jetty-documentation/src/main/asciidoc/index.html#context_attributes">conte=
xt attribute</a> <code>org.eclipse.jetty.containerInitializerOrder</code>.
Set them to a list of comma separated class names of <code>ServletContainer=
Initializers</code> in the order that you want them applied.
You may optionally use the wildcard character "<strong>" *once</strong> in =
the list.
It will match all <code>ServletContainerInitializer</code> classed not expl=
icitly named in the list.</p>
</div>
<div class=3D"paragraph">
<p>Here is an example, setting the context attribute in code (although you =
can also do the <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.proj=
ect-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#intro-jett=
y-configuration-webapps">same in xml</a>):</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">W=
ebAppContext context =3D new WebAppContext();
context.setAttribute("org.eclipse.jetty.containerInitializerOrder",
                     "org.eclipse.jetty.websocket.jsr356.server.deploy.WebS=
ocketServerContainerInitializer, com.acme.Foo.MySCI, *");</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>In this example, we ensure that the <code>WebSocketServerContainerInitia=
lizer</code> is the very first <code>ServletContainerInitializer</code> tha=
t is called, followed by MySCI and then any other <code>ServletContainerIni=
tializer</code> instances that were discovered but not yet called.</p>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"excluding-scis">Excluding ServletContainerInitializers</h5>
<div class=3D"paragraph">
<p>By default, as according to the Servlet Specification, all <code>Servlet=
ContainerInitializer</code> that are discovered are invoked (see above for =
how to control the invocation order).
Sometimes, depending on your requirements, you may need to prevent some bei=
ng called at all.</p>
</div>
<div class=3D"paragraph">
<p>In this case, you can define the <code>org.eclipse.jetty.containerInitia=
lizerExclusionPattern</code> <a href=3D"file:///home/tian/Downloads/b60/ebo=
ok/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.ht=
ml#context_attributes">context attribute</a>.
This is a regular expression that defines <a href=3D"http://docs.oracle.com=
/javase/7/docs/api/java/util/regex/Pattern.html">patterns</a> of classnames=
 that you want to exclude.
Here=E2=80=99s an example, setting the context attribute in code, although =
you may do exactly the <a href=3D"file:///home/tian/Downloads/b60/ebook/jet=
ty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#int=
ro-jetty-configuration-webapps">same in xml</a>:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">W=
ebAppContext context =3D new WebAppContext();
context.setAttribute("org.eclipse.jetty.containerInitializerExclusionPatter=
n",
                     "com.acme.*|com.corp.SlowContainerInitializer");</code=
></pre>
</div>
</div>
<div class=3D"paragraph">
<p>In this example we exclude <strong>all</strong> <code>ServletContainerIn=
itializer</code> instances in the com.acme package, and the <code>SlowConta=
inerInitializer</code>.</p>
</div>
<div class=3D"paragraph">
<p>It is possible to use exclusion and ordering together to control <code>S=
ervletContainerInitializer</code> invocation - the exclusions will be appli=
ed before the ordering.</p>
</div>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"using-annotations-embedded">Using Annotations with Jetty Embedded=
</h3>
<div class=3D"sect3">
<h4 id=3D"_setting_up_the_classpath_2">Setting up the Classpath</h4>
<div class=3D"paragraph">
<p>You will need to place the following Jetty jar files onto the classpath =
of your application.
You can obtain them from the <a href=3D"https://www.eclipse.org/jetty/downl=
oad.html">Jetty distribution</a>, or the <a href=3D"http://central.maven.or=
g/maven2/org/eclipse/jetty/jetty-annotations">Maven repository</a>:</p>
</div>
<div class=3D"literalblock">
<div class=3D"content">
<pre>jetty-plus.jar
jetty-annotations.jar</pre>
</div>
</div>
<div class=3D"paragraph">
<p>You will also need the <a href=3D"http://asm.ow2.org/">asm</a> jar, whic=
h you can obtain from <a href=3D"file:///home/tian/Downloads/b60/ebook/jett=
y.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BMVNCENTRAL%7=
D/org/eclipse/jetty/orbit/org.objectweb.asm/3.3.1.v201105211655/org.objectw=
eb.asm-3.3.1.v201105211655.jar">this link.</a></p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_example">Example</h4>
<div class=3D"paragraph">
<p>Here=E2=80=99s an example application that sets up a Jetty server, perfo=
rms some setup to ensure that annotations are scanned, and then deploys a w=
ebapp that uses annotations.
This example also uses the @Resource annotation which involves JNDI, so we =
would also <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-j=
etty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#jndi-embedded">=
add the necessary JNDI jars to the classpath</a>.
The example also adds in the configuration classes that are responsible for=
 JNDI (see line 19).</p>
</div>
<div class=3D"paragraph">
<p>The code is as follows:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">i=
mport org.eclipse.jetty.security.HashLoginService;
import org.eclipse.jetty.server.Server;
import org.eclipse.jetty.webapp.WebAppContext;

/**
 * ServerWithAnnotations
 *
 *
 */
public class ServerWithAnnotations
{
    public static final void main(String args[]) throws Exception
    {
        //Create the server
        Server server =3D new Server(8080);

        //Enable parsing of jndi-related parts of web.xml and jetty-env.xml
        org.eclipse.jetty.webapp.Configuration.ClassList classlist =3D org.=
eclipse.jetty.webapp.Configuration.ClassList.setServerDefault(server);
        classlist.addAfter("org.eclipse.jetty.webapp.FragmentConfiguration"=
, "org.eclipse.jetty.plus.webapp.EnvConfiguration", "org.eclipse.jetty.plus=
.webapp.PlusConfiguration");
        classlist.addBefore("org.eclipse.jetty.webapp.JettyWebXmlConfigurat=
ion", "org.eclipse.jetty.annotations.AnnotationConfiguration");

        //Create a WebApp
        WebAppContext webapp =3D new WebAppContext();
        webapp.setContextPath("/");
        webapp.setWar("../../tests/test-webapps/test-servlet-spec/test-spec=
-webapp/target/test-spec-webapp-9.0.4-SNAPSHOT.war");
        server.setHandler(webapp);

        //Register new transaction manager in JNDI
        //At runtime, the webapp accesses this as java:comp/UserTransaction
        org.eclipse.jetty.plus.jndi.Transaction transactionMgr =3D new org.=
eclipse.jetty.plus.jndi.Transaction(new com.acme.MockUserTransaction());

        //Define an env entry with webapp scope.
        org.eclipse.jetty.plus.jndi.EnvEntry maxAmount =3D new org.eclipse.=
jetty.plus.jndi.EnvEntry (webapp, "maxAmount", new Double(100), true);


        // Register a  mock DataSource scoped to the webapp
        org.eclipse.jetty.plus.jndi.Resource mydatasource =3D new org.eclip=
se.jetty.plus.jndi.Resource(webapp, "jdbc/mydatasource", new com.acme.MockD=
ataSource());

        // Configure a LoginService
        HashLoginService loginService =3D new HashLoginService();
        loginService.setName("Test Realm");
        loginService.setConfig("src/test/resources/realm.properties");
        server.addBean(loginService);


        server.start();
        server.join();
    }

}</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>On line 19 the configuration classes responsible for setting up JNDI and=
 <code>java:comp/env</code> are added.</p>
</div>
<div class=3D"paragraph">
<p>On line 20 we add in the configuration class that ensures annotations ar=
e inspected.</p>
</div>
<div class=3D"paragraph">
<p>On lines 30, 33 and 37 JNDI resources that we will be able to reference =
with @Resource annotations are configured.</p>
</div>
<div class=3D"paragraph">
<p>With the setup above, a servlet that uses annotations and Jetty will hon=
our the annotations when the webapp is deployed can be created:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">i=
mport javax.annotation.security.DeclareRoles;
import javax.annotation.security.RunAs;
import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.ServletOutputStream;
import javax.servlet.annotation.WebInitParam;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.sql.DataSource;
import javax.transaction.UserTransaction;

/**
 * AnnotationTest
 *
 * Use servlet 3.0 annotations from within Jetty.
 *
 * Also uses servlet 2.5 resource injection and lifecycle callbacks
 */

@RunAs("special")
@WebServlet(urlPatterns =3D {"/","/test/*"}, name=3D"AnnotationTest", initP=
arams=3D{@WebInitParam(name=3D"fromAnnotation", value=3D"xyz")})
@DeclareRoles({"user","client"})
public class AnnotationTest extends HttpServlet
{
    private DataSource myDS;

    @Resource(mappedName=3D"UserTransaction")
    private UserTransaction myUserTransaction;

    @Resource(mappedName=3D"maxAmount")
    private Double maxAmount;


    @Resource(mappedName=3D"jdbc/mydatasource")
    public void setMyDatasource(DataSource ds)
    {
        myDS=3Dds;
    }


    @PostConstruct
    private void myPostConstructMethod ()
    {
        System.err.println("PostConstruct called");
    }


    @PreDestroy
    private void myPreDestroyMethod()
    {
        System.err.println("PreDestroy called");
    }

    public void init(ServletConfig config) throws ServletException
    {
        super.init(config);
    }


    public void doPost(HttpServletRequest request, HttpServletResponse resp=
onse) throws ServletException, IOException
    {
        doGet(request, response);
    }

    public void doGet(HttpServletRequest request, HttpServletResponse respo=
nse) throws ServletException, IOException
    {
        try
        {
            response.setContentType("text/html");
            ServletOutputStream out =3D response.getOutputStream();
            out.println("");
            out.println("");
            out.println("<h1>Results</h1>");
            out.println(myDS.toString());
            out.println("<br>");
            out.println(maxAmount.toString());
            out.println("");
            out.println("");
            out.flush();
        }
        catch (Exception e)
        {
            throw new ServletException(e);
        }
    }
}</code></pre>
</div>
</div>
</div>
</div>
</div>
</div>
<div class=3D"sect1">
<h2 id=3D"jmx-chapter">Java Management Extensions (JMX)</h2>
<div class=3D"sectionbody">
<div class=3D"paragraph">
<p>The <a href=3D"http://java.sun.com/products/JavaManagement/">Java Manage=
ment Extensions (JMX) API</a> is a standard API for managing and monitoring=
 resources such as applications, devices, services, and the Java virtual ma=
chine.</p>
</div>
<div class=3D"paragraph">
<p>Typical uses of the JMX technology include:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>Consulting and changing application configuration</p>
</li>
<li>
<p>Accumulating and making available statistics about application behavior<=
/p>
</li>
<li>
<p>Notifying of state changes and erroneous conditions</p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>The JMX API includes remote access, so a remote management program can i=
nteract with a running application for these purposes.</p>
</div>
<div class=3D"sect2">
<h3 id=3D"using-jmx">Using JMX with Jetty</h3>
<div class=3D"paragraph">
<p>Jetty JMX integration uses the platform MBean server implementation that=
 Java VM provides.
The integration is based on the <code>ObjectMBean</code> implementation of =
<code>DynamicMBean</code>.
This implementation allows you to wrap an arbitrary POJO in an MBean and an=
notate it appropriately to expose it via JMX.
See <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.=
4.x/jetty-documentation/src/main/asciidoc/index.html#jetty-jmx-annotations"=
>Jetty JMX Annotations</a>.</p>
</div>
<div class=3D"paragraph">
<p>The <code>MBeanContainer</code> implementation of the <code>Container.Li=
stener</code> interface coordinates creation of MBeans.
The Jetty Server and it=E2=80=99s components use a <a href=3D"file:///home/=
tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/=
main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/util/component/Container.html">=
Container</a> to maintain a containment tree of components and to support n=
otification of changes to that tree.
The <code>MBeanContainer</code> class listens for Container events and crea=
tes and destroys MBeans as required to wrap all Jetty components.</p>
</div>
<div class=3D"paragraph">
<p>You can access the MBeans that Jetty publishes both through built-in Jav=
a VM connector via JConsole or JMC, or by registering a remote JMX connecto=
r and using a remote JMX agent to monitor Jetty.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"configuring-jmx">Configuring JMX</h4>
<div class=3D"paragraph">
<p>This guide describes how to initialize and configure the Jetty JMX integ=
ration.</p>
</div>
<div class=3D"paragraph">
<p>To monitor an application using JMX, perform the following steps:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>Configure the application to instantiate an MBean container.</p>
</li>
<li>
<p>Instrument objects to be MBeans.</p>
</li>
<li>
<p>Provide access for JMX agents to MBeans.</p>
</li>
</ul>
</div>
<div class=3D"sect4">
<h5 id=3D"accessing-jetty-mbeans">Using JConsole to Access Jetty MBeans</h5=
>
<div class=3D"paragraph">
<p>The simplest way to access the MBeans that Jetty publishes is to use the=
 <a href=3D"http://java.sun.com/developer/technicalArticles/J2SE/jconsole.h=
tml">JConsole utility</a> the Java Virtual Machine supplies.
See <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.=
4.x/jetty-documentation/src/main/asciidoc/index.html#jetty-jconsole">Managi=
ng Jetty with JConsole and JMC</a> for instructions on how to configure JVM=
 for use with JConsole or JMC.</p>
</div>
<div class=3D"paragraph">
<p>To access Jetty MBeans via JConsole or JMC, you must:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>Enable the registration of Jetty MBeans into the platform MBeanServer.</=
p>
</li>
<li>
<p>Enable a <code>JMXConnectorServer</code> so that JConsole/JMC can connec=
t and visualize the MBeans.</p>
</li>
</ul>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"registering-jetty-mbeans">Registering Jetty MBeans</h5>
<div class=3D"paragraph">
<p>Configuring Jetty JMX integration differs for standalone and embedded Je=
tty.</p>
</div>
<div class=3D"sect5">
<h6 id=3D"jmx-standalone-jetty">Standalone Jetty</h6>
<div class=3D"paragraph">
<p>JMX is not enabled by default in the Jetty distribution.
To enable JMX in the Jetty distribution, run the following, where <code>{$j=
etty.home}</code> is the directory where you have the Jetty distribution lo=
cated (see <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-j=
etty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#startup-base-an=
d-home">the documentation for Jetty base vs. home examples</a>):</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">$ java -jar {$jetty.home}/start.jar --add-to-start=3Djmx</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Running the above command will append the available configurable element=
s of the JMX module to the <code>{$jetty.base}/start.ini</code> file.
If you are managing separate ini files for your modules in the distribution=
, use <code>--add-to-start.d=3Djmx</code> instead.</p>
</div>
<div class=3D"paragraph">
<p>If you wish to add remote access for JMX, you will also need to enable t=
he JMX-Remote module:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">$ java -jar {$jetty.home}/start.jar --add-to-start=3Djmx-remote</code></=
pre>
</div>
</div>
</div>
<div class=3D"sect5">
<h6 id=3D"jmx-embedded-jetty">Embedded Jetty</h6>
<div class=3D"paragraph">
<p>When running Jetty embedded into an application, create and configure an=
 MBeanContainer instance as follows:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">S=
erver server =3D new Server();

// Setup JMX
MBeanContainer mbContainer=3Dnew MBeanContainer(ManagementFactory.getPlatfo=
rmMBeanServer());
server.addEventListener(mbContainer);
server.addBean(mbContainer);

// Add loggers MBean to server (will be picked up by MBeanContainer above)
server.addBean(Log.getLog());</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Notice that Jetty creates the <code>MBeanContainer</code> immediately af=
ter creating the Server, and immediately after registering it as an <code>E=
ventListener</code> of the Server object (which is also a Container object)=
.</p>
</div>
<div class=3D"paragraph">
<p>Because logging is initialized prior to the <code>MBeanContainer</code> =
(even before the Server itself), it is necessary to register the logger man=
ually via <code>server.addBean()</code> so that the loggers may show up in =
the JMX tree.</p>
</div>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"jmx-using-jetty-maven-plugin">Using the Jetty Maven Plugin with J=
MX</h5>
<div class=3D"paragraph">
<p>If you are using the <a href=3D"file:///home/tian/Downloads/b60/ebook/je=
tty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#je=
tty-maven-plugin">Jetty Maven plugin</a> you should copy the <code>/etc/jet=
ty-jmx.xml</code> file into your webapp project somewhere, such as <code>/s=
rc/etc,</code> then add a <code>&lt;jettyconfig&gt;</code> element to the p=
lugin <code>&lt;configuration&gt;</code>:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><pl=
ugin>
  <groupid>org.eclipse.jetty</groupid>
  <artifactid>jetty-maven-plugin</artifactid>
  <version>{VERSION}</version>
  <configuration>
    <scanintervalseconds>10</scanintervalseconds>
    <jettyxml>src/etc/jetty-jmx.xml</jettyxml>
  </configuration>
</plugin></code></pre>
</div>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"enabling-jmxconnectorserver-for-remote-access">Enabling JMXConnec=
torServer for Remote Access</h4>
<div class=3D"paragraph">
<p>There are two ways of enabling remote connectivity so that JConsole or J=
MC can connect to visualize MBeans.</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>Use the <code>com.sun.management.jmxremote</code> system property on the=
 command line.
Unfortunately, this solution does not work well with firewalls and is not f=
lexible.</p>
</li>
<li>
<p>Use Jetty=E2=80=99s <code>ConnectorServer</code> class.
To enable use of this class, uncomment the correspondent portion in <code>/=
etc/jetty-jmx.xml,</code> like this:</p>
</li>
</ul>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><ne=
w id=3D"ConnectorServer" class=3D"org.eclipse.jetty.jmx.ConnectorServer">
  <arg>
    <new class=3D"javax.management.remote.JMXServiceURL">
      <arg type=3D"java.lang.String">rmi</arg>
      <arg type=3D"java.lang.String">
      <arg type=3D"java.lang.Integer"><systemproperty name=3D"jetty.jmxrmip=
ort" default=3D"1099"></systemproperty></arg>
      <arg type=3D"java.lang.String">/jndi/rmi://<systemproperty name=3D"je=
tty.jmxrmihost" default=3D"localhost">:<systemproperty name=3D"jetty.jmxrmi=
port" default=3D"1099">/jmxrmi</systemproperty></systemproperty></arg>
    </arg></new>
  </arg>
  <arg>org.eclipse.jetty.jmx:name=3Drmiconnectorserver</arg>
  <call name=3D"start">
</call></new></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>This configuration snippet starts an <code>RMIRegistry</code> and a <cod=
e>JMXConnectorServer</code> both on port 1099 (by default), so that firewal=
ls should open just that one port to allow connections from JConsole or JMC=
.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"securing-remote-access">Securing Remote Access</h4>
<div class=3D"paragraph">
<p><code>JMXConnectorServer</code> several options to restrict access.
For a complete guide to controlling authentication and authorization in JMX=
, see <a href=3D"https://blogs.oracle.com/lmalventosa/entry/jmx_authenticat=
ion_authorization">Authentication and Authorization in JMX RMI connectors</=
a> in Luis-Miguel Alventosa=E2=80=99s blog.</p>
</div>
<div class=3D"paragraph">
<p>To restrict access to the <code>JMXConnectorServer</code>, you can use t=
his configuration, where the <code>jmx.password</code> and <code>jmx.access=
</code> files have the format specified in the blog entry above:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><ne=
w id=3D"ConnectorServer" class=3D"org.eclipse.jetty.jmx.ConnectorServer">
  <arg>
    <new class=3D"javax.management.remote.JMXServiceURL">
      <arg type=3D"java.lang.String">rmi</arg>
      <arg type=3D"java.lang.String">
      <arg type=3D"java.lang.Integer"><systemproperty name=3D"jetty.jmxrmip=
ort" default=3D"1099"></systemproperty></arg>
      <arg type=3D"java.lang.String">/jndi/rmi://<systemproperty name=3D"je=
tty.jmxrmihost" default=3D"localhost">:<systemproperty name=3D"jetty.jmxrmi=
port" default=3D"1099">/jmxrmi</systemproperty></systemproperty></arg>
    </arg></new>
  </arg>
  <arg>
    <map>
      <entry>
        <item>jmx.remote.x.password.file</item>
        <item>
          <new class=3D"java.lang.String"><arg><property name=3D"jetty.home=
" default=3D".">/resources/jmx.password</property></arg></new>
        </item>
      </entry>
      <entry>
        <item>jmx.remote.x.access.file</item>
        <item>
          <new class=3D"java.lang.String"><arg><property name=3D"jetty.home=
" default=3D".">/resources/jmx.access</property></arg></new>
        </item>
      </entry>
    </map>
  </arg>
  <arg>org.eclipse.jetty.jmx:name=3Drmiconnectorserver</arg>
  <call name=3D"start">
</call></new></code></pre>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"custom-monitor-applcation">Custom Monitor Application</h4>
<div class=3D"paragraph">
<p>Using the JMX API, you can also write a custom application to monitor yo=
ur Jetty server.
To allow this application to connect to your Jetty server, you need to unco=
mment the last section of the <code>/etc/jetty-jmx.xml</code> configuration=
 file and optionally modify the endpoint name.
Doing so creates a JMX HTTP connector and registers a JMX URL that outputs =
to the <code>Stderr</code> log.</p>
</div>
<div class=3D"paragraph">
<p>You should provide the URL that appears in the log to your monitor appli=
cation in order to create an <code>MBeanServerConnection.</code>
You can use the same URL to connect to your Jetty instance from a remote ma=
chine using JConsole or JMC.
See the <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jett=
y-9.4.x/jetty-documentation/src/main/asciidoc/%7BGITBROWSEURL%7D/jetty-jmx/=
src/main/config/etc/jetty-jmx.xml">configuration file</a> for more details.=
</p>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"jetty-jmx-annotations">Jetty JMX Annotations</h3>
<div class=3D"paragraph">
<p>When the <code>jetty-jmx</code> libraries are present on startup and the=
 wiring is enabled for exposing Jetty MBeans to JMX, there are three annota=
tions that govern when and how MBeans are created and exposed.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"jmx-annotation-introspection">Annotation Introspection</h4>
<div class=3D"paragraph">
<p>When JMX is configured and enabled in Jetty, any time an object is regis=
tered with the Server it is introspected as a potential MBean to be exposed=
.
This introspection proceeds as follows assuming the class is named <code>co=
m.acme.Foo</code>:</p>
</div>
<div class=3D"olist arabic">
<ol class=3D"arabic">
<li>
<p>All influences for <code>com.acme.Foo</code> determined.
These include each class in the chain of super classes, and by convention e=
ach of these classes following a form of <code>com.acme.jmx.FooMBean</code>=
.
All super classes and their corresponding MBean representations are then us=
ed in the next step.</p>
</li>
<li>
<p>Each potential influencing class is checked for the <code>@ManagedObject=
</code> annotation.
Should this annotation exist at any point in the chain of influencers then =
an MBran is created with the description of the version <code>@ManagedObjec=
t</code> discovered.</p>
</li>
<li>
<p>Once a MBean has been created for an object then each potential influenc=
ing object is introspected for <code>@ManagedAttribute</code> and <code>@Ma=
nagedOperation</code> annotations and the corresponding type is exposed to =
the MBean.</p>
</li>
</ol>
</div>
<div class=3D"paragraph">
<p>The convention of looking for <code>@ManagedObject</code> annotations on=
 <code>.jmx.ClassMBean</code> allows for a normal POJOs to be wrapped in an=
 MBean without itself without requiring it being marked up with annotations=
.
Since the POJO is passed to these wrapped derived Mbean instances and is an=
 internal variable then the MBean can be used to better expose a set of att=
ributes and operations that may not have been anticipated when the original=
 object was created.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"jmx-managed-object">@ManagedObject</h4>
<div class=3D"paragraph">
<p>The <code>@ManagedObject</code> annotation is used on a class at the top=
 level to indicate that it should be exposed as an MBean.
It has only one attribute to it which is used as the description of the MBe=
an.
Should multiple <code>@ManagedObject</code> annotations be found in the cha=
in of influence then the first description is used.</p>
</div>
<div class=3D"paragraph">
<p>The list of attributes available are:</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">value</dt>
<dd>
<p>The description of the Managed Object.</p>
</dd>
</dl>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"jmx-managed-attribute">@ManagedAttribute</h4>
<div class=3D"paragraph">
<p>The <code>@ManagedAttribute</code> annotation is used to indicate that a=
 given method exposes a JMX attribute.
This annotation is placed always on the reader method of a given attribute.
Unless it is marked as read-only in the configuration of the annotation a c=
orresponding setter is looked for following normal naming conventions.
For example if this annotation is on a method called <code>getFoo()</code> =
then a method called <code>setFoo()</code> would be looked for and if found=
 wired automatically into the JMX attribute.</p>
</div>
<div class=3D"paragraph">
<p>The list of attributes available are:</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">value</dt>
<dd>
<p>The description of the Managed Attribute.</p>
</dd>
<dt class=3D"hdlist1">name</dt>
<dd>
<p>The name of the Managed Attribute.</p>
</dd>
<dt class=3D"hdlist1">proxied</dt>
<dd>
<p>Value is true if the corresponding MBean for this object contains the me=
thod of this JMX attribute in question.</p>
</dd>
<dt class=3D"hdlist1">readonly</dt>
<dd>
<p>By default this value is false which means that a corresponding setter w=
ill be looked for an wired into the attribute should one be found.
Setting this to true make the JMX attribute read only.</p>
</dd>
<dt class=3D"hdlist1">setter</dt>
<dd>
<p>This attribute can be used when the corresponding setter for a JMX attri=
bute follows a non-standard naming convention and it should still be expose=
d as the setter for the attribute.</p>
</dd>
</dl>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"jmx-managed-operation">@ManagedOperation</h4>
<div class=3D"paragraph">
<p>The <code>@ManagedOperation</code> annotation is used to indicate that a=
 given method should be considered a JMX operation.</p>
</div>
<div class=3D"paragraph">
<p>The list of attributes available are:</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">value</dt>
<dd>
<p>The description of the Managed Operation.</p>
</dd>
<dt class=3D"hdlist1">impact</dt>
<dd>
<p>The impact of an operation.
By default this value is "UNKNOWN" and acceptable values are "ACTION", "INF=
O", "ACTION_INFO" and should be used according to their definitions with JM=
X.</p>
</dd>
<dt class=3D"hdlist1">proxied</dt>
<dd>
<p>Value is true if the corresponding MBean for this object contains the me=
thod of this JMX operation in question.</p>
</dd>
</dl>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"jmx-name-annotation">@Name</h4>
<div class=3D"paragraph">
<p>A fourth annotation is often used in conjunction with the JMX annotation=
s mentioned above.
This annotation is used to describe variables in method signatures so that =
when rendered into tools like JConsole it is clear what the parameters are.
For example:</p>
</div>
<div class=3D"paragraph">
<p>The list of attributes available are:</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">value</dt>
<dd>
<p>The name of the parameter.</p>
</dd>
<dt class=3D"hdlist1">description</dt>
<dd>
<p>The description of the parameter.</p>
</dd>
</dl>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"jmx-annotation-example">Example</h4>
<div class=3D"paragraph">
<p>The following is an example of each of the annotations mentioned above i=
n practice.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">p=
ackage com.acme;

import org.eclipse.jetty.util.annotation.ManagedAttribute;
import org.eclipse.jetty.util.annotation.ManagedObject;
import org.eclipse.jetty.util.annotation.ManagedOperation;
import org.eclipse.jetty.util.annotation.Name;

@ManagedObject("Test MBean Annotations")
public class Derived extends Base implements Signature
{
    String fname=3D"Full Name";

    @ManagedAttribute(value=3D"The full name of something", name=3D"fname")
    public String getFullName()
    {
        return fname;
    }

    public void setFullName(String name)
    {
        fname=3Dname;
    }

    @ManagedOperation("Doodle something")
    public void doodle(@Name(value=3D"doodle", description=3D"A description=
 of the argument") String doodle)
    {
        System.err.println("doodle "+doodle);
    }
}</code></pre>
</div>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"jetty-jconsole">Managing Jetty with JConsole and JMC</h3>
<div class=3D"paragraph">
<p>JConsole and the Java Mission Control (JMX) are graphical tools; they al=
low you to remotely manage and monitor your server and web application stat=
us using JMX.
When following the instructions given below, please also ensure that you ma=
ke any necessary changes to any anti-virus software you may be using which =
may prevent JConsole or JMC from running.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"_starting_jetty_standalone">Starting Jetty Standalone</h4>
<div class=3D"paragraph">
<p>The simplest way to enable support is to add the JMX-Remote support modu=
le to your <code>{$jetty.base}</code>.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">[mybase]$ java /opt/jetty-dist/start.jar --add-to-start=3Djmx-remote, jm=
x
INFO: jmx-remote      initialised in ${jetty.base}/start.ini
INFO: jmx             initialised in ${jetty.base}/start.ini</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Then open the <code>{$jetty.base}/start.ini</code> (or <code>{$jetty.bas=
e}/start.d/jmx-remote.ini</code>) file and edit the properties to suit your=
 needs:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">#
# Initialize module jmx-remote
#
--module=3Djmx-remote
## JMX Configuration
## Enable for an open port accessible by remote machines
jetty.jmxrmihost=3Dlocalhost
jetty.jmxrmiport=3D1099</code></pre>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"jetty-jconsole-monitoring">Monitoring Jetty with JConsole</h4>
<div class=3D"paragraph">
<p>To monitor Jetty=E2=80=99s server status with JConsole, start Jetty and =
then start JConsole by typing <code>jconsole</code> on the command line.</p=
>
</div>
<div class=3D"sect4">
<h5 id=3D"_connecting_to_your_server_process">Connecting to your server pro=
cess</h5>
<div class=3D"paragraph">
<p>After you start Jetty, you will see a dialog box in JConsole with a list=
 of running processes to which you can connect.
It should look something like so:</p>
</div>
<div class=3D"paragraph">
<p><span class=3D"image"><img src=3D"file:///home/tian/Downloads/b60/ebook/=
jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/images/jcon=
sole1.jpg" alt=3D"image" width=3D"576"></span></p>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock important">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Important</div>
</td>
<td class=3D"content">
If you don=E2=80=99t see your Jetty process in the list of processes you ca=
n connect to, quickly switch tabs, or close and reopen a new "New Connectio=
n" dialog window.
This forces JConsole to refresh the list, and recognize your newly-started =
Jetty process.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
<div class=3D"paragraph">
<p>Select the start.jar entry and click the "Connect" button.
A new JConsole window opens:</p>
</div>
<div class=3D"paragraph">
<p><span class=3D"image"><img src=3D"file:///home/tian/Downloads/b60/ebook/=
jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/images/jcon=
sole2.jpg" alt=3D"image" width=3D"576"></span></p>
</div>
<div class=3D"paragraph">
<p>From this window you can monitor memory usage, thread usage, classloadin=
g and VM statistics.
You can also perform operations such as a manual garbage collect.
JConsole is an extremely powerful and useful tool.</p>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_managing_jetty_objects_with_jconsole">Managing Jetty Objects wit=
h JConsole</h4>
<div class=3D"paragraph">
<p>The MBean tab of JConsole allows access to managed objects within the Ja=
va application, including MBeans the JVM provides.
If you also want to interact with the Jetty JMX implementation via JConsole=
, you need to start Jetty JMX in a form that JConsole can access.
See <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.=
4.x/jetty-documentation/src/main/asciidoc/index.html#using-jmx">Using JMX w=
ith Jetty</a> for more information.</p>
</div>
<div class=3D"paragraph">
<p><span class=3D"image"><img src=3D"file:///home/tian/Downloads/b60/ebook/=
jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/images/jcon=
sole3.png" alt=3D"image" width=3D"576"></span></p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"jetty-jmc-monitoring">Monitoring Jetty with JMC</h4>
<div class=3D"paragraph">
<p>To monitor Jetty=E2=80=99s server status with JMC, start Jetty and then =
start JMC by typing <code>jmc</code> on the command line.</p>
</div>
<div class=3D"sect4">
<h5 id=3D"_connecting_to_your_server_process_2">Connecting to your server p=
rocess</h5>
<div class=3D"paragraph">
<p>After you start Jetty, you will see a dialog box in JMC with a list of r=
unning processes to which you can connect.
It should look something like so:</p>
</div>
<div class=3D"paragraph">
<p><span class=3D"image"><img src=3D"file:///home/tian/Downloads/b60/ebook/=
jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/images/jmc1=
.png" alt=3D"image" width=3D"576"></span></p>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock important">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Important</div>
</td>
<td class=3D"content">
If you don=E2=80=99t see your Jetty process in the list of processes you ca=
n connect to, quickly switch tabs, or close and reopen a new "New Connectio=
n" dialog window.
This forces JMC to refresh the list, and recognize your newly-started Jetty=
 process.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
<div class=3D"paragraph">
<p>Double-click the start.jar entry or right-click the start.jar entry and =
select "Start JMX Console".
A new JMC window opens on the right:</p>
</div>
<div class=3D"paragraph">
<p><span class=3D"image"><img src=3D"file:///home/tian/Downloads/b60/ebook/=
jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/images/jmc2=
.png" alt=3D"image" width=3D"576"></span></p>
</div>
<div class=3D"paragraph">
<p>From this window you can monitor memory usage, thread usage, classloadin=
g and VM statistics.
You can also perform operations such as a manual garbage collect.
JMC is an extremely powerful and useful tool.</p>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_managing_jetty_objects_with_jconsole_2">Managing Jetty Objects w=
ith JConsole</h4>
<div class=3D"paragraph">
<p>The MBean tab of JMC allows access to managed objects within the Java ap=
plication, including MBeans the JVM provides.
If you also want to interact with the Jetty JMX implementation via JMC, you=
 need to start Jetty JMX in a form that JMC can access.
See <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.=
4.x/jetty-documentation/src/main/asciidoc/index.html#using-jmx">Using JMX w=
ith Jetty</a> for more information.</p>
</div>
<div class=3D"paragraph">
<p><span class=3D"image"><img src=3D"file:///home/tian/Downloads/b60/ebook/=
jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/images/jmc3=
.png" alt=3D"image" width=3D"576"></span></p>
</div>
</div>
</div>
</div>
</div>
<div class=3D"sect1">
<h2 id=3D"alpn-chapter">Application Layer Protocol Negotiation (ALPN)</h2>
<div class=3D"sectionbody">
<div class=3D"paragraph">
<p>The development of new web protocols such as HTTP/2 raised the need of p=
rotocol negotiation within a Transport Layer Security (TLS) handshake.
A protocol negotiation called <a href=3D"https://tools.ietf.org/html/rfc730=
1">ALPN</a> (Application Layer Protocol Negotiation) RFC7301 has been defin=
ed to accomplish this.</p>
</div>
<div class=3D"paragraph">
<p>ALPN has now replaced the older (and now fully deprecated) NPN in the ge=
neral Web of 2016.</p>
</div>
<div class=3D"paragraph">
<p>For those browsers that support HTTP/2, they all now support the ALPN ne=
gotiation layers for TLS.
Starting with Jetty 9.3.0, only ALPN is supported by Jetty.</p>
</div>
<div class=3D"sect2">
<h3 id=3D"alpn">Introducing ALPN</h3>
<div class=3D"paragraph">
<p>The Jetty project provides an implementation of the TLS extension for AL=
PN for OpenJDK 7 and OpenJDK 8.
ALPN allows the application layer to negotiate which protocol to use over t=
he secure connection.</p>
</div>
<div class=3D"paragraph">
<p>Any protocol can be negotiated by ALPN within a TLS connection.
The protocols that are most commonly negotiated are HTTP/2 (for browsers th=
at support it) and, historically, SPDY.
The ALPN implementation is therefore not HTTP/2 or SPDY specific in any way=
.
Jetty=E2=80=99s ALPN implementation, although hosted under the umbrella of =
the Jetty project, is independent of Jetty (the Servlet Container); you can=
 use the ALPN implementation in any other Java network server.</p>
</div>
<div class=3D"paragraph">
<p>The Jetty distribution will automatically enable ALPN when it is needed =
to by a HTTP/2 connector, so for the most part ALPN is transparent to the a=
verage deployer.
This section provides the detail required for non-standard deployments or d=
eveloping to the ALPN API.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"alpn-starting">Starting the JVM</h4>
<div class=3D"paragraph">
<p>To enable ALPN support, start the JVM as follows:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-plain" data-lang=3D"plain"=
>java -Xbootclasspath/p:<path_to_alpn_boot_jar> ...</path_to_alpn_boot_jar>=
</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Where <code>path_to_alpn_boot_jar</code> is the path on the file system =
for the ALPN Boot Jar file,such as the one at the Maven coordinates <code>o=
rg.mortbay.jetty.alpn:alpn-boot</code>.</p>
</div>
<div class=3D"paragraph">
<p>Be certain <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.projec=
t-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#alpn-version=
s">to get the ALPN Boot Jar version which matches the version of your JRE</=
a>.</p>
</div>
<div class=3D"sect4">
<h5 id=3D"alpn-osgi">Starting in OSGi</h5>
<div class=3D"paragraph">
<p>To use ALPN in an OSGi environment, in addition to putting the ALPN jar =
on the boot classpath for the container, you will also need to deploy the <=
code>jetty-osgi-alpn</code> jar.
This jar contains a Fragment-Host directive that ensures the ALPN classes w=
ill be available from the system bundle.</p>
</div>
<div class=3D"paragraph">
<p>You can download the <a href=3D"http://central.maven.org/maven2/org/ecli=
pse/jetty/osgi/jetty-osgi-alpn/">jetty-osgi-alpn jar</a> from Maven Central=
.</p>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"alpn-understanding">Understanding the ALPN API</h4>
<div class=3D"paragraph">
<p>Applications need to interact with ALPN TLS extension protocol negotiati=
ons.
For example, server applications need to know whether the client supports A=
LPN, and client applications needs to know whether the server supports ALPN=
.</p>
</div>
<div class=3D"paragraph">
<p>To implement this interaction, Jetty=E2=80=99s ALPN implementation provi=
des an API to applications, hosted at Maven coordinates
<code>org.eclipse.jetty.alpn:alpn-api</code>.
You need to declare this dependency as provided, because the <code>alpn-boo=
t</code> jar already includes it (see the previous section), and it is ther=
efore available from the boot classpath.</p>
</div>
<div class=3D"paragraph">
<p>The API consists of a single class, <code>org.eclipse.jetty.alpn.ALPN</c=
ode>, and applications need to register instances of <code>SSLSocket</code>=
 or <code>SSLEngine</code> with a <code>ClientProvider</code> or <code>Serv=
erProvider</code> (depending on whether the application is a client applica=
tion or server application).
Refer to <code>ALPN</code> Javadocs and to the examples below for further d=
etails about client and server provider methods.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"alpn-client-example">Client Example</h4>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">S=
SLContext sslContext =3D ...;
final SSLSocket sslSocket =3D (SSLSocket)context.getSocketFactory().createS=
ocket("localhost", server.getLocalPort());

ALPN.put(sslSocket, new ALPN.ClientProvider()
{
    @Override
    public boolean supports()
    {
        return true;
    }

    @Override
    public List<string> protocols()
    {
        return Arrays.asList("h2", "http/1.1");
    }

    @Override
    public void unsupported()
    {
        ALPN.remove(sslSocket);
    }

    @Override
    public void selected(String protocol)
    {
        ALPN.remove(sslSocket);
        System.out.println("Protocol Selected is: " + protocol);
    }
});</string></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The ALPN implementation calls <code>ALPN.ClientProvider</code> methods <=
code>supports()</code>, <code>protocols()</code>, <code>unsupported()</code=
> and <code>selected(String)</code>, so that the client application can:</p=
>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>Decide whether to support ALPN</p>
</li>
<li>
<p>Provide the protocols supported</p>
</li>
<li>
<p>Know whether the server supports ALPN</p>
</li>
<li>
<p>Know the protocol chosen by the server</p>
</li>
</ul>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"alpn-server-example">Server Example</h4>
<div class=3D"paragraph">
<p>The example for SSLEngine is identical, and you just need to replace the=
 SSLSocket instance with an SSLEngine instance.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">f=
inal SSLSocket sslSocket =3D ...;
ALPN.put(sslSocket, new ALPN.ServerProvider()
{
    @Override
    public void unsupported()
    {
        ALPN.remove(sslSocket);
    }

    @Override
    public String select(List<string> protocols);
    {
        ALPN.remove(sslSocket);
        return protocols.get(0);
    }
});</string></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The ALPN implementation calls <code>ALPN.ServerProvider</code> methods <=
code>unsupported()</code>, and <code>select(List&lt;String&gt;),</code> so =
that the server application can:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>know whether the client supports ALPN.</p>
</li>
<li>
<p>select one of the protocols the client supports.</p>
</li>
</ul>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"alpn-implementation">Implementation Details</h4>
<div class=3D"paragraph">
<p>It is important that implementations of <code>ALPN.ServerProvider</code>=
 and <code>ALPN.ClientProvider</code> remove the <code>sslSocket</code> or =
<code>sslEngine</code> when the negotiation is complete, like shown in the =
examples above.</p>
</div>
<div class=3D"paragraph">
<p>Failing to do so will cause a memory leak.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"alpn-tests">Unit Tests</h4>
<div class=3D"paragraph">
<p>You can write and run unit tests that use the ALPN implementation.
The solution that we use with Maven is to specify an additional command lin=
e argument to the Surefire plugin:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><pr=
oject>

<properties>
    <alpn-boot-version>8.1.4.v20150727</alpn-boot-version>
</properties>

<build>
    <plugins>
        <plugin>
            <artifactid>maven-surefire-plugin</artifactid>
            <configuration>
                <argline>
                    -Xbootclasspath/p:${settings.localRepository}/org/mortb=
ay/jetty/alpn/alpn-boot/${alpn-boot-version}/alpn-boot-${alpn-boot-version}=
.jar
                </argline>
            </configuration>
        </plugin>

        ...

    </plugins>
</build>

...

</project></code></pre>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"alpn-debugging">Debugging</h4>
<div class=3D"paragraph">
<p>You can enable debug logging for the ALPN implementation in this way:</p=
>
</div>
<div class=3D"literalblock">
<div class=3D"content">
<pre>ALPN.debug =3D true;</pre>
</div>
</div>
<div class=3D"paragraph">
<p>Since the ALPN class is in the boot classpath, we chose not to use loggi=
ng libraries because we do not want to override application logging library=
 choices; therefore the logging is performed directly on <code>System.err</=
code>.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"alpn-license-details">License Details</h4>
<div class=3D"paragraph">
<p>The ALPN implementation relies on modification of a few OpenJDK classes =
and on a few new classes that need to live in the <code>sun.security.ssl</c=
ode> package.
These classes are released under the same GPLv2+exception license of OpenJD=
K.</p>
</div>
<div class=3D"paragraph">
<p>The ALPN class and its nested classes are released under same license as=
 the classes of the Jetty project.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"alpn-versions">Versions</h4>
<div class=3D"paragraph">
<p>The ALPN implementation, relying on modifications of OpenJDK classes, up=
dates every time there are updates to the modified OpenJDK classes.</p>
</div>
<table class=3D"tableblock frame-all grid-all spread">
<caption class=3D"title">Table 12. ALPN vs. OpenJDK versions</caption>
<colgroup>
<col style=3D"width: 50%;">
<col style=3D"width: 50%;">
</colgroup>
<thead>
<tr>
<th class=3D"tableblock halign-left valign-top">OpenJDK version</th>
<th class=3D"tableblock halign-left valign-top">ALPN version</th>
</tr>
</thead>
<tbody>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">1.7=
.0u40</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">7.1=
.0.v20141016</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">1.7=
.0u45</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">7.1=
.0.v20141016</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">1.7=
.0u51</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">7.1=
.0.v20141016</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">1.7=
.0u55</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">7.1=
.0.v20141016</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">1.7=
.0u60</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">7.1=
.0.v20141016</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">1.7=
.0u65</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">7.1=
.0.v20141016</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">1.7=
.0u67</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">7.1=
.0.v20141016</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">1.7=
.0u71</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">7.1=
.2.v20141202</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">1.7=
.0u72</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">7.1=
.2.v20141202</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">1.7=
.0u75</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">7.1=
.3.v20150130</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">1.7=
.0u76</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">7.1=
.3.v20150130</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">1.7=
.0u79</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">7.1=
.3.v20150130</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">1.7=
.0u80</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">7.1=
.3.v20150130</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">1.8=
.0</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">8.1=
.0.v20141016</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">1.8=
.0u05</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">8.1=
.0.v20141016</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">1.8=
.0u11</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">8.1=
.0.v20141016</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">1.8=
.0u20</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">8.1=
.0.v20141016</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">1.8=
.0u25</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">8.1=
.2.v20141202</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">1.8=
.0u31</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">8.1=
.3.v20150130</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">1.8=
.0u40</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">8.1=
.3.v20150130</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">1.8=
.0u45</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">8.1=
.3.v20150130</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">1.8=
.0u51</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">8.1=
.4.v20150727</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">1.8=
.0u60</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">8.1=
.5.v20150921</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">1.8=
.0u65</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">8.1=
.6.v20151105</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">1.8=
.0u66</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">8.1=
.6.v20151105</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">1.8=
.0u71</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">8.1=
.7.v20160121</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">1.8=
.0u72</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">8.1=
.7.v20160121</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">1.8=
.0u73</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">8.1=
.7.v20160121</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">1.8=
.0u74</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">8.1=
.7.v20160121</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">1.8=
.0u77</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">8.1=
.7.v20160121</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">1.8=
.0u91</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">8.1=
.7.v20160121</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">1.8=
.0u92</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">8.1=
.8.v20160420</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">1.8=
.0u101</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">8.1=
.9.v20160720</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">1.8=
.0u102</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">8.1=
.9.v20160720</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">1.8=
.0u111</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">8.1=
.9.v20160720</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">1.8=
.0u112</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">8.1=
.10.v20161026</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">1.8=
.0u121</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">8.1=
.11.v20170118</p></td>
</tr>
</tbody>
</table>
</div>
<div class=3D"sect3">
<h4 id=3D"alpn-build">How to build ALPN</h4>
<div class=3D"paragraph">
<p>This section is for Jetty developers that need to update the ALPN implem=
entation with the OpenJDK versions.</p>
</div>
<div class=3D"paragraph">
<p>Clone the OpenJDK repository with the following command:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">$ hg clone http://hg.openjdk.java.net/jdk7u/jdk7u jdk7u # OpenJDK 7
$ hg clone http://hg.openjdk.java.net/jdk8u/jdk8u jdk8u # OpenJDK 8
$ cd !$
$ ./get_source.sh</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>To update the source to a specific tag, use the following command:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">$ ./make/scripts/hgforest.sh update <tag-name></tag-name></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The list of OpenJDK tags can be obtained from these pages: <a href=3D"ht=
tp://hg.openjdk.java.net/jdk7u/jdk7u/tags">OpenJDK 7</a> / <a href=3D"http:=
//hg.openjdk.java.net/jdk8u/jdk8u/tags">OpenJDK 8</a>.</p>
</div>
<div class=3D"paragraph">
<p>You will then need to compare and incorporate the OpenJDK source changes=
 into the modified OpenJDK classes at the <a href=3D"https://github.com/jet=
ty-project/jetty-alpn">ALPN GitHub Repository</a>, branch <code>openjdk7</c=
ode> for OpenJDK 7 and branch <code>master</code> for OpenJDK 8.</p>
</div>
</div>
</div>
</div>
</div>
<div class=3D"sect1">
<h2 id=3D"http2">HTTP/2</h2>
<div class=3D"sectionbody">
<div class=3D"sect2">
<h3 id=3D"http2-introduction">Introducing HTTP/2</h3>
<div class=3D"paragraph">
<p>Jetty supports both a client and a server implementation for the HTTP/2 =
protocol as defined by <a href=3D"http://tools.ietf.org/html/rfc7540">RFC 7=
540</a>.</p>
</div>
<div class=3D"paragraph">
<p>The requirements for running HTTP/2 are JDK 8 or greater, and typically =
also ALPN support (see <a href=3D"file:///home/tian/Downloads/b60/ebook/jet=
ty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#alp=
n-chapter">Application Layer Protocol Negotiation (ALPN)</a>).</p>
</div>
<div class=3D"paragraph">
<p>A server deployed over TLS (SSL) normally advertises the HTTP/2 protocol=
 via the TLS extension Application Layer Protocol Negotiation <a href=3D"fi=
le:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documen=
tation/src/main/asciidoc/index.html#alpn">(ALPN)</a>.</p>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock important">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Important</div>
</td>
<td class=3D"content">
To use HTTP/2 in Jetty via a TLS connector you need to add the <a href=3D"f=
ile:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-docume=
ntation/src/main/asciidoc/index.html#alpn-starting">ALPN boot jar</a> in th=
e boot classpath.
This is done automatically when using the Jetty distribution=E2=80=99s star=
t.jar <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-=
9.4.x/jetty-documentation/src/main/asciidoc/index.html#startup-modules">mod=
ule system</a>, but must be configured directly otherwise.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
<div class=3D"sect3">
<h4 id=3D"http2-modules">Jetty HTTP/2 Sub Projects</h4>
<div class=3D"paragraph">
<p>The Jetty HTTP/2 implementation consists of the following sub-projects (=
each producing a jar file):</p>
</div>
<div class=3D"olist arabic">
<ol class=3D"arabic">
<li>
<p><code>http2-common</code>: Contains the HTTP/2 API and a partial impleme=
ntation shared across other modules.</p>
</li>
<li>
<p><code>http2-hpack</code>: Contains the HTTP/2 HPACK implementation for H=
TTP header compression.</p>
</li>
<li>
<p><code>http2-server</code>: Provides the server-side implementation of HT=
TP/2.</p>
</li>
<li>
<p><code>http2-client</code>: Provides the implementation of HTTP/2 client =
with a low level HTTP/2 API, dealing with HTTP/2 streams, frames, etc.</p>
</li>
<li>
<p><code>http2-http-client-transport</code>: Provides the implementation of=
 the HTTP/2 transport for <code>HttpClient</code> (see <a href=3D"file:///h=
ome/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/=
src/main/asciidoc/index.html#http-client">HTTP Client</a>).
Applications can use the higher level API provided by <code>HttpClient</cod=
e> to send HTTP requests and receive HTTP responses, and the HTTP/2 transpo=
rt will take care of converting them in HTTP/2 format (see also <a href=3D"=
https://webtide.com/http2-support-for-httpclient/">this blog entry</a>).</p=
>
</li>
</ol>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"http2-enabling">Enabling HTTP/2</h3>
<div class=3D"paragraph">
<p>This section is written assuming that a <a href=3D"file:///home/tian/Dow=
nloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asc=
iidoc/index.html#startup-base-and-home">Jetty base directory</a> is being u=
sed.
A demo Jetty base that supports HTTP/1, HTTPS/1 and deployment from a webap=
ps directory can be created with the commands:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">$ JETTY_BASE=3Dhttp2-demo
$ mkdir $JETTY_BASE
$ cd $JETTY_BASE
$ java -jar $JETTY_HOME/start.jar --add-to-start=3Dhttp,https,deploy</code>=
</pre>
</div>
</div>
<div class=3D"paragraph">
<p>The commands above create a <code>$JETTY_BASE</code> directory called <c=
ode>http2-demo</code>, and initializes the <code>http,</code> <code>https</=
code> and <code>deploy</code> modules (and their dependencies) to run a typ=
ical Jetty Server on port 8080 (for HTTP/1) and 8443 (for HTTPS/1).
Note that the HTTPS module downloads a demo keystore file with a self signe=
d certificate, which needs to be replaced by a Certificate Authority issued=
 certificate for real deployment.</p>
</div>
<div class=3D"paragraph">
<p>To add HTTP/2 to this demo base, it is just a matter of enabling the <co=
de>http2</code> module with the following command:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">$ java -jar $JETTY_HOME/start.jar --add-to-start=3Dhttp2</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>This command does not create a new connector, but instead simply adds th=
e HTTP/2 protocol to the existing HTTPS/1 connector, so that it now support=
s both protocols on port 8443.
To do this, it also transitively enables the ALPN module for protocol negot=
iation.
The support for each protocol can be seen in the info logging when the serv=
er is started:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">$ java -jar $JETTY_HOME/start.jar
...
2015-06-17 14:16:12.549:INFO:oejs.ServerConnector:main: Started ServerConne=
ctor@34c9c77f{HTTP/1.1,[http/1.1]}{0.0.0.0:8080}
2015-06-17 14:16:12.782:INFO:oejs.ServerConnector:main: Started ServerConne=
ctor@711f39f9{SSL,[ssl, alpn, h2, h2-17, http/1.1]}{0.0.0.0:8443}
...</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>This log shows that port 8080 supports only HTTP/1.1 (which by specifica=
tion includes HTTP/1.0 support), while port 8443 supports the SSL protocol,=
 with ALPN negotiation to select between several versions of HTTP/2 (h2 &am=
p; the draft h2-17) and HTTP/1.1.
What is not shown is that HTTP/1.1 is the default ALPN protocol, so that if=
 a client connects that does not speak ALPN, then HTTP/1.1 will be assumed.=
</p>
</div>
<div class=3D"paragraph">
<p>A browser can now be pointed at <code>https://localhost:8443/</code> and=
 if it supports HTTP/2 then it will be used (often indicated by a lightenin=
g bolt icon in the address bar).
Note that a browser pointed at this server with URL starting with <code>htt=
p://localhost:8080/</code> will still talk HTTP/1.1, as HTTP/2 has not been=
 enabled on the plain text connector.</p>
</div>
<div class=3D"paragraph">
<p>HTTP/2 can be enabled on the plain text connector and the server restart=
ed with the following command:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">$ java -jar $JETTY_HOME/start.jar --add-to-start=3Dhttp2c
$ java -jar $JETTY_HOME/start.jar
..
2015-06-17 14:16:12.549:INFO:oejs.ServerConnector:main: Started ServerConne=
ctor@6f32cd1e{HTTP/1.1,[http/1.1, h2c, h2c-17]}{0.0.0.0:8080}
2015-06-17 14:16:12.782:INFO:oejs.ServerConnector:main: Started ServerConne=
ctor@711f39f9{SSL,[ssl, alpn, h2, h2-17, http/1.1]}{0.0.0.0:8443}
..</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>No major browser currently supports plain text HTTP/2, so the 8080 port =
will only be able to use HTTP/2 with specific clients (eg <code>curl</code>=
) that use the upgrade mechanism or assume HTTP/2.</p>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"http2-configuring">Configuring HTTP/2</h3>
<div class=3D"paragraph">
<p>Enabling the HTTP/2 module in the Jetty server does not create a HTTP/2 =
specific connector, but rather it adds a HTTP/2 Connection factory to an
existing connector.
Thus configuring HTTP/2 is a combination of configuring common properties o=
n the connector and HTTP/2 specific properties on the connection factory.
The modules and XML files involved can be seen with the following commands:=
</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">$ java -jar $JETTY_HOME/start.jar --list-modules
    ...
    1) protonego-boot  <transitive>
    ...
    2) http            ${jetty.base}/start.d/http.ini
    2) ssl             ${jetty.base}/start.d/ssl.ini
    3) alpn            ${jetty.base}/start.d/alpn.ini
    3) http2c          ${jetty.base}/start.d/http2c.ini
    ...
    4) http2           ${jetty.base}/start.d/http2.ini
    5) https           ${jetty.base}/start.d/https.ini

$ java -jar $JETTY_HOME/start.jar --list-config
 ...
 ${jetty.home}/etc/jetty-ssl.xml
 ${jetty.home}/etc/jetty-ssl-context.xml
 ${jetty.home}/etc/jetty-alpn.xml
 ${jetty.home}/etc/jetty-http2c.xml
 ${jetty.home}/etc/jetty-http.xml
 ...
 ${jetty.home}/etc/jetty-http2.xml
 ${jetty.home}/etc/jetty-https.xml</transitive></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The common properties associated with connectors (host,port, timeouts, e=
tc.) can be set in the module ini files (or <code>start.ini</code> if <code=
>--add-to-start</code> was used): <code>${jetty.base}/start.d/http.ini</cod=
e> and <code>${jetty.base}/start.d/ssl.ini</code>.
These properties are instantiated in the associated XML files: <code>${jett=
y.home}/etc/jetty-http.xml</code>; <code>${jetty.home}/etc/jetty-ssl.xml</c=
ode>, plus the SSL keystore is instantiated in <code>${jetty.home}/etc/jett=
y-ssl-context.xml</code>.</p>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Note</div>
</td>
<td class=3D"content">
If you are planning to edit XML files, make sure to copy them to your <code=
>{$jetty.base}/etc/</code> directory before doing so.
The XML files that come with the Jetty distribution should <strong>not</str=
ong> be modified directly.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
<div class=3D"paragraph">
<p>HTTP/2 specific properties can be set in the module ini files: <code>${j=
etty.base}/start.d/http2.ini</code> and <code>${jetty.base}/start.d/http2c.=
ini</code>, which are instantiated in the associated XML files: <code>${jet=
ty.home}/etc/jetty-http2.xml</code>; <code>${jetty.home}/etc/jetty-http2c.x=
ml</code>, respectively.
Currently there are very few HTTP/2 configuration properties and the defaul=
t values are reasonable:</p>
</div>
<table class=3D"tableblock frame-all grid-all spread">
<caption class=3D"title">Table 13. HTTP/2 Configuration Properties</caption=
>
<colgroup>
<col style=3D"width: 50%;">
<col style=3D"width: 50%;">
</colgroup>
<thead>
<tr>
<th class=3D"tableblock halign-left valign-top">Property</th>
<th class=3D"tableblock halign-left valign-top">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">jet=
ty.http2.maxConcurrentStreams</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">The=
 maximum number of concurrently open streams allowed on a single HTTP/2 con=
nection (default 1024). Larger values increase parallelism but cost a memor=
y commitment.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">jet=
ty.http2.initialStreamRecvWindow</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">The=
 initial receive flow control window size for a new stream (default 65535).=
 Larger values may allow greater throughput but also risk head of line bloc=
king if TCP/IP flow control is triggered.</p></td>
</tr>
</tbody>
</table>
</div>
<div class=3D"sect2">
<h3 id=3D"http2-configuring-push">Configuring HTTP/2 Push</h3>
<div class=3D"paragraph">
<p>HTTP/2 Push is a mechanism that allows the server to send multiple resou=
rces to the client for a single client request.
This will reduce the amount of round-trips necessary to retrieve all the re=
sources that make up a web page and can significantly improve the page load=
 time.</p>
</div>
<div class=3D"paragraph">
<p>HTTP/2 Push can be automated in your application by configuring a <a hre=
f=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-=
documentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/servlets/Push=
CacheFilter.html"><code>PushCacheFilter</code></a> in the <code>web.xml</co=
de>, in this way:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><!-=
-?xml version=3D"1.0" encoding=3D"UTF-8"?-->
<web-app xmlns=3D"http://xmlns.jcp.org/xml/ns/javaee" xmlns:xsi=3D"http://w=
ww.w3.org/2001/XMLSchema-instance" xsi:schemalocation=3D"http://xmlns.jcp.o=
rg/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd" metada=
ta-complete=3D"true" version=3D"3.1">

    ...
    <filter>
        <filter-name>PushFilter</filter-name>
        <filter-class>org.eclipse.jetty.servlets.PushCacheFilter</filter-cl=
ass>
        <async-supported>true</async-supported>
    </filter>
    <filter-mapping>
        <filter-name>PushFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    ...

</web-app></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p><code>PushCacheFilter</code> analyzes the HTTP requests for resources th=
at arrive to your web application.
Some of these requests contain the HTTP <code>Referrer</code> header that p=
oints to a resource that has been requested previously.
This allows the <code>PushCacheFilter</code> to organize resources in to tw=
o categories: <em>primary</em> resources (those referenced by the <code>Ref=
errer</code> header) and <em>secondary</em> resources (those that have the =
<code>Referer</code> header).</p>
</div>
<div class=3D"paragraph">
<p><code>PushCacheFilter</code> associates secondary resources to primary r=
esources.
Only secondary resources that have been requested within a time window from=
 the request of the primary resource are associated with the primary resour=
ce.</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1"><code>PushCacheFilter</code> can be configured with t=
he following <code>init-params</code></dt>
<dd>
<div class=3D"ulist">
<ul>
<li>
<p><code>associatePeriod</code>: the time window, in milliseconds, within w=
hich a request for a secondary resource will be associated to a primary res=
ource.</p>
</li>
<li>
<p><code>maxAssociations</code>: the max number of secondary resources that=
 may be associated to a primary resource.</p>
</li>
</ul>
</div>
</dd>
</dl>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"http2-configuring-haproxy">Configuring HAProxy and Jetty</h3>
<div class=3D"paragraph">
<p>Typical website deployments have Apache (or Nginx) configured as reverse=
 proxy to talk to one or more backend Jetty instances.
This configuration cannot be used for HTTP/2 because Apache does not yet su=
pport HTTP/2 (nor does Nginx).</p>
</div>
<div class=3D"paragraph">
<p><a href=3D"http://haproxy.org/">HAProxy</a> is an open source solution t=
hat offers load balancing and proxying for TCP and HTTP based application, =
and can be used as a replacement for Apache or Nginx when these are used as=
 reverse proxies and has the major benefit that supports HTTP/2.
It also offers load balancing and several other features which can position=
 it as a complete replacement for Apache or Nginx.</p>
</div>
<div class=3D"paragraph">
<p>The deployment proposed here will have HAProxy play the role that Apache=
 and Nginx usually do: to perform the TLS offloading (that is, decrypt and =
encrypt TLS) and then forwarding the now clear-text traffic to a backend Je=
tty server, speaking either HTTP/1.1 or HTTP/2.</p>
</div>
<div class=3D"paragraph">
<p>The instructions that follow are for Linux.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"http2-haproxy-install">Installing HAProxy</h4>
<div class=3D"paragraph">
<p>You will need HAProxy 1.5 or later, because it provides support for SSL =
and ALPN, both required by HTTP/2. Most Linux distributions have the HAProx=
y package available to be installed out of the box. For example on Ubuntu 1=
5.04:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">$ sudo apt-get install haproxy</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Alternatively you can download the HAProxy source code and build it on y=
our environment by following the README bundled with the HAProxy source cod=
e tarball.</p>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Note</div>
</td>
<td class=3D"content">
HAProxy supports ALPN only if built with OpenSSL 1.0.2 or greater.
Alternatively, HAProxy supports NPN when built with OpenSSL 1.0.1 or greate=
r.
You must upgrade OpenSSL if you have a version earlier than 1.0.1.
Use <code>haproxy -vv</code> to know with which OpenSSL version HAProxy has=
 been built.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"http2-haproxy-ssl">Setup SSL for HAProxy</h4>
<div class=3D"paragraph">
<p>HAProxy will perform the TLS decryption and encryption much more efficie=
ntly than a Java implementation.</p>
</div>
<div class=3D"paragraph">
<p>HAProxy will need a single file containing the X509 certificates and the=
 private key, all in <a href=3D"https://en.wikipedia.org/wiki/X.509">PEM fo=
rmat</a>, with the following order:</p>
</div>
<div class=3D"olist arabic">
<ol class=3D"arabic">
<li>
<p>The site certificate; this certificate=E2=80=99s Common Name refers to t=
he site domain (for example: CN=3D*.webtide.com) and is signed by Certifica=
te Authority #1.</p>
</li>
<li>
<p>The Certificate Authority #1 certificate; this certificate may be signed=
 by Certificate Authority #2.</p>
</li>
<li>
<p>The Certificate Authority #2 certificate; this certificate may be signed=
 by Certificate Authority #3; and so on until the Root Certificate Authorit=
y.</p>
</li>
<li>
<p>The Root Certificate Authority certificate.</p>
</li>
<li>
<p>The private key corresponding to the site certificate.</p>
</li>
</ol>
</div>
<div class=3D"paragraph">
<p>Let=E2=80=99s use <code>keytool</code> to generate a self signed certifi=
cate:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">$ keytool -genkeypair -keyalg RSA -keystore keystore.p12 -storetype pkcs=
12 -storepass storepwd -ext SAN=3DDNS:domain.com
What is your first and last name?
[Unknown]:  *.domain.com
What is the name of your organizational unit?
[Unknown]:  Unit
What is the name of your organization?
[Unknown]:  Domain
What is the name of your City or Locality?
[Unknown]:  Torino
What is the name of your State or Province?
[Unknown]:  TO
What is the two-letter country code for this unit?
[Unknown]:  IT
Is CN=3D*.domain.com, OU=3DUnit, O=3DDomain, L=3DTorino, ST=3DTO, C=3DIT co=
rrect?
[no]:  yes</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The above command will generate a self signed certificate and private ke=
y for <code>domain.com</code> and subdomains, stored in the <code>keystore.=
p12</code> file in PKCS#12 format.
We need to extract the certificate and the private key in PEM format.</p>
</div>
<div class=3D"paragraph">
<p>To extract the certificate into <code>certificate.pem</code>:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">$ keytool -exportcert -keystore keystore.p12 -storetype pkcs12 -storepas=
s storepwd -rfc -file certificate.pem</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>To export the private key into <code>private_key.pem</code>:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">$ openssl pkcs12 -in keystore.p12 -nodes -nocerts -out private_key.pem -=
passin pass:storepwd</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>At this point you just need to concatenate the two files into one, in th=
e correct order:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">$ cat certificate.pem private_key.pem &gt; domain.pem</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The <code>domain.pem</code> file will be used later by HAProxy.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"http2-haproxy-cfg">HAProxy Configuration File</h4>
<div class=3D"paragraph">
<p>Now we can setup <code>haproxy.cfg</code> to configure HAProxy.
This is a minimal configuration:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code>global
tune.ssl.default-dh-param 1024

defaults
timeout connect 10000ms
timeout client 60000ms
timeout server 60000ms

frontend fe_http
mode http
bind *:80
# Redirect to https
redirect scheme https code 301

frontend fe_https
mode tcp
bind *:443 ssl no-sslv3 crt domain.pem ciphers TLSv1.2 alpn h2,http/1.1
default_backend be_http

backend be_http
mode tcp
server domain 127.0.0.1:8282</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The HAProxy configuration file works in the following way.
The <code>fe_http</code> front-end accepts connections on port 80 and redir=
ects them to use the <code>https</code> scheme.</p>
</div>
<div class=3D"paragraph">
<p>The <code>fe_https</code> front-end accepts connections on port 443 and =
it is where the TLS decryption/encryption happens.
You must specify the path to the PEM file containing the TLS key material (=
the <code>crt domain.pem</code> part), the ciphers that are suitable for HT=
TP/2 (the <code>ciphers TLSv1.2</code>), and the ALPN protocols supported (=
the <code>alpn h2,http/1.1</code> ).
This front-end then forwards the now decrypted bytes to the back-end in <co=
de>mode tcp</code>. The <code>mode tcp</code> says that HAProxy will not tr=
y to interpret the bytes as HTTP/1.1 but instead opaquely forward them to t=
he back-end.</p>
</div>
<div class=3D"paragraph">
<p>The <code>be_http</code> back-end will forward (again in <code>mode tcp<=
/code>) the clear-text bytes to a Jetty connector that talks clear-text HTT=
P/2 and HTTP/1.1 on port 8282.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"http2-haproxy-jetty">Setup Jetty for HTTP/2 and HTTP/1.1</h4>
<div class=3D"paragraph">
<p>The Jetty setup follows the steps of having Jetty installed in the <code=
>JETTY_HOME</code> directory, creating a <code>JETTY_BASE</code> directory =
and initializing it using Jetty=E2=80=99s command line tools.
You must enable the <code>http2c</code> module, that is the module that spe=
aks clear-text HTTP/2.
Since the <code>http2c</code> module depends on the <code>http</code> modul=
e, the <code>http</code> module will be enabled transitively, and the final=
 setup will therefore support both HTTP/2 and HTTP/1.1 in clear text.</p>
</div>
<div class=3D"paragraph">
<p>Additionally, you will also enable the <code>deploy</code> module to be =
able to deploy a sample web application:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">$ JETTY_BASE=3Dhaproxy-jetty-http2
$ mkdir $JETTY_BASE
$ cd $JETTY_BASE
$ java -jar $JETTY_HOME/start.jar --add-to-start=3Dhttp2c,deploy</code></pr=
e>
</div>
</div>
<div class=3D"paragraph">
<p>Now let=E2=80=99s deploy a demo web application and start Jetty:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">$ cd $JETTY_BASE
$ cp $JETTY_HOME/demo-base/webapps/async-rest.war $JETTY_BASE/webapps/
$ java -jar $JETTY_HOME/start.jar jetty.http.host=3D127.0.0.1 jetty.http.po=
rt=3D8282</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Now you can browse <a href=3D"https://domain.com/async-rest" class=3D"ba=
re">https://domain.com/async-rest</a> (replace <code>domain.com</code> with=
 your own domain, or with <code>localhost</code>, to make this example work=
).</p>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Note</div>
</td>
<td class=3D"content">
You want the Jetty connector that listens on port 8282 to be available only=
 to HAProxy, and not to remote clients.
For this reason, you want to specify the <code>jetty.http.host</code> prope=
rty on the command line (or in <code>start.ini</code>/ <code>start.d/http.i=
ni</code> to make this setting persistent) to bind the Jetty connector only=
 on the loopback interface (127.0.0.1), making it available to HAProxy but =
not to remote clients.
If your Jetty instance runs on a different machine and/or on a different (s=
ub)network, you may want to adjust both the back-end section of the HAProxy=
 configuration file and the <code>jetty.http.host</code> property to match =
accordingly.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
<div class=3D"paragraph">
<p>Browsers supporting HTTP/2 will connect to HAProxy, which will decrypt t=
he traffic and send it to Jetty.
Likewise, HTTP/1.1 clients will connect to HAProxy, which will decrypt the =
traffic and send it to Jetty.</p>
</div>
<div class=3D"paragraph">
<p>The Jetty connector, configured with the <code>http2c</code> module (and=
 therefore transitively with the <code>http</code> module) is able to disti=
nguish whether the incoming bytes are HTTP/2 or HTTP/1.1 and will handle th=
e request accordingly.</p>
</div>
<div class=3D"paragraph">
<p>The response is relayed back to HAProxy, which will encrypt it and send =
it back to the remote client.</p>
</div>
<div class=3D"paragraph">
<p>This configuration offers you efficient TLS offloading, HTTP/2 support a=
nd transparent fallback to HTTP/1.1 for clients that don=E2=80=99t support =
HTTP/1.1.</p>
</div>
</div>
</div>
</div>
</div>
<div class=3D"sect1">
<h2 id=3D"fastcgi">FastCGI Support</h2>
<div class=3D"sectionbody">
<div class=3D"sect2">
<h3 id=3D"fastcgi-intro">FastCGI Introduction</h3>
<div class=3D"paragraph">
<p>FastCGI is a network protocol primarily used by a <em>web server</em> to=
 communicate to a <em>FastCGI server</em>.
FastCGI servers are typically used to serve web content generated by dynami=
c web languages, primarily <a href=3D"http://www.php.net/">PHP</a>, but als=
o Python, Ruby, Perl and others.</p>
</div>
<div class=3D"paragraph">
<p>Web servers that supports FastCGI are, among others, <a href=3D"http://h=
ttpd.apache.org/">Apache</a>, <a href=3D"http://nginx.org/">Nginx</a>, and =
Jetty.
Web servers typically act as proxies, converting HTTP requests that they re=
ceive from clients (browsers) to FastCGI requests that are forwarded to the=
 FastCGI server.
The FastCGI server spawns the dynamic web language interpreter, passing it =
the information contained in the FastCGI request and a dynamic web language=
 script is executed, producing web content, typically HTML.
The web content is then formatted into a FastCGI response that is returned =
to the web server, which converts it to a HTTP response that is then return=
ed to the client.</p>
</div>
<div class=3D"paragraph">
<p>The most well known FastCGI server is the <a href=3D"http://php-fpm.org/=
">PHP FastCGI Process Manager</a>, or <code>php-fpm</code>.
In the following we will assume that <code>php-fpm</code> is used as FastCG=
I server.</p>
</div>
<div class=3D"paragraph">
<p>Jetty can be configured to act as a web server that supports FastCGI, re=
placing the functionality that is normally provided by Apache or Nginx.
This allows users to leverage Jetty features such as HTTP/2, the unique sup=
port that Jetty provides for HTTP/2 Push, Jetty=E2=80=99s scalability, and =
of course Jetty=E2=80=99s native support for Java Web Standards such as Ser=
vlets, JSPs, etc.</p>
</div>
<div class=3D"paragraph">
<p>With such configuration, users can not only deploy their Java Web Applic=
ations in Jetty, but also serve their <a href=3D"http://wordpress.com/">Wor=
dPress</a> site or blog or their <a href=3D"https://drupal.org/">Drupal</a>=
 site without having to install and manage multiple web servers.</p>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"configuring-fastcgi">Configuring Jetty for FastCGI</h3>
<div class=3D"paragraph">
<p>In this section you will see how to configure Jetty to serve WordPress v=
ia FastCGI.</p>
</div>
<div class=3D"paragraph">
<p>The first step is to have WordPress installed on your server machine, fo=
r example under <code>/var/www/wordpress</code>.
For more information about how to install WordPress, please refer to the <a=
 href=3D"https://codex.wordpress.org/Installing_WordPress">WordPress Instal=
lation Guide</a>.</p>
</div>
<div class=3D"paragraph">
<p>The second step is to install <code>php-fpm</code> and make sure it is c=
onfigured to listen on a TCP socket; typically it is configured to listen t=
o <code>localhost:9000</code>.</p>
</div>
<div class=3D"paragraph">
<p>The third step is to install Jetty, for example under <code>/opt/jetty</=
code>, called in the following <code>$JETTY_HOME</code>.
Refer to <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jet=
ty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#jetty-downloading=
">Downloading Jetty</a> for more information about how to install Jetty.</p=
>
</div>
<div class=3D"paragraph">
<p>The fourth step is to create a Jetty base directory (see <a href=3D"file=
:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documenta=
tion/src/main/asciidoc/index.html#startup-base-and-home">Managing Jetty Bas=
e and Jetty Home</a>), called in the following <code>$JETTY_BASE</code>, wh=
ere you setup the configuration needed to support FastCGI in Jetty, and con=
figure the <code>fcgi</code>, <code>http</code> and <code>deploy</code> mod=
ules, so that Jetty will be able to accept HTTP requests from browsers, con=
vert them in FastCGI, and proxy them to <code>php-fpm</code>:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">$ mkdir -p /usr/jetty/wordpress
$ cd /usr/jetty/wordpress
$ java -jar $JETTY_HOME/start.jar --add-to-start=3Dfcgi,http,deploy</code><=
/pre>
</div>
</div>
<div class=3D"paragraph">
<p>Therefore <code>$JETTY_BASE=3D/usr/jetty/wordpress</code>.</p>
</div>
<div class=3D"paragraph">
<p>The fifth step is to deploy the web application that provides the proxyi=
ng of client requests to the FastCGI server, <code>php-fpm</code>.
Typically this is done by deploying a <code>*.war</code> file in the <code>=
$JETTY_BASE/webapps</code> directory.
For FastCGI there is no web application that needs developed - all the work=
 has already been done for you by Jetty.
As such you only need to deploy a Jetty context XML file that configures th=
e web application directly.
Copy and paste the following content as <code>$JETTY_BASE/webapps/jetty-wor=
dpress.xml</code>:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><!-=
-?xml version=3D"1.0" encoding=3D"UTF-8"?-->

<configure class=3D"org.eclipse.jetty.servlet.ServletContextHandler">

    <new id=3D"root" class=3D"java.lang.String">
        <arg>/var/www/wordpress</arg>
    </new>

    <set name=3D"contextPath">/</set>
    <set name=3D"resourceBase"><ref refid=3D"root"></ref></set>
    <set name=3D"welcomeFiles">
        <array type=3D"string"><item>index.php</item></array>
    </set>

    <call name=3D"addFilter">
        <arg>org.eclipse.jetty.fcgi.server.proxy.TryFilesFilter</arg>
        <arg>/*</arg>
        <arg>
            <call name=3D"of" class=3D"java.util.EnumSet">
                <arg><get name=3D"REQUEST" class=3D"javax.servlet.Dispatche=
rType"></get></arg>
            </call>
        </arg>
        <call name=3D"setInitParameter">
            <arg>files</arg>
            <arg>$path /index.php?p=3D$path</arg>
        </call>
    </call>

    <call name=3D"addServlet">
        <arg>
            <new class=3D"org.eclipse.jetty.servlet.ServletHolder">
                <arg>default</arg>
                <arg>
                    <call name=3D"forName" class=3D"java.lang.Class">
                        <arg>org.eclipse.jetty.servlet.DefaultServlet</arg>
                    </call>
                </arg>
                <call name=3D"setInitParameter">
                    <arg>dirAllowed</arg>
                    <arg>false</arg>
                </call>
            </new>
        </arg>
        <arg>/</arg>
    </call>

    <call name=3D"addServlet">
        <arg>org.eclipse.jetty.fcgi.server.proxy.FastCGIProxyServlet</arg>
        <arg>*.php</arg>
        <call name=3D"setInitParameter">
            <arg>proxyTo</arg>
            <arg>http://localhost:9000</arg>
        </call>
        <call name=3D"setInitParameter">
            <arg>prefix</arg>
            <arg>/</arg>
        </call>
        <call name=3D"setInitParameter">
            <arg>scriptRoot</arg>
            <arg><ref refid=3D"root"></ref></arg>
        </call>
        <call name=3D"setInitParameter">
            <arg>scriptPattern</arg>
            <arg>(.+?\\.php)</arg>
        </call>
    </call>

</configure></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>An explanation of the above contents:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>Linne 6 specifies the WordPress installation directory, in this example =
<code>/var/www/wordpress</code> (as defined in the first step).</p>
</li>
<li>
<p>Line 9 it is specified the context path at which WordPress will be serve=
d, in this example at the root context path <code>/</code>.</p>
</li>
<li>
<p>Line 10 specifies the resource base of the context, also set to the Word=
Press installation directory.
This allows Jetty to serve static resources directly from the WordPress ins=
tallation directory.</p>
</li>
<li>
<p>Line 12 specifies the welcome file as <code>index.php</code>, so that Je=
tty can perform the proper redirects in case of URIs ending with the <code>=
/</code> character.</p>
</li>
<li>
<p>Line 15 specifies the <code>TryFilesFilter</code>, a Servlet Filter that=
 has been inspired by the <a href=3D"http://wiki.nginx.org/HttpCoreModule#t=
ry_files">try_files</a> functionality offered by Nginx.
This filter tries to serve the resource from the file system first, and if =
the resource is not found it forwards the request as <code>index.php?p=3D$p=
ath</code>, which will match the proxy servlet defined below.
Refer to the <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project=
-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/=
jetty/fcgi/server/proxy/TryFilesFilter.html">TryFilesFilter</a> documentati=
on for further information.</p>
</li>
<li>
<p>Line 29specifies Jetty=E2=80=99s <code>DefaultServlet</code> to serve st=
atic content such as CSS files, JavaScript files, etc. <code>DefaultServlet=
</code> will serve these files by looking in the resource base of the conte=
xt, defined at line 10 (see above).</p>
</li>
<li>
<p>Line 47 specifies the <code>FastCGIProxyServlet</code>, a Servlet that p=
roxies HTTP requests arriving from clients to FastCGI requests to the FastC=
GI server.</p>
</li>
<li>
<p>Line 52 specifies the TCP address of the FastCGI server (<code>php-fpm</=
code>), where HTTP requests are forwarded as FastCGI requests.</p>
</li>
<li>
<p>Line 60 specifies once again the WordPress installation directory, so th=
at the <code>FastCGIProxyServlet</code> can pass this information to the Fa=
stCGI server.</p>
</li>
<li>
<p>Line 64 specifies a regular expression that matches request URIs perform=
ed to this servlet, in addition to the standard URL mapping defined by Serv=
let at line 49.
Refer to the <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project=
-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/=
jetty/fcgi/server/proxy/FastCGIProxyServlet.html">FastCGIProxyServlet</a> d=
ocumentation for further information.</p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>The last step is to start Jetty (see <a href=3D"file:///home/tian/Downlo=
ads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciid=
oc/index.html#startup">Starting Jetty</a>) and navigate to <code>http://loc=
alhost:8080</code> with your browser and enjoy WordPress:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">$ cd $JETTY_BASE
$ java -jar /opt/jetty/start.jar</code></pre>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"configuring-fastcgi-http2">Configuring Jetty to Proxy HTTP/2 to F=
astCGI</h4>
<div class=3D"paragraph">
<p>In order to configure Jetty to listen for HTTP/2 requests from clients t=
hat are HTTP/2 enabled and forward them to the FastCGI server as FastCGI re=
quests, you need to enable the <code>http2</code> module, which in turn wil=
l require a TLS connector and consequently a keystore to read the key mater=
ial required by TLS.</p>
</div>
<div class=3D"paragraph">
<p>Enabling the <code>http2</code> is easy; in additions to the modules you=
 have enabled above, add the <code>http2</code> module:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">$ cd $JETTY_BASE
$ java -jar $JETTY_HOME/start.jar --add-to-start=3Dhttp2</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The command above adds the <code>http2</code> module (and its dependenci=
es) to the existing modules and uses the default Jetty keystore to provide =
the key material required by TLS.
You will want to use your own keystore with your own private key and certif=
icate for your own domain.</p>
</div>
<div class=3D"paragraph">
<p>Remember that by adding the <code>http2</code> module, you will start tw=
o JVMs: one that reads the configuration, and one that has the ALPN boot bo=
ot jar in the boot classpath, as explained in <a href=3D"file:///home/tian/=
Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/=
asciidoc/index.html#http2-configuring">Configuring HTTP/2</a>.</p>
</div>
<div class=3D"paragraph">
<p>Since now your site will run over TLS, you need to make sure that the Wo=
rdPress URL is also configured so.
If you have followed the steps of the <a href=3D"file:///home/tian/Download=
s/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc=
/index.html#configuring-fastcgi">previous section</a>, your WordPress site =
is served at <code>http://localhost:8080</code>.
You will need to change that to be <code>https://localhost:8443</code> from=
 the WordPress administration web interface, or follow the <a href=3D"http:=
//codex.wordpress.org/Changing_The_Site_URL">WordPress instructions</a> to =
do so without using the administration web interface.</p>
</div>
<div class=3D"paragraph">
<p>The minimal modules required to run WordPress with Jetty on HTTP/2 are t=
herefore: <code>http2</code>, <code>http</code>, <code>fcgi</code> and <cod=
e>deploy</code>.
These will setup a clear text connector on port 8080 for HTTP/1.1 and a TLS=
 connector on port 8443 for HTTP/2 and HTTP/1.1.</p>
</div>
<div class=3D"paragraph">
<p>At this point, you can start Jetty (see <a href=3D"file:///home/tian/Dow=
nloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asc=
iidoc/index.html#startup">Starting Jetty</a>), hit <code>http://localhost:8=
080</code> with your browser and enjoy WordPress via HTTP/2 using a HTTP/2 =
enabled browser:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">$ cd $JETTY_BASE
$ java -jar $JETTY_HOME/start.jar</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>If you don=E2=80=99t have a HTTP/2 enabled browser, WordPress will still=
 be available over HTTP/1.1.</p>
</div>
</div>
</div>
</div>
</div>
<div class=3D"sect1">
<h2 id=3D"advanced-extras">Provided Servlets, Filters, and Handlers</h2>
<div class=3D"sectionbody">
<div class=3D"paragraph">
<p>Jetty ships with a bundle of servlets that interact with the key classes=
.
Most are in the org.eclipse.jetty.servlets package.
These servlets and filters are among the principle elements of Jetty as a c=
omponent-based infrastructure that holds and runs J2EE applications.
As described, they play a major role in running and maintaining the Jetty s=
erver.</p>
</div>
<div class=3D"paragraph">
<p>Also included are a number of Jetty specific handlers that allow access =
to internals of jetty that would not normally be exposed and are very usefu=
l testing environments and many production scenarios.</p>
</div>
<div class=3D"sect2">
<h3 id=3D"default-servlet">Default Servlet</h3>
<div class=3D"sect3">
<h4 id=3D"default-servlet-metadata">Info</h4>
<div class=3D"ulist">
<ul>
<li>
<p>Classname: <code>org.eclipse.jetty.servlet.DefaultServlet</code></p>
</li>
<li>
<p>Maven Artifact: org.eclipse.jetty:jetty-servlet</p>
</li>
<li>
<p>Javadoc: {JDURL}/org/eclipse/jetty/servlet/DefaultServlet.html</p>
</li>
<li>
<p>Xref: {JXURL}/org/eclipse/jetty/servlet/DefaultServlet.html</p>
</li>
</ul>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"default-servlet-usage">Usage</h4>
<div class=3D"paragraph">
<p>The <code>DefaultServlet</code> implements the <code>ResourceFactory</co=
de> interface and extends the <code>HttpServlet</code> abstract class.
It is usually mapped to "/" and provides handling for static content, <code=
>OPTION</code> and <code>TRACE</code> methods for the context.
The <code>MOVE</code> method is allowed if <code>PUT</code> and <code>DELET=
E</code> are allowed.
See the <code>DefaultServlet</code> <a href=3D"file:///home/tian/Downloads/=
b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%=
7BJDURL%7D/org/eclipse/jetty/servlet/DefaultServlet.html">javadoc</a>.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"default-servlet-init">Init Parameters</h4>
<div class=3D"paragraph">
<p>Jetty supports the following <code>initParameters</code>:</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">acceptRanges</dt>
<dd>
<p>If true, range requests and responses are supported.</p>
</dd>
<dt class=3D"hdlist1">dirAllowed</dt>
<dd>
<p>If true, directory listings are returned if no welcome file is found.
Otherwise 403 Forbidden displays.</p>
</dd>
<dt class=3D"hdlist1">redirectWelcome</dt>
<dd>
<p>If true, welcome files are redirected rather that forwarded.</p>
</dd>
<dt class=3D"hdlist1">gzip</dt>
<dd>
<p>If set to true, then static content is served as gzip content encoded if=
 a matching resource is found ending with ".gz".</p>
</dd>
<dt class=3D"hdlist1">resourceBase</dt>
<dd>
<p>Set to replace the context resource base.</p>
</dd>
<dt class=3D"hdlist1">aliases</dt>
<dd>
<p>If true, aliases of resources are allowed (that is, symbolic links and c=
aps variations) and may bypass security constraints.</p>
</dd>
<dt class=3D"hdlist1">maxCacheSize</dt>
<dd>
<p>Maximum total size of the cache or 0 for no cache.</p>
</dd>
<dt class=3D"hdlist1">maxCachedFileSize</dt>
<dd>
<p>Maximum size of a file to cache.</p>
</dd>
<dt class=3D"hdlist1">maxCachedFiles</dt>
<dd>
<p>Maximum number of files to cache.</p>
</dd>
<dt class=3D"hdlist1">useFileMappedBuffer</dt>
<dd>
<p>If set to true, mapped file buffer serves static content.
Setting this value to false means that a direct buffer is used instead of a=
 mapped file buffer.
By default, this is set to true.</p>
</dd>
<dt class=3D"hdlist1">otherGzipFileExtensions</dt>
<dd>
<p>A comma separated list of other file extensions that signify that a file=
 is gzip compressed.
If you don=E2=80=99t explicitly set this, it defaults to ".svgz".</p>
</dd>
</dl>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"proxy-servlet">Proxy Servlet</h3>
<div class=3D"sect3">
<h4 id=3D"proxy-servlet-metadata">Info</h4>
<div class=3D"ulist">
<ul>
<li>
<p>Classname: <code>org.eclipse.jetty.proxy.ProxyServlet</code></p>
</li>
<li>
<p>Maven Artifact: org.eclipse.jetty:jetty-proxy</p>
</li>
<li>
<p>Javadoc: {JDURL}/org/eclipse/jetty/proxy/ProxyServlet.html</p>
</li>
<li>
<p>Xref: {JXURL}/org/eclipse/jetty/proxy/ProxyServlet.html</p>
</li>
</ul>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"proxy-servlet-usage">Usage</h4>
<div class=3D"paragraph">
<p>An asynchronous servlet that forwards requests to another server either =
as a standard web reverse proxy (as defined by RFC2616) or as a transparent=
 reverse proxy.
Internally it uses the async jetty-client.</p>
</div>
<div class=3D"paragraph">
<p>To facilitate JMX monitoring, the <code>HttpClient</code> instance is se=
t as context attribute, prefixed with the servlet=E2=80=99s name and expose=
d by the mechanism provided by <code>ContextHandler.MANAGED_ATTRIBUTES</cod=
e>.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"proxy-servlet-init">Init Parameters</h4>
<div class=3D"paragraph">
<p>The following init parameters may be used to configure the servlet:</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">hostHeader</dt>
<dd>
<p>forces the host header to a particular value</p>
</dd>
<dt class=3D"hdlist1">viaHost</dt>
<dd>
<p>the name to use in the Via header: Via: http/1.1 &lt;viaHost&gt;</p>
</dd>
<dt class=3D"hdlist1">whiteList</dt>
<dd>
<p>comma-separated list of allowed proxy hosts</p>
</dd>
<dt class=3D"hdlist1">blackList</dt>
<dd>
<p>comma-separated list of forbidden proxy hosts</p>
</dd>
</dl>
</div>
<div class=3D"paragraph">
<p>In addition, there are a number of init parameters that can be used to c=
onfigure the <code>HttpClient</code> instance used internally for the proxy=
.</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">maxThreads</dt>
<dd>
<p>Default Value: 256
The max number of threads of HttpClient=E2=80=99s Executor</p>
</dd>
<dt class=3D"hdlist1">maxConnections</dt>
<dd>
<p>Default Value: 32768
The max number of connections per destination.
RFC 2616 suggests that 2 connections should be opened per each destination,=
 but browsers commonly open 6 or more.
If this <code>HttpClient</code> is used for load testing, it is common to h=
ave only one destination (the server to load test), and it is recommended t=
o set this value to a high value (at least as much as the threads present i=
n the executor).</p>
</dd>
<dt class=3D"hdlist1">idleTimeout</dt>
<dd>
<p>Default Value: 30000
The idle timeout in milliseconds that a connection can be idle, that is wit=
hout traffic of bytes in either direction.</p>
</dd>
<dt class=3D"hdlist1">timeout</dt>
<dd>
<p>Default Value: 60000
The total timeout in milliseconds for the request/response conversation.</p=
>
</dd>
<dt class=3D"hdlist1">requestBufferSize</dt>
<dd>
<p>Default Value: 4096
The size of the request buffer the request is written into.</p>
</dd>
<dt class=3D"hdlist1">responseBufferSize</dt>
<dd>
<p>Default Value: 4096
The size of the response buffer the response is written into.</p>
</dd>
</dl>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"balancer-servlet">Balancer Servlet</h3>
<div class=3D"sect3">
<h4 id=3D"balancer-servlet-metadata">Info</h4>
<div class=3D"ulist">
<ul>
<li>
<p>Classname: <code>org.eclipse.jetty.proxy.BalancerServlet</code></p>
</li>
<li>
<p>Maven Artifact: org.eclipse.jetty:jetty-proxy</p>
</li>
<li>
<p>Javadoc: {JDURL}/org/eclipse/jetty/proxy/BalancerServlet.html</p>
</li>
<li>
<p>Xref: {JXURL}/org/eclipse/jetty/proxy/BalancerServlet.html</p>
</li>
</ul>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"balancer-servlet-usage">Usage</h4>
<div class=3D"paragraph">
<p>The Balancer servlet allows for simple, sticky round robin load balancin=
g leveraging the <code>ProxyServlet</code> that is distributed with Jetty.<=
/p>
</div>
<div class=3D"paragraph">
<p>In addition to the parameters for <code>ProxyServlet</code>, the followi=
ng are available for the balancer servlet:</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">stickySessions</dt>
<dd>
<p>True if sessions should be sticky for subsequent requests</p>
</dd>
<dt class=3D"hdlist1">balancerMember.&lt;name&gt;.proxyTo</dt>
<dd>
<p>One of more of these are required and will be the locations that are use=
d to proxy traffic to.</p>
</dd>
</dl>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"cgi-servlet">CGI Servlet</h3>
<div class=3D"sect3">
<h4 id=3D"cgi-servlet-metadata">Info</h4>
<div class=3D"ulist">
<ul>
<li>
<p>Classname: <code>org.eclipse.jetty.servlets.CGI</code></p>
</li>
<li>
<p>Maven Artifact: org.eclipse.jetty:jetty-servlets</p>
</li>
<li>
<p>Javadoc: {JDURL}/org/eclipse/jetty/servlets/CGI.html</p>
</li>
<li>
<p>Xref: {JXURL}/org/eclipse/jetty/servlets/CGI.html</p>
</li>
</ul>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"cgi-servlet-usage">Usage</h4>
<div class=3D"paragraph">
<p>The CGI servlet class extends the abstract HttpServlet class.
When the init parameter is called, the cgi bin directory is set with the <c=
ode>cgibinResourceBase</code>.
Otherwise, it defaults to the resource base of the context.</p>
</div>
<div class=3D"paragraph">
<p>The cgi bin uses three parameters:</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">commandPrefix</dt>
<dd>
<p>The init parameter obtained when there is a prefix set to all commands d=
irected to the method exec.</p>
</dd>
<dt class=3D"hdlist1">Path</dt>
<dd>
<p>An init parameter passed to the exec environment as a PATH.
This must be run unpacked somewhere in the filesystem.</p>
</dd>
<dt class=3D"hdlist1">ENV_</dt>
<dd>
<p>An init parameter that points to an environment variable with the name s=
tripped of the leading ENV_ and using the init parameter value.</p>
</dd>
</dl>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"qos-filter">Quality of Service Filter</h3>
<div class=3D"sect3">
<h4 id=3D"qos-filter-metadata">Info</h4>
<div class=3D"ulist">
<ul>
<li>
<p>Classname: <code>org.eclipse.jetty.servlets.QoSFilter</code></p>
</li>
<li>
<p>Maven Artifact: org.eclipse.jetty:jetty-servlets</p>
</li>
<li>
<p>Javadoc: {JDURL}/org/eclipse/jetty/servlets/QoSFilter.html</p>
</li>
<li>
<p>Xref: {JXURL}/org/eclipse/jetty/servlets/QoSFilter.html</p>
</li>
</ul>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"qos-filter-usage">Usage</h4>
<div class=3D"paragraph">
<p>Jetty supports Continuations, which allow non-blocking handling of HTTP =
requests, so that threads can be allocated in a managed way to provide appl=
ication specific Quality of Service (QoS).
The <code>QoSFilter</code> is a utility servlet filter that implements some=
 QoS features.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"qos-understanding">Understanding the Problem</h4>
<div class=3D"sect4">
<h5 id=3D"_waiting_for_resources">Waiting for Resources</h5>
<div class=3D"paragraph">
<p>Web applications frequently use JDBC Connection pools to limit the simul=
taneous load on the database.
This protects the database from peak loads, but makes the web application v=
ulnerable to thread starvation.
Consider a thread pool with 20 connections, being used by a web application=
 that that typically receives 200 requests per second and each request hold=
s a JDBC connection for 50ms.
Such a pool can service on average 200*20*1000/50 =3D 400 requests per seco=
nd.</p>
</div>
<div class=3D"paragraph">
<p>However, if the request rate rises above 400 per second, or if the datab=
ase slows down (due to a large query) or becomes momentarily unavailable, t=
he thread pool can very quickly accumulate many waiting requests.
If, for example, the website is "slashdotted" or experiences some other tem=
porary burst of traffic and the request rate rises from 400 to 500 requests=
 per second, then 100 requests per second join those waiting for a JDBC con=
nection.
Typically, a web server=E2=80=99s thread pool contains only a few hundred t=
hreads, so a burst or slow DB need only persist for a few seconds to consum=
e the entire web server=E2=80=99s thread pool; this is called thread starva=
tion.
The key issue with thread starvation is that it effects the entire web appl=
ication, and potentially the entire web server.
Even if the requests using the database are only a small proportion of the =
total requests on the web server, all requests are blocked because all the =
available threads are waiting on the JDBC connection pool.
This represents non-graceful degradation under load and provides a very poo=
r quality of service.</p>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_prioritizing_resources">Prioritizing Resources</h5>
<div class=3D"paragraph">
<p>Consider a web application that is under extreme load.
This load might be due to a popularity spike (slashdot), usage burst (Chris=
tmas or close of business), or even a denial of service attack.
During such periods of load, it is often desirable not to treat all request=
s as equals, and to give priority to high value customers or administrative=
 users.</p>
</div>
<div class=3D"paragraph">
<p>The typical behavior of a web server under extreme load is to use all it=
s threads to service requests and to build up a backlog of unserviced reque=
sts.
If the backlog grows deep enough, then requests start to timeout and users =
experience failures as well as delays.</p>
</div>
<div class=3D"paragraph">
<p>Ideally, the web application should be able to examine the requests in t=
he backlog, and give priority to high value customers and administrative us=
ers.
But with the standard blocking servlet API, it is not possible to examine a=
 request without allocating a thread to that request for the duration of it=
s handling.
There is no way to delay the handling of low priority requests, so if the r=
esources are to be reallocated, then the low priority requests must all be =
failed.</p>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"qos-applying">Applying the QoSFilter</h4>
<div class=3D"paragraph">
<p>The Quality of Service Filter (QoSFilter) uses Continuations to avoid th=
read starvation, prioritize requests and give graceful degradation under lo=
ad, to provide a high quality of service.
When you apply the filter to specific URLs within a web application, it lim=
its the number of active requests being handled for those URLs.
Any requests in excess of the limit are suspended. When a request completes=
 handling the limited URL, one of the waiting requests resumes and can be h=
andled.
You can assign priorities to each suspended request, so that high priority =
requests resume before lower priority requests.</p>
</div>
<div class=3D"sect4">
<h5 id=3D"_required_jars">Required JARs</h5>
<div class=3D"paragraph">
<p>To use the QoS Filter, these JAR files must be available in <code>WEB-IN=
F/lib</code>:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>$JETTY_HOME/lib/jetty-util.jar</p>
</li>
<li>
<p>$JETTY_HOME/lib/jetty-servlets.jar =E2=80=93 contains QoSFilter</p>
</li>
</ul>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_sample_configuration">Sample Configuration</h5>
<div class=3D"paragraph">
<p>Place the configuration in a webapp=E2=80=99s <code>web.xml</code> or <c=
ode>jetty-web.xml</code>.
The default configuration processes ten requests at a time, servicing more =
important requests first and queuing up the rest.
This example processes fifty requests at a time:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><fi=
lter>
   <filter-name>QoSFilter</filter-name>
   <filter-class>org.eclipse.jetty.servlets.QoSFilter</filter-class>
   <init-param>
     <param-name>maxRequests</param-name>
     <param-value>50</param-value>
   </init-param>
 </filter></code></pre>
</div>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"qos-filter-init">Configuring QoS Filter Parameters</h5>
<div class=3D"paragraph">
<p>A semaphore polices the <code>maxRequests</code> limit.
The filter waits a short time while attempting to acquire the semaphore.
The <code>waitMs</code> init parameter controls the wait, avoiding the expe=
nse of a suspend if the semaphore is shortly available.
If the semaphore cannot be obtained, Jetty suspends the request for the def=
ault suspend period of the container or the value set as the <code>suspendM=
s</code> init parameter.</p>
</div>
<div class=3D"paragraph">
<p>The QoS filter uses the following init parameters:</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">maxRequests</dt>
<dd>
<p>The maximum number of requests to be serviced at a time. The default is =
10.</p>
</dd>
<dt class=3D"hdlist1">maxPriority</dt>
<dd>
<p>The maximum valid priority that can be assigned to a request.
A request with a high priority value is more important than a request with =
a low priority value. The default is 10.</p>
</dd>
<dt class=3D"hdlist1">waitMS</dt>
<dd>
<p>The length of time, in milliseconds, to wait while trying to accept a ne=
w request.
Used when the maxRequests limit is reached.
Default is 50 ms.</p>
</dd>
<dt class=3D"hdlist1">suspendMS</dt>
<dd>
<p>Length of time, in milliseconds, that the request will be suspended if i=
t is not accepted immediately.
If not set, the container=E2=80=99s default suspend period applies. Default=
 is -1 ms.</p>
</dd>
<dt class=3D"hdlist1">managedAttr</dt>
<dd>
<p>If set to true, then this servlet is set as a <code>ServletContext</code=
> attribute with the filter name as the attribute name.
This allows a context external mechanism (for example, JMX via <code>Contex=
tHandler.MANAGED_ATTRIBUTES</code>) to manage the configuration of the filt=
er.</p>
</dd>
</dl>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_mapping_to_urls">Mapping to URLs</h5>
<div class=3D"paragraph">
<p>You can use the <code>&lt;filter-mapping&gt;</code> syntax to map the Qo=
SFilter to a servlet, either by using the servlet name, or by using a URL p=
attern.
In this example, a URL pattern applies the QoSFilter to every request withi=
n the web application context:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><fi=
lter-mapping>
   <filter-name>QoSFilter</filter-name>
   <url-pattern>/*</url-pattern>
 </filter-mapping></code></pre>
</div>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_setting_the_request_priority">Setting the Request Priority</h5>
<div class=3D"paragraph">
<p>Requests with higher values have a higher priority.
The default request priorities assigned by the QoSFilter are:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>2=E2=80=89=E2=80=94=E2=80=89For any authenticated request</p>
</li>
<li>
<p>1=E2=80=89=E2=80=94=E2=80=89For any request with a non-new valid session=
</p>
</li>
<li>
<p>0=E2=80=89=E2=80=94=E2=80=89For all other requests</p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>To customize the priority, subclass QoSFilter and then override the <cod=
e>getPriority(ServletRequest request)</code> method to return an appropriat=
e priority for the request.
You can then use this subclass as your QoS filter.
Here=E2=80=99s an example:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">p=
ublic class ParsePriorityQoSFilter extends QoSFilter
 {
     protected int getPriority(ServletRequest request)
     {
         String p =3D ((HttpServletRequest)request).getParameter("priority"=
);
         if (p!=3Dnull)
             return Integer.parseInt(p);
         return 0;
     }
 }</code></pre>
</div>
</div>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"dos-filter">Denial of Service Filter</h3>
<div class=3D"sect3">
<h4 id=3D"dos-filter-metadata">Info</h4>
<div class=3D"ulist">
<ul>
<li>
<p>Classname: <code>org.eclipse.jetty.servlets.DoSFilter</code></p>
</li>
<li>
<p>Maven Artifact: org.eclipse.jetty:jetty-servlets</p>
</li>
<li>
<p>Javadoc: {JDURL}/org/eclipse/jetty/servlets/DoSFilter.html</p>
</li>
<li>
<p>Xref: {JXURL}/org/eclipse/jetty/servlets/DoSFilter.html</p>
</li>
</ul>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"dos-filter-usage">Usage</h4>
<div class=3D"paragraph">
<p>The Denial of Service (DoS) filter limits exposure to request flooding, =
whether malicious, or as a result of a misconfigured client.
The DoS filter keeps track of the number of requests from a connection per =
second.
If the requests exceed the limit, Jetty rejects, delays, or throttles the r=
equest, and sends a warning message.
The filter works on the assumption that the attacker might be written in si=
mple blocking style, so by suspending requests you are hopefully consuming =
the attacker=E2=80=99s resources.
The DoS filter is related to the QoS filter, using Continuations to priorit=
ize requests and avoid thread starvation.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"dos-filter-using">Using the DoS Filter</h4>
<div class=3D"paragraph">
<p>Jetty places throttled requests in a priority queue, giving priority fir=
st to authenticated users and users with an HttpSession, then to connection=
s identified by their IP addresses.
Connections with no way to identify them have lowest priority.
To uniquely identify authenticated users, you should implement the The extr=
actUserId(ServletRequest request) function.</p>
</div>
<div class=3D"sect4">
<h5 id=3D"_required_jars_2">Required JARs</h5>
<div class=3D"paragraph">
<p>To use the DoS Filter, these JAR files must be available in WEB-INF/lib:=
</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>$JETTY_HOME/lib/jetty-util.jar</p>
</li>
<li>
<p>$JETTY_HOME/lib/jetty-servlets.jar</p>
</li>
</ul>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_sample_configuration_2">Sample Configuration</h5>
<div class=3D"paragraph">
<p>Place the configuration in a webapp=E2=80=99s <code>web.xml</code> or <c=
ode>jetty-web.xml</code>.
The default configuration allows 25 requests per connection at a time, serv=
icing more important requests first, and queuing up the rest.
This example allow 30 requests at a time:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><fi=
lter>
   <filter-name>DoSFilter</filter-name>
   <filter-class>org.eclipse.jetty.servlets.DoSFilter</filter-class>
   <init-param>
     <param-name>maxRequestsPerSec</param-name>
     <param-value>30</param-value>
   </init-param>
 </filter></code></pre>
</div>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"dos-filter-init">Configuring DoS Filter Parameters</h5>
<div class=3D"paragraph">
<p>The following <code>init</code> parameters control the behavior of the f=
ilter:</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">maxRequestsPerSec</dt>
<dd>
<p>Maximum number of requests from a connection per second.
Requests in excess of this are first delayed, then throttled.
Default is 25.</p>
</dd>
<dt class=3D"hdlist1">delayMs</dt>
<dd>
<p>Delay imposed on all requests over the rate limit, before they are consi=
dered at all:</p>
<div class=3D"ulist">
<ul>
<li>
<p>100 (ms) =3D Default</p>
</li>
<li>
<p>-1 =3D Reject request</p>
</li>
<li>
<p>0 =3D No delay</p>
</li>
<li>
<p>any other value =3D Delay in ms</p>
</li>
</ul>
</div>
</dd>
<dt class=3D"hdlist1">maxWaitMs</dt>
<dd>
<p>Length of time, in ms, to blocking wait for the throttle semaphore.
Default is 50 ms.</p>
</dd>
<dt class=3D"hdlist1">throttledRequests</dt>
<dd>
<p>Number of requests over the rate limit able to be considered at once.
Default is 5.</p>
</dd>
<dt class=3D"hdlist1">throttleMs</dt>
<dd>
<p>Length of time, in ms, to async wait for semaphore. Default is 30000L.</=
p>
</dd>
<dt class=3D"hdlist1">maxRequestMs</dt>
<dd>
<p>Length of time, in ms, to allow the request to run. Default is 30000L.</=
p>
</dd>
<dt class=3D"hdlist1">maxIdleTrackerMs</dt>
<dd>
<p>Length of time, in ms, to keep track of request rates for a connection, =
before deciding that the user has gone away, and discarding it.
Default is 30000L.</p>
</dd>
<dt class=3D"hdlist1">insertHeaders</dt>
<dd>
<p>If true, insert the DoSFilter headers into the response.
Defaults to true.</p>
</dd>
<dt class=3D"hdlist1">trackSessions</dt>
<dd>
<p>If true, usage rate is tracked by session if a session exists.
Defaults to true.</p>
</dd>
<dt class=3D"hdlist1">remotePort</dt>
<dd>
<p>If true and session tracking is not used, then rate is tracked by IP and=
 port (effectively connection).
Defaults to false.</p>
</dd>
<dt class=3D"hdlist1">ipWhitelist</dt>
<dd>
<p>A comma-separated list of IP addresses that will not be rate limited.</p=
>
</dd>
<dt class=3D"hdlist1">managedAttr</dt>
<dd>
<p>If set to true, then this servlet is set as a ServletContext attribute w=
ith the filter name as the attribute name.
This allows a context external mechanism (for example, JMX via <code>Contex=
tHandler.MANAGED_ATTRIBUTES</code>) to manage the configuration of the filt=
er.</p>
</dd>
</dl>
</div>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"gzip-filter">Gzip Handler</h3>
<div class=3D"sect3">
<h4 id=3D"gzip-filter-metadata">Info</h4>
<div class=3D"ulist">
<ul>
<li>
<p>Classname: <code>org.eclipse.jetty.server.handler.gzip.GzipHandler</code=
></p>
</li>
<li>
<p>Maven Artifact: org.eclipse.jetty:jetty-servlets</p>
</li>
<li>
<p>Javadoc:
{JDURL}/org/eclipse/jetty/server/handler/gzip/GzipHandler.html</p>
</li>
<li>
<p>Xref: {JXURL}/org/eclipse/jetty/server/handler/gzip/GzipHandler.html</p>
</li>
</ul>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"gzip-filter-usage">Usage</h4>
<div class=3D"paragraph">
<p>The Jetty <code>GzipHandler</code> is a compression handler that you can=
 apply to any dynamic resource (servlet).
It fixes many of the bugs in commonly available compression filters: it wor=
ks with asynchronous servlets; it handles all ways to set content length.
It has been tested with Jetty continuations and suspending requests.
Some user-agents might be excluded from compression to avoid common browser=
 bugs (yes, this means IE!).</p>
</div>
<div class=3D"paragraph">
<p>The <code>GzipHandler</code> is added to the entire server by the <code>=
etc/jetty-gzip.xml</code> file from the <code>gzip.mod</code> module.
It may also be added to individual contexts in a context xml file.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"gzip-filter-rules">Gzip Rules</h4>
<div class=3D"paragraph">
<p><code>GzipHandler</code> will gzip or deflate the content of a response =
if:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>It is mapped to a matching path</p>
</li>
<li>
<p>The request method is configured to support gzip</p>
</li>
<li>
<p>The request is not from an excluded User-Agent</p>
</li>
<li>
<p>accept-encoding header is set to either gzip, deflate or a combination o=
f those</p>
</li>
<li>
<p>The response status code is &gt;=3D200 and &lt;300</p>
</li>
<li>
<p>The content length is unknown or more than the minGzipSize initParameter=
 or the minGzipSize is 0(default)</p>
</li>
<li>
<p>The content-type does not match an excluded mime-type</p>
</li>
<li>
<p>No content-encoding is specified by the resource</p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>If both gzip and deflate are specified in the accept-encoding header, th=
en gzip will be used.</p>
</div>
<div class=3D"paragraph">
<p>Compressing the content can greatly improve the network bandwidth usage,=
 but at the cost of memory and CPU cycles.
The <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.=
4.x/jetty-documentation/src/main/asciidoc/index.html#default-servlet">Defau=
ltServlet</a> is capable of serving pre-compressed static content, which sa=
ves memory and CPU.
By default, the <code>GzipHandler</code> will check to see if pre-compresse=
d content exists, and pass the request through to be handled by the <code>D=
efaultServlet</code>.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"gzip-filter-init">Gzip Configuration</h4>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">minGzipSize</dt>
<dd>
<p>Content will only be compressed if content length is either unknown or g=
reater than <code>minGzipSize</code>.</p>
</dd>
<dt class=3D"hdlist1">checkGzExists</dt>
<dd>
<p>True by default.
If set to false, the handler will not check for pre-compressed content.</p>
</dd>
<dt class=3D"hdlist1">compressionLevel</dt>
<dd>
<p>The compression level used for deflate compression. (0-9).</p>
</dd>
<dt class=3D"hdlist1">includedMethods</dt>
<dd>
<p>List of HTTP methods to compress.
If not set, only <code>GET</code> requests are compressed.</p>
</dd>
<dt class=3D"hdlist1">includedMimeTypes</dt>
<dd>
<p>List of MIME types to compress.</p>
</dd>
<dt class=3D"hdlist1">excludedMimeTypes</dt>
<dd>
<p>List of MIME types not to compress.</p>
</dd>
<dt class=3D"hdlist1">excludedAgentPatterns</dt>
<dd>
<p>A list of regex patterns for User-Agent names from which requests should=
 not be compressed.</p>
</dd>
<dt class=3D"hdlist1">excludedPaths</dt>
<dd>
<p>List of paths to exclude from compression.
Performs a <code>String.startsWith(String)</code> comparison to check if th=
e path matches.
If it does match then there is no compression.
To match subpaths use excludePathPatterns instead.</p>
</dd>
<dt class=3D"hdlist1">includedPaths</dt>
<dd>
<p>List of paths to consider for compression.</p>
</dd>
<dt class=3D"hdlist1">includePaths</dt>
<dd>
<p>List of paths to definitely consider for compression.</p>
</dd>
</dl>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"cross-origin-filter">Cross Origin Filter</h3>
<div class=3D"sect3">
<h4 id=3D"cross-origin-filter-metadata">Info</h4>
<div class=3D"ulist">
<ul>
<li>
<p>Classname: <code>org.eclipse.jetty.servlets.CrossOriginFilter</code></p>
</li>
<li>
<p>Maven Artifact: org.eclipse.jetty:jetty-servlets</p>
</li>
<li>
<p>Javadoc: {JDURL}/org/eclipse/jetty/servlets/CrossOriginFilter.html</p>
</li>
<li>
<p>Xref: {JXURL}/org/eclipse/jetty/servlets/CrossOriginFilter.html</p>
</li>
</ul>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"cross-origin-filter-usage">Usage</h4>
<div class=3D"paragraph">
<p>HTTP requests made from a script are subject to well known restrictions,=
 the most prominent being the same domain policy.</p>
</div>
<div class=3D"paragraph">
<p>Firefox 3.5 introduced support for W3C=E2=80=99s Access Control for Cros=
s-Site Requests specification, which requires a compliant client (for examp=
le, Firefox 3.5) and a compliant server (via this servlet filter).</p>
</div>
<div class=3D"paragraph">
<p>This filter implements the required bits to support the server-side cont=
ract of the specification, and will allow a compliant client to perform cro=
ss-domain requests via the standard XMLHttpRequest object.
If the client does not issue a compliant cross-domain request, this filter =
does nothing, and its overhead is the check of the presence of the cross-do=
main HTTP header.</p>
</div>
<div class=3D"paragraph">
<p>This is extremely useful in CometD web applications where it is now poss=
ible to perform cross-domain long polling without using script injection (a=
lso known as the JSONP transport), and therefore removing all the downsides=
 that the JSONP transport has (it=E2=80=99s chattier, does not react quickl=
y to failures, has a message size limit, uses GET instead of POST, etc.).</=
p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"cross-origin-setup">Setup</h4>
<div class=3D"paragraph">
<p>You will need to put the <code>jetty-servlets.jar</code> file onto your =
classpath.
If you are creating a webapp, ensure that this jar is included in your weba=
pp=E2=80=99s <code>WEB-INF/lib</code>.
Or, if you are running Jetty embedded you will need to ensure that <code>je=
tty-servlets.jar</code> is on the execution classpath.
You can download the <code>jetty-servlets.jar</code> from the Maven Central=
 Repository at <a href=3D"http://central.maven.org/maven2/org/eclipse/jetty=
/jetty-servlets/" class=3D"bare">http://central.maven.org/maven2/org/eclips=
e/jetty/jetty-servlets/</a>.
It is also available as part of the Jetty distribution in the <code>$JETTY_=
HOME/lib</code> directory.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"cross-origin-config">Configuration</h4>
<div class=3D"paragraph">
<p>This is a regular servlet filter that must be configured in <code>web.xm=
l</code>.</p>
</div>
<div class=3D"paragraph">
<p>It supports the following configuration parameters:</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">allowedOrigins</dt>
<dd>
<p>A comma separated list of origins that are allowed to access the resourc=
es.
Default value is: * (all origins)</p>
</dd>
<dt class=3D"hdlist1">allowedMethods</dt>
<dd>
<p>A comma separated list of HTTP methods that are allowed to be used when =
accessing the resources.
Default value is: GET,POST,HEAD</p>
</dd>
<dt class=3D"hdlist1">allowedHeaders</dt>
<dd>
<p>A comma separated list of HTTP headers that are allowed to be specified =
when accessing the resources.
Default value is: X-Requested-With,Content-Type,Accept,Origin</p>
</dd>
<dt class=3D"hdlist1">allowCredentials</dt>
<dd>
<p>A boolean indicating if the resource allows requests with credentials.
Default value is: true</p>
</dd>
<dt class=3D"hdlist1">preflightMaxAge</dt>
<dd>
<p>The number of seconds that preflight requests can be cached by the clien=
t.
Default value is 1800 seconds (30 minutes)</p>
</dd>
<dt class=3D"hdlist1">chainPreflight</dt>
<dd>
<p>If true preflight requests are chained to their target resource for norm=
al handling (as an OPTION request).
Otherwise the filter will response to the preflight.
Default is true.</p>
</dd>
<dt class=3D"hdlist1">exposedHeaders</dt>
<dd>
<p>A comma separated list of HTTP headers that are allowed to be exposed on=
 the client.
Default value is the empty list.</p>
</dd>
</dl>
</div>
<div class=3D"paragraph">
<p>A typical configuration could be:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><we=
b-app>

    <filter>
        <filter-name>cross-origin</filter-name>
        <filter-class>org.eclipse.jetty.servlets.CrossOriginFilter</filter-=
class>
    </filter>
    <filter-mapping>
        <filter-name>cross-origin</filter-name>
        <url-pattern>/cometd/*</url-pattern>
    </filter-mapping>

</web-app></code></pre>
</div>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"resource-handler">Resource Handler</h3>
<div class=3D"sect3">
<h4 id=3D"resource-handler-metadata">Info</h4>
<div class=3D"ulist">
<ul>
<li>
<p>Classname: <code>org.eclipse.jetty.server.handler.ResourceHandler</code>=
</p>
</li>
<li>
<p>Maven Artifact: org.eclipse.jetty:jetty-server</p>
</li>
<li>
<p>Javadoc: {JDURL}/org/eclipse/jetty/server/handler/ResourceHandler.html</=
p>
</li>
<li>
<p>Xref: {JXURL}/org/eclipse/jetty/server/handler/ResourceHandler.html</p>
</li>
</ul>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"resource-handler-usage">Usage</h4>
<div class=3D"paragraph">
<p>This handler will serve static content and handle If-Modified-Since head=
ers and is suitable for simple serving of static content.</p>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock important">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Important</div>
</td>
<td class=3D"content">
There is no caching done with this handler, so if you are looking for a mor=
e fully featured way of serving static content look to the <a href=3D"file:=
///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentat=
ion/src/main/asciidoc/index.html#default-servlet">Default Servlet</a>.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Note</div>
</td>
<td class=3D"content">
Requests for resources that do not exist are let pass (Eg no 404=E2=80=99s)=
.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_improving_the_look_and_feel">Improving the Look and Feel</h4>
<div class=3D"paragraph">
<p>The resource handler has a default stylesheet which you can change by ca=
lling <code>setStyleSheet(String location)</code> with the location of a fi=
le on the system that it can locate through the resource loading system.
The default css is called <code>jetty-dir.css</code> and is located in the =
<code>jetty-util</code> package, pulled as a classpath resource from the <c=
ode>jetty-util</code> jar when requested through the <code>ResourceHandler<=
/code>.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_embedded_example">Embedded Example</h4>
<div class=3D"paragraph">
<p>The following is an example of a split fileserver, able to serve static =
content from multiple directory locations.
Since this handler does not return 404=E2=80=99s on content you are able to=
 iteratively try multiple resource handlers to resolve content.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">U=
nresolved directive in administration/extras/resource-handler.adoc - includ=
e::{SRCDIR}/examples/embedded/src/main/java/org/eclipse/jetty/embedded/Spli=
tFileServer.java[]</code></pre>
</div>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"debug-handler">Debug Handler</h3>
<div class=3D"sect3">
<h4 id=3D"debug-handler-metadata">Info</h4>
<div class=3D"ulist">
<ul>
<li>
<p>Classname: <code>org.eclipse.jetty.server.handler.DebugHandler</code></p=
>
</li>
<li>
<p>Maven Artifact: org.eclipse.jetty:jetty-server</p>
</li>
<li>
<p>Javadoc: {JDURL}/org/eclipse/jetty/server/handler/DebugHandler.html</p>
</li>
<li>
<p>Xref: {JXURL}/org/eclipse/jetty/server/handler/DebugHandler.html</p>
</li>
</ul>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"debug-handler-usage">Usage</h4>
<div class=3D"paragraph">
<p>A simple handler that is useful to debug incoming traffic.
It will log entry and exit points of HTTP requests as well as the response =
code.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_usage_in_standard_distribution">Usage in standard distribution</=
h4>
<div class=3D"paragraph">
<p>The debug handler can be added to Jetty by activating the debug module.<=
/p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_embedded_usage">Embedded usage</h4>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">S=
erver server =3D new Server(8080);
RolloverFileOutputStream outputStream =3D new RolloverFileOutputStream("Mei=
nLogPfad/yyyy_mm_dd.request.log", true,10);

DebugHandler debugHandler =3D new DebugHandler();
debugHandler.setOutputStream(outputStream);
debugHandler.setHandler(server.getHandler());

server.setHandler(debugHandler);
server.start();</code></pre>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_example_output">Example output</h4>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-bash" data-lang=3D"bash">1=
5:14:05.838:qtp551889550-13-selector-0 OPENED HttpConnection@e910ee4{IDLE},=
g=3DHttpGenerator{s=3DSTART},p=3DHttpParser{s=3DSTART,0 of 0}
15:14:05.846:qtp551889550-57:http://0:0:0:0:0:0:0:1:8080/ REQUEST 0:0:0:0:0=
:0:0:1 GET __utma=3D111872281.10102721.1321534299.1369833564.1370447492.35;=
 __utmz=3D111872281.1321534299.1.1.utmcsr=3D(direct)|utmccn=3D(direct)|utmc=
md=3D(none); _opt_vi_RPY720HZ=3D75E12E63-0CD0-4D6F-8383-C90D5C8397C7; Mozil=
la/5.0 (Macintosh; Intel Mac OS X 10.8; rv:22.0) Gecko/20100101 Firefox/22.=
0
15:14:05.894:qtp551889550-57:http://0:0:0:0:0:0:0:1:8080/ RESPONSE 200 null
15:14:05.959:qtp551889550-59:http://0:0:0:0:0:0:0:1:8080/jetty.css REQUEST =
0:0:0:0:0:0:0:1 GET __utma=3D111872281.10102721.1321534299.1369833564.13704=
47492.35; __utmz=3D111872281.1321534299.1.1.utmcsr=3D(direct)|utmccn=3D(dir=
ect)|utmcmd=3D(none); _opt_vi_RPY720HZ=3D75E12E63-0CD0-4D6F-8383-C90D5C8397=
C7; visited=3Dyes; Mozilla/5.0 (Macintosh; Intel Mac OS X 10.8; rv:22.0) Ge=
cko/20100101 Firefox/22.0
15:14:05.962:qtp551889550-59:http://0:0:0:0:0:0:0:1:8080/jetty.css RESPONSE=
 200 null
15:14:06.052:qtp551889550-57:http://0:0:0:0:0:0:0:1:8080/images/jetty-heade=
r.jpg REQUEST 0:0:0:0:0:0:0:1 GET __utma=3D111872281.10102721.1321534299.13=
69833564.1370447492.35; __utmz=3D111872281.1321534299.1.1.utmcsr=3D(direct)=
|utmccn=3D(direct)|utmcmd=3D(none); _opt_vi_RPY720HZ=3D75E12E63-0CD0-4D6F-8=
383-C90D5C8397C7; visited=3Dyes; Mozilla/5.0 (Macintosh; Intel Mac OS X 10.=
8; rv:22.0) Gecko/20100101 Firefox/22.0
15:14:06.055:qtp551889550-57:http://0:0:0:0:0:0:0:1:8080/images/jetty-heade=
r.jpg RESPONSE 200 null
15:14:07.248:qtp551889550-59:http://0:0:0:0:0:0:0:1:8080/favicon.ico REQUES=
T 0:0:0:0:0:0:0:1 GET __utma=3D111872281.10102721.1321534299.1369833564.137=
0447492.35; __utmz=3D111872281.1321534299.1.1.utmcsr=3D(direct)|utmccn=3D(d=
irect)|utmcmd=3D(none); _opt_vi_RPY720HZ=3D75E12E63-0CD0-4D6F-8383-C90D5C83=
97C7; visited=3Dyes; Mozilla/5.0 (Macintosh; Intel Mac OS X 10.8; rv:22.0) =
Gecko/20100101 Firefox/22.0
15:14:07.251:qtp551889550-59:http://0:0:0:0:0:0:0:1:8080/favicon.ico RESPON=
SE 404 text/html;charset=3DISO-8859-1
15:14:09.330:qtp551889550-57 CLOSED HttpConnection@e910ee4{INTERESTED},g=3D=
HttpGenerator{s=3DSTART},p=3DHttpParser{s=3DSTART,0 of -1}</code></pre>
</div>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"statistics-handler">Statistics Handler</h3>
<div class=3D"sect3">
<h4 id=3D"statistics-handler-metadata">Info</h4>
<div class=3D"ulist">
<ul>
<li>
<p>Classname: <code>org.eclipse.jetty.server.handler.StatisticsHandler</cod=
e></p>
</li>
<li>
<p>Maven Artifact: org.eclipse.jetty:jetty-server</p>
</li>
<li>
<p>Javadoc:
{JDURL}/org/eclipse/jetty/server/handler/StatisticsHandler.html</p>
</li>
<li>
<p>Xref: {JXURL}/org/eclipse/jetty/server/handler/StatisticsHandler.html</p=
>
</li>
</ul>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"statistics-handler-usage">Usage</h4>
<div class=3D"paragraph">
<p>Jetty currently has two levels of request statistic collection:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>Subclasses of <code>AbstractConnector</code> class optionally can collec=
t statistics about connections as well as number of requests.</p>
</li>
<li>
<p>The <code>StatisticsHandler</code> class may be used to collect request =
statistics.</p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>In addition to these, subclasses of the <code>AbstractSessionHandler</co=
de> class optionally can collect session statistics.</p>
</div>
<div class=3D"paragraph">
<p><code>AbstractConnector</code> and <code>AbstractSessionHandler</code> s=
tatistics are turned off by default and must either be configured manually =
for each instance or turned on via JMX interface.
The <code>StatisticsHandler</code> is not included in default Jetty configu=
ration, and needs to be configured manually.</p>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Note</div>
</td>
<td class=3D"content">
To view statistics, you have to be able to connect to Jetty using either JC=
onsole or some other JMX agent. See <a href=3D"file:///home/tian/Downloads/=
b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/i=
ndex.html#using-jmx">Using JMX with Jetty</a> for more information.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"connector-statistics">Connector statistics</h4>
<div class=3D"paragraph">
<p>Detailed statistics on connection duration and number of requests are on=
ly collated when a connection is closed.
The current and maximum number of connections are the only "live" statistic=
s.</p>
</div>
<div class=3D"paragraph">
<p>The following example shows how to turn on connector statistics in Jetty=
 xml.
This example comes from within <code>jetty-http.xml</code>.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml">  <=
call name=3D"addConnector">
    <arg>
      <new class=3D"org.eclipse.jetty.server.ServerConnector">
        <arg name=3D"server"><ref refid=3D"Server"></ref></arg>
        <arg name=3D"factories">
          <array type=3D"org.eclipse.jetty.server.ConnectionFactory">
            <item>
              <new class=3D"org.eclipse.jetty.server.HttpConnectionFactory"=
>
                <arg name=3D"config"><ref refid=3D"httpConfig"></ref></arg>
              </new>
            </item>
          </array>
        </arg>
        <set name=3D"host"><property name=3D"jetty.host"></property></set>
        <set name=3D"port"><property name=3D"jetty.http.port" default=3D"80=
80"></property></set>
        <set name=3D"idleTimeout">30000</set>
        <!-- Enable Connection Statistics -->
        <call name=3D"addBean">
          <arg>
              <new id=3D"ConnectionStatistics" class=3D"org.eclipse.jetty.i=
o.ConnectionStatistics">
          </new></arg>
        </call>
      </new>
    </arg>
  </call></code></pre>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"request-statistics">Request Statistics</h4>
<div class=3D"paragraph">
<p>To collect request statistics a <code>StatisticsHandler</code> must be c=
onfigured as one of the handlers of the server.
Typically this can be done as the top level handler, but you may choose to =
configure a statistics handler for just one context by creating a context c=
onfiguration file.
You can enable the <code>StatisticsHandler</code> by activating the <code>s=
tats</code> modules on the command line.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">$ java -jar {$jetty.home}/start.jar --add-to-start=3Dstats</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Alternately, if you are making multiple changes to the Jetty configurati=
on, you could include statistics handler configuration into your own Jetty =
xml configuration.
The following fragment shows how to configure a top level statistics handle=
r:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml">   =
 <get id=3D"oldhandler" name=3D"handler">
  <set name=3D"handler">
    <new id=3D"StatsHandler" class=3D"org.eclipse.jetty.server.handler.Stat=
isticsHandler">
      <set name=3D"handler"><ref refid=3D"oldhandler"></ref></set>
    </new>
  </set></get></code></pre>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"session-statistics">Session Statistics</h4>
<div class=3D"paragraph">
<p>Session handling is built into Jetty for any servlet or webapp context.
Detailed statistics on session duration are only collated when a session is=
 closed.
The current, minimum, and maximum number of sessions are the only "live" st=
atistics.
The session statistics are enabled by default and do not need to be configu=
red.</p>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"ipaccess-handler">IP Access Handler</h3>
<div class=3D"sect3">
<h4 id=3D"ipaccess-handler-metadata">Info</h4>
<div class=3D"ulist">
<ul>
<li>
<p>Classname: <code>org.eclipse.jetty.server.handler.IPAccessHandler</code>=
</p>
</li>
<li>
<p>Maven Artifact: org.eclipse.jetty:jetty-server</p>
</li>
<li>
<p>Javadoc: {JDURL}/org/eclipse/jetty/server/handler/IPAccessHandler.html</=
p>
</li>
<li>
<p>Xref: {JXURL}/org/eclipse/jetty/server/handler/IPAccessHandler.html</p>
</li>
</ul>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"ipaccess-handler-usage">Usage</h4>
<div class=3D"paragraph">
<p>Controls access to the wrapped handler by the real remote IP.
Control is provided by white/black lists that include both internet address=
es and URIs.
This handler uses the real internet address of the connection, not one repo=
rted in the forwarded for headers, as this cannot be as easily forged.</p>
</div>
<div class=3D"paragraph">
<p>Typically, the black/white lists will be used in one of three modes:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>Blocking a few specific IPs/URLs by specifying several black list entrie=
s.</p>
</li>
<li>
<p>Allowing only some specific IPs/URLs by specifying several white lists e=
ntries.</p>
</li>
<li>
<p>Allowing a general range of IPs/URLs by specifying several general white=
 list entries, that are then further refined by several specific black list=
 exceptions.</p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>An empty white list is treated as match all.
If there is at least one entry in the white list, then a request <strong>mu=
st</strong> match a white list entry.
Black list entries are always applied, so that even if an entry matches the=
 white list, a black list entry will override it.</p>
</div>
<div class=3D"paragraph">
<p>Internet addresses may be specified as absolute address or as a combinat=
ion of four octet wildcard specifications (a.b.c.d) that are defined as fol=
lows.</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>nnn - an absolute value (0-255)</p>
</li>
<li>
<p>mmm-nnn - an inclusive range of absolute values, with following shorthan=
d notations:</p>
<div class=3D"ulist">
<ul>
<li>
<p>nnn- =E2=87=92 nnn-255</p>
</li>
<li>
<p>-nnn =E2=87=92 0-nnn</p>
</li>
<li>
<p>- =E2=87=92 0-255</p>
</li>
</ul>
</div>
</li>
<li>
<p>a,b,=E2=80=A6=E2=80=8B - a list of wildcard specifications</p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>Internet address specification is separated from the URI pattern using t=
he "|" (pipe) character.
URI patterns follow the servlet specification for simple * prefix and suffi=
x wild cards (e.g. /, /foo, /foo/bar, /foo/bar/*, *.baz).</p>
</div>
<div class=3D"paragraph">
<p>Earlier versions of the handler used internet address prefix wildcard sp=
ecification to define a range of the internet addresses (e.g. 127., 10.10.,=
 172.16.1.).
They also used the first "/" character of the URI pattern to separate it fr=
om the internet address.
Both of these features have been deprecated in the current version.</p>
</div>
<div class=3D"paragraph">
<p>Examples of the entry specifications are:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>10.10.1.2 - all requests from IP 10.10.1.2</p>
</li>
<li>
<p>10.10.1.2|/foo/bar - all requests from IP 10.10.1.2 to URI /foo/bar</p>
</li>
<li>
<p>10.10.1.2|/foo/* - all requests from IP 10.10.1.2 to URIs starting with =
/foo/</p>
</li>
<li>
<p>10.10.1.2|*.html - all requests from IP 10.10.1.2 to URIs ending with .h=
tml</p>
</li>
<li>
<p>10.10.0-255.0-255 - all requests from IPs within 10.10.0.0/16 subnet</p>
</li>
<li>
<p>10.10.0-.-255|/foo/bar - all requests from IPs within 10.10.0.0/16 subne=
t to URI /foo/bar</p>
</li>
<li>
<p>10.10.0-3,1,3,7,15|/foo/* - all requests from IPs addresses with last oc=
tet equal to 1,3,7,15 in subnet 10.10.0.0/22 to URIs starting with /foo/</p=
>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>Earlier versions of the handler used internet address prefix wildcard sp=
ecification to define a range of the internet addresses (e.g. 127., 10.10.,=
 172.16.1.).
They also used the first "/" character of the URI pattern to separate it fr=
om the internet address.
Both of these features have been deprecated in the current version.</p>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"moved-context-handler">Moved Context Handler</h3>
<div class=3D"sect3">
<h4 id=3D"moved-context-handler-metadata">Info</h4>
<div class=3D"ulist">
<ul>
<li>
<p>Classname: <code>org.eclipse.jetty.server.handler.MovedContextHandler</c=
ode></p>
</li>
<li>
<p>Maven Artifact: org.eclipse.jetty:jetty-server</p>
</li>
<li>
<p>Javadoc:
{JDURL}/org/eclipse/jetty/server/handler/MovedContextHandler.html</p>
</li>
<li>
<p>Xref:
{JXURL}/org/eclipse/jetty/server/handler/MovedContextHandler.html</p>
</li>
</ul>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"moved-context-handler-usage">Usage</h4>
<div class=3D"paragraph">
<p>You can use the <code>MovedContextHandler</code> to relocate or redirect=
 a context that has changed context path and/or virtual hosts.</p>
</div>
<div class=3D"paragraph">
<p>You can configure it to <em>permanently</em> redirect the old URL to the=
 new URL, in which case Jetty sends a Http Status code of 301 to the browse=
r with the new URL.
Alternatively, you can make it non-permanent, in which case Jetty sends a 3=
02 Http Status code along with the new URL.</p>
</div>
<div class=3D"paragraph">
<p>In addition, as with any other context, you can configure a list of virt=
ual hosts, meaning that this context responds only to requests to one of th=
e listed host names.</p>
</div>
<div class=3D"paragraph">
<p>Suppose you have a context deployed at <code>/foo</code>, but that now y=
ou want to deploy at the root context <code>/</code> instead.</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>First you reconfigure and redeploy the context on Jetty.</p>
</li>
<li>
<p>Next you need a way to redirect all the browsers who have bookmarked <co=
de>/foo</code> to the new path.
You create a new <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.pro=
ject-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#configuri=
ng-contexts">context xml</a> file in <code>{$jetty/.base}/webapps</code> an=
d configure the <code>MovedContextHandler</code> to do the redirection from=
 <code>/foo</code> to <code>/</code>.</p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>Below is an example.
This is a permanent redirection, which also preserves <code>pathinfo</code>=
 and query strings on the redirect:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><!-=
-?xml version=3D"1.0" encoding=3D"UTF-8"?-->


<configure class=3D"org.eclipse.jetty.server.handler.MovedContextHandler">
  <set name=3D"contextPath">/foo</set>
  <set name=3D"newContextURL">/</set>
  <set name=3D"permanent">true</set>
  <set name=3D"discardPathInfo">false</set>
  <set name=3D"discardQuery">false</set>

  <set name=3D"virtualHosts">
    <array type=3D"String">
          <item>209.235.245.73</item>
          <item>127.0.0.73</item>
          <item>acme.org</item>
          <item>www.acme.org</item>
          <item>server.acme.org</item>
    </array>
  </set>
</configure></code></pre>
</div>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"shutdown-handler">Shutdown Handler</h3>
<div class=3D"sect3">
<h4 id=3D"shutdown-handler-metadata">Info</h4>
<div class=3D"ulist">
<ul>
<li>
<p>Classname: <code>org.eclipse.jetty.server.handler.ShutdownHandler</code>=
</p>
</li>
<li>
<p>Maven Artifact: org.eclipse.jetty:jetty-server</p>
</li>
<li>
<p>Javadoc: {JDURL}/org/eclipse/jetty/server/handler/ShutdownHandler.html</=
p>
</li>
<li>
<p>Xref: {JXURL}/org/eclipse/jetty/server/handler/ShutdownHandler.html</p>
</li>
</ul>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"shutdown-handler-usage">Usage</h4>
<div class=3D"paragraph">
<p>A handler that shuts the server down on a valid request.
This is used to perform "soft" restarts from Java.
If <code>_exitJvm</code> is set to true a hard <code>System.exit()</code> c=
all is being made.</p>
</div>
<div class=3D"paragraph">
<p>This is an example of how you can setup this handler directly with the S=
erver.
It can also be added as a part of handler chain or collection.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java"> =
   Server server =3D new Server(8080);
    HandlerList handlers =3D new HandlerList();
    handlers.setHandlers(new Handler[]
    { someOtherHandler, new ShutdownHandler(server,"secret password") });
    server.setHandler(handlers);
    server.start();</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>This is an example that you can use to call the shutdown handler from wi=
thin java.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java"> =
  public static void attemptShutdown(int port, String shutdownCookie) {
        try {
            URL url =3D new URL("http://localhost:" + port + "/shutdown?tok=
en=3D" + shutdownCookie);
            HttpURLConnection connection =3D (HttpURLConnection)url.openCon=
nection();
            connection.setRequestMethod("POST");
            connection.getResponseCode();
            logger.info("Shutting down " + url + ": " + connection.getRespo=
nseMessage());
        } catch (SocketException e) {
            logger.debug("Not running");
            // Okay - the server is not running
        } catch (IOException e) {
            throw new RuntimeException(e);
        }
    }</code></pre>
</div>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"default-handler">Default Handler</h3>
<div class=3D"sect3">
<h4 id=3D"default-handler-metadata">Info</h4>
<div class=3D"ulist">
<ul>
<li>
<p>Classname: <code>org.eclipse.jetty.server.handler.DefaultHandler</code><=
/p>
</li>
<li>
<p>Maven Artifact: org.eclipse.jetty:jetty-server</p>
</li>
<li>
<p>Javadoc: {JDURL}/org/eclipse/jetty/server/handler/DefaultHandler.html</p=
>
</li>
<li>
<p>Xref: {JXURL}/org/eclipse/jetty/server/handler/DefaultHandler.html</p>
</li>
</ul>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"default-handler-usage">Usage</h4>
<div class=3D"paragraph">
<p>A simple handler that is useful to terminate handler chains with a clean=
 fashion.
As in the example below, if a resource to be served is not matched within t=
he resource handler the <code>DefaultHandler</code> will take care of produ=
cing a 404 page.
This class is a useful template to either extend and embrace or simply prov=
ide a similar implementation for customizing to your needs.
There is also an <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.pro=
ject-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#error-han=
dler">Error Handler</a> that services errors related to the servlet api spe=
cification, so it is best to not get the two confused.</p>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Note</div>
</td>
<td class=3D"content">
The <code>DefaultHandler</code> will also handle serving out the <code>flav=
.ico</code> file should a request make it through all of the other handlers=
 without being resolved.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java"> =
   Server server =3D new Server(8080);
    HandlerList handlers =3D new HandlerList();
    ResourceHandler resourceHandler =3D new ResourceHandler();
    resourceHandler.setBaseResource(Resource.newResource("."));
    handlers.setHandlers(new Handler[]
    { resourceHandler, new DefaultHandler() });
    server.setHandler(handlers);
    server.start();</code></pre>
</div>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"error-handler">Error Handler</h3>
<div class=3D"sect3">
<h4 id=3D"error-handler-metadata">Info</h4>
<div class=3D"ulist">
<ul>
<li>
<p>Classname: <code>org.eclipse.jetty.server.handler.ErrorHandler</code></p=
>
</li>
<li>
<p>Maven Artifact: org.eclipse.jetty:jetty-server</p>
</li>
<li>
<p>Javadoc: {JDURL}/org/eclipse/jetty/server/handler/ErrorHandler.html</p>
</li>
<li>
<p>Xref: {JXURL}/org/eclipse/jetty/server/handler/ErrorHandler.html</p>
</li>
</ul>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"error-handler-usage">Usage</h4>
<div class=3D"paragraph">
<p>A handler that is used to report errors from servlet contexts and webapp=
 contexts to report error conditions.
Primarily handles setting the various servlet spec specific response header=
s for error conditions.
Can be customized by extending; for more information on this see <a href=3D=
"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-docu=
mentation/src/main/asciidoc/index.html#custom-error-pages">Creating Custom =
Error Pages</a>.</p>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"rewrite-handler">Rewrite Handler</h3>
<div class=3D"paragraph">
<p>The <code>RewriteHandler</code> matches a request against a set of rules=
, and modifies the request accordingly for any rules that match.
The most common use is to rewrite request URIs, but it is capable of much m=
ore: rules can also be configured to redirect the response, set a cookie or=
 response code on the response, modify the header, etc.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"rewrite-handler-metadata">Info</h4>
<div class=3D"ulist">
<ul>
<li>
<p>Classname: org.eclipse.jetty.rewrite.handler.RewriteHandler</p>
</li>
<li>
<p>Maven artifact: org.eclipse.jetty:jetty-rewrite</p>
</li>
<li>
<p>Javadoc: {JDURL}/org/eclipse/jetty/rewrite/handler/RewriteHandler.html</=
p>
</li>
<li>
<p>Xref: {JXURL}/org/eclipse/jetty/rewrite/handler/RewriteHandler.html</p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>The standard Jetty distribution bundle contains the <code>jetty-rewrite<=
/code> <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty=
-9.4.x/jetty-documentation/src/main/asciidoc/index.html#startup-modules">mo=
dule</a>, so all you need to do is to enable it using one of the <a href=3D=
"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-docu=
mentation/src/main/asciidoc/index.html#start-jar">module commands</a>, eg:<=
/p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">$ java -jar start.jar --add-to-start=3Drewrite</code></pre>
</div>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Note</div>
</td>
<td class=3D"content">
If you are running the standard Jetty distribution with the sample test web=
app, there will be a demo of the rewrite module at <a href=3D"http://localh=
ost:8080/test/rewrite/" class=3D"bare">http://localhost:8080/test/rewrite/<=
/a>
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_usage">Usage</h4>
<div class=3D"paragraph">
<p>The rewrite module enables the following Jetty xml config file on the ex=
ecution path:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml">Unr=
esolved directive in administration/extras/rewrite-handler.adoc - include::=
{SRCDIR}/jetty-rewrite/src/main/config/etc/jetty-rewrite.xml[]</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>As the commented out code shows, you configure the <code>RewriteHandler<=
/code> by adding various rules.</p>
</div>
<div class=3D"paragraph">
<p>There is an example of <a href=3D"file:///home/tian/Downloads/b60/ebook/=
jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#=
rewrite-rules">rules</a> configuration in the standard distribution in the =
<code>demo-base/etc/demo-rewrite-rules.xml</code> file:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml">Unr=
esolved directive in administration/extras/rewrite-handler.adoc - include::=
{SRCDIR}/tests/test-webapps/test-jetty-webapp/src/main/config/demo-base/etc=
/demo-rewrite-rules.xml[]</code></pre>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_embedded_example_2">Embedded Example</h5>
<div class=3D"paragraph">
<p>This is an example for embedded Jetty, which does something similar to t=
he configuration file example above:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java"> =
 Server server =3D new Server();

  RewriteHandler rewrite =3D new RewriteHandler();
  rewrite.setRewriteRequestURI(true);
  rewrite.setRewritePathInfo(false);
  rewrite.originalPathAttribute("requestedPath");

  RedirectPatternRule redirect =3D new RedirectPatternRule();
  redirect.setPattern("/redirect/*");
  redirect.setReplacement("/redirected");
  rewrite.addRule(redirect);

  RewritePatternRule oldToNew =3D new RewritePatternRule();
  oldToNew.setPattern("/some/old/context");
  oldToNew.setReplacement("/some/new/context");
  rewrite.addRule(oldToNew);

  RewriteRegexRule reverse =3D new RewriteRegexRule();
  reverse.setRegex("/reverse/([^/]*)/(.*)");
  reverse.setReplacement("/reverse/$2/$1");
  rewrite.addRule(reverse);

  server.setHandler(rewrite);</code></pre>
</div>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"rewrite-rules">Rules</h4>
<div class=3D"paragraph">
<p>There are several types of rules that are written extending useful base =
rule classes.</p>
</div>
<div class=3D"sect4">
<h5 id=3D"_patternrule">PatternRule</h5>
<div class=3D"paragraph">
<p>Matches against the request URI using the servlet pattern syntax.</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1"><a href=3D"file:///home/tian/Downloads/b60/ebook/jett=
y.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJXURL%7D/org=
/eclipse/jetty/rewrite/handler/CookiePatternRule.html">CookiePatternRule</a=
></dt>
<dd>
<p>Adds a cookie to the response.</p>
</dd>
<dt class=3D"hdlist1"><a href=3D"file:///home/tian/Downloads/b60/ebook/jett=
y.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJXURL%7D/org=
/eclipse/jetty/rewrite/handler/HeaderPatternRule.html">HeaderPatternRule</a=
></dt>
<dd>
<p>Adds/modifies a header in the response.</p>
</dd>
<dt class=3D"hdlist1"><a href=3D"file:///home/tian/Downloads/b60/ebook/jett=
y.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJXURL%7D/org=
/eclipse/jetty/rewrite/handler/RedirectPatternRule.html">RedirectPatternRul=
e</a></dt>
<dd>
<p>Redirects the response.</p>
</dd>
<dt class=3D"hdlist1"><a href=3D"file:///home/tian/Downloads/b60/ebook/jett=
y.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJXURL%7D/org=
/eclipse/jetty/rewrite/handler/ResponsePatternRule.html">ResponsePatternRul=
e</a></dt>
<dd>
<p>Sends the response code (status or error).</p>
</dd>
<dt class=3D"hdlist1"><a href=3D"file:///home/tian/Downloads/b60/ebook/jett=
y.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJXURL%7D/org=
/eclipse/jetty/rewrite/handler/RewritePatternRule.html">RewritePatternRule<=
/a></dt>
<dd>
<p>Rewrite the URI by replacing the matched request path with a fixed strin=
g.</p>
</dd>
</dl>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_regexrule">RegexRule</h5>
<div class=3D"paragraph">
<p>Matches against the request URI using regular expressions.</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1"><a href=3D"file:///home/tian/Downloads/b60/ebook/jett=
y.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJXURL%7D/org=
/eclipse/jetty/rewrite/handler/RedirectRegexRule.html">RedirectRegexRule</a=
></dt>
<dd>
<p>Redirect the response.</p>
</dd>
<dt class=3D"hdlist1"><a href=3D"file:///home/tian/Downloads/b60/ebook/jett=
y.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJXURL%7D/org=
/eclipse/jetty/rewrite/handler/RewriteRegexRule.html">RewriteRegexRule</a><=
/dt>
<dd>
<p>Rewrite the URI by matching with a regular expression.
(The replacement string may use <code>Template:$n</code> to replace the nth=
 capture group.)</p>
</dd>
</dl>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_headerrule">HeaderRule</h5>
<div class=3D"paragraph">
<p>Match against request headers. Match either on a header name and specifi=
c value, or on the presence of a header (with any value).</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1"><a href=3D"file:///home/tian/Downloads/b60/ebook/jett=
y.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJXURL%7D/org=
/eclipse/jetty/rewrite/handler/ForwardedSchemeHeaderRule.html">ForwardedSch=
emaHeaderRule</a></dt>
<dd>
<p>Set the scheme on the request (defaulting to HTTPS).</p>
</dd>
</dl>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_others">Others</h5>
<div class=3D"paragraph">
<p>Extra rules that defy standard classification.</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1"><a href=3D"file:///home/tian/Downloads/b60/ebook/jett=
y.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJXURL%7D/org=
/eclipse/jetty/rewrite/handler/MsieSslRule.html">MsieSslRule</a></dt>
<dd>
<p>Disables the keep alive for SSL from IE5 or IE6.</p>
</dd>
<dt class=3D"hdlist1"><a href=3D"file:///home/tian/Downloads/b60/ebook/jett=
y.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJXURL%7D/org=
/eclipse/jetty/rewrite/handler/LegacyRule.html">LegacyRule</a></dt>
<dd>
<p>Implements the legacy API of RewriteHandler</p>
</dd>
</dl>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_rulecontainer">RuleContainer</h5>
<div class=3D"paragraph">
<p>Groups rules together.
The contained rules will only be processed if the conditions for the <code>=
RuleContainer</code> evaluate to true.</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1"><a href=3D"file:///home/tian/Downloads/b60/ebook/jett=
y.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJXURL%7D/org=
/eclipse/jetty/rewrite/handler/VirtualHostRuleContainer.html">VirtualHostRu=
leContainer</a></dt>
<dd>
<p>Groups rules that apply only to a specific virtual host or a set of virt=
ual hosts</p>
</dd>
</dl>
</div>
</div>
</div>
</div>
</div>
</div>
<div class=3D"sect1">
<h2 id=3D"runner">Jetty Runner</h2>
<div class=3D"sectionbody">
<div class=3D"paragraph">
<p>This chapter explains how to use the <code>jetty-runner</code> to run yo=
ur webapps without needing an installation of Jetty.</p>
</div>
<div class=3D"sect2">
<h3 id=3D"jetty-runner">Use Jetty Without an Installed Distribution</h3>
<div class=3D"paragraph">
<p>The idea of the <code>jetty-runner</code> is extremely simple =E2=80=93 =
run a webapp directly from the command line using a single jar file and as =
much default configuration as possible.
Of course, if your webapp is not as straightforward, the <code>jetty-runner=
</code> has command line options which allow you to customize the execution=
 environment.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"jetty-runner-preparation">Preparation</h4>
<div class=3D"paragraph">
<p>You will need the <code>jetty-runner</code> jar:</p>
</div>
<div class=3D"olist arabic">
<ol class=3D"arabic">
<li>
<p>Download the <code>jetty-runner</code> jar available at <a href=3D"http:=
//central.maven.org/maven2/org/eclipse/jetty/jetty-runner/">Maven Central</=
a>.</p>
</li>
</ol>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_deploying_a_simple_context">Deploying a Simple Context</h4>
<div class=3D"paragraph">
<p>Let=E2=80=99s assume we have a very simple webapp that does not need any=
 resources from its environment, nor any configuration apart from the defau=
lts.
Starting it is as simple as performing the following:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">&gt; java -jar jetty-runner.jar simple.war</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>This will start Jetty on port 8080, and deploy the webapp to <code>/</co=
de>.</p>
</div>
<div class=3D"paragraph">
<p>Your webapp does not have to be packed into a war, you can deploy a weba=
pp that is a directory instead in the same way:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">&gt; java -jar jetty-runner.jar simple</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>In fact, the webapp does not have to be a war or even a directory, it ca=
n simply be a Jetty <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.=
project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#using-=
context-provider">context xml</a> file that describes your webapp:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">&gt; java -jar jetty-runner.jar simple-context.xml</code></pre>
</div>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Note</div>
</td>
<td class=3D"content">
When using a context xml file, the application being deployed is not even r=
equired to be a fully-fledged webapp.
It can simply be a Jetty <a href=3D"file:///home/tian/Downloads/b60/ebook/j=
etty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#w=
hat-is-a-context">context</a>.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
<div class=3D"paragraph">
<p>By default, <code>jetty-runner</code> implements all Configuration Class=
es so that users can set up and deploy new instances with as little configu=
ration as possible.
If you wish to only implement certain Configuration Classes, they will need=
 to be defined in the context xml for the webapp/context.
The default Configuration Classes are:</p>
</div>
<div class=3D"literalblock">
<div class=3D"content">
<pre>`org.eclipse.jetty.webapp.WebInfConfiguration`
`org.eclipse.jetty.webapp.WebXmlConfiguration`
`org.eclipse.jetty.webapp.MetaInfConfiguration`
`org.eclipse.jetty.webapp.FragmentConfiguration`
`org.eclipse.jetty.webapp.JettyWebXmlConfiguration`
`org.eclipse.jetty.plus.webapp.EnvConfiguration`
`org.eclipse.jetty.plus.webapp.PlusConfiguration`
`org.eclipse.jetty.annotations.AnnotationConfiguration`</pre>
</div>
</div>
<div class=3D"paragraph">
<p>You can learn more about implementing specific Configuration Classes <a =
href=3D"https://www.eclipse.org/jetty/documentation/current/configuring-web=
apps.html#webapp-configurations">here.</a></p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_deploying_multiple_contexts">Deploying Multiple Contexts</h4>
<div class=3D"paragraph">
<p>If you have more than one webapp that must be deployed, simply provide t=
hem all on the command line.
You can control the context paths for them using the <code>--path</code> pa=
rameter.
Here=E2=80=99s an example of deploying 2 wars (although either or both of t=
hem could be unpacked directories instead):</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">&gt; java -jar jetty-runner.jar --path /one my1.war --path /two my2.war<=
/code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>If you have context xml files that describe your webapps, you can fully =
configure your webapps in them and hence you won=E2=80=99t need to use the =
command line switches.
Just provide the list of context files like so:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">&gt; java -jar jetty-runner.jar my-first-context.xml my-second-context.x=
ml my-third-context.xml</code></pre>
</div>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Note</div>
</td>
<td class=3D"content">
Switched used on the command line override configuration file settings.
So, for example, you could set the context path for the webapp inside the c=
ontext xml file, and use the <code>--path</code> switch to override it on t=
he command line.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
<div class=3D"sect4">
<h5 id=3D"_changing_the_default_port">Changing the Default Port</h5>
<div class=3D"paragraph">
<p>By default the <code>jetty-runner</code> will listen on port 8080.
You can easily change this on the command line using the <code>--port</code=
> command.
Here=E2=80=99s an example that runs our simple.war on port 9090:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">&gt; java -jar jetty-runner.jar --port 9090 simple.war</code></pre>
</div>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_using_jetty_xml_files">Using jetty.xml Files</h5>
<div class=3D"paragraph">
<p>Instead of, or in addition to, using command line switches, you can use =
one or more <code>jetty.xml</code> files to configure the environment for y=
our webapps.
Here=E2=80=99s an example where we apply two different <code>jetty.xml</cod=
e> files:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">&gt; java -jar jetty-runner.jar --config jetty.xml --config jetty-https.=
xml simple.war</code></pre>
</div>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"runner-configuration-reference">Full Configuration Reference</h4>
<div class=3D"paragraph">
<p>You can see the fill set of configuration options using the <code>--help=
</code> switch:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">&gt; java -jar jetty-runner.jar --help</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Here=E2=80=99s what the output will look like:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-plain" data-lang=3D"plain"=
>Usage: java [-Djetty.home=3Ddir] -jar jetty-runner.jar [--help|--version] =
[ server opts] [[ context opts] context ...]
Server opts:
 --version                           - display version and exit
 --log file                          - request log filename (with optional =
'yyyy_mm_dd' wildcard
 --out file                          - info/warn/debug log filename (with o=
ptional 'yyyy_mm_dd' wildcard
 --host name|ip                      - interface to listen on (default is a=
ll interfaces)
 --port n                            - port to listen on (default 8080)
 --stop-port n                       - port to listen for stop command
 --stop-key n                        - security string for stop command (re=
quired if --stop-port is present)
 [--jar file]*n                      - each tuple specifies an extra jar to=
 be added to the classloader
 [--lib dir]*n                       - each tuple specifies an extra direct=
ory of jars to be added to the classloader
 [--classes dir]*n                   - each tuple specifies an extra direct=
ory of classes to be added to the classloader
 --stats [unsecure|realm.properties] - enable stats gathering servlet conte=
xt
 [--config file]*n                   - each tuple specifies the name of a j=
etty xml config file to apply (in the order defined)
Context opts:
 [[--path /path] context]*n          - WAR file, web app dir or context xml=
 file, optionally with a context path</code></pre>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_printing_the_version">Printing the Version</h5>
<div class=3D"paragraph">
<p>Print out the version of Jetty and then exit immediately.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">&gt; java -jar jetty-runner.jar --version</code></pre>
</div>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_configuring_a_request_log">Configuring a Request Log</h5>
<div class=3D"paragraph">
<p>Cause Jetty to write a request log with the given name.
If the file is prefixed with <code>yyyy_mm_dd</code> then the file will be =
automatically rolled over.
Note that for finer grained configuration of the <a href=3D"file:///home/ti=
an/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/ma=
in/asciidoc/%7BJDURL%7D/org/eclipse/jetty/server/NCSARequestLog.html">reque=
st log</a>, you will need to use a Jetty xml file instead.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">&gt; java -jar jetty-runner.jar --log yyyy_mm_dd-requests.log  my.war</c=
ode></pre>
</div>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_configuring_the_output_log">Configuring the Output Log</h5>
<div class=3D"paragraph">
<p>Redirect the output of jetty logging to the named file.
If the file is prefixed with <code>yyyy_mm_dd</code> then the file will be =
automatically rolled over.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">&gt; java -jar jetty-runner.jar --out yyyy_mm_dd-output.log my.war</code=
></pre>
</div>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_configuring_the_interface_for_http">Configuring the Interface fo=
r HTTP</h5>
<div class=3D"paragraph">
<p>Like Jetty standalone, the default is for the connectors to listen on al=
l interfaces on a machine.
You can control that by specifying the name or ip address of the particular=
 interface you wish to use with the <code>--host</code> argument:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">&gt; java -jar jetty-runner.jar --host 192.168.22.19 my.war</code></pre>
</div>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_configuring_the_port_for_http">Configuring the Port for HTTP</h5=
>
<div class=3D"paragraph">
<p>The default port number is 8080.
To <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/index.html#how-to-configure-connec=
tors">configure a https connector</a>, use a Jetty xml config file instead.=
</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">&gt; java -jar jetty-runner.jar --port 9090  my.war</code></pre>
</div>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_configuring_stop">Configuring Stop</h5>
<div class=3D"paragraph">
<p>You can configure a port number for jetty to listen on for a stop comman=
d, so you are able to stop it from a different terminal.
This requires the use of a "secret" key, to prevent malicious or accidental=
 termination.
Use the <code>--stop-port</code> and <code>--stop-key</code> parameters as =
arguments to the <code>jetty-runner</code>:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">&gt; java -jar jetty-runner.jar --stop-port 8181 --stop-key abc123</code=
></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Then, to stop Jetty from a different terminal, you need to supply the sa=
me port and key information.
For this you=E2=80=99ll either need a local installation of Jetty, the <a h=
ref=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jett=
y-documentation/src/main/asciidoc/index.html#jetty-maven-plugin">jetty-mave=
n-plugin</a>, the <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.pr=
oject-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#jetty-an=
t">jetty-ant plugin</a>, or a custom class.
Here=E2=80=99s how to use a Jetty installation to perform a stop:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">&gt; java -jar start.jar --stop-port 8181 --stop-key abc123 --stop</code=
></pre>
</div>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_configuring_the_container_classpath">Configuring the Container C=
lasspath</h5>
<div class=3D"paragraph">
<p>With a local installation of Jetty, you add jars and classes to the cont=
ainer=E2=80=99s classpath by putting them in the <code>{$jetty.base}/lib</c=
ode> directory.
With the <code>jetty-runner</code>, you can use the <code>--lib</code>, <co=
de>--jar</code> and <code>--classes</code> arguments instead to achieve the=
 same thing.</p>
</div>
<div class=3D"paragraph">
<p><code>--lib</code> adds the location of a directory which contains jars =
to add to the container classpath.
You can add 1 or more.
Here=E2=80=99s an example of configuring 2 directories:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">&gt; java -jar jetty-runner.jar --lib /usr/local/external/lib --lib $HOM=
E/external-other/lib my.war</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p><code>--jar</code> adds a single jar file to the container classpath.
You can add 1 or more.
Here=E2=80=99s an example of configuring 3 extra jars:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">&gt; java -jar jetty-runner.jar --jar /opt/stuff/jars/jar1.jar --jar $HO=
ME/jars/jar2.jar --jar /usr/local/proj/jars/jar3.jar  my.war</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p><code>--classes</code> add the location of a directory containing classe=
s to add to the container classpath.
You can add 1 or more.
Here=E2=80=99s an example of configuring a single extra classes dir:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">&gt; java -jar jetty-runner.jar --classes /opt/stuff/classes my.war</cod=
e></pre>
</div>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Note</div>
</td>
<td class=3D"content">
When using the <code>--jar</code> and/or <code>--lib</code> arguments, by d=
efault these will <strong>not</strong> be inspected for <code>META-INF</cod=
e> information such as <code>META-INF/resources</code>, <code>META-INF/web-=
fragment.xml</code>, or <code>META-INF/taglib.tld</code>.
If you require these jar files inspected you will need to define the <a hre=
f=3D"https://www.eclipse.org/jetty/documentation/current/configuring-webapp=
s.html#webapp-context-attributes">jar pattern in your context xml file</a>.
Jetty-Runner automatically provides and appends a suitable pattern for jtsl=
 taglibs (this pattern is different than the one in the standard Jetty dist=
ribution).
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_gathering_statistics">Gathering Statistics</h5>
<div class=3D"paragraph">
<p>If statistics gathering is enabled, then they are viewable by surfing to=
 the context <code>/stats</code>.
You may optionally protect access to that context with a password.
Here=E2=80=99s an example of enabling statistics, with no password protecti=
on:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">&gt; java -jar jetty-runner.jar --stats unsecure my.war</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>If we wished to protect access to the <code>/stats</code> context, we wo=
uld provide the location of a Jetty realm configuration file containing aut=
hentication and authorization information.
For example, we could use the following example realm file from the Jetty d=
istribution:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">jetty: MD5:164c88b302622e17050af52c89945d44,user
admin: CRYPT:adpexzg3FUZAk,server-administrator,content-administrator,admin
other: OBF:1xmk1w261u9r1w1c1xmq,user
plain: plain,user
user: password,user
# This entry is for digest auth.  The credential is a MD5 hash of username:=
realmname:password
digest: MD5:6e120743ad67abfbc385bc2bb754e297,user</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Assuming we=E2=80=99ve copied it into the local directory, we would appl=
y it like so</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">&gt; java -jar jetty-runner.jar --stats realm.properties my.war</code></=
pre>
</div>
</div>
<div class=3D"paragraph">
<p>After navigating to <a href=3D"http://localhost:8080/" class=3D"bare">ht=
tp://localhost:8080/</a> a few times, we can point to the stats servlet on =
<a href=3D"http://localhost:8080/stats" class=3D"bare">http://localhost:808=
0/stats</a> to see the output:</p>
</div>
<div class=3D"literalblock">
<div class=3D"content">
<pre>Statistics:
Statistics gathering started 1490627ms ago

Requests:
Total requests: 9
Active requests: 1
Max active requests: 1
Total requests time: 63
Mean request time: 7.875
Max request time: 26
Request time standard deviation: 8.349764752888037


Dispatches:
Total dispatched: 9
Active dispatched: 1
Max active dispatched: 1
Total dispatched time: 63
Mean dispatched time: 7.875
Max dispatched time: 26
Dispatched time standard deviation: 8.349764752888037
Total requests suspended: 0
Total requests expired: 0
Total requests resumed: 0


Responses:
1xx responses: 0
2xx responses: 7
3xx responses: 1
4xx responses: 0
5xx responses: 0
Bytes sent total: 1453


Connections:
org.eclipse.jetty.server.ServerConnector@203822411
Protocols:http/1.1
Statistics gathering started 1490606ms ago
Total connections: 7
Current connections open: 1
Max concurrent connections open: 2
Total connections duration: 72883
Mean connection duration: 12147.166666666666
Max connection duration: 65591
Connection duration standard deviation: 23912.40292977684
Total messages in: 7
Total messages out: 7


Memory:
Heap memory usage: 49194840 bytes
Non-heap memory usage: 12611696 bytes</pre>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
<div class=3D"sect1">
<h2 id=3D"optimizing">Optimizing Jetty</h2>
<div class=3D"sectionbody">
<div class=3D"paragraph">
<p>There are many ways to optimize Jetty which vary depending on the situat=
ion.
Are you trying to optimize for number of requests within a given amount of =
time?
Are you trying to optimize the serving of static content?
Do you have a large bit of hardware that you want to give entirely over to =
Jetty to use to its heart=E2=80=99s delight?
This chapter examines a few of the many different ways to optimize Jetty.</=
p>
</div>
<div class=3D"sect2">
<h3 id=3D"garbage-collection">Garbage Collection</h3>
<div class=3D"paragraph">
<p>Tuning the JVM garbage collection (GC) can greatly improve Jetty perform=
ance.
Specifically, you can avoid pauses while the system performs full garbage c=
ollections.
Optimal tuning of the GC depends on the behavior of the application and req=
uires detailed analysis, however there are general recommendations.</p>
</div>
<div class=3D"paragraph">
<p>See official <a href=3D"https://docs.oracle.com/javase/8/docs/technotes/=
guides/vm/gctuning/">Java 8 Garbage Collection documentation</a> for furthe=
r assistance.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"tuning-examples">Tuning Examples</h4>
<div class=3D"paragraph">
<p>These options are general to the Oracle JVM, and work in a Java 8 instal=
lation.
They provide good information about how your JVM is running; based on that =
initial information, you can then tune more finely.</p>
</div>
<div class=3D"paragraph">
<p>The most important thing you can do for yourself when considering GC is =
to capture the GC activity so that you can analyze what is happening and ho=
w often it happens.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">-verbose:gc
-Xloggc:/path/to/myjettybase/logs/gc.log
-XX:+PrintGCDateStamps
-XX:+PrintGCTimeStamps
-XX:+PrintGCDetails
-XX:+PrintTenuringDistribution
-XX:+PrintCommandLineFlags
-XX:+PrintReferenceGC
-XX:+PrintAdaptiveSizePolicy</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>There are not many recommended options for GC that can apply to nearly a=
ll users.</p>
</div>
<div class=3D"paragraph">
<p>However, the most obvious one is to disable explicit GC (this is perform=
ed regularly by RMI and can introduce an abnormal amount of GC pauses).</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">-XX:+DisableExplicitGC</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Before you apply any other GC tuning options, monitor your GC logs to se=
e if <a href=3D"https://docs.oracle.com/javase/8/docs/technotes/guides/vm/g=
ctuning/cms.html">tuning the CMS</a> makes sense for your environment.</p>
</div>
<div class=3D"paragraph">
<p>A common setup for those just starting out with GC tuning is included be=
low for reference.</p>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock caution">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Caution</div>
</td>
<td class=3D"content">
This example configuration below could have a negative effect on your appli=
cation performance, so continued monitoring of your GC log before and after=
 is highly recommended to know if the configuration was beneficial or not.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">-XX:MaxGCPauseMillis=3D250
-XX:+UseConcMarkSweepGC
-XX:ParallelCMSThreads=3D2
-XX:+CMSClassUnloadingEnabled
-XX:+UseCMSCompactAtFullCollection
-XX:CMSInitiatingOccupancyFraction=3D80</code></pre>
</div>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"high-load">High Load</h3>
<div class=3D"paragraph">
<p>Configuring Jetty for high load, whether for load testing or for product=
ion, requires that the operating system, the JVM, Jetty, the application, t=
he network and the load generation all be tuned.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"_load_generation_for_load_testing">Load Generation for Load Testi=
ng</h4>
<div class=3D"paragraph">
<p>Machines handling load generation must have their OS, JVM, etc., tuned j=
ust as much as the server machines.</p>
</div>
<div class=3D"paragraph">
<p>The load generation should not be over the local network on the server m=
achine, as this has unrealistic performance and latency as well as differen=
t packet sizes and transport characteristics.</p>
</div>
<div class=3D"paragraph">
<p>The load generator should generate a realistic load.
Avoid the following pitfalls:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>A common mistake is that load generators often open relatively few conne=
ctions that are extremely busy sending as many requests as possible over ea=
ch connection.
This causes the measured throughput to be limited by request latency (see <=
a href=3D"http://blogs.webtide.com/gregw/entry/lies_damned_lies_and_benchma=
rks">Lies, Damned Lies and Benchmarks</a> for an analysis of such an issue)=
.</p>
</li>
<li>
<p>Another common mistake is to use TCP/IP for a single request, and to ope=
n many, many short-lived connections.
This often results in accept queues filling and limitations due to file des=
criptor and/or port starvation.</p>
</li>
<li>
<p>A load generator should model the traffic profile from the normal client=
s of the server.
For browsers, this is often between two and six connections that are mostly=
 idle and that are used in sporadic bursts with read times in between.
The connections are typically long held HTTP/1.1 connections.</p>
</li>
<li>
<p>Load generators should be written in asynchronously so that a limited nu=
mber of threads does not restrict the maximum number of users that can be s=
imulated.
If the generator is not asynchronous, a thread pool of 2000 may only be abl=
e to simulate 500 or fewer users.
The Jetty <code>HttpClient</code> is an ideal choice for building a load ge=
nerator as it is asynchronous and can simulate many thousands of connection=
s (see the CometD Load Tester for a good example of a realistic load genera=
tor).</p>
</li>
</ul>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_operating_system_tuning">Operating System Tuning</h4>
<div class=3D"paragraph">
<p>Both the server machine and any load generating machines need to be tune=
d to support many TCP/IP connections and high throughput.</p>
</div>
<div class=3D"sect4">
<h5 id=3D"_linux">Linux</h5>
<div class=3D"paragraph">
<p>Linux does a reasonable job of self-configuring TCP/IP, but there are a =
few limits and defaults that you should increase.
You can configure most of these in <code>/etc/security/limits.conf</code> o=
r via <code>sysctl</code>.</p>
</div>
<div class=3D"sect5">
<h6 id=3D"_tcp_buffer_sizes">TCP Buffer Sizes</h6>
<div class=3D"paragraph">
<p>You should increase TCP buffer sizes to at least 16MB for 10G paths and =
tune the auto-tuning (keep in mind that you need to consider buffer bloat).=
</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">$ sysctl -w net.core.rmem_max=3D16777216
$ sysctl -w net.core.wmem_max=3D16777216
$ sysctl -w net.ipv4.tcp_rmem=3D"4096 87380 16777216"
$ sysctl -w net.ipv4.tcp_wmem=3D"4096 16384 16777216"</code></pre>
</div>
</div>
</div>
<div class=3D"sect5">
<h6 id=3D"_queue_sizes">Queue Sizes</h6>
<div class=3D"paragraph">
<p><code>net.core.somaxconn</code> controls the size of the connection list=
ening queue.
The default value is 128.
If you are running a high-volume server and connections are getting refused=
 at a TCP level, you need to increase this value.
This setting can take a bit of finesse to get correct: if you set it too hi=
gh, resource problems occur as it tries to notify a server of a large numbe=
r of connections, and many remain pending, but if you set it too low, refus=
ed connections occur.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n"> $ sysctl -w net.core.somaxconn=3D4096</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The <code>net.core.netdev_max_backlog</code> controls the size of the in=
coming packet queue for upper-layer (Java) processing.
The default (2048) may be increased and other related parameters adjusted w=
ith:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">$ sysctl -w net.core.netdev_max_backlog=3D16384
$ sysctl -w net.ipv4.tcp_max_syn_backlog=3D8192
$ sysctl -w net.ipv4.tcp_syncookies=3D1</code></pre>
</div>
</div>
</div>
<div class=3D"sect5">
<h6 id=3D"_ports">Ports</h6>
<div class=3D"paragraph">
<p>If many outgoing connections are made (for example, on load generators),=
 the operating system might run low on ports.
Thus it is best to increase the port range, and allow reuse of sockets in <=
code>TIME_WAIT</code>:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">$ sysctl -w net.ipv4.ip_local_port_range=3D"1024 65535"
$ sysctl -w net.ipv4.tcp_tw_recycle=3D1</code></pre>
</div>
</div>
</div>
<div class=3D"sect5">
<h6 id=3D"_file_descriptors">File Descriptors</h6>
<div class=3D"paragraph">
<p>Busy servers and load generators may run out of file descriptors as the =
system defaults are normally low.
These can be increased for a specific user in <code>/etc/security/limits.co=
nf</code>:</p>
</div>
<div class=3D"literalblock">
<div class=3D"content">
<pre>theusername            hard nofile     40000
theusername            soft nofile     40000</pre>
</div>
</div>
</div>
<div class=3D"sect5">
<h6 id=3D"_congestion_control">Congestion Control</h6>
<div class=3D"paragraph">
<p>Linux supports pluggable congestion control algorithms.
To get a list of congestion control algorithms that are available in your k=
ernel run:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">$ sysctl net.ipv4.tcp_available_congestion_control</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>If cubic and/or htcp are not listed, you need to research the control al=
gorithms for your kernel.
You can try setting the control to cubic with:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">$ sysctl -w net.ipv4.tcp_congestion_control=3Dcubic</code></pre>
</div>
</div>
</div>
<div class=3D"sect5">
<h6 id=3D"_mac_os">Mac OS</h6>
<div class=3D"paragraph">
<p>Tips welcome.</p>
</div>
</div>
<div class=3D"sect5">
<h6 id=3D"_windows">Windows</h6>
<div class=3D"paragraph">
<p>Tips welcome.</p>
</div>
</div>
<div class=3D"sect5">
<h6 id=3D"_network_tuning">Network Tuning</h6>
<div class=3D"paragraph">
<p>Intermediaries such as nginx can use a non-persistent HTTP/1.0 connectio=
n.
Make sure to use persistent HTTP/1.1 connections.</p>
</div>
</div>
<div class=3D"sect5">
<h6 id=3D"_jvm_tuning">JVM Tuning</h6>
<div class=3D"ulist">
<ul>
<li>
<p>Tune the <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-=
jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#tuning-example=
s">Garbage Collection</a></p>
</li>
<li>
<p>Allocate sufficient memory</p>
</li>
<li>
<p>Use the -server option</p>
</li>
<li>
<p>Jetty Tuning</p>
</li>
</ul>
</div>
</div>
<div class=3D"sect5">
<h6 id=3D"_acceptors">Acceptors</h6>
<div class=3D"paragraph">
<p>The standard rule of thumb for the number of Accepters to configure is o=
ne per CPU on a given machine.</p>
</div>
</div>
<div class=3D"sect5">
<h6 id=3D"_low_resource_limits">Low Resource Limits</h6>
<div class=3D"paragraph">
<p>Must not be configured for less than the number of expected connections.=
</p>
</div>
</div>
<div class=3D"sect5">
<h6 id=3D"_thread_pool">Thread Pool</h6>
<div class=3D"paragraph">
<p>Configure with goal of limiting memory usage maximum available.
Typically this is &gt;50 and &lt;500</p>
</div>
</div>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"limit-load">Limiting Load</h3>
<div class=3D"paragraph">
<p>To achieve optimal fair handling for all users of a server, it can be ne=
cessary to limit the resources that each user/connection can utilize so as =
to maximize throughput for the server or to ensure that the entire server r=
uns within the limitations of it=E2=80=99s runtime.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"_low_resources_monitor">Low Resources Monitor</h4>
<div class=3D"paragraph">
<p>An instance of <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.pr=
oject-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org/ecl=
ipse/jetty/server/LowResourcesMonitor.html">LowResourcesMonitor</a> may be =
added to a Jetty server to monitor for low resources situations and to take=
 action to limit the number of idle connections on the server.
To configure the low resources monitor, you can enable the the <code>lowres=
ources.mod</code> on the command line, which has the effect of including th=
e following XML configuration:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml">Unr=
esolved directive in administration/tuning/limit-load.adoc - include::{SRCD=
IR}/jetty-server/src/main/config/etc/jetty-lowresources.xml[]</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The monitor is configured with a period in milliseconds at which it will=
 scan the server looking for a low resources condition, which may be one of=
:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>If <code>monitorThreads</code> is configured as true and a connectors Ex=
ecutor is an instance of <a href=3D"file:///home/tian/Downloads/b60/ebook/j=
etty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/=
org/eclipse/jetty/util/thread/ThreadPool.html">ThreadPool</a>, then its <co=
de>isLowOnThreads()</code> method is used to detect low resources.</p>
</li>
<li>
<p>If <code>maxConnections</code> is configured to a number &gt;0 then if t=
he total number of connections from all monitored connectors exceeds this v=
alue, then low resources state is entered.</p>
</li>
<li>
<p>If the <code>maxMemory</code> field is configured to a number of bytes &=
gt;0 then if the JVMs total memory minus its idle memory exceeds this value=
, then low resources state is entered.</p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>Once low resources state is detected, then the monitor will iterate over=
 all existing connections and set their <code>IdleTimeout</code> to its con=
figured <code>lowResourcesIdleTimeout</code> in milliseconds.
This allows the idle time of existing connections to be reduced so that the=
 connection is quickly closed if no further request are received.</p>
</div>
<div class=3D"paragraph">
<p>If the low resources state persists longer than the time in milliseconds=
 configured for the <code>maxLowResourcesTime</code> field, the the <code>l=
owResourcesIdleTimeout</code> is repeatedly applied so that new connections=
 as well as existing connections will be limited.</p>
</div>
</div>
</div>
</div>
</div>
<h1 id=3D"jetty-dev-guide" class=3D"sect0">Jetty Development Guide</h1>
<div class=3D"sect1">
<h2 id=3D"advanced-embedding">Embedding</h2>
<div class=3D"sectionbody">
<div class=3D"sect2">
<h3 id=3D"jetty-helloworld">Jetty Embedded HelloWorld</h3>
<div class=3D"paragraph">
<p>This section provides a tutorial that shows how you can quickly develop =
embedded code against the Jetty API.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"downloading-jars">Downloading the Jars</h4>
<div class=3D"paragraph">
<p>Jetty is decomposed into many jars and dependencies to achieve a minimal=
 footprint by selecting the minimal set of jars.
Typically it is best to use something like Maven to manage jars, however th=
is tutorial uses an aggregate Jar that contains all of the Jetty classes in=
 one Jar.
You can manually download the aggregate <a href=3D"http://central.maven.org=
/maven2/org/eclipse/jetty/aggregate/jetty-all/%7BVERSION%7D/jetty-all-%7BVE=
RSION%7D-uber.jar"><code>jetty-all.jar</code></a> using <code>curl</code>) =
or a browser.</p>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Note</div>
</td>
<td class=3D"content">
The central Maven repository has started to aggressively reject/deny access=
 to the repository from the <code>wget</code> command line tool (due to abu=
sive use of the tool by some groups).
The administrators of the central maven repository have stated that the rec=
ommended command line download tool is now curl.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
<div class=3D"paragraph">
<p>Use curl as follows:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">&gt; mkdir Demo
&gt; cd Demo
&gt; curl -o jetty-all-uber.jar http://central.maven.org/maven2/org/eclipse=
/jetty/aggregate/jetty-all/{VERSION}/jetty-all-{VERSION}-uber.jar</code></p=
re>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"writing-helloworld-example">Writing a HelloWorld Example</h4>
<div class=3D"paragraph">
<p>The <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty=
-9.4.x/jetty-documentation/src/main/asciidoc/index.html#embedding">Embeddin=
g Jetty</a> section contains many examples of writing against the Jetty API=
.
This tutorial uses a simple HelloWorld handler with a main method to run th=
e server.
You can either <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.proje=
ct-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BSRCDIR%7D/examples/=
embedded/src/main/java/org/eclipse/jetty/embedded/HelloWorld.java">download=
</a> or create in an editor the file <code>HelloWorld.java</code> with the =
following content:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">U=
nresolved directive in development/embedding/jetty-helloworld.adoc - includ=
e::{SRCDIR}/examples/embedded/src/main/java/org/eclipse/jetty/embedded/Hell=
oWorld.java[]</code></pre>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"compiling-helloworld-example">Compiling the HelloWord example</h4=
>
<div class=3D"paragraph">
<p>The following command compiles the HelloWorld class:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">&gt; mkdir classes
&gt; javac -d classes -cp jetty-all-uber.jar HelloWorld.java</code></pre>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"running-handler-and-server">Running the Handler and Server</h4>
<div class=3D"paragraph">
<p>The following command runs the HelloWorld example:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">&gt; java -cp classes:jetty-all-uber.jar org.eclipse.jetty.embedded.Hell=
oWorld</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>You can now point your browser at <a href=3D"http://localhost:8080/">htt=
p://localhost:8080</a> to see your hello world page.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"next-steps">Next Steps</h4>
<div class=3D"paragraph">
<p>To learn more about Jetty, take these next steps:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>Follow the examples in <a href=3D"file:///home/tian/Downloads/b60/ebook/=
jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#=
embedding-jetty">Embedding Jetty</a> to better understand the jetty APIs.</=
p>
</li>
<li>
<p>Explore the complete <a href=3D"file:///home/tian/Downloads/b60/ebook/je=
tty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/"=
>Jetty javadoc</a></p>
</li>
<li>
<p>Consider using <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.pr=
oject-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#maven-an=
d-jetty">Jetty and Maven</a> to manage your Jars and dependencies.</p>
</li>
</ul>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"embedding-jetty">Embedding Jetty</h3>
<div class=3D"paragraph">
<p>Jetty has a slogan, "<em>Don=E2=80=99t deploy your application in Jetty,=
 deploy Jetty in your application!</em>"
What this means is that as an alternative to bundling your application as a=
 standard WAR to be deployed in Jetty, Jetty is designed to be a software c=
omponent that can be instantiated and used in a Java program just like any =
POJO.
Put another way, running Jetty in embedded mode means putting an HTTP modul=
e into your application, rather than putting your application into an HTTP =
server.</p>
</div>
<div class=3D"paragraph">
<p>This tutorial takes you step-by-step from the simplest Jetty server inst=
antiation to running multiple web applications with standards-based deploym=
ent descriptors.
The source for most of these examples is part of the standard Jetty project=
.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"_overview">Overview</h4>
<div class=3D"paragraph">
<p>To embed a Jetty server the following steps are typical and are illustra=
ted by the examples in this tutorial:</p>
</div>
<div class=3D"olist arabic">
<ol class=3D"arabic">
<li>
<p>Create a <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-=
jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/j=
etty/server/Server.html">Server</a> instance.</p>
</li>
<li>
<p>Add/Configure <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.pro=
ject-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org/ecli=
pse/jetty/server/Connector.html">Connectors</a>.</p>
</li>
<li>
<p>Add/Configure <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.pro=
ject-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org/ecli=
pse/jetty/server/Handler.html">Handlers</a> and/or <a href=3D"file:///home/=
tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/=
main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/server/handler/ContextHandler.h=
tml">Contexts</a> and/or <a href=3D"http://docs.oracle.com/javaee/6/api/jav=
ax/servlet/Servlet.html">Servlets</a>.</p>
</li>
<li>
<p>Start the Server.</p>
</li>
<li>
<p>Wait on the server or do something else with your thread.</p>
</li>
</ol>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_creating_the_server">Creating the Server</h4>
<div class=3D"paragraph">
<p>The following code from SimplestServer.java instantiates and runs the si=
mplest possible Jetty server:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">U=
nresolved directive in development/embedding/embedding-jetty.adoc - include=
::{SRCDIR}/examples/embedded/src/main/java/org/eclipse/jetty/embedded/Simpl=
estServer.java[]</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>This runs an HTTP server on port 8080. It is not a very useful server as=
 it has no handlers, and thus returns a 404 error for every request.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_using_handlers">Using Handlers</h4>
<div class=3D"paragraph">
<p>To produce a response to a request, Jetty requires that you set a <a hre=
f=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-=
documentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/server/Handle=
r.html">Handler</a> on the server.
A handler may:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>Examine/modify the HTTP request.</p>
</li>
<li>
<p>Generate the complete HTTP response.</p>
</li>
<li>
<p>Call another Handler (see <a href=3D"file:///home/tian/Downloads/b60/ebo=
ok/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJDURL=
%7D/org/eclipse/jetty/server/handler/HandlerWrapper.html"><code>HandlerWrap=
per</code></a>).</p>
</li>
<li>
<p>Select one or many Handlers to call (see <a href=3D"file:///home/tian/Do=
wnloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/as=
ciidoc/%7BJDURL%7D/org/eclipse/jetty/server/handler/HandlerCollection.html"=
><code>HandlerCollection</code></a>).</p>
</li>
</ul>
</div>
<div class=3D"sect4">
<h5 id=3D"_helloworld_handler">HelloWorld Handler</h5>
<div class=3D"paragraph">
<p>The following code based on HelloHandler.java shows a simple hello world=
 handler:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">U=
nresolved directive in development/embedding/embedding-jetty.adoc - include=
::{SRCDIR}/examples/embedded/src/main/java/org/eclipse/jetty/embedded/Hello=
Handler.java[]</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The parameters passed to the handle method are:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p><code>target</code> =E2=80=93 the target of the request, which is either=
 a URI or a name from a named dispatcher.</p>
</li>
<li>
<p><code>baseRequest</code> =E2=80=93 the Jetty mutable request object, whi=
ch is always unwrapped.</p>
</li>
<li>
<p><code>request</code> =E2=80=93 the immutable request object, which may h=
ave been wrapped by a filter or servlet.</p>
</li>
<li>
<p><code>response</code> =E2=80=93 the response, which may have been wrappe=
d by a filter or servlet.</p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>The handler sets the response status, content-type, and marks the reques=
t as handled before it generates the body of the response using a writer.</=
p>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_running_helloworldhandler">Running HelloWorldHandler</h5>
<div class=3D"paragraph">
<p>To allow a Handler to handle HTTP requests, you must add it to a Server =
instance.
The following code from OneHandler.java shows how a Jetty server can use th=
e HelloWorld handler:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">U=
nresolved directive in development/embedding/embedding-jetty.adoc - include=
::{SRCDIR}/examples/embedded/src/main/java/org/eclipse/jetty/embedded/OneHa=
ndler.java[]</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>One or more handlers do all request handling in Jetty.
Some handlers select other specific handlers (for example, a <code>ContextH=
andlerCollection</code> uses the context path to select a <code>ContextHand=
ler</code>); others use application logic to generate a response (for examp=
le, the <code>ServletHandler</code> passes the request to an application Se=
rvlet), while others do tasks unrelated to generating the response (for exa=
mple, <code>RequestLogHandler</code> or <code>StatisticsHandler</code>).</p=
>
</div>
<div class=3D"paragraph">
<p>Later sections describe how you can combine handlers like aspects.
You can see some of the handlers available in Jetty in the <a href=3D"file:=
///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentat=
ion/src/main/asciidoc/%7BJXURL%7D/org/eclipse/jetty/server/handler/package-=
summary.html">org.eclipse.jetty.server.handler</a> package.</p>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_handler_collections_and_wrappers">Handler Collections and Wrappe=
rs</h5>
<div class=3D"paragraph">
<p>Complex request handling is typically built from multiple Handlers that =
you can combine in various ways.
Jetty has several implementations of the <a href=3D"file:///home/tian/Downl=
oads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/ascii=
doc/%7BJDURL%7D/org/eclipse/jetty/server/HandlerContainer.html"><code>Handl=
erContainer</code></a> interface:</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1"><a href=3D"file:///home/tian/Downloads/b60/ebook/jett=
y.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org=
/eclipse/jetty/server/handler/HandlerCollection.html"><code>HandlerCollecti=
on</code></a></dt>
<dd>
<p>Holds a collection of other handlers and calls each handler in order.
This is useful for combining statistics and logging handlers with the handl=
er that generates the response.</p>
</dd>
<dt class=3D"hdlist1"><a href=3D"file:///home/tian/Downloads/b60/ebook/jett=
y.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org=
/eclipse/jetty/server/handler/HandlerList.html"><code>HandlerList</code></a=
></dt>
<dd>
<p>A Handler Collection that calls each handler in turn until either an exc=
eption is thrown, the response is committed or the <code>request.isHandled(=
)</code> returns true.
You can use it to combine handlers that conditionally handle a request, suc=
h as calling multiple contexts until one matches a virtual host.</p>
</dd>
<dt class=3D"hdlist1"><a href=3D"file:///home/tian/Downloads/b60/ebook/jett=
y.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org=
/eclipse/jetty/server/handler/HandlerWrapper.html"><code>HandlerWrapper</co=
de></a></dt>
<dd>
<p>A Handler base class that you can use to daisy chain handlers together i=
n the style of aspect-oriented programming.
For example, a standard web application is implemented by a chain of a cont=
ext, session, security and servlet handlers.</p>
</dd>
<dt class=3D"hdlist1"><a href=3D"file:///home/tian/Downloads/b60/ebook/jett=
y.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org=
/eclipse/jetty/server/handler/ContextHandlerCollection.html"><code>ContextH=
andlerCollection</code></a></dt>
<dd>
<p>A specialized <code>HandlerCollection</code> that uses the longest prefi=
x of the request URI (the <code>contextPath</code>) to select a contained <=
code>ContextHandler</code> to handle the request.</p>
</dd>
</dl>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_scoped_handlers">Scoped Handlers</h5>
<div class=3D"paragraph">
<p>Much of the standard Servlet container in Jetty is implemented with <cod=
e>HandlerWrappers</code> that daisy chain handlers together: <code>ContextH=
andler</code> to <code>SessionHandler</code> to <code>SecurityHandler</code=
> to <code>ServletHandler</code>.
However, because of the nature of the servlet specification, this chaining =
cannot be a pure nesting of handlers as the outer handlers sometimes need i=
nformation that the inner handlers process.
For example, when a <code>ContextHandler</code> calls some application list=
eners to inform them of a request entering the context, it must already kno=
w which servlet the <code>ServletHandler</code> will dispatch the request t=
o so that the <code>servletPath</code> method returns the correct value.</p=
>
</div>
<div class=3D"paragraph">
<p>The <code>HandlerWrapper</code> is specialized to the <a href=3D"file://=
/home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentatio=
n/src/main/asciidoc/%7BJXURL%7D/org/eclipse/jetty/server/handler/ScopedHand=
ler.html"><code>ScopedHandler</code></a> abstract class, which supports a d=
aisy chain of scopes.
For example if a <code>ServletHandler</code> is nested within a <code>Conte=
xtHandler</code>, the order and nesting of execution of methods is:</p>
</div>
<div class=3D"literalblock">
<div class=3D"content">
<pre>Server.handle(...)
  ContextHandler.doScope(...)
    ServletHandler.doScope(...)
      ContextHandler.doHandle(...)
        ServletHandler.doHandle(...)
          SomeServlet.service(...)</pre>
</div>
</div>
<div class=3D"paragraph">
<p>Thus when the <code>ContextHandler</code> handles the request, it does s=
o within the scope the <code>ServletHandler</code> has established.</p>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_resource_handler">Resource Handler</h5>
<div class=3D"paragraph">
<p>The <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty=
-9.4.x/jetty-documentation/src/main/asciidoc/%7BJXURL%7D/org/eclipse/jetty/=
embedded/FileServer.html">FileServer example</a> shows how you can use a <c=
ode>ResourceHandler</code> to serve static content from the current working=
 directory:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">U=
nresolved directive in development/embedding/embedding-jetty.adoc - include=
::{SRCDIR}/examples/embedded/src/main/java/org/eclipse/jetty/embedded/FileS=
erver.java[]</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Notice that a <code>HandlerList</code> is used with the <code>ResourceHa=
ndler</code> and a <code>DefaultHandler</code>, so that the <code>DefaultHa=
ndler</code> generates a good 404 response for any requests that do not mat=
ch a static resource.</p>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_embedding_connectors">Embedding Connectors</h4>
<div class=3D"paragraph">
<p>In the previous examples, the Server instance is passed a port number an=
d it internally creates a default instance of a Connector that listens for =
requests on that port.
However, often when embedding Jetty it is desirable to explicitly instantia=
te and configure one or more Connectors for a Server instance.</p>
</div>
<div class=3D"sect4">
<h5 id=3D"_one_connector">One Connector</h5>
<div class=3D"paragraph">
<p>The following example, <a href=3D"file:///home/tian/Downloads/b60/ebook/=
jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJXURL%7D=
/org/eclipse/jetty/embedded/OneConnector.html">OneConnector.java</a>,
instantiates, configures, and adds a single HTTP connector instance to the =
server:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">U=
nresolved directive in development/embedding/embedding-jetty.adoc - include=
::{SRCDIR}/examples/embedded/src/main/java/org/eclipse/jetty/embedded/OneCo=
nnector.java[]</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>In this example the connector handles the HTTP protocol, as that is the =
default for the <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.proj=
ect-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJXURL%7D/org/eclip=
se/jetty/server/ServerConnector.html"><code>ServerConnector</code></a> clas=
s.</p>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_many_connectors">Many Connectors</h5>
<div class=3D"paragraph">
<p>When configuring multiple connectors (for example, HTTP and HTTPS), it m=
ay be desirable to share configuration of common parameters for HTTP.
To achieve this you need to explicitly configure the <code>ServerConnector<=
/code> class with <code>ConnectionFactory</code> instances, and provide the=
m with common HTTP configuration.</p>
</div>
<div class=3D"paragraph">
<p>The <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty=
-9.4.x/jetty-documentation/src/main/asciidoc/%7BJXURL%7D/org/eclipse/jetty/=
embedded/ManyConnectors.html">ManyConnectors example</a>, configures a serv=
er with two <code>ServerConnector</code> instances: the http connector has =
a <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.=
x/jetty-documentation/src/main/asciidoc/%7BJXURL%7D/org/eclipse/jetty/serve=
r/HttpConnectionFactory.html"><code>HTTPConnectionFactory</code></a> instan=
ce; the https connector has a <code>SslConnectionFactory</code> chained to =
a <code>HttpConnectionFactory</code>.
Both <code>HttpConnectionFactory</code> are configured based on the same <a=
 href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/je=
tty-documentation/src/main/asciidoc/%7BJXURL%7D/org/eclipse/jetty/server/Ht=
tpConfiguration.html"><code>HttpConfiguration</code></a> instance, however =
the HTTPS factory uses a wrapped configuration so that a <a href=3D"file://=
/home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentatio=
n/src/main/asciidoc/%7BJXURL%7D/org/eclipse/jetty/server/SecureRequestCusto=
mizer.html"><code>SecureRequestCustomizer</code></a> can be added.</p>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_embedding_servlets">Embedding Servlets</h4>
<div class=3D"paragraph">
<p><a href=3D"http://en.wikipedia.org/wiki/Java_Servlet">Servlets</a> are t=
he standard way to provide application logic that handles HTTP requests.
Servlets are similar to a Jetty Handler except that the request object is n=
ot mutable and thus cannot be modified.
Servlets are handled in Jetty by a <a href=3D"file:///home/tian/Downloads/b=
60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7=
BJXURL%7D/org/eclipse/jetty/embedded/MinimalServlets.html"><code>ServletHan=
dler</code></a>.
It uses standard path mappings to match a Servlet to a request; sets the re=
quests <code>servletPath</code> and <code>pathInfo</code>; passes the reque=
st to the servlet, possibly via Filters to produce a response.</p>
</div>
<div class=3D"paragraph">
<p>The <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty=
-9.4.x/jetty-documentation/src/main/asciidoc/%7BJXURL%7D/org/eclipse/jetty/=
embedded/MinimalServlets.html">MinimalServlets example</a> creates a <code>=
ServletHandler</code> instance and configures a single HelloServlet:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">U=
nresolved directive in development/embedding/embedding-jetty.adoc - include=
::{SRCDIR}/examples/embedded/src/main/java/org/eclipse/jetty/embedded/Minim=
alServlets.java[]</code></pre>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_embedding_contexts">Embedding Contexts</h4>
<div class=3D"paragraph">
<p>A <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9=
.4.x/jetty-documentation/src/main/asciidoc/%7BJXURL%7D/org/eclipse/jetty/em=
bedded/OneContext.html"><code>ContextHandler</code></a> is a <code>ScopedHa=
ndler</code> that responds only to requests that have a URI prefix that mat=
ches the configured context path.
Requests that match the context path have their path methods updated accord=
ingly and the contexts scope is available, which optionally may include:</p=
>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>A <code>Classloader</code> that is set as the Thread context <code>class=
loader</code> while request handling is in scope.</p>
</li>
<li>
<p>A set of attributes that is available via the <a href=3D"http://docs.ora=
cle.com/javaee/6/api/javax/servlet/ServletContext.html"><code>ServletContex=
t</code></a> API.</p>
</li>
<li>
<p>A set of init parameters that is available via the <a href=3D"http://doc=
s.oracle.com/javaee/6/api/javax/servlet/ServletContext.html"><code>ServletC=
ontext</code></a> API.</p>
</li>
<li>
<p>A base Resource which is used as the document root for static resource r=
equests via the <a href=3D"http://docs.oracle.com/javaee/6/api/javax/servle=
t/ServletContext.html"><code>ServletContext</code></a> API.</p>
</li>
<li>
<p>A set of virtual host names.</p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>The following <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.pro=
ject-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJXURL%7D/org/ecli=
pse/jetty/embedded/OneContext.html">OneContext example</a> shows a context =
being established that wraps the <a href=3D"file:///home/tian/Downloads/b60=
/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJ=
XURL%7D/org/eclipse/jetty/embedded/HelloHandler.html">HelloHandler</a>:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">U=
nresolved directive in development/embedding/embedding-jetty.adoc - include=
::{SRCDIR}/examples/embedded/src/main/java/org/eclipse/jetty/embedded/OneCo=
ntext.java[]</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>When many contexts are present, you can embed a <code>ContextHandlerColl=
ection</code> to efficiently examine a request URI to then select the match=
ing <code>ContextHandler</code>(s) for the request.
The <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.=
4.x/jetty-documentation/src/main/asciidoc/%7BJXURL%7D/org/eclipse/jetty/emb=
edded/ManyContexts.html">ManyContexts example</a> shows how many such conte=
xts you can configure:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">U=
nresolved directive in development/embedding/embedding-jetty.adoc - include=
::{SRCDIR}/examples/embedded/src/main/java/org/eclipse/jetty/embedded/ManyC=
ontexts.java[]</code></pre>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_embedding_servletcontexts">Embedding ServletContexts</h4>
<div class=3D"paragraph">
<p>A <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9=
.4.x/jetty-documentation/src/main/asciidoc/%7BJXURL%7D/org/eclipse/jetty/se=
rvlet/ServletContextHandler.html"><code>ServletContextHandler</code></a> is=
 a specialization of <code>ContextHandler</code> with support for standard =
sessions and Servlets.
The following <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.projec=
t-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJXURL%7D/org/eclipse=
/jetty/embedded/OneServletContext.html">OneServletContext example</a> insta=
ntiates a <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-je=
tty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJXURL%7D/org/eclipse/jet=
ty/servlet/DefaultServlet.html"><code>DefaultServlet</code></a> to server s=
tatic content from /tmp/ and a <code>DumpServlet</code> that creates a sess=
ion and dumps basic details about the request:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">U=
nresolved directive in development/embedding/embedding-jetty.adoc - include=
::{SRCDIR}/examples/embedded/src/main/java/org/eclipse/jetty/embedded/OneSe=
rvletContext.java[]</code></pre>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_embedding_web_applications">Embedding Web Applications</h4>
<div class=3D"paragraph">
<p>A <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9=
.4.x/jetty-documentation/src/main/asciidoc/%7BJXURL%7D/org/eclipse/jetty/we=
bapp/WebAppContext.html"><code>WebAppContext</code></a> is an extension of =
a <code>ServletContextHandler</code> that uses the <a href=3D"http://en.wik=
ipedia.org/wiki/WAR_%28Sun_file_format%29">standard layout</a> and web.xml =
to configure the servlets, filters and other features from a web.xml and/or=
 annotations.
The following <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.projec=
t-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJXURL%7D/org/eclipse=
/jetty/embedded/OneWebApp.html">OneWebApp example</a> configures the Jetty =
test webapp.
Web applications can use resources the container provides, and in this case=
 a <code>LoginService</code> is needed and also configured:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">U=
nresolved directive in development/embedding/embedding-jetty.adoc - include=
::{SRCDIR}/examples/embedded/src/main/java/org/eclipse/jetty/embedded/OneWe=
bApp.java[]</code></pre>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_like_jetty_xml">Like Jetty XML</h4>
<div class=3D"paragraph">
<p>The typical way to configure an instance of the Jetty server is via <cod=
e>jetty.xml</code> and associated configuration files.
However the Jetty XML configuration format is just a simple rendering of wh=
at you can do in code; it is very simple to write embedded code that does p=
recisely what the jetty.xml configuration does.
The <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.=
4.x/jetty-documentation/src/main/asciidoc/%7BJXURL%7D/org/eclipse/jetty/emb=
edded/LikeJettyXml.html">LikeJettyXml example</a> following renders in code=
 the behavior obtained from the configuration files:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p><a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/%7BGITBROWSEURL%7D/jetty-server/sr=
c/main/config/etc/jetty.xml">jetty.xml</a></p>
</li>
<li>
<p><a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/%7BGITBROWSEURL%7D/jetty-jmx/src/m=
ain/config/etc/jetty-jmx.xml">jetty-jmx.xml</a></p>
</li>
<li>
<p><a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/%7BGITBROWSEURL%7D/jetty-server/sr=
c/main/config/etc/jetty-http.xml">jetty-http.xml</a></p>
</li>
<li>
<p><a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/%7BGITBROWSEURL%7D/jetty-server/sr=
c/main/config/etc/jetty-https.xml">jetty-https.xml</a></p>
</li>
<li>
<p><a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/%7BGITBROWSEURL%7D/jetty-deploy/sr=
c/main/config/etc/jetty-deploy.xml">jetty-deploy.xml</a></p>
</li>
<li>
<p><a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/%7BGITBROWSEURL%7D/jetty-server/sr=
c/main/config/etc/jetty-stats.xml">jetty-stats.xml</a></p>
</li>
<li>
<p><a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/%7BGITBROWSEURL%7D/jetty-server/sr=
c/main/config/etc/jetty-requestlog.xml">jetty-requestlog.xml</a></p>
</li>
<li>
<p><a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/%7BGITBROWSEURL%7D/jetty-server/sr=
c/main/config/etc/jetty-lowresources.xml">jetty-lowresources.xml</a></p>
</li>
<li>
<p><a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/%7BGITBROWSEURL%7D/tests/test-weba=
pps/test-jetty-webapp/src/main/config/etc/test-realm.xml">test-realm.xml</a=
></p>
</li>
</ul>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">U=
nresolved directive in development/embedding/embedding-jetty.adoc - include=
::{SRCDIR}/examples/embedded/src/main/java/org/eclipse/jetty/embedded/LikeJ=
ettyXml.java[]</code></pre>
</div>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"embedded-examples">Embedded Examples</h3>
<div class=3D"paragraph">
<p>Jetty has a rich history of being embedded into a wide variety of applic=
ations.
In this section we will walk you through a number of our simple examples un=
der our embedded-jetty-examples project in our git repository.</p>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock important">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Important</div>
</td>
<td class=3D"content">
These files are pulled directly from our git repository when this document =
is generated.
If the line numbers do not line up feel free to fix this documentation in g=
ithub and give us a pull request, or at least open an issue to notify us of=
 the discrepancy.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
<div class=3D"sect3">
<h4 id=3D"embedded-file-server">Simple File Server</h4>
<div class=3D"paragraph">
<p>This example shows how to create a simple file server in Jetty.
It is perfectly suitable for test cases where you need an actual web server=
 to obtain a file from, it could easily be configured to serve files from a=
 directory under <code>src/test/resources</code>.
Note that this does not have any logic for caching of files, either within =
the server or setting the appropriate headers on the response.
It is simply a few lines that illustrate how easy it is to serve out some f=
iles.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">U=
nresolved directive in development/embedding/examples/embedded-file-server.=
adoc - include::{SRCDIR}/examples/embedded/src/main/java/org/eclipse/jetty/=
embedded/FileServer.java[]</code></pre>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_run_it">Run it!</h5>
<div class=3D"paragraph">
<p>After you have started things up you should be able to navigate to <a hr=
ef=3D"http://localhost:8080/index.html" class=3D"bare">http://localhost:808=
0/index.html</a> (assuming one is in the resource base directory) and you a=
re good to go.</p>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_maven_coordinates_2">Maven Coordinates</h5>
<div class=3D"paragraph">
<p>To use this example in your project you will need the following Maven de=
pendencies declared.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><de=
pendency>
  <groupid>org.eclipse.jetty</groupid>
  <artifactid>jetty-server</artifactid>
  <version>${project.version}</version>
</dependency></code></pre>
</div>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"embedded-split-file-server">Split File Server</h4>
<div class=3D"paragraph">
<p>This example builds on the <a href=3D"file:///home/tian/Downloads/b60/eb=
ook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.h=
tml#emebedded-file-server">Simple File Server</a> to show how chaining mult=
iple <code>ResourceHandlers</code> together can let you aggregate multiple =
directories to serve content on a single path and how you can link these to=
gether with <code>ContextHandlers</code>.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">U=
nresolved directive in development/embedding/examples/embedded-split-file-s=
erver.adoc - include::{SRCDIR}/examples/embedded/src/main/java/org/eclipse/=
jetty/embedded/SplitFileServer.java[]</code></pre>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_run_it_2">Run it!</h5>
<div class=3D"paragraph">
<p>After you have started things up you should be able to navigate to <a hr=
ef=3D"http://localhost:8090/index.html" class=3D"bare">http://localhost:809=
0/index.html</a> (assuming one is in the resource base directory) and you a=
re good to go.
Any requests for files will be looked for in the first resource handler, th=
en the second, and so on and so forth.</p>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_maven_coordinates_3">Maven Coordinates</h5>
<div class=3D"paragraph">
<p>To use this example as is in your project you will need the following ma=
ven dependencies declared.
We would recommend not using the toolchain dependency in your actual applic=
ation.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><de=
pendency>
  <groupid>org.eclipse.jetty</groupid>
  <artifactid>jetty-server</artifactid>
  <version>${project.version}</version>
</dependency>
<dependency>
  <groupid>org.eclipse.jetty.toolchain</groupid>
  <artifactid>jetty-test-helper</artifactid>
  <version>2.2</version>
</dependency></code></pre>
</div>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"embedded-many-connectors">Multiple Connectors</h4>
<div class=3D"paragraph">
<p>This example shows how to configure Jetty to use multiple connectors, sp=
ecifically so it can process both http and https requests.
Since the meat of this example is the server and connector configuration it=
 only uses a simple HelloHandler but this example should be easily merged w=
ith other examples like those deploying servlets or webapps.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">U=
nresolved directive in development/embedding/examples/embedded-many-connect=
ors.adoc - include::{SRCDIR}/examples/embedded/src/main/java/org/eclipse/je=
tty/embedded/ManyConnectors.java[]</code></pre>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_walkthrough">Walkthrough</h5>
<div class=3D"paragraph">
<p>Start things up!
By using the <code>server.join()</code> the server thread will join with th=
e current thread.
See <a href=3D"http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Threa=
d.html#join()"><code>Thread.join()</code></a> for more details.</p>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_maven_coordinates_4">Maven Coordinates</h5>
<div class=3D"paragraph">
<p>To use this example in your project you will need the following Maven de=
pendencies declared.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><de=
pendency>
  <groupid>org.eclipse.jetty</groupid>
  <artifactid>jetty-server</artifactid>
  <version>${project.version}</version>
</dependency>
<dependency>
  <groupid>org.eclipse.jetty</groupid>
  <artifactid>jetty-security</artifactid>
  <version>${project.version}</version>
</dependency></code></pre>
</div>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"embedded-secured-hello-handler">Secured Hello Handler</h4>
<div class=3D"paragraph">
<p>This example shows how to wrap one handler with another one that handles=
 security.
We have a simple Hello Handler that just return a greeting but add on the r=
estriction that to get this greeting you must authenticate.
Another thing to remember is that this example uses the <code>ConstraintSec=
urityHandler</code> which is what supports the security mappings inside of =
the servlet api, it could be easier to show just the <code>SecurityHandler<=
/code> usage, but the constraint provides more configuration power.
If you don=E2=80=99t need that you can drop the Constraint bits and use jus=
t the <code>SecurityHandler</code>.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">U=
nresolved directive in development/embedding/examples/embedded-secured-hell=
o-handler.adoc - include::{SRCDIR}/examples/embedded/src/main/java/org/ecli=
pse/jetty/embedded/SecuredHelloHandler.java[]</code></pre>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_run_it_3">Run it!</h5>
<div class=3D"paragraph">
<p>After you have started things up you should be able to navigate to <a hr=
ef=3D"http://localhost:8080/index.html" class=3D"bare">http://localhost:808=
0/index.html</a> (assuming one is in the resource base directory) and you a=
re good to go.</p>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_the_realm_properties_file">The Realm Properties File</h5>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-properties" data-lang=3D"p=
roperties">Unresolved directive in development/embedding/examples/embedded-=
secured-hello-handler.adoc - include::{SRCDIR}/examples/embedded/src/test/r=
esources/realm.properties[]</code></pre>
</div>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_maven_coordinates_5">Maven Coordinates</h5>
<div class=3D"paragraph">
<p>To use this example in your project you will need the following Maven de=
pendencies declared.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><de=
pendency>
  <groupid>org.eclipse.jetty</groupid>
  <artifactid>jetty-server</artifactid>
  <version>${project.version}</version>
</dependency></code></pre>
</div>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"embedded-minimal-servlet">Minimal Servlet</h4>
<div class=3D"paragraph">
<p>This example shows the bare minimum required for deploying a servlet int=
o Jetty.
Note that this is strictly a servlet, not a servlet in the context of a web=
 application, that example comes later.
This is purely just a servlet deployed and mounted on a context and able to=
 process requests.
This example is excellent for situations where you have a simple servlet th=
at you need to unit test, just mount it on a context and issue requests usi=
ng your favorite http client library (like our Jetty client found in <a hre=
f=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-=
documentation/src/main/asciidoc/index.html#http-client">HTTP Client</a>).</=
p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">U=
nresolved directive in development/embedding/examples/embedded-minimal-serv=
let.adoc - include::{SRCDIR}/examples/embedded/src/main/java/org/eclipse/je=
tty/embedded/MinimalServlets.java[]</code></pre>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_walkthrough_2">Walkthrough</h5>
<div class=3D"paragraph">
<p>Start things up! By using the <code>server.join()</code> the server thre=
ad will join with the current thread.
See <a href=3D"http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Threa=
d.html#join()"><code>Thread.join()</code></a> for more details.</p>
</div>
<div class=3D"paragraph">
<p>It is really simple to create useful servlets for testing behaviors. Som=
etimes you need a http server to run a unit test against that will return t=
est content and wiring up a servlet like this makes it trivial.</p>
</div>
<div class=3D"paragraph">
<p>After you have started things up you should be able to navigate to <a hr=
ef=3D"http://localhost:8080/" class=3D"bare">http://localhost:8080/</a> and=
 you are good to go.</p>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_maven_coordinates_6">Maven Coordinates</h5>
<div class=3D"paragraph">
<p>To use this example in your project you will need the following Maven de=
pendencies declared.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><de=
pendency>
  <groupid>org.eclipse.jetty</groupid>
  <artifactid>jetty-servlet</artifactid>
  <version>${project.version}</version>
</dependency></code></pre>
</div>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"embedded-one-webapp">Web Application</h4>
<div class=3D"paragraph">
<p>This example shows how to deploy a simple webapp with an embedded instan=
ce of Jetty.
This is useful when you want to manage the lifecycle of a server programmat=
ically, either within a production application or as a simple way to deploy=
ing and debugging a full scale application deployment.
In many ways it is easier then traditional deployment since you control the=
 classpath yourself, making this easy to wire up in a test case in Maven  a=
nd issue requests using your favorite http client library (like our Jetty c=
lient found in <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.proje=
ct-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#http-client=
">HTTP Client</a>).</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">U=
nresolved directive in development/embedding/examples/embedded-one-webapp.a=
doc - include::{SRCDIR}/examples/embedded/src/main/java/org/eclipse/jetty/e=
mbedded/OneWebApp.java[]</code></pre>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_run_it_4">Run it!</h5>
<div class=3D"paragraph">
<p>After you have started things up you should be able to navigate to <a hr=
ef=3D"http://localhost:8080/" class=3D"bare">http://localhost:8080/</a> and=
 you are good to go.</p>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_maven_coordinates_7">Maven Coordinates</h5>
<div class=3D"paragraph">
<p>To use this example in your project you will need the following Maven de=
pendencies declared.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><de=
pendency>
  <groupid>org.eclipse.jetty</groupid>
  <artifactid>jetty-webapp</artifactid>
  <version>${project.version}</version>
</dependency></code></pre>
</div>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"embedded-webapp-jsp">Web Application with JSP</h4>
<div class=3D"paragraph">
<p>This example is very similar to the one in the previous section, althoug=
h it enables the embedded webapp to use JSPs.
As of jetty-9.2, we use the JSP engine from Apache, which relies on a Servl=
et Specification 3.1 style <code>ServletContainerInitializer</code> to init=
ialize itself.
To get this to work with Jetty, you need to enable annotations processing, =
as shown in this example code:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">U=
nresolved directive in development/embedding/embedded-examples.adoc - inclu=
de::{SRCDIR}/examples/embedded/src/main/java/org/eclipse/jetty/embedded/One=
WebAppWithJsp.java[]</code></pre>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_run_it_5">Run it!</h5>
<div class=3D"paragraph">
<p>After you have started things up you should be able to navigate to <a hr=
ef=3D"http://localhost:8080/jsp/" class=3D"bare">http://localhost:8080/jsp/=
</a> and click on any of the links to jsps.</p>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_maven_coordinates_8">Maven Coordinates</h5>
<div class=3D"paragraph">
<p>To use this example in your project, you will need the following Maven d=
ependencies declared, in addition to those from the previous section:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><de=
pendency>
  <groupid>org.eclipse.jetty</groupid>
  <artifactid>jetty-annotations</artifactid>
  <version>${project.version}</version>
</dependency>
<dependency>
  <groupid>org.eclipse.jetty</groupid>
  <artifactid>apache-jsp</artifactid>
  <version>${project.version}</version>
</dependency>
<dependency>
  <groupid>org.eclipse.jetty</groupid>
  <artifactid>apache-jstl</artifactid>
  <version>${project.version}</version>
</dependency></code></pre>
</div>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"adding-embedded-examples">Adding Examples</h4>
<div class=3D"paragraph">
<p>If you would like to add an example to this list, fork the documentation=
 project from github (see the blue bar at the bottom of this page) and add =
the new page.
Feel free to add the example contents directly as a <code>[source.java]</co=
de> and we will take it from there.</p>
</div>
<div class=3D"paragraph">
<p>If you feel and example is missing, feel free to open a bug to ask for i=
t.
No guarantees, but the more helpful and demonstrative it is the better.</p>
</div>
</div>
</div>
</div>
</div>
<div class=3D"sect1">
<h2 id=3D"http-client">HTTP Client</h2>
<div class=3D"sectionbody">
<div class=3D"sect2">
<h3 id=3D"http-client-intro">Introduction</h3>
<div class=3D"paragraph">
<p>The Jetty HTTP client module provides easy-to-use APIs and utility class=
es to perform HTTP (or HTTPS) requests.</p>
</div>
<div class=3D"paragraph">
<p>Jetty=E2=80=99s HTTP client is non-blocking and asynchronous.
It offers an asynchronous API that never blocks for I/O, making it very eff=
icient in thread utilization and well suited for high performance scenarios=
 such as load testing or parallel computation.</p>
</div>
<div class=3D"paragraph">
<p>However, when all you need to do is to perform a <code>GET</code> reques=
t to a resource, Jetty=E2=80=99s HTTP client offers also a synchronous API;=
 a programming interface
where the thread that issued the request blocks until the request/response =
conversation is complete.</p>
</div>
<div class=3D"paragraph">
<p>Jetty=E2=80=99s HTTP client supports different <a href=3D"file:///home/t=
ian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/m=
ain/asciidoc/index.html#http-client-transport">transports</a>: HTTP/1.1, Fa=
stCGI and HTTP/2.
This means that the semantic of a HTTP request (that is, " <code>GET</code>=
 me the resource <code>/index.html</code> ") can be carried over the networ=
k in different formats.
The most common and default format is HTTP/1.1.
That said, Jetty=E2=80=99s HTTP client can carry the same request using the=
 FastCGI format or the new HTTP/2 format.</p>
</div>
<div class=3D"paragraph">
<p>The FastCGI transport is heavily used in Jetty=E2=80=99s <a href=3D"file=
:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documenta=
tion/src/main/asciidoc/index.html#fastcgi">FastCGI support</a> that allows =
Jetty to work as a reverse proxy to PHP (exactly like Apache or Nginx do) a=
nd therefore be able to serve - for example - WordPress websites.</p>
</div>
<div class=3D"paragraph">
<p>The HTTP/2 transport allows Jetty=E2=80=99s HTTP client to perform reque=
sts using HTTP/2 to HTTP/2 enabled web sites, see also Jetty=E2=80=99s <a h=
ref=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jett=
y-documentation/src/main/asciidoc/index.html#http2">HTTP/2 support</a>.</p>
</div>
<div class=3D"paragraph">
<p>Out of the box features that you get with the Jetty HTTP client include:=
</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>Redirect support - redirect codes such as 302 or 303 are automatically f=
ollowed.</p>
</li>
<li>
<p>Cookies support - cookies sent by servers are stored and sent back to se=
rvers in matching requests.</p>
</li>
<li>
<p>Authentication support - HTTP "Basic" and "Digest" authentications are s=
upported, others are pluggable.</p>
</li>
<li>
<p>Forward proxy support - HTTP proxying and SOCKS4 proxying.</p>
</li>
</ul>
</div>
<div class=3D"sect3">
<h4 id=3D"http-client-init">Starting HttpClient</h4>
<div class=3D"paragraph">
<p>The main class is named <code>org.eclipse.jetty.client.HttpClient</code>=
.</p>
</div>
<div class=3D"paragraph">
<p>You can think of a <code>HttpClient</code> instance as a browser instanc=
e.
Like a browser it can make requests to different domains, it manages redire=
cts, cookies and authentication, you can configure it with a proxy, and
it provides you with the responses to the requests you make.</p>
</div>
<div class=3D"paragraph">
<p>In order to use <code>HttpClient</code>, you must instantiate it, config=
ure it, and then start it:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">/=
/ Instantiate HttpClient
HttpClient httpClient =3D new HttpClient();

// Configure HttpClient, for example:
httpClient.setFollowRedirects(false);

// Start HttpClient
httpClient.start();</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>You may create multiple instances of <code>HttpClient</code>, but typica=
lly one instance is enough for an application.
There are several reasons for having multiple <code>HttpClient</code> insta=
nces including, but not limited to:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>You want to specify different configuration parameters (for example, one=
 instance is configured with a forward proxy while another is not)</p>
</li>
<li>
<p>You want the two instances to behave like two different browsers and hen=
ce have different cookies, different authentication credentials=E2=80=A6=E2=
=80=8Betc.</p>
</li>
<li>
<p>You want to use different transports</p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>When you create a <code>HttpClient</code> instance using the parameterle=
ss constructor, you will only be able to perform plain HTTP requests and yo=
u will not be able to perform HTTPS requests.</p>
</div>
<div class=3D"paragraph">
<p>In order to perform HTTPS requests, you should create first a <a href=3D=
"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-docu=
mentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/util/ssl/SslConte=
xtFactory.html"><code>SslContextFactory</code></a>, configure it, and pass =
it to the <code>HttpClient</code> constructor.
When created with a <code>SslContextFactory</code>, the <code>HttpClient</c=
ode> will be able to perform both HTTP and HTTPS requests to any domain.</p=
>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">/=
/ Instantiate and configure the SslContextFactory
SslContextFactory sslContextFactory =3D new SslContextFactory();

// Instantiate HttpClient with the SslContextFactory
HttpClient httpClient =3D new HttpClient(sslContextFactory);

// Configure HttpClient, for example:
httpClient.setFollowRedirects(false);

// Start HttpClient
httpClient.start();</code></pre>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_stopping_httpclient">Stopping HttpClient</h4>
<div class=3D"paragraph">
<p>It is recommended that when your application stops, you also stop the <c=
ode>HttpClient</code> instance (or instances) that you are using.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">h=
ttpClient.stop();</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Stopping <code>HttpClient</code> makes sure that the memory it holds (fo=
r example, authentication credentials, cookies, etc.) is released, and that=
 the thread pool and scheduler are properly stopped allowing all threads us=
ed by <code>HttpClient</code> to exit.</p>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"http-client-api">API Usage</h3>
<div class=3D"sect3">
<h4 id=3D"http-client-blocking">Blocking APIs</h4>
<div class=3D"paragraph">
<p>The simple way to perform a HTTP request is the following:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">C=
ontentResponse response =3D httpClient.GET("http://domain.com/path?query");=
</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The method <code>HttpClient.GET(...)</code> performs a HTTP <code>GET</c=
ode> request to the given URI and returns a <code>ContentResponse</code> wh=
en the request/response conversation completes successfully.</p>
</div>
<div class=3D"paragraph">
<p>The <code>ContentResponse</code> object contains the HTTP response infor=
mation: status code, headers and possibly content.
The content length is limited by default to 2 MiB; for larger content see <=
a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/j=
etty-documentation/src/main/asciidoc/index.html#http-client-response-conten=
t">Response Content Handling</a>.</p>
</div>
<div class=3D"paragraph">
<p>If you want to customize the request, for example by issuing a <code>HEA=
D</code> request instead of a <code>GET</code>, and simulating a browser us=
er agent, you can do it in this way:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">C=
ontentResponse response =3D httpClient.newRequest("http://domain.com/path?q=
uery")
        .method(HttpMethod.HEAD)
        .agent("Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:17.0) Gecko/2010=
0101 Firefox/17.0")
        .send();</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>This is a shorthand for:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">R=
equest request =3D httpClient.newRequest("http://domain.com/path?query");
request.method(HttpMethod.HEAD);
request.agent("Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:17.0) Gecko/20100=
101 Firefox/17.0");
ContentResponse response =3D request.send();</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>You first create a request object using <code>httpClient.newRequest(...)=
</code>, and then you customize it using the fluent API style (that is, a c=
hained invocation of methods on the request object).
When the request object is customized, you call <code>request.send()</code>=
 that produces the <code>ContentResponse</code> when the request/response c=
onversation is complete.</p>
</div>
<div class=3D"paragraph">
<p>Simple <code>POST</code> requests also have a shortcut method:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">C=
ontentResponse response =3D httpClient.POST("http://domain.com/entity/1")
        .param("p", "value")
        .send();</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The <code>POST</code> parameter values added via the <code>param()</code=
> method are automatically URL-encoded.</p>
</div>
<div class=3D"paragraph">
<p>Jetty=E2=80=99s HTTP client automatically follows redirects, so it handl=
es the typical web pattern <a href=3D"http://en.wikipedia.org/wiki/Post/Red=
irect/Get">POST/Redirect/GET</a>, and the response object contains the cont=
ent of the response of the <code>GET</code> request.
Following redirects is a feature that you can enable/disable on a per-reque=
st basis or globally.</p>
</div>
<div class=3D"paragraph">
<p>File uploads also require one line, and make use of JDK 7=E2=80=B2s <cod=
e>java.nio.file</code> classes:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">C=
ontentResponse response =3D httpClient.newRequest("http://domain.com/upload=
")
        .method(HttpMethod.POST)
        .file(Paths.get("file_to_upload.txt"), "text/plain")
        .send();</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>It is possible to impose a total timeout for the request/response conver=
sation using the <code>Request.timeout(...)</code> method as follows:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">C=
ontentResponse response =3D httpClient.newRequest("http://domain.com/path?q=
uery")
        .timeout(5, TimeUnit.SECONDS)
        .send();</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>In the example above, when the 5 seconds expire, the request is aborted =
and a <code>java.util.concurrent.TimeoutException</code> is thrown.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"http-client-async">Non-Blocking APIs</h4>
<div class=3D"paragraph">
<p>So far we have shown how to use Jetty HTTP client in a blocking style - =
that is, the thread that issues the request blocks until the request/respon=
se conversation is complete.</p>
</div>
<div class=3D"paragraph">
<p>This section will look at Jetty=E2=80=99s HTTP client non-blocking, asyn=
chronous APIs that are perfectly suited for large content downloads, for pa=
rallel processing of requests/responses and in cases where performance and =
efficient thread and resource utilization is a key factor.</p>
</div>
<div class=3D"paragraph">
<p>The asynchronous APIs rely heavily on listeners that are invoked at vari=
ous stages of request and response processing.
These listeners are implemented by applications and may perform any kind of=
 logic.
The implementation invokes these listeners in the same thread that is used =
to process the request or response.
Therefore, if the application code in these listeners takes a long time to =
execute, the request or response processing is delayed until the listener r=
eturns.</p>
</div>
<div class=3D"paragraph">
<p>If you need to execute application code that takes long time inside a li=
stener, you must spawn your own thread and remember to deep copy any data p=
rovided by the listener that you will need in your code, because when the l=
istener returns the data it provides may be recycled/cleared/destroyed.</p>
</div>
<div class=3D"paragraph">
<p>Request and response processing are executed by two different threads an=
d therefore may happen concurrently.
A typical example of this concurrent processing is an echo server, where a =
large upload may be concurrent with the large download echoed back.
As a side note, remember that responses may be processed and completed <em>=
before</em> requests; a typical example is a large upload that triggers a q=
uick response - for example an error - by the server: the response may arri=
ve and be completed while the request content is still being uploaded.</p>
</div>
<div class=3D"paragraph">
<p>The application thread that calls <code>Request.send(Response.CompleteLi=
stener)</code> performs the processing of the request until either the requ=
est is fully processed or until it would block on I/O, then it returns (and=
 therefore never blocks).
If it would block on I/O, the thread asks the I/O system to emit an event w=
hen the I/O will be ready to continue, then returns.
When such an event is fired, a thread taken from the <code>HttpClient</code=
> thread pool will resume the processing of the request.</p>
</div>
<div class=3D"paragraph">
<p>Response are processed from the I/O thread that fires the event that byt=
es are ready to be read.
Response processing continues until either the response is fully processed =
or until it would block for I/O.
If it would block for I/O, the thread asks the I/O system to emit an event =
when the I/O will be ready to continue, then returns.
When such an event is fired, a thread taken from the <code>HttpClient</code=
> thread pool will resume the processing of the response.</p>
</div>
<div class=3D"paragraph">
<p>When the request and the response are both fully processed, the thread t=
hat finished the last processing (usually the thread that processes the res=
ponse, but may also be the thread that processes the request - if the reque=
st takes more time than the response to be processed) is used to de-queue t=
he next request for the same destination and processes it.</p>
</div>
<div class=3D"paragraph">
<p>A simple asynchronous <code>GET</code> request that discards the respons=
e content can be written in this way:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">h=
ttpClient.newRequest("http://domain.com/path")
        .send(new Response.CompleteListener()
        {
            @Override
            public void onComplete(Result result)
            {
                // Your logic here
            }
        });</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Method <code>Request.send(Response.CompleteListener)</code> returns <cod=
e>void</code> and does not block; the <code>Response.CompleteListener</code=
> provided as a parameter is notified when the request/response conversatio=
n is complete, and the <code>Result</code> parameter allows you to access t=
he response object.</p>
</div>
<div class=3D"paragraph">
<p>You can write the same code using JDK 8=E2=80=B2s lambda expressions:</p=
>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">h=
ttpClient.newRequest("http://domain.com/path")
        .send(result -&gt; { /* Your logic here */ });</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>You can impose a total timeout for the request/response conversation in =
the same way used by the synchronous API:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">R=
equest request =3D httpClient.newRequest("http://domain.com/path")
        .timeout(3, TimeUnit.SECONDS)
        .send(result -&gt; { /* Your logic here */ });</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The example above will impose a total timeout of 3 seconds on the reques=
t/response conversation.</p>
</div>
<div class=3D"paragraph">
<p>The HTTP client APIs use listeners extensively to provide hooks for all =
possible request and response events, and with JDK 8=E2=80=B2s lambda expre=
ssions they are even more fun to use:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">h=
ttpClient.newRequest("http://domain.com/path")
        // Add request hooks
        .onRequestQueued(request -&gt; { ... })
        .onRequestBegin(request -&gt; { ... })
        ... // More request hooks available

        // Add response hooks
        .onResponseBegin(response -&gt; { ... })
        .onResponseHeaders(response -&gt; { ... })
        .onResponseContent((response, buffer) -&gt; { ... })
        ... // More response hooks available

        .send(result -&gt; { ... });</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>This makes Jetty HTTP client suitable for HTTP load testing because, for=
 example, you can accurately time every step of the request/response conver=
sation (thus knowing where the request/response time is really spent).</p>
</div>
<div class=3D"paragraph">
<p>Have a look at the <a href=3D"file:///home/tian/Downloads/b60/ebook/jett=
y.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org=
/eclipse/jetty/client/api/Request.Listener.html"><code>Request.Listener</co=
de></a> class to know about request events, and to the <a href=3D"file:///h=
ome/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/=
src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/client/api/Response.Listene=
r.html"><code>Response.Listener</code></a> class to know about response eve=
nts.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"http-client-content">Content Handling</h4>
<div class=3D"sect4">
<h5 id=3D"http-client-request-content">Request Content Handling</h5>
<div class=3D"paragraph">
<p>Jetty=E2=80=99s HTTP client provides a number of utility classes off the=
 shelf to handle request content.</p>
</div>
<div class=3D"paragraph">
<p>You can provide request content as <code>String</code>, <code>byte[]</co=
de>, <code>ByteBuffer</code>, <code>java.nio.file.Path</code>, <code>InputS=
tream</code>, and provide your own implementation of <code>org.eclipse.jett=
y.client.api.ContentProvider</code>.
Here=E2=80=99s an example that provides the request content using <code>jav=
a.nio.file.Paths</code>:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">C=
ontentResponse response =3D httpClient.newRequest("http://domain.com/upload=
")
        .method(HttpMethod.POST)
        .file(Paths.get("file_to_upload.txt"), "text/plain")
        .send();</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>This is equivalent to using the <code>PathContentProvider</code> utility=
 class:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">C=
ontentResponse response =3D httpClient.newRequest("http://domain.com/upload=
")
        .method(HttpMethod.POST)
        .content(new PathContentProvider(Paths.get("file_to_upload.txt")), =
"text/plain")
        .send();</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Alternatively, you can use <code>FileInputStream</code> via the <code>In=
putStreamContentProvider</code> utility class:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">C=
ontentResponse response =3D httpClient.newRequest("http://domain.com/upload=
")
        .method(HttpMethod.POST)
        .content(new InputStreamContentProvider(new FileInputStream("file_t=
o_upload.txt")), "text/plain")
        .send();</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Since <code>InputStream</code> is blocking, then also the send of the re=
quest will block if the input stream blocks, even in case of usage of the a=
synchronous <code>HttpClient</code> APIs.</p>
</div>
<div class=3D"paragraph">
<p>If you have already read the content in memory, you can pass it as a <co=
de>byte[]</code> using the <code>BytesContentProvider</code> utility class:=
</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">b=
yte[] bytes =3D ...;
ContentResponse response =3D httpClient.newRequest("http://domain.com/uploa=
d")
        .method(HttpMethod.POST)
        .content(new BytesContentProvider(bytes), "text/plain")
        .send();</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>If the request content is not immediately available, but your applicatio=
n will be notified of the content to send, you can use <code>DeferredConten=
tProvider</code> in this way:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">D=
eferredContentProvider content =3D new DeferredContentProvider();
httpClient.newRequest("http://domain.com/upload")
        .method(HttpMethod.POST)
        .content(content)
        .send(new Response.CompleteListener()
        {
            @Override
            public void onComplete(Result result)
            {
                // Your logic here
            }
        });

// Content not available yet here

...

// An event happens, now content is available
byte[] bytes =3D ...;
content.offer(ByteBuffer.wrap(bytes));

...

// All content has arrived
content.close();</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>While the request content is awaited and consequently uploaded by the cl=
ient application, the server may be able to respond (at least with the resp=
onse headers) completely asynchronously.
In this case, <code>Response.Listener</code> callbacks will be invoked befo=
re the request is fully sent.
This allows fine-grained control of the request/response conversation: for =
example the server may reject contents that are too big, send a response to=
 the client, which in turn may stop the content upload.</p>
</div>
<div class=3D"paragraph">
<p>Another way to provide request content is by using an <code>OutputStream=
ContentProvider</code>,
which allows applications to write request content when it is available to =
the <code>OutputStream</code> provided by <code>OutputStreamContentProvider=
</code>:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">O=
utputStreamContentProvider content =3D new OutputStreamContentProvider();

// Use try-with-resources to close the OutputStream when all content is wri=
tten
try (OutputStream output =3D content.getOutputStream())
{
    client.newRequest("localhost", 8080)
            .method(HttpMethod.POST)
            .content(content)
            .send(new Response.CompleteListener()
            {
                @Override
                public void onComplete(Result result)
                {
                    // Your logic here
                }
            });

    ...

    // Write content
    writeContent(output);
}
// End of try-with-resource, output.close() called automatically to signal =
end of content</code></pre>
</div>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"http-client-response-content">Response Content Handling</h5>
<div class=3D"paragraph">
<p>Jetty HTTP client allows applications to handle response content in diff=
erent ways.</p>
</div>
<div class=3D"paragraph">
<p>The first way is to buffer the response content in memory; this is done =
when using the blocking APIs (see <a href=3D"file:///home/tian/Downloads/b6=
0/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/ind=
ex.html#http-client-blocking">Blocking APIs</a>) and the content is buffere=
d within a <code>ContentResponse</code> up to 2 MiB.</p>
</div>
<div class=3D"paragraph">
<p>If you want to control the length of the response content (for example l=
imiting to values smaller than the default of 2 MiB), then you can use a <c=
ode>org.eclipse.jetty.client.util.FutureResponseListener</code> in this way=
:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">R=
equest request =3D httpClient.newRequest("http://domain.com/path");

// Limit response content buffer to 512 KiB
FutureResponseListener listener =3D new FutureResponseListener(request, 512=
 * 1024);

request.send(listener);

ContentResponse response =3D listener.get(5, TimeUnit.SECONDS);</code></pre=
>
</div>
</div>
<div class=3D"paragraph">
<p>If the response content length is exceeded, the response will be aborted=
, and an exception will be thrown by method <code>get()</code>.</p>
</div>
<div class=3D"paragraph">
<p>If you are using the asynchronous APIs (see <a href=3D"file:///home/tian=
/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main=
/asciidoc/index.html#http-client-async">Non-Blocking APIs</a>), you can use=
 the <code>BufferingResponseListener</code> utility class:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">h=
ttpClient.newRequest("http://domain.com/path")
        // Buffer response content up to 8 MiB
        .send(new BufferingResponseListener(8 * 1024 * 1024)
        {
            @Override
            public void onComplete(Result result)
            {
                if (!result.isFailed())
                {
                    byte[] responseContent =3D getContent();
                    // Your logic here
                }
            }
        });</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The second way is the most efficient (because it avoids content copies) =
and allows you to specify a <code>Response.ContentListener</code>, or a sub=
class, to handle the content as soon as it arrives.
In the example below, <code>Response.Listener.Adapter</code> is a class tha=
t implements both <code>Response.ContentListener</code> and <code>Response.=
CompleteListener</code> and can be passed to <code>Request.send()</code>.
Jetty=E2=80=99s HTTP client will invoke the <code>onContent()</code> method=
 zero or more times (until there is content), and finally invoke the <code>=
onComplete()</code> method.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">C=
ontentResponse response =3D httpClient
        .newRequest("http://domain.com/path")
        .send(new Response.Listener.Adapter()
        {
            @Override
            public void onContent(Response response, ByteBuffer buffer)
            {
                // Your logic here
            }
        });</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The third way allows you to wait for the response and then stream the co=
ntent using the <code>InputStreamResponseListener</code> utility class:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">I=
nputStreamResponseListener listener =3D new InputStreamResponseListener();
httpClient.newRequest("http://domain.com/path")
        .send(listener);

// Wait for the response headers to arrive
Response response =3D listener.get(5, TimeUnit.SECONDS);

// Look at the response
if (response.getStatus() =3D=3D HttpStatus.OK_200)
{
    // Use try-with-resources to close input stream.
    try (InputStream responseContent =3D listener.getInputStream())
    {
        // Your logic here
    }
}</code></pre>
</div>
</div>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"http-client-cookie">Cookies Support</h3>
<div class=3D"paragraph">
<p>Jetty HTTP client supports cookies out of the box.
The <code>HttpClient</code> instance receives cookies from HTTP responses a=
nd stores them in a <code>java.net.CookieStore</code>, a class that is part=
 of the JDK.
When new requests are made, the cookie store is consulted and if there are =
matching cookies (that is, cookies that are not expired and that match doma=
in and path of the request) then they are added to the requests.</p>
</div>
<div class=3D"paragraph">
<p>Applications can programmatically access the cookie store to find the co=
okies that have been set:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">C=
ookieStore cookieStore =3D httpClient.getCookieStore();
List<httpcookie> cookies =3D cookieStore.get(URI.create("http://domain.com/=
path"));</httpcookie></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Applications can also programmatically set cookies as if they were retur=
ned from a HTTP response:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">C=
ookieStore cookieStore =3D httpClient.getCookieStore();
HttpCookie cookie =3D new HttpCookie("foo", "bar");
cookie.setDomain("domain.com");
cookie.setPath("/");
cookie.setMaxAge(TimeUnit.DAYS.toSeconds(1));
cookieStore.add(URI.create("http://domain.com"), cookie);</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Cookies may be added only for a particular request:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">C=
ontentResponse response =3D httpClient.newRequest("http://domain.com/path")
        .cookie(new HttpCookie("foo", "bar"))
        .send();</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>You can remove cookies that you do not want to be sent in future HTTP re=
quests:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">C=
ookieStore cookieStore =3D httpClient.getCookieStore();
URI uri =3D URI.create("http://domain.com");
List<httpcookie> cookies =3D cookieStore.get(uri);
for (HttpCookie cookie : cookies)
    cookieStore.remove(uri, cookie);</httpcookie></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>If you want to totally disable cookie handling, you can install a <code>=
HttpCookieStore.Empty</code> instance in this way:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">h=
ttpClient.setCookieStore(new HttpCookieStore.Empty());</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>You can enable cookie filtering by installing a cookie store that perfor=
ms the filtering logic in this way:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">h=
ttpClient.setCookieStore(new GoogleOnlyCookieStore());

public class GoogleOnlyCookieStore extends HttpCookieStore
{
    @Override
    public void add(URI uri, HttpCookie cookie)
    {
        if (uri.getHost().endsWith("google.com"))
            super.add(uri, cookie);
    }
}</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The example above will retain only cookies that come from the <code>goog=
le.com</code> domain or sub-domains.</p>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"http-client-authentication">Authentication Support</h3>
<div class=3D"paragraph">
<p>Jetty=E2=80=99s HTTP client supports the "Basic" and "Digest" authentica=
tion mechanisms defined by <a href=3D"https://tools.ietf.org/html/rfc7235">=
RFC 7235</a>.</p>
</div>
<div class=3D"paragraph">
<p>You can configure authentication credentials in the HTTP client instance=
 as follows:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">U=
RI uri =3D new URI("http://domain.com/secure");
String realm =3D "MyRealm";
String user =3D "username";
String pass =3D "password";

// Add authentication credentials
AuthenticationStore auth =3D httpClient.getAuthenticationStore();
auth.addAuthentication(new BasicAuthentication(uri, realm, user, pass));

ContentResponse response =3D httpClient
        .newRequest(uri)
        .send()
        .get(5, TimeUnit.SECONDS);</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Jetty=E2=80=99s HTTP client tests authentication credentials against the=
 challenge(s) the server issues, and if they match it automatically sends t=
he right authentication headers to the server for authentication.
If the authentication is successful, it caches the result and reuses it for=
 subsequent requests for the same domain and matching URIs.</p>
</div>
<div class=3D"paragraph">
<p>The HTTP conversation for a successful match is the following:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre>Application  HttpClient                     Server
     |           |                             |
     |--- GET ---|------------ GET -----------&gt;|
     |           |                             |
     |           |&lt;-- 401 + WWW-Authenticate --|
     |           |                             |
     |           |--- GET + Authentication ---&gt;|
     |           |                             |
     |&lt;-- 200 ---|------------ 200 ------------|</pre>
</div>
</div>
<div class=3D"paragraph">
<p>The application does not receive events related to the response with cod=
e 401, they are handled internally by <code>HttpClient</code> which produce=
s a request similar to the original but with the correct <code>Authorizatio=
n</code> header, and then relays the response with code 200 to the applicat=
ion.</p>
</div>
<div class=3D"paragraph">
<p>Successful authentications are cached, but it is possible to clear them =
in order to force authentication again:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">h=
ttpClient.getAuthenticationStore().clearAuthenticationResults();</code></pr=
e>
</div>
</div>
<div class=3D"paragraph">
<p>Authentications may be preempted to avoid the additional roundtrip due t=
o the server challenge in this way:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">A=
uthenticationStore auth =3D httpClient.getAuthenticationStore();
URI uri =3D URI.create("http://domain.com/secure");
auth.addAuthenticationResult(new BasicAuthentication.BasicResult(uri, "user=
name", "password"));</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>In this way, the original request is enriched by <code>HttpClient</code>=
 immediately with the <code>Authorization</code> header, and the server sho=
uld respond with a 200 and the resource content rather than with the 401 an=
d the challenge.</p>
</div>
<div class=3D"paragraph">
<p>See also the <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.proj=
ect-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#http-clien=
t-proxy-authentication">proxy authentication section</a> for further inform=
ation about how authentication works with HTTP proxies.</p>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"http-client-proxy">Proxy Support</h3>
<div class=3D"paragraph">
<p>Jetty=E2=80=99s HTTP client can be configured to use proxies to connect =
to destinations.</p>
</div>
<div class=3D"paragraph">
<p>Two types of proxies are available out of the box: a HTTP proxy (provide=
d by class <code>org.eclipse.jetty.client.HttpProxy</code>) and a SOCKS 4 p=
roxy (provided by class <code>org.eclipse.jetty.client.Socks4Proxy</code>).
Other implementations may be written by subclassing <code>ProxyConfiguratio=
n.Proxy</code>.</p>
</div>
<div class=3D"paragraph">
<p>The following is a typical configuration:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">P=
roxyConfiguration proxyConfig =3D httpClient.getProxyConfiguration();
HttpProxy proxy =3D new HttpProxy("proxyHost", proxyPort);

// Do not proxy requests for localhost:8080
proxy.getExcludedAddresses().add("localhost:8080");

// add the new proxy to the list of proxies already registered
proxyConfig.getProxies().add(proxy);

ContentResponse response =3D httpClient.GET(uri);</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>You specify the proxy host and port, and optionally also the addresses t=
hat you do not want to be proxied, and then add the proxy configuration on =
the <code>ProxyConfiguration</code> instance.</p>
</div>
<div class=3D"paragraph">
<p>Configured in this way, <code>HttpClient</code> makes requests to the HT=
TP proxy (for plain-text HTTP requests) or establishes a tunnel via <code>H=
TTP CONNECT</code> (for encrypted HTTPS requests).</p>
</div>
<div class=3D"sect3">
<h4 id=3D"http-client-proxy-authentication">Proxy Authentication Support</h=
4>
<div class=3D"paragraph">
<p>Jetty=E2=80=99s HTTP client support proxy authentication in the same way=
 it supports <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project=
-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#http-client-a=
uthentication">server authentication</a>.</p>
</div>
<div class=3D"paragraph">
<p>In the example below, the proxy requires Basic authentication, but the s=
erver requires Digest authentication, and therefore:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">U=
RI proxyURI =3D new URI("http://proxy.net:8080");
URI serverURI =3D new URI("http://domain.com/secure");

AuthenticationStore auth =3D httpClient.getAuthenticationStore();

// Proxy credentials.
auth.addAuthentication(new BasicAuthentication(proxyURI, "ProxyRealm", "pro=
xyUser", "proxyPass"));

// Server credentials.
auth.addAuthentication(new DigestAuthentication(serverURI, "ServerRealm", "=
serverUser", "serverPass"));

// Proxy configuration.
ProxyConfiguration proxyConfig =3D httpClient.getProxyConfiguration();
HttpProxy proxy =3D new HttpProxy("proxy.net", 8080);
proxyConfig.getProxies().add(proxy);

ContentResponse response =3D httpClient.newRequest(serverURI)
        .send()
        .get(5, TimeUnit.SECONDS);</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The HTTP conversation for successful authentications on both the proxy a=
nd the server is the following:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre>Application  HttpClient                         Proxy                 =
   Server
     |           |                                |                        =
 |
     |--- GET --&gt;|------------- GET -------------&gt;|                  =
       |
     |           |                                |                        =
 |
     |           |&lt;----- 407 + Proxy-Authn -------|                     =
    |
     |           |                                |                        =
 |
     |           |------ GET + Proxy-Authz ------&gt;|                     =
    |
     |           |                                |                        =
 |
     |           |                                |---------- GET ---------=
&gt;|
     |           |                                |                        =
 |
     |           |                                |&lt;--- 401 + WWW-Authn =
----|
     |           |                                |                        =
 |
     |           |&lt;------ 401 + WWW-Authn --------|                     =
    |
     |           |                                |                        =
 |
     |           |-- GET + Proxy-Authz + Authz --&gt;|                     =
    |
     |           |                                |                        =
 |
     |           |                                |------ GET + Authz -----=
&gt;|
     |           |                                |                        =
 |
     |&lt;-- 200 ---|&lt;------------ 200 --------------|&lt;--------- 200 =
----------|</pre>
</div>
</div>
<div class=3D"paragraph">
<p>The application does not receive events related to the responses with co=
de 407 and 401 since they are handled internally by <code>HttpClient</code>=
.</p>
</div>
<div class=3D"paragraph">
<p>Similarly to the <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.=
project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#http-c=
lient-authentication">authentication section</a>, the proxy authentication =
result and the server authentication result can be preempted to avoid, resp=
ectively, the 407 and 401 roundtrips.</p>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"http-client-transport">Pluggable Transports</h3>
<div class=3D"paragraph">
<p>Jetty=E2=80=99s HTTP client can be configured to use different transport=
s to carry the semantic of HTTP requests and responses.</p>
</div>
<div class=3D"paragraph">
<p>This means that the intention of a client to request resource <code>/ind=
ex.html</code> using the <code>GET</code> method can be carried over the ne=
twork in different formats.</p>
</div>
<div class=3D"paragraph">
<p>A HTTP client transport is the component that is in charge of converting=
 a high-level, semantic, HTTP requests such as "GET resource /index.html" i=
nto the specific format understood by the server (for example, HTTP/2), and=
 to convert the server response from the specific format (HTTP/2) into high=
-level, semantic objects that can be used by applications.</p>
</div>
<div class=3D"paragraph">
<p>In this way, applications are not aware of the actual protocol being use=
d.
This allows them to write their logic against a high-level API that hides t=
he details of the specific protocol being used over the network.</p>
</div>
<div class=3D"paragraph">
<p>The most common protocol format is HTTP/1.1, a text-based protocol with =
lines separated by <code>\r\n</code>:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">GET /index.html HTTP/1.1\r\n
Host: domain.com\r\n
...
\r\n</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>However, the same request can be made using FastCGI, a binary protocol:<=
/p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">x01 x01 x00 x01 x00 x08 x00 x00
x00 x01 x01 x00 x00 x00 x00 x00
x01 x04 x00 x01 xLL xLL x00 x00
x0C x0B  D   O   C   U   M   E
 N   T   _   U   R   I   /   i
 n   d   e   x   .   h   t   m
 l
...</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Similarly, HTTP/2 is a binary protocol that transports the same informat=
ion in a yet different format.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"_http_1_1_transport">HTTP/1.1 Transport</h4>
<div class=3D"paragraph">
<p>HTTP/1.1 is the default transport.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">/=
/ No transport specified, using default.
HttpClient client =3D new HttpClient();
client.start();</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>If you want to customize the HTTP/1.1 transport, you can explicitly conf=
igure <code>HttpClient</code> in this way:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">i=
nt selectors =3D 1;
HttpClientTransportOverHTTP transport =3D new HttpClientTransportOverHTTP(s=
electors);

HttpClient client =3D new HttpClient(transport, null);
client.start();</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The example above allows you to customize the number of NIO selectors th=
at <code>HttpClient</code> will be using.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_http_2_transport">HTTP/2 Transport</h4>
<div class=3D"paragraph">
<p>The HTTP/2 transport can be configured in this way:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">H=
TTP2Client h2Client =3D new HTTP2Client();
h2Client.setSelectors(1);
HttpClientTransportOverHTTP2 transport =3D new HttpClientTransportOverHTTP2=
(h2Client);

HttpClient client =3D new HttpClient(transport, null);
client.start();</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p><code>HTTP2Client</code> is the lower-level client that provides an API =
based on HTTP/2 concepts such as <em>sessions</em>, <em>streams</em> and <e=
m>frames</em> that are specific to HTTP/2.</p>
</div>
<div class=3D"paragraph">
<p><code>HttpClientTransportOverHTTP2</code> uses <code>HTTP2Client</code> =
to format high-level semantic HTTP requests ("GET resource /index.html") in=
to the HTTP/2 specific format.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_fastcgi_transport">FastCGI Transport</h4>
<div class=3D"paragraph">
<p>The FastCGI transport can be configured in this way:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">i=
nt selectors =3D 1;
String scriptRoot =3D "/var/www/wordpress";
HttpClientTransportOverFCGI transport =3D new HttpClientTransportOverFCGI(s=
electors, false, scriptRoot);

HttpClient client =3D new HttpClient(transport, null);
client.start();</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>In order to make requests using the FastCGI transport, you need to have =
a FastCGI server such as <a href=3D"https://en.wikipedia.org/wiki/PHP#PHPFP=
M">PHP-FPM</a> (see also <a href=3D"http://php.net/manual/en/install.fpm.ph=
p" class=3D"bare">http://php.net/manual/en/install.fpm.php</a>).</p>
</div>
<div class=3D"paragraph">
<p>The FastCGI transport is primarily used by Jetty=E2=80=99s <a href=3D"fi=
le:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documen=
tation/src/main/asciidoc/index.html#fastcgi">FastCGI support</a> to serve P=
HP pages (WordPress for example).</p>
</div>
</div>
</div>
</div>
</div>
<div class=3D"sect1">
<h2 id=3D"maven-and-jetty">Maven and Jetty</h2>
<div class=3D"sectionbody">
<div class=3D"paragraph">
<p>This chapter explains how to use Jetty with Maven and the Jetty Maven pl=
ugin.</p>
</div>
<div class=3D"sect2">
<h3 id=3D"jetty-maven-helloworld">Using Maven</h3>
<div class=3D"paragraph">
<p><a href=3D"http://maven.apache.org/">Apache Maven</a> is a software proj=
ect management and comprehension tool.
Based on the concept of a project object model (POM), Maven can manage a pr=
oject=E2=80=99s build, reporting and documentation from a central piece of =
information.</p>
</div>
<div class=3D"paragraph">
<p>It is an ideal tool to build a web application project, and such project=
s can use the <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.projec=
t-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#jetty-maven-=
plugin">jetty-maven-plugin</a> to easily run the web application and save t=
ime in development.
You can also use Maven to build, test and run a project which embeds Jetty.=
</p>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Note</div>
</td>
<td class=3D"content">
Use of Maven and the jetty-maven-plugin is <strong>not</strong> required.
Using Maven for Jetty implementations is a popular choice, but users encour=
aged to manage their projects in whatever way suits their needs.
Other popular tools include Ant and Gradle.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
<div class=3D"paragraph">
<p>First we=E2=80=99ll have a look at a very simple HelloWorld java applica=
tion that embeds Jetty, then a simple webapp which makes use of the <a href=
=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-d=
ocumentation/src/main/asciidoc/index.html#jetty-maven-plugin">jetty-maven-p=
lugin</a> to speed up the development cycle.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"configuring-embedded-jetty-with-maven">Using Embedded Jetty with =
Maven</h4>
<div class=3D"paragraph">
<p>To understand the basic operations of building and running against Jetty=
, first review:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p><a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/index.html#advanced-embedding">Emb=
edding with Jetty</a></p>
</li>
<li>
<p><a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/index.html#jetty-helloworld">Jetty=
 HelloWorld example</a></p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>Maven uses convention over configuration, so it is best to use the proje=
ct structure Maven recommends.
You can use <em><a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.proj=
ect-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#archetypes=
"></a><a href=3D"http://maven.apache.org/guides/introduction/introduction-t=
o-archetypes.html">archetypes</a></em> to quickly setup Maven projects, but=
 we will set up the structure manually for this simple tutorial example:</p=
>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">&gt; mkdir JettyMavenHelloWorld
&gt; cd JettyMavenHelloWorld
&gt; mkdir -p src/main/java/org/example</code></pre>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"creating-helloworld-class">Creating the HelloWorld Class</h5>
<div class=3D"paragraph">
<p>Use an editor to create the file <code>src/main/java/org/example/HelloWo=
rld.java</code> with the following contents:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">p=
ackage org.example;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.ServletException;
import java.io.IOException;
import org.eclipse.jetty.server.Server;
import org.eclipse.jetty.server.Request;
import org.eclipse.jetty.server.handler.AbstractHandler;

public class HelloWorld extends AbstractHandler
{
    public void handle(String target,
                       Request baseRequest,
                       HttpServletRequest request,
                       HttpServletResponse response)
        throws IOException, ServletException
    {
        response.setContentType("text/html;charset=3Dutf-8");
        response.setStatus(HttpServletResponse.SC_OK);
        baseRequest.setHandled(true);
        response.getWriter().println("<h1>Hello World</h1>");
    }

    public static void main(String[] args) throws Exception
    {
        Server server =3D new Server(8080);
        server.setHandler(new HelloWorld());

        server.start();
        server.join();
    }
}</code></pre>
</div>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"creating-embedded-pom-descriptor">Creating the POM Descriptor</h5=
>
<div class=3D"paragraph">
<p>The <code>pom.xml</code> file declares the project name and its dependen=
cies.
Use an editor to create the file <code>pom.xml</code> in the <code>JettyMav=
enHelloWorld</code> directory with the following contents:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><pr=
oject xmlns=3D"http://maven.apache.org/POM/4.0.0" xmlns:xsi=3D"http://www.w=
3.org/2001/XMLSchema-instance" xsi:schemalocation=3D"http://maven.apache.or=
g/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelversion>4.0.0</modelversion>
  <groupid>org.example</groupid>
  <artifactid>hello-world</artifactid>
  <version>0.1-SNAPSHOT</version>
  <packaging>jar</packaging>
  <name>Jetty HelloWorld</name>

  <properties>
      <!-- Adapt this to a version found on
           http://central.maven.org/maven2/org/eclipse/jetty/jetty-maven-pl=
ugin/
        -->
      <jettyversion>9.3.9.v20160517</jettyversion>
  </properties>

  <dependencies>
    <dependency>
      <groupid>org.eclipse.jetty</groupid>
      <artifactid>jetty-server</artifactid>
      <version>${jettyVersion}</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupid>org.codehaus.mojo</groupid>
        <artifactid>exec-maven-plugin</artifactid>
        <version>1.1</version>
        <executions>
          <execution><goals><goal>java</goal></goals></execution>
        </executions>
        <configuration>
          <mainclass>org.example.HelloWorld</mainclass>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project></code></pre>
</div>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"buildng-and-running-embedded-helloworld">Building and Running Emb=
edded HelloWorld</h5>
<div class=3D"paragraph">
<p>You can now compile and execute the HelloWorld class by using these comm=
ands:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">&gt; mvn clean compile exec:java</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>You can point your browser to <code>http://localhost:8080</code> to see =
the <em>Hello World</em> page.
You can observe what Maven is doing for you behind the scenes by using the =
<code>mvn dependency:tree</code> command, which reveals the transitive depe=
ndency resolved and downloaded as:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">&gt; mvn dependency:tree
[INFO] Scanning for projects...
...
[INFO]
[INFO] --------------------------------------------------------------------=
----
[INFO] Building Jetty HelloWorld 0.1-SNAPSHOT
[INFO] --------------------------------------------------------------------=
----
[INFO]
[INFO] --- maven-dependency-plugin:2.8:tree (default-cli) @ hello-world ---
...
[INFO] org.example:hello-world:jar:0.1-SNAPSHOT
[INFO] \- org.eclipse.jetty:jetty-server:jar:9.3.9.v20160517:compile
[INFO]    +- javax.servlet:javax.servlet-api:jar:3.1.0:compile
[INFO]    +- org.eclipse.jetty:jetty-http:jar:9.3.9.v20160517:compile
[INFO]    |  \- org.eclipse.jetty:jetty-util:jar:9.3.9.v20160517:compile
[INFO]    \- org.eclipse.jetty:jetty-io:jar:9.3.9.v20160517:compile
[INFO] --------------------------------------------------------------------=
----
[INFO] BUILD SUCCESS
[INFO] --------------------------------------------------------------------=
----
[INFO] Total time: 4.145 s
[INFO] Finished at: 2016-08-01T13:46:42-04:00
[INFO] Final Memory: 15M/209M
[INFO] --------------------------------------------------------------------=
----</code></pre>
</div>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"developing-standard-webapp-with-jetty-and-maven">Developing a Sta=
ndard WebApp with Jetty and Maven</h4>
<div class=3D"paragraph">
<p>The previous section demonstrated how to use Maven with an application t=
hat embeds Jetty.
Now we will examine instead how to develop a standard webapp with Maven and=
 Jetty.
First create the Maven structure (you can use the maven webapp archetype in=
stead if you prefer):</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">&gt; mkdir JettyMavenHelloWarApp
&gt; cd JettyMavenHelloWebApp
&gt; mkdir -p src/main/java/org/example
&gt; mkdir -p src/main/webapp/WEB-INF</code></pre>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"creating-servlet">Creating a Servlet</h5>
<div class=3D"paragraph">
<p>Use an editor to create the file <code>src/main/java/org/example/HelloSe=
rvlet.java</code> with the following contents:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">p=
ackage org.example;

import java.io.IOException;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

public class HelloServlet extends HttpServlet
{
    protected void doGet(HttpServletRequest request, HttpServletResponse re=
sponse) throws ServletException, IOException
    {
        response.setContentType("text/html");
        response.setStatus(HttpServletResponse.SC_OK);
        response.getWriter().println("<h1>Hello Servlet</h1>");
        response.getWriter().println("session=3D" + request.getSession(true=
).getId());
    }
}</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>You need to declare this servlet in the deployment descriptor, so create=
 the file <code>src/main/webapp/WEB-INF/web.xml</code> and add the followin=
g contents:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><!-=
-?xml version=3D"1.0" encoding=3D"UTF-8"?-->
<web-app xmlns=3D"http://xmlns.jcp.org/xml/ns/javaee" xmlns:xsi=3D"http://w=
ww.w3.org/2001/XMLSchema-instance" xsi:schemalocation=3D"http://xmlns.jcp.o=
rg/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd" metada=
ta-complete=3D"false" version=3D"3.1">

  <servlet>
    <servlet-name>Hello</servlet-name>
    <servlet-class>org.example.HelloServlet</servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>Hello</servlet-name>
    <url-pattern>/hello/*</url-pattern>
  </servlet-mapping>

</web-app></code></pre>
</div>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"creating-plugin-pom-descriptor">Creating the POM Descriptor</h5>
<div class=3D"paragraph">
<p>The <code>pom.xml</code> file declares the project name and its dependen=
cies.
Use an editor to create the file <code>pom.xml</code> with the following co=
ntents in the <code>JettyMavenHelloWarApp</code> directory, noting particul=
arly the declaration of the <a href=3D"file:///home/tian/Downloads/b60/eboo=
k/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.htm=
l#jetty-maven-plugin">jetty-maven-plugin</a>:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><pr=
oject xmlns=3D"http://maven.apache.org/POM/4.0.0" xmlns:xsi=3D"http://www.w=
3.org/2001/XMLSchema-instance" xsi:schemalocation=3D"http://maven.apache.or=
g/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelversion>4.0.0</modelversion>
  <groupid>org.example</groupid>
  <artifactid>hello-world</artifactid>
  <version>0.1-SNAPSHOT</version>
  <packaging>war</packaging>
  <name>Jetty HelloWorld WebApp</name>

  <properties>
      <jettyversion>{VERSION}</jettyversion>
  </properties>

  <dependencies>
    <dependency>
      <groupid>javax.servlet</groupid>
      <artifactid>javax.servlet-api</artifactid>
      <version>3.1.0</version>
      <scope>provided</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupid>org.eclipse.jetty</groupid>
        <artifactid>jetty-maven-plugin</artifactid>
        <version>${jettyVersion}</version>
      </plugin>
    </plugins>
  </build>

</project></code></pre>
</div>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"building-and-running-web-application">Building and Running the We=
b Application</h5>
<div class=3D"paragraph">
<p>Now you can both build and run the web application without needing to as=
semble it into a war by using the <a href=3D"file:///home/tian/Downloads/b6=
0/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/ind=
ex.html#jetty-maven-plugin">jetty-maven-plugin</a> via the command:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">&gt; mvn jetty:run</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>You can see the static and dynamic content at <code>http://localhost:808=
0/hello</code></p>
</div>
<div class=3D"paragraph">
<p>There are a great deal of configuration options available for the jetty-=
maven-plugin to help you build and run your webapp.
The full reference is at <a href=3D"file:///home/tian/Downloads/b60/ebook/j=
etty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#j=
etty-maven-plugin">Configuring the Jetty Maven Plugin</a>.</p>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"building-war-file">Building a WAR file</h5>
<div class=3D"paragraph">
<p>You can create a Web Application Archive (WAR) file from the project wit=
h the command:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">&gt; mvn package</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The resulting war file is in the <code>target</code> directory and may b=
e deployed on any standard servlet server, including <a href=3D"file:///hom=
e/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/sr=
c/main/asciidoc/index.html#configuring-deployment">Jetty</a>.</p>
</div>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"jetty-maven-plugin">Configuring the Jetty Maven Plugin</h3>
<div class=3D"paragraph">
<p>The Jetty Maven plugin is useful for rapid development and testing.
You can add it to any webapp project that is structured according to the Ma=
ven defaults.
The plugin can then periodically scan your project for changes and automati=
cally redeploy the webapp if any are found.
This makes the development cycle more productive by eliminating the build a=
nd deploy steps: you use your IDE to make changes to the project, and the r=
unning web container automatically picks them up, allowing you to test them=
 straight away.</p>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock important">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Important</div>
</td>
<td class=3D"content">
You should use Maven 3.3+ for this plugin.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
<div class=3D"paragraph">
<p>While the Jetty Maven Plugin can be very useful for development we do no=
t recommend its use in a production capacity.
In order for the plugin to work it needs to leverage many internal Maven ap=
is and Maven itself it not a production deployment tool.
We recommend either the traditional distribution deployment approach or usi=
ng <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/index.html#advanced-embedding">emb=
edded Jetty.</a></p>
</div>
<div class=3D"sect3">
<h4 id=3D"get-up-and-running">Quick Start: Get Up and Running</h4>
<div class=3D"paragraph">
<p>First, add <code>jetty-maven-plugin</code> to your <code>pom.xml</code> =
definition:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><pl=
ugin>
  <groupid>org.eclipse.jetty</groupid>
  <artifactid>jetty-maven-plugin</artifactid>
  <version>{VERSION}</version>
</plugin></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Then, from the same directory as your root <code>pom.xml</code>, type:</=
p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">mvn jetty:run</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>This starts Jetty and serves up your project on <a href=3D"http://localh=
ost:8080/" class=3D"bare">http://localhost:8080/</a>.</p>
</div>
<div class=3D"paragraph">
<p>Jetty will continue to run until you stop it.
While it runs it periodically scans for changes to your project files
If you save changes and recompile your class files, Jetty redeploys your we=
bapp, and you can instantly test the changes that were just made.</p>
</div>
<div class=3D"paragraph">
<p>You can terminate the plugin with a <code>ctrl-c</code> in the terminal =
window where it is running.</p>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Note</div>
</td>
<td class=3D"content">
The classpath of the running Jetty instance and its deployed webapp are man=
aged by Maven, and may not be exactly what you expect.
For example: a webapp=E2=80=99s dependent jars might be referenced via the =
local repository, not the <code>WEB-INF/lib</code> directory.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"running-and-deploying">Supported Goals</h4>
<div class=3D"paragraph">
<p>The Jetty Maven plugin has a number of distinct Maven goals.
Arguably the most useful is the <code>run</code> goal which runs Jetty on a=
n unassembled webapp.
There are other goals which help you accomplish different tasks.
For example, you might need to run your webapp in a forked instance of Jett=
y rather than within the process running Maven; or you may need finer grain=
ed control over the maven lifecycle stage in which you wish to deploy your =
webapp.
There are different goals to accomplish these tasks, as well as several oth=
ers.</p>
</div>
<div class=3D"paragraph">
<p>To see a list of all goals supported by the Jetty Maven plugin, do:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">mvn jetty:help</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>To see the detailed list of parameters that can be configured for a part=
icular goal, in addition to its description, do:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">mvn jetty:help -Ddetail=3Dtrue -Dgoal=3D <goal name=3D""></goal></code><=
/pre>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"configuring-jetty-container">Configuring the Jetty Container</h4>
<div class=3D"paragraph">
<p>These configuration elements set up the Jetty environment in which your =
webapp executes.
They are common to most goals:</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">httpConnector</dt>
<dd>
<p>Optional.
If not specified, Jetty will create a <a href=3D"file:///home/tian/Download=
s/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc=
/%7BJDURL%7D/org/eclipse/jetty/server/ServerConnector.html">ServerConnector=
</a> instance listening on port 8080.
You can change this default port number by using the system property <code>=
jetty.http.port</code> on the command line, for example, <code>mvn -Djetty.=
http.port=3D9999 jetty:run</code>.
Alternatively, you can use this configuration element to set up the informa=
tion for the ServerConnector.
The following are the valid configuration sub-elements:</p>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">port</dt>
<dd>
<p>The port number for the connector to listen on.
By default it is 8080.</p>
</dd>
<dt class=3D"hdlist1">host</dt>
<dd>
<p>The particular interface for the connector to listen on.
By default, all interfaces.</p>
</dd>
<dt class=3D"hdlist1">name</dt>
<dd>
<p>The name of the connector, which is useful for <a href=3D"file:///home/t=
ian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/m=
ain/asciidoc/index.html#serving-webapp-from-particular-port">configuring co=
ntexts to respond only on particular connectors</a>.</p>
</dd>
<dt class=3D"hdlist1">idleTimeout</dt>
<dd>
<p>Maximum idle time for a connection.</p>
</dd>
<dt class=3D"hdlist1">soLinger</dt>
<dd>
<p>The socket linger time.</p>
<div class=3D"paragraph">
<p>You could instead configure the connectors in a standard <a href=3D"file=
:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documenta=
tion/src/main/asciidoc/index.html#jetty-xml-config">jetty xml config file</=
a> and put its location into the ` jettyXml` parameter.
Note that since jetty-9.0 it is no longer possible to configure a <a href=
=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-d=
ocumentation/src/main/asciidoc/index.html#maven-config-https">https connect=
or</a> directly in the pom.xml: you need to <a href=3D"file:///home/tian/Do=
wnloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/as=
ciidoc/index.html#maven-config-https">use jetty xml config files to do it</=
a>.</p>
</div>
</dd>
</dl>
</div>
</dd>
<dt class=3D"hdlist1">jettyXml</dt>
<dd>
<p>Optional.
A comma separated list of locations of <code>jetty xml</code> files to appl=
y in addition to any plugin configuration parameters.
You might use it if you have other webapps, handlers, specific types of con=
nectors etc., to deploy, or if you have other Jetty objects that you cannot=
 configure from the plugin.</p>
</dd>
<dt class=3D"hdlist1">scanIntervalSeconds</dt>
<dd>
<p>The pause in seconds between sweeps of the webapp to check for changes a=
nd automatically hot redeploy if any are detected.
<strong>By default this is 0, which disables hot deployment scanning.</stro=
ng>
A number greater than 0 enables it.</p>
</dd>
<dt class=3D"hdlist1">reload</dt>
<dd>
<p>Default value is "automatic", used in conjunction with a non-zero <stron=
g><em>`scanIntervalSeconds`</em></strong> causes automatic hot redeploy whe=
n changes are detected.
Set to "manual" instead to trigger scanning by typing a linefeed in the con=
sole running the plugin.
This might be useful when you are doing a series of changes that you want t=
o ignore until you=E2=80=99re done.
In that use, use the <code>reload</code> parameter.</p>
</dd>
<dt class=3D"hdlist1">dumpOnStart</dt>
<dd>
<p>Optional.
Default value is false.
If true, then jetty will dump out the server structure on start.</p>
</dd>
<dt class=3D"hdlist1">loginServices</dt>
<dd>
<p>Optional.
A list of <code>org.eclipse.jetty.security.LoginService</code> implementati=
ons. Note that there is no default realm.
If you use a realm in your <code>web.xml</code> you can specify a correspon=
ding realm here.
You could instead configure the login services in a jetty xml file and add =
its location to the <code>jettyXml</code> parameter.</p>
</dd>
<dt class=3D"hdlist1">requestLog</dt>
<dd>
<p>Optional.
An implementation of the <code>org.eclipse.jetty.server.RequestLog</code> r=
equest log interface.
An implementation that respects the NCSA format is available as <code>org.e=
clipse.jetty.server.NCSARequestLog</code>.
There are three other ways to configure the RequestLog:</p>
<div class=3D"ulist">
<ul>
<li>
<p>In a jetty xml config file, as specified in the <code>jettyXml</code> pa=
rameter.</p>
</li>
<li>
<p>In a context xml config file, as specified in the <code>contextXml</code=
> parameter.</p>
</li>
<li>
<p>In the <code>webApp</code> element.</p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>See <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty=
-9.4.x/jetty-documentation/src/main/asciidoc/index.html#configuring-jetty-r=
equest-logs">Configuring Request Logs</a> for more information.</p>
</div>
</dd>
<dt class=3D"hdlist1">server</dt>
<dd>
<p>Optional as of Jetty 9.3.1.
This would configure an instance of the <a href=3D"file:///home/tian/Downlo=
ads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciid=
oc/%7BSRCDIR%7D/jetty-server/src/main/java/org/eclipse/jetty/server/Server.=
java"><code>org.eclipse.jetty.server.Server</code></a> for the plugin to us=
e, however it is usually NOT necessary to configure this, as the plugin wil=
l automatically configure one for you.
In particular, if you use the jettyXml element, then you generally DON=E2=
=80=99T want to define this element, as you are probably using the jettyXml=
 file to configure up a Server with a special constructor argument, such as=
 a custom threadpool.
If you define both a server element AND use a jetty xml element which point=
s to a config file that has a line like <code>&lt;Configure id=3D"Server" c=
lass=3D"org.eclipse.jetty.server.Server"&gt;</code> then the the xml config=
uration will override what you configure for the server in the <code>pom.xm=
l</code>.</p>
</dd>
<dt class=3D"hdlist1">stopPort</dt>
<dd>
<p>Optional.
Port to listen on for stop commands.
Useful to use in conjunction with the <a href=3D"file:///home/tian/Download=
s/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc=
/index.html#jetty-stop-goal">stop</a> or <a href=3D"file:///home/tian/Downl=
oads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/ascii=
doc/index.html#jetty-run-forked-goal">run-forked</a> goals.</p>
</dd>
<dt class=3D"hdlist1">stopKey</dt>
<dd>
<p>Optional.
Used in conjunction with stopPort for stopping jetty.
Useful when used in conjunction with the stop or run-forked goals.</p>
</dd>
<dt class=3D"hdlist1">systemProperties</dt>
<dd>
<p>Optional.
Allows you to configure System properties for the execution of the plugin.
For more information, see <a href=3D"file:///home/tian/Downloads/b60/ebook/=
jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#=
sys_props">Setting System Properties</a>.</p>
</dd>
<dt class=3D"hdlist1">systemPropertiesFile</dt>
<dd>
<p>Optional.
A file containing System properties to set for the execution of the plugin.
By default, settings that you make here <strong>do not</strong> override an=
y system properties already set on the command line, by the JVM, or in the =
POM via <code>systemProperties</code>.
Read <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9=
.4.x/jetty-documentation/src/main/asciidoc/index.html#sys_props">Setting Sy=
stem Properties</a> for how to force overrides.</p>
</dd>
<dt class=3D"hdlist1">skip</dt>
<dd>
<p>Default is false.
If true, the execution of the plugin exits.
Same as setting the SystemProperty <code>-Djetty.skip</code> on the command=
 line.
This is most useful when configuring Jetty for execution during integration=
 testing and you want to skip the tests.</p>
</dd>
<dt class=3D"hdlist1">useProvidedScope</dt>
<dd>
<p>Default value is <code>false</code>.
If true, the dependencies with <code>&lt;scope&gt;provided&lt;/scope&gt;</c=
ode> are placed onto the <em>container classpath</em>.
Be aware that this is NOT the webapp classpath, as "provided" indicates tha=
t these dependencies would normally be expected to be provided by the conta=
iner.
You should very rarely ever need to use this.
Instead, you should copy the provided dependencies as explicit dependencies=
 of the <code>plugin</code> instead.</p>
</dd>
<dt class=3D"hdlist1">excludedGoals</dt>
<dd>
<p>Optional.
A list of Jetty plugin goal names that will cause the plugin to print an in=
formative message and exit.
Useful if you want to prevent users from executing goals that you know cann=
ot work with your project.</p>
</dd>
</dl>
</div>
<div class=3D"sect4">
<h5 id=3D"maven-config-https">Configuring a Https Connector</h5>
<div class=3D"paragraph">
<p>In order to configure an HTTPS connector, you need to use jetty xml conf=
iguration files.
This example uses files copied directly from the jetty distribution etc/ di=
rectory, although you can of course make up your own xml file or files.
We will use the following files:</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">jetty.xml</dt>
<dd>
<p>Sets up various characteristics of the <a href=3D"file:///home/tian/Down=
loads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asci=
idoc/%7BSRCDIR%7D/jetty-server/src/main/java/org/eclipse/jetty/server/Serve=
r.java"><code>org.eclipse.jetty.server.Server</code></a> instance for the p=
lugin to use.
Importantly, it sets up the <a href=3D"file:///home/tian/Downloads/b60/eboo=
k/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BSRCDIR=
%7D/jetty-server/src/main/java/org/eclipse/jetty/server/HttpConfiguration.j=
ava"><code>org.eclipse.jetty.server.HttpConfiguration</code></a> element th=
at we can refer to in subsequent xml files that configure the connectors.
Here=E2=80=99s the relevant section:</p>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml">   =
 <new id=3D"httpConfig" class=3D"org.eclipse.jetty.server.HttpConfiguration=
">
      <set name=3D"secureScheme">https</set>
      <set name=3D"securePort"><property name=3D"jetty.secure.port" default=
=3D"8443"></property></set>
      <set name=3D"outputBufferSize">32768</set>
      <set name=3D"requestHeaderSize">8192</set>
      <set name=3D"responseHeaderSize">8192</set>
      <set name=3D"sendServerVersion">true</set>
      <set name=3D"sendDateHeader">false</set>
      <set name=3D"headerCacheSize">512</set>

      <!-- Uncomment to enable handling of X-Forwarded- style headers
      <Call name=3D"addCustomizer">
        <Arg><New class=3D"org.eclipse.jetty.server.ForwardedRequestCustomi=
zer"/></Arg>
      </Call>
      -->
    </new></code></pre>
</div>
</div>
</dd>
<dt class=3D"hdlist1">jetty-ssl.xml</dt>
<dd>
<p>Set up ssl which will be used by the https connector.
Here=E2=80=99s the <code>jetty-ssl.xml</code> file from the jetty-distribut=
ion:</p>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml">Unr=
esolved directive in development/maven/jetty-maven-plugin.adoc - include::{=
SRCDIR}/jetty-server/src/main/config/etc/jetty-ssl.xml[]</code></pre>
</div>
</div>
</dd>
<dt class=3D"hdlist1">jetty-https.xml</dt>
<dd>
<p>Set up the https connector using the HttpConfiguration from <code>jetty.=
xml</code> and the ssl configuration from <code>jetty-ssl.xml</code>:</p>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml">Unr=
esolved directive in development/maven/jetty-maven-plugin.adoc - include::{=
SRCDIR}/jetty-server/src/main/config/etc/jetty-https.xml[]</code></pre>
</div>
</div>
</dd>
</dl>
</div>
<div class=3D"paragraph">
<p>Now you need to let the plugin know to apply the files above:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><pl=
ugin>
  <groupid>org.eclipse.jetty</groupid>
  <artifactid>jetty-maven-plugin</artifactid>
  <version>{VERSION}</version>
  <configuration>
    <jettyxml>jetty.xml,jetty-ssl.xml,jetty-https.xml</jettyxml>
  </configuration>
</plugin></code></pre>
</div>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock caution">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Caution</div>
</td>
<td class=3D"content">
Just like with an installed distribution of Jetty, the ordering of the xml =
files is significant.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
<div class=3D"paragraph">
<p>You can also use Jetty xml files to configure a http connector for the p=
lugin to use.
Here we use the same <code>jetty-http.xml</code> file from the Jetty distri=
bution:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml">Unr=
esolved directive in development/maven/jetty-maven-plugin.adoc - include::{=
SRCDIR}/jetty-server/src/main/config/etc/jetty-http.xml[]</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Now we add it to the list of configs for the plugin to apply:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><pl=
ugin>
  <groupid>org.eclipse.jetty</groupid>
  <artifactid>jetty-maven-plugin</artifactid>
  <version>{VERSION}</version>
  <configuration>
    <jettyxml>jetty.xml,jetty-http.xml,jetty-ssl.xml,jetty-https.xml</jetty=
xml>
  </configuration>
</plugin></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Alternatively, you can use the <a href=3D"file:///home/tian/Downloads/b6=
0/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/ind=
ex.html#maven-http-connector"><strong>httpConnector</strong></a> configurat=
ion element inside the pom instead as described above.</p>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"configuring-your-webapp">Configuring Your WebApp</h4>
<div class=3D"paragraph">
<p>These configuration parameters apply to your webapp.
They are common to almost all goals.</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">webApp</dt>
<dd>
<p>This is an instance of <a href=3D"file:///home/tian/Downloads/b60/ebook/=
jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D=
/org/eclipse/jetty/maven/plugin/JettyWebAppContext.html">org.eclipse.jetty.=
maven.plugin.JettyWebAppContext</a>, which is an extension to the class  <a=
 href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/je=
tty-documentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/webapp/We=
bAppContext.hml"><code>org.eclipse.jetty.webapp.WebAppContext</code></a>.
You can use any of the setter methods on this object to configure your weba=
pp.
Here are a few of the most useful ones:</p>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">contextPath</dt>
<dd>
<p>The context path for your webapp. By default, this is set to <code>/</co=
de>.
If using a custom value for this parameter, you probably want to include th=
e leading <code>/</code>, example <code>/mycontext</code>.</p>
</dd>
<dt class=3D"hdlist1">descriptor</dt>
<dd>
<p>The path to the <code>web.xml</code> file for your webapp.</p>
</dd>
<dt class=3D"hdlist1">defaultsDescriptor</dt>
<dd>
<p>The path to a <code>webdefault.xml</code> file that will be applied to y=
our webapp before the <code>web.xml</code>.
If you don=E2=80=99t supply one, Jetty uses a default file baked into the <=
code>jetty-webapp.jar</code>.</p>
</dd>
<dt class=3D"hdlist1">overrideDescriptor</dt>
<dd>
<p>The path to a <code>web.xml</code> file that Jetty applies after reading=
 your <code>web.xml</code>.
You can use this to replace or add configuration.</p>
</dd>
<dt class=3D"hdlist1">tempDirectory</dt>
<dd>
<p>The path to a dir that Jetty can use to expand or copy jars and jsp comp=
iles when your webapp is running.
The default is <code>${project.build.outputDirectory}/tmp</code>.</p>
</dd>
<dt class=3D"hdlist1">baseResource</dt>
<dd>
<p>The path from which Jetty serves static resources.
Defaults to <code>src/main/webapp</code>.</p>
</dd>
<dt class=3D"hdlist1">resourceBases</dt>
<dd>
<p>Use instead of <code>baseResource</code> if you have multiple directorie=
s from which you want to serve static content.
This is an array of directory names.</p>
</dd>
<dt class=3D"hdlist1">baseAppFirst</dt>
<dd>
<p>Defaults to "true".
Controls whether any overlaid wars are added before or after the original b=
ase resource(s) of the webapp.
See the section on <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.p=
roject-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#using-o=
verlaid-wars">overlaid wars</a> for more information.</p>
</dd>
<dt class=3D"hdlist1">containerIncludeJarPattern</dt>
<dd>
<p>Defaults to <code>.*/javax.servlet-[^/]*\.jar$|.*/servlet-api-[^/]*\.jar=
$|.*javax.servlet.jsp.jstl-[^/]*\.jar|.*taglibs-standard-impl-.*\.jar</code=
>.
This is a pattern that is applied to the names of the jars on the container=
=E2=80=99s classpath (ie the classpath of the plugin, not that of the webap=
p) that should be scanned for fragments, tlds, annotations etc.
This is analogous to the context attribute <a href=3D"file:///home/tian/Dow=
nloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asc=
iidoc/index.html#container-include-jar-pattern">org.eclipse.jetty.server.we=
bapp.ContainerIncludeJarPattern</a> that is documented <a href=3D"file:///h=
ome/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/=
src/main/asciidoc/index.html#container-include-jar-pattern">here</a>.
You can define extra patterns of jars that will be included in the scan.</p=
>
</dd>
<dt class=3D"hdlist1">webInfIncludeJarPattern</dt>
<dd>
<p>Defaults to matching <em>all</em> of the dependency jars for the webapp =
(ie the equivalent of WEB-INF/lib).
You can make this pattern more restrictive to only match certain jars by us=
ing this setter.
This is analogous to the context attribute <a href=3D"file:///home/tian/Dow=
nloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asc=
iidoc/index.html#web-inf-include-jar-pattern">org.eclipse.jetty.server.weba=
pp.WebInfIncludeJarPattern</a> that is documented <a href=3D"file:///home/t=
ian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/m=
ain/asciidoc/index.html#web-inf-include-jar-pattern">here</a>.</p>
</dd>
</dl>
</div>
</dd>
<dt class=3D"hdlist1">contextXml</dt>
<dd>
<p>The path to a context xml file that is applied to your webapp AFTER the =
<code>webApp</code> element.</p>
</dd>
</dl>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"jetty-run-goal">jetty:run</h4>
<div class=3D"paragraph">
<p>The <code>run</code> goal runs on a webapp that does not have to be buil=
t into a WAR.
Instead, Jetty deploys the webapp from its sources.
It looks for the constituent parts of a webapp in the Maven default project=
 locations, although you can override these in the plugin configuration.
For example, by default it looks for:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>resources in <code>${project.basedir}/src/main/webapp</code></p>
</li>
<li>
<p>classes in <code>${project.build.outputDirectory}</code></p>
</li>
<li>
<p><code>web.xml</code> in <code>${project.basedir}/src/main/webapp/WEB-INF=
/</code></p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>The plugin automatically ensures the classes are rebuilt and up-to-date =
before deployment.
If you change the source of a class and your IDE automatically compiles it =
in the background, the plugin picks up the changed class.</p>
</div>
<div class=3D"paragraph">
<p>You do not need to assemble the webapp into a WAR, saving time during th=
e development cycle.
Once invoked, you can configure the plugin to run continuously, scanning fo=
r changes in the project and automatically performing a hot redeploy when n=
ecessary.
Any changes you make are immediately reflected in the running instance of J=
etty, letting you quickly jump from coding to testing, rather than going th=
rough the cycle of: code, compile, reassemble, redeploy, test.</p>
</div>
<div class=3D"paragraph">
<p>Here is an example, which turns on scanning for changes every ten second=
s, and sets the webapp context path to <code>/test</code>:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><pl=
ugin>
  <groupid>org.eclipse.jetty</groupid>
  <artifactid>jetty-maven-plugin</artifactid>
  <version>{VERSION}</version>
  <configuration>
    <scanintervalseconds>10</scanintervalseconds>
    <webapp>
      <contextpath>/test</contextpath>
    </webapp>
  </configuration>
</plugin></code></pre>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"configuring-additional-parameters">Configuration</h5>
<div class=3D"paragraph">
<p>In addition to the <code>webApp</code> element that is common to most go=
als, the <code>jetty:run</code> goal supports:</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">classesDirectory</dt>
<dd>
<p>Location of your compiled classes for the webapp.
You should rarely need to set this parameter.
Instead, you should set <code>build outputDirectory</code> in your <code>po=
m.xml</code>.</p>
</dd>
<dt class=3D"hdlist1">testClassesDirectory</dt>
<dd>
<p>Location of the compiled test classes for your webapp. By default this i=
s <code>${project.build.testOutputDirectory}</code>.</p>
</dd>
<dt class=3D"hdlist1">useTestScope</dt>
<dd>
<p>If true, the classes from <code>testClassesDirectory</code> and dependen=
cies of scope "test" are placed first on the classpath.
By default this is false.</p>
</dd>
<dt class=3D"hdlist1">webAppSourceDirectory</dt>
<dd>
<p>By default, this is set to <code>${project.basedir}/src/main/webapp</cod=
e>.
If your static sources are in a different location, set this parameter acco=
rdingly.</p>
</dd>
<dt class=3D"hdlist1">jettyEnvXml</dt>
<dd>
<p>Optional.
Location of a <code>jetty-env.xml</code> file, which allows you to make JND=
I bindings that satisfy <code>env-entry</code>, <code>resource-env-ref</cod=
e>, and <code>resource-ref</code> linkages in the <code>web.xml</code> that=
 are scoped  only to the webapp and not shared with other webapps that you =
might be deploying at the same time (for example, by using a ` jettyConfig`=
 file).</p>
</dd>
<dt class=3D"hdlist1">scanTargets</dt>
<dd>
<p>Optional.
A list of files and directories to periodically scan in addition to those t=
he plugin automatically scans.</p>
</dd>
<dt class=3D"hdlist1">scanTargetPatterns</dt>
<dd>
<p>Optional.
If you have a long list of extra files you want scanned, it is more conveni=
ent to use pattern matching expressions to specify them instead of enumerat=
ing them with the <code>scanTargetsList</code> of <code>scanTargetPatterns<=
/code>, each consisting of a directory, and including and/or excluding para=
meters to specify the file matching patterns.</p>
</dd>
<dt class=3D"hdlist1">scanClassesPattern</dt>
<dd>
<p>Since 9.3.0.
Optional.
Include and exclude patterns that can be applied to the classesDirectory fo=
r the purposes of scanning, it does <strong>not</strong> affect the classpa=
th.
If a file or directory is excluded by the patterns then a change in that fi=
le (or subtree in the case of a directory) is ignored and will not cause th=
e webapp to redeploy.
Patterns are specified as a relative path using a glob-like syntax as descr=
ibed in the <a href=3D"http://docs.oracle.com/javase/8/docs/api/java/nio/fi=
le/FileSystem.html#getPathMatcher-java.lang.String-">javadoc</a> for <a hre=
f=3D"http://docs.oracle.com/javase/8/docs/api/java/nio/file/FileSystem.html=
#getPathMatcher-java.lang.String-">FileSystem.getPathMatcher</a>.</p>
</dd>
<dt class=3D"hdlist1">scanTestClassesPattern</dt>
<dd>
<p>Since 9.3.0.
Optional.
Include and exclude patterns that can be applied to the testClassesDirector=
y for the purposes of scanning, it does <strong>not</strong> affect the cla=
sspath.
If a file or directory is excluded by the patterns then a change in that fi=
le (or subtree in the case of a directory) is ignored and will not cause th=
e webapp to redeploy.
Patterns are specified as a relative path using a glob-like syntax as descr=
ibed in the <a href=3D"http://docs.oracle.com/javase/8/docs/api/java/nio/fi=
le/FileSystem.html#getPathMatcher-java.lang.String-">javadoc</a> for <a hre=
f=3D"http://docs.oracle.com/javase/8/docs/api/java/nio/file/FileSystem.html=
#getPathMatcher-java.lang.String-">FileSystem.getPathMatcher</a>.</p>
</dd>
</dl>
</div>
<div class=3D"paragraph">
<p>Here=E2=80=99s an example:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><pr=
oject>
...
  <plugins>
...
    <plugin>
      <groupid>org.eclipse.jetty</groupid>
      <artifactid>jetty-maven-plugin</artifactid>
      <version>{VERSION}</version>
      <configuration>
        <webappsourcedirectory>${project.basedir}/src/staticfiles</webappso=
urcedirectory>
        <webapp>
          <contextpath>/</contextpath>
          <descriptor>${project.basedir}/src/over/here/web.xml</descriptor>
          <jettyenvxml>${project.basedir}/src/over/here/jetty-env.xml</jett=
yenvxml>
        </webapp>
        <classesdirectory>${project.basedir}/somewhere/else</classesdirecto=
ry>
        <scanclassespattern>
          <excludes>
             <exclude>**/Foo.class</exclude>
          </excludes>
        </scanclassespattern>
        <scantargets>
          <scantarget>src/mydir</scantarget>
          <scantarget>src/myfile.txt</scantarget>
        </scantargets>
        <scantargetpatterns>
          <scantargetpattern>
            <directory>src/other-resources</directory>
            <includes>
              <include>**/*.xml</include>
              <include>**/*.properties</include>
            </includes>
            <excludes>
              <exclude>**/myspecial.xml</exclude>
              <exclude>**/myspecial.properties</exclude>
            </excludes>
          </scantargetpattern>
        </scantargetpatterns>
      </configuration>
    </plugin>
  </plugins>
</project></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>If, for whatever reason, you cannot run on an unassembled webapp, the go=
als <code>run-war</code> and <code>run-exploded</code> work on unassembled =
webapps.</p>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"running-assembled-webapp-as-war">jetty:run-war</h4>
<div class=3D"paragraph">
<p>This goal first packages your webapp as a WAR file and then deploys it t=
o Jetty.
If you set a non-zero <code>scanInterval</code>, Jetty watches your <code>p=
om.xml</code> and the WAR file; if either changes, it redeploys the war.</p=
>
</div>
<div class=3D"sect4">
<h5 id=3D"configuring-war">Configuration</h5>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">war</dt>
<dd>
<p>The location of the built WAR file. This defaults to <code>${project.bui=
ld.directory}/${project.build.finalName}.war</code>.
If this is not sufficient, set it to your custom location.</p>
</dd>
</dl>
</div>
<div class=3D"paragraph">
<p>Here=E2=80=99s how to set it:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><pr=
oject>
...
  <plugins>
...
    <plugin>
      <groupid>org.eclipse.jetty</groupid>
      <artifactid>jetty-maven-plugin</artifactid>
      <version>{VERSION}</version>
      <configuration>
        <war>${project.basedir}/target/mycustom.war</war>
      </configuration>
    </plugin>
  </plugins>
</project></code></pre>
</div>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"running-assembled-webapp-as-expanded-war">jetty:run-exploded</h4>
<div class=3D"paragraph">
<p>The run-exploded goal first assembles your webapp into an exploded WAR f=
ile and then deploys it to Jetty.
If you set a non-zero <code>scanInterval</code>, Jetty watches your <code>p=
om.xml,`WEB-INF/lib</code>, <code>WEB-INF/</code> and <code>WEB-INF/web.xml=
</code> for changes and redeploys when necessary.</p>
</div>
<div class=3D"sect4">
<h5 id=3D"configuring-exploded-war">Configuration</h5>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">war</dt>
<dd>
<p>The location of the exploded WAR.
This defaults to <code>${project.build.directory}/${project.build.finalName=
}</code>, but you can override the default by setting this parameter.</p>
</dd>
</dl>
</div>
<div class=3D"paragraph">
<p>Here=E2=80=99s how to set it:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><pr=
oject>
...
  <plugins>
...
    <plugin>
      <groupid>org.eclipse.jetty</groupid>
      <artifactid>maven-jetty-plugin</artifactid>
      <version>{VERSION}</version>
      <configuration>
        <war>${project.basedir}/target/myfunkywebapp</war>
      </configuration>
    </plugin>
  </plugins>
</project></code></pre>
</div>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"deploy-war-running-pre-assembled-war">jetty:deploy-war</h4>
<div class=3D"paragraph">
<p>This is basically the same as <code>jetty:run-war</code>, but without as=
sembling the WAR of the current module - you can nominate the location of a=
ny war to run.
Unlike <code>run-war</code>, the phase in which this plugin executes is not=
 bound to the "package" phase - you may bind it to any phase to use it.</p>
</div>
<div class=3D"sect4">
<h5 id=3D"_configuration_3">Configuration</h5>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">war</dt>
<dd>
<p>The location of the WAR file. This defaults to <code>${project.build.dir=
ectory}/${project.build.finalName}</code>, but you can override the default=
 by setting this parameter.</p>
</dd>
<dt class=3D"hdlist1">daemon</dt>
<dd>
<p>If true, this plugin will start Jetty but let the build continue.
This is useful if you want to start jetty as an execution binding in a part=
icular phase and then stop it in another.
Alternatively, you can set this parameter to false, in which case Jetty wil=
l block and you will need to use a ctrl-c to stop it.</p>
</dd>
</dl>
</div>
<div class=3D"paragraph">
<p>Here=E2=80=99s the configuration:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><pr=
oject>
...
  <plugins>
...
  <plugin>
    <groupid>org.eclipse.jetty</groupid>
    <artifactid>jetty-maven-plugin</artifactid>
    <version>{VERSION}</version>
    <configuration>
      <war>/opt/special/some-app.war</war>
      <stopkey>alpha</stopkey>
      <stopport>9099</stopport>
    </configuration>
    <executions>
      <execution>
        <id>start-jetty</id>
        <phase>test-compile</phase>
        <goals>
          <goal>deploy-war</goal>
        </goals>
      </execution>
      <execution>
        <id>stop-jetty</id>
        <phase>test</phase>
        <goals>
          <goal>stop</goal>
        </goals>
      </execution>
     </executions>
    </plugin>
  </plugins>
</project></code></pre>
</div>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"jetty-run-forked-goal">jetty:run-forked</h4>
<div class=3D"paragraph">
<p>This goal allows you to start the webapp in a new JVM, optionally passin=
g arguments to that new JVM.
This goal supports the same configuration parameters as the <code>jetty:run=
</code> goal with a couple of extras to help configure the forked process.<=
/p>
</div>
<div class=3D"sect4">
<h5 id=3D"_configuration_4">Configuration</h5>
<div class=3D"paragraph">
<p>The available configuration parameters - in addition to those for the <c=
ode>jetty:run</code> goal - are:</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">jvmArgs</dt>
<dd>
<p>Optional.
A string representing arbitrary arguments to pass to the forked JVM.</p>
</dd>
<dt class=3D"hdlist1">waitForChild</dt>
<dd>
<p>Default is <code>true</code>.
This causes the parent process to wait for the forked process to exit.
In this case you can use <code>ctrl-c</code> to terminate both processes.
It is more useful to set it to <code>false</code>, in which case the parent=
 process terminates whilst leaving the child process running.
You use the <code>jetty:stop</code> goal to stop the child process.</p>
</dd>
<dt class=3D"hdlist1">maxStartupLines</dt>
<dd>
<p>Default is <code>50</code>.
This is maximum number of lines the parent process reads from the child pro=
cess to receive an indication that the child has started.
If the child process produces an excessive amount of output on stdout you m=
ay need to increase this number.</p>
</dd>
</dl>
</div>
<div class=3D"paragraph">
<p>Some of the container configuration parameters are <strong>NOT</strong> =
available with this goal:</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">scanIntervalSeconds</dt>
<dd>
<p>Not supported.
The forked jetty will not monitor and redeploy the webapp.</p>
</dd>
<dt class=3D"hdlist1">reload</dt>
<dd>
<p>Not supported.
The forked jetty will not redeploy the webapp.</p>
</dd>
<dt class=3D"hdlist1">httpConnector</dt>
<dd>
<p>Not supported.
To define custom connectors use a jetty xml file instead.</p>
</dd>
<dt class=3D"hdlist1">loginServices</dt>
<dd>
<p>Not supported.
To define LoginServices use a jetty xml or context xml file instead.</p>
</dd>
<dt class=3D"hdlist1">requestLog</dt>
<dd>
<p>Not supported.
To define a RequestLog setup, use a jetty xml or context xml file instead.<=
/p>
</dd>
<dt class=3D"hdlist1">systemProperties</dt>
<dd>
<p>Not supported.
Use the <code>jvmArgs</code> parameter to pass system properties to the for=
ked process.</p>
</dd>
</dl>
</div>
<div class=3D"paragraph">
<p>To deploy your unassembled web app to Jetty running in a new JVM:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">mvn jetty:run-forked</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Jetty continues to execute until you either:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>Press <code>ctrl-c</code> in the terminal window to stop the plugin, whi=
ch also stops the forked JVM (only if you started with <code>waitForChild=
=3Dtrue</code>)</p>
</li>
<li>
<p>Use <code>jetty:stop</code> to stop the forked JVM, which also stops the=
 plugin.</p>
</li>
</ul>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Note</div>
</td>
<td class=3D"content">
If you want to set a custom port for the Jetty connector you need to specif=
y it in a <code>jetty xml</code> file rather than setting the connector and=
 port tags.
You can specify the location of the <code>jetty.xml</code> using the <code>=
jettyXml</code> parameter.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"jetty-start-goal">jetty:start</h4>
<div class=3D"paragraph">
<p>This goal is for use with an execution binding in your <code>pom.xml</co=
de>.
It is similar to the <code>jetty:run</code> goal, however it does NOT first=
 execute the build up until the <code>test-compile</code> phase to ensure t=
hat all necessary classes and files of the webapp have been generated.
This is most useful when you want to control the start and stop of Jetty vi=
a execution bindings in your <code>pom.xml</code>.</p>
</div>
<div class=3D"paragraph">
<p>For example, you can configure the plugin to start your webapp at the be=
ginning of your unit tests and stop at the end.
To do this, you need to set up a couple of <code>execution</code> scenarios=
 for the Jetty plugin.
You use the <code>pre-integration-test</code> and <code>post-integration-te=
st</code> Maven build phases to trigger the execution and termination of Je=
tty:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><pl=
ugin>
  <groupid>org.eclipse.jetty</groupid>
  <artifactid>jetty-maven-plugin</artifactid>
  <version>{VERSION}</version>
  <configuration>
    <scanintervalseconds>10</scanintervalseconds>
    <stopkey>foo</stopkey>
    <stopport>9999</stopport>
  </configuration>
  <executions>
    <execution>
      <id>start-jetty</id>
      <phase>pre-integration-test</phase>
      <goals>
        <goal>start</goal>
      </goals>
      <configuration>
        <scanintervalseconds>0</scanintervalseconds>
      </configuration>
    </execution>
    <execution>
      <id>stop-jetty</id>
      <phase>post-integration-test</phase>
       <goals>
         <goal>stop</goal>
       </goals>
     </execution>
  </executions>
</plugin></code></pre>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"jetty-stop-goal">jetty:stop</h4>
<div class=3D"paragraph">
<p>The stop goal stops a running instance of Jetty.
To use it, you need to configure the plugin with a special port number and =
key.
That same port number and key will also be used by the other goals that sta=
rt jetty.</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">stopPort</dt>
<dd>
<p>A port number for Jetty to listen on to receive a stop command to cause =
it to shutdown.</p>
</dd>
<dt class=3D"hdlist1">stopKey</dt>
<dd>
<p>A string value sent to the <code>stopPort</code> to validate the stop co=
mmand.</p>
</dd>
<dt class=3D"hdlist1">stopWait</dt>
<dd>
<p>The maximum time in seconds that the plugin will wait for confirmation t=
hat Jetty has stopped.
If false or not specified, the plugin does not wait for confirmation but ex=
its after issuing the stop command.</p>
</dd>
</dl>
</div>
<div class=3D"paragraph">
<p>Here=E2=80=99s a configuration example:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><pl=
ugin>
  <groupid>org.eclipse.jetty</groupid>
  <artifactid>jetty-maven-plugin</artifactid>
  <version>{VERSION}</version>
  <configuration>
    <stopport>9966</stopport>
    <stopkey>foo</stopkey>
    <stopwait>10</stopwait>
  </configuration>
</plugin></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Then, while Jetty is running (in another window), type:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">mvn jetty:stop</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The <code>stopPort</code> must be free on the machine you are running on=
.
If this is not the case, you will get an "Address already in use" error mes=
sage after the "Started ServerConnector =E2=80=A6=E2=80=8B" message.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"jetty-effective-web-xml">jetty:effective-web-xml</h4>
<div class=3D"paragraph">
<p>This goal calculates a synthetic <code>web.xml</code> (the "effective we=
b.xml") according to the rules of the Servlet Specification taking into acc=
ount all sources of discoverable configuration of web components in your ap=
plication: descriptors (<code>webdefault.xml</code>, <code>web.xml</code>, =
<code>web-fragment.xml`s, `web-override.xml</code>) and discovered annotati=
ons (<code>@WebServlet</code>, <code>@WebFilter</code>, <code>@WebListener<=
/code>).
Note that no programmatic declarations of servlets, filters and listeners c=
an be taken into account.
The effective <code>web.xml</code> from these combined sources is generated=
 and displayed as maven log output.
Other useful information about your webapp that is produced as part of the =
analysis is also stored as context parameters in the effective-web.xml.
The effective-web.xml can be used in conjunction with the <a href=3D"file:/=
//home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentati=
on/src/main/asciidoc/index.html#quickstart-webapp">Quickstart</a> feature t=
o quickly start your webapp (note that Quickstart is not appropriate for th=
e mvn jetty goals).</p>
</div>
<div class=3D"paragraph">
<p>The following configuration parameters allow you to save the file:</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">deleteOnExit</dt>
<dd>
<p>By default this is <code>true</code>.
If set to <code>false</code>, the effective web.xml is generated into a fil=
e called <code>effective-web.xml</code> in the build <code>target</code> di=
rectory.</p>
</dd>
<dt class=3D"hdlist1">effectiveWebXml</dt>
<dd>
<p>The full path name of a file into which you would like the effective web=
 xml generated.</p>
</dd>
</dl>
</div>
<div class=3D"paragraph">
<p>You can also generate the origin of each element into the effective web.=
xml file.
The origin is either a descriptor eg web.xml,web-fragment.xml,override-web.=
xml file, or an annotation eg @WebServlet.
Some examples of elements with origin attribute information are:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><li=
stener origin=3D"DefaultsDescriptor(file:///path/to/distro/etc/webdefault.x=
ml):21">
<listener origin=3D"WebDescriptor(file:///path/to/base/webapps/test-spec/WE=
B-INF/web.xml):22">
<servlet-class origin=3D"FragmentDescriptor(jar:file:///path/to/base/webapp=
s/test-spec/WEB-INF/lib/test-web-fragment.jar!/META-INF/web-fragment.xml):2=
3">
<servlet-class origin=3D"@WebServlet(com.acme.test.TestServlet):24"></servl=
et-class></servlet-class></listener></listener></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>To generate origin informatino, use the following configuration paramete=
rs on the  <code>webApp</code> element:</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">originAttribute</dt>
<dd>
<p>The name of the attribute that will contain the origin.
By default it is <code>origin</code>.</p>
</dd>
<dt class=3D"hdlist1">generateOrigin</dt>
<dd>
<p>False by default. If true, will force the generation of the originAttrib=
ute onto each element.</p>
</dd>
</dl>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"using-overlaid-wars">Using Overlaid wars</h4>
<div class=3D"paragraph">
<p>If your webapp depends on other war files, the<a href=3D"file:///home/ti=
an/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/ma=
in/asciidoc/index.html#jetty-run-goal">jetty:run</a> and <a href=3D"file://=
/home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentatio=
n/src/main/asciidoc/index.html#jetty-run-forked-goal">jetty:run-forked</a> =
goals are able to merge resources from all of them.
It can do so based on the settings of the <a href=3D"http://maven.apache.or=
g/plugins/maven-war-plugin/">maven-war-plugin</a>, or if your project does =
not use the <a href=3D"http://maven.apache.org/plugins/maven-war-plugin/">m=
aven-war-plugin</a> to handle the overlays, it can fall back to a simple al=
gorithm to determine the ordering of resources.</p>
</div>
<div class=3D"sect4">
<h5 id=3D"_with_maven_war_plugin">With maven-war-plugin</h5>
<div class=3D"paragraph">
<p>The maven-war-plugin has a rich set of capabilities for merging resource=
s.
The <code>jetty:run</code> and <code>jetty:run-forked</code> goals are able=
 to interpret most of them and apply them during execution of your unassemb=
led webapp.
This is probably best seen by looking at a concrete example.</p>
</div>
<div class=3D"paragraph">
<p>Suppose your webapp depends on the following wars:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><de=
pendency>
  <groupid>com.acme</groupid>
  <artifactid>X</artifactid>
  <type>war</type>
</dependency>
<dependency>
  <groupid>com.acme</groupid>
  <artifactid>Y</artifactid>
  <type>war</type>
</dependency></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Containing:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-text" data-lang=3D"text">W=
ebAppX:

 /foo.jsp
 /bar.jsp
 /WEB-INF/web.xml

WebAppY:

 /bar.jsp
 /baz.jsp
 /WEB-INF/web.xml
 /WEB-INF/special.xml</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>They are configured for the <a href=3D"http://maven.apache.org/plugins/m=
aven-war-plugin/overlays.html">maven-war-plugin</a>:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><pl=
ugin>
  <groupid>org.apache.maven.plugins</groupid>
  <artifactid>maven-war-plugin</artifactid>
  <version>{VERSION}</version>
  <configuration>
    <overlays>
      <overlay>
        <groupid>com.acme</groupid>
        <artifactid>X</artifactid>
        <excludes>
          <exclude>bar.jsp</exclude>
        </excludes>
      </overlay>
      <overlay>
        <groupid>com.acme</groupid>
        <artifactid>Y</artifactid>
        <excludes>
          <exclude>baz.jsp</exclude>
        </excludes>
      </overlay>
      <overlay>
      </overlay>
    </overlays>
  </configuration>
</plugin></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Then executing jetty:run would yield the following ordering of resources=
: <code>com.acme.X.war : com.acme.Y.war: ${project.basedir}/src/main/webapp=
</code>.
Note that the current project=E2=80=99s resources are placed last in the or=
dering due to the empty &lt;overlay/&gt; element in the maven-war-plugin.
You can either use that, or specify the <code>&lt;baseAppFirst&gt;false&lt;=
/baseAppFirst&gt;</code> parameter to the jetty-maven-plugin.</p>
</div>
<div class=3D"paragraph">
<p>Moreover, due to the <code>exclusions</code> specified above, a request =
for the resource ` bar.jsp` would only be satisfied from <code>com.acme.Y.w=
ar.</code>
Similarly as <code>baz.jsp</code> is excluded, a request for it would resul=
t in a 404 error.</p>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_without_maven_war_plugin">Without maven-war-plugin</h5>
<div class=3D"paragraph">
<p>The algorithm is fairly simple, is based on the ordering of declaration =
of the dependent wars, and does not support exclusions.
The configuration parameter <code>&lt;baseAppFirst&gt;</code> (see the sect=
ion on <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty=
-9.4.x/jetty-documentation/src/main/asciidoc/index.html#configuring-your-we=
bapp">Configuring Your Webapp</a> for more information) can be used to cont=
rol whether your webapp=E2=80=99s resources are placed first or last on the=
 resource path at runtime.</p>
</div>
<div class=3D"paragraph">
<p>For example, suppose our webapp depends on these two wars:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><de=
pendency>
  <groupid>com.acme</groupid>
  <artifactid>X</artifactid>
  <type>war</type>
</dependency>
<dependency>
  <groupid>com.acme</groupid>
  <artifactid>Y</artifactid>
  <type>war</type>
</dependency></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Suppose the webapps contain:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-text" data-lang=3D"text">W=
ebAppX:

 /foo.jsp
 /bar.jsp
 /WEB-INF/web.xml

WebAppY:

 /bar.jsp
 /baz.jsp
 /WEB-INF/web.xml
 /WEB-INF/special.xml</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Then our webapp has available these additional resources:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-text" data-lang=3D"text">/=
foo.jsp (X)
/bar.jsp (X)
/baz.jsp (Y)
/WEB-INF/web.xml (X)
/WEB-INF/special.xml (Y)</code></pre>
</div>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"configuring-security-settings">Configuring Security Settings</h4>
<div class=3D"paragraph">
<p>You can configure LoginServices in the plugin.
Here=E2=80=99s an example of setting up the HashLoginService for a webapp:<=
/p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><pl=
ugin>
  <groupid>org.eclipse.jetty</groupid>
  <artifactid>jetty-maven-plugin</artifactid>
  <version>{VERSION}</version>
  <configuration>
    <scanintervalseconds>10</scanintervalseconds>
    <webapp>
      <contextpath>/test</contextpath>
    </webapp>
    <loginservices>
      <loginservice implementation=3D"org.eclipse.jetty.security.HashLoginS=
ervice">
        <name>Test Realm</name>
        <config>${project.basedir}/src/etc/realm.properties</config>
      </loginservice>
    </loginservices>
  </configuration>
</plugin></code></pre>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"using-multiple-webapp-root-directories">Using Multiple Webapp Roo=
t Directories</h4>
<div class=3D"paragraph">
<p>If you have external resources that you want to incorporate in the execu=
tion of a webapp, but which are not assembled into war files, you can=E2=80=
=99t use the overlaid wars method described above, but you can tell Jetty t=
he directories in which these external resources are located.
At runtime, when Jetty receives a request for a resource, it searches all t=
he locations to retrieve the resource.
It=E2=80=99s a lot like the overlaid war situation, but without the war.</p=
>
</div>
<div class=3D"paragraph">
<p>Here is a configuration example:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><co=
nfiguration>
  <webapp>
    <contextpath>/${build.finalName}</contextpath>
    <baseresource implementation=3D"org.eclipse.jetty.util.resource.Resourc=
eCollection">
      <resourcesascsv>src/main/webapp,/home/johndoe/path/to/my/other/source=
,/yet/another/folder</resourcesascsv>
    </baseresource>
  </webapp>
</configuration></code></pre>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"running-more-than-one-webapp">Running More than One Webapp</h4>
<div class=3D"paragraph">
<p>You can use either a <code>jetty.xml</code> file to configure extra (pre=
-compiled) webapps that you want to deploy, or you can use the <code>&lt;co=
ntextHandlers&gt;</code> configuration element to do so.
If you want to deploy webapp A, and webapps B and C in the same Jetty insta=
nce:</p>
</div>
<div class=3D"paragraph">
<p>Putting the configuration in webapp A=E2=80=99s <code>pom.xml</code>:</p=
>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><pl=
ugin>
  <groupid>org.eclipse.jetty</groupid>
  <artifactid>jetty-maven-plugin</artifactid>
  <version>{VERSION}</version>
  <configuration>
    <scanintervalseconds>10</scanintervalseconds>
    <webapp>
      <contextpath>/test</contextpath>
    </webapp>
    <contexthandlers>
      <contexthandler implementation=3D"org.eclipse.jetty.maven.plugin.Jett=
yWebAppContext">
        <war>${project.basedir}../../B.war</war>
        <contextpath>/B</contextpath>
      </contexthandler>
      <contexthandler implementation=3D"org.eclipse.jetty.maven.plugin.Jett=
yWebAppContext">
        <war>${project.basedir}../../C.war</war>
        <contextpath>/C</contextpath>
      </contexthandler>
    </contexthandlers>
  </configuration>
</plugin></code></pre>
</div>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock important">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Important</div>
</td>
<td class=3D"content">
If the <code>ContextHandler</code> you are deploying is a webapp, it is <st=
rong>essential</strong> that you use an <code>org.eclipse.jetty.maven.plugi=
n.JettyWebAppContext</code> instance rather than a standard <code>org.eclip=
se.jetty.webapp.WebAppContext</code> instance.
Only the former will allow the webapp to function correctly in the maven en=
vironment.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
<div class=3D"paragraph">
<p>Alternatively, add a <code>jetty.xml</code> file to webapp A.
Copy the <code>jetty.xml</code> file from the Jetty distribution, and then =
add WebAppContexts for the other 2 webapps:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><re=
f refid=3D"Contexts">
  <call name=3D"addHandler">
    <arg>
      <new class=3D"org.eclipse.jetty.maven.plugin.JettyWebAppContext">
        <set name=3D"contextPath">/B</set>
        <set name=3D"war">../../B.war</set>
      </new>
    </arg>
  </call>
  <call>
    <arg>
      <new class=3D"org.eclipse.jetty.maven.plugin.JettyWebAppContext">
        <set name=3D"contextPath">/C</set>
        <set name=3D"war">../../C.war</set>
      </new>
    </arg>
  </call>
</ref></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Then configure the location of this <code>jetty.xml</code> file into web=
app A=E2=80=99s jetty plugin:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><pl=
ugin>
  <groupid>org.eclipse.jetty</groupid>
  <artifactid>jetty-maven-plugin</artifactid>
  <version>{VERSION}</version>
  <configuration>
    <scanintervalseconds>10</scanintervalseconds>
    <webapp>
      <contextpath>/test</contextpath>
    </webapp>
    <jettyxml>src/main/etc/jetty.xml</jettyxml>
  </configuration>
</plugin></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>For either of these solutions, the other webapps must already have been =
built, and they are not automatically monitored for changes.
You can refer either to the packed WAR file of the pre-built webapps or to =
their expanded equivalents.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"setting-system-properties">Setting System Properties</h4>
<div class=3D"paragraph">
<p>You can specify property name/value pairs that Jetty sets as System prop=
erties for the execution of the plugin.
This feature is useful to tidy up the command line and save a lot of typing=
.</p>
</div>
<div class=3D"paragraph">
<p>However, <strong>sometimes it is not possible to use this feature to set=
 System properties</strong> - sometimes the software component using the Sy=
stem property is already initialized by the time that maven runs (in which =
case you will need to provide the System property on the command line), or =
by the time that Jetty runs.
In the latter case, you can use the <a href=3D"http://www.mojohaus.org/">ma=
ven properties plugin</a> to define the system properties instead. Here=E2=
=80=99s an example that configures the logback logging system as the Jetty =
logger:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><pl=
ugin>
  <groupid>org.codehaus.mojo</groupid>
  <artifactid>properties-maven-plugin</artifactid>
  <version>1.0-alpha-2</version>
  <executions>
    <execution>
      <goals>
        <goal>set-system-properties</goal>
      </goals>
      <configuration>
        <properties>
          <property>
            <name>logback.configurationFile</name>
            <value>${project.baseUri}/resources/logback.xml</value>
          </property>
        </properties>
      </configuration>
    </execution>
  </executions>
</plugin></code></pre>
</div>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Note</div>
</td>
<td class=3D"content">
If a System property is already set (for example, from the command line or =
by the JVM itself), then by default these configured properties <strong>DO =
NOT</strong> override them (see below for use of the &lt;force&gt; paramete=
r).
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
<div class=3D"sect4">
<h5 id=3D"specifying-properties-in-pom">Specifying System Properties in the=
 POM</h5>
<div class=3D"paragraph">
<p>Here=E2=80=99s an example of how to specify System properties in the POM=
:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><pl=
ugin>
  <groupid>org.eclipse.jetty</groupid>
  <artifactid>jetty-maven-plugin</artifactid>
  <configuration>
    <systemproperties>
      <systemproperty>
        <name>fooprop</name>
        <value>222</value>
      </systemproperty>
    </systemproperties>
    <webapp>
      <contextpath>/test</contextpath>
    </webapp>
  </configuration>
</plugin></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>To change the default behavior so that these system properties override =
those on the command line, use the <code>&lt;force&gt;</code> parameter:</p=
>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><pl=
ugin>
  <groupid>org.eclipse.jetty</groupid>
  <artifactid>jetty-maven-plugin</artifactid>
  <configuration>
    <systemproperties>
      <force>true</force>
      <systemproperty>
       <name>fooprop</name>
       <value>222</value>
     </systemproperty>
    </systemproperties>
    <webapp>
      <contextpath>/test</contextpath>
    </webapp>
  </configuration>
</plugin></code></pre>
</div>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"specifying-properties-in-file">Specifying System Properties in a =
File</h5>
<div class=3D"paragraph">
<p>You can also specify your System properties in a file.
System properties you specify in this way <strong>do not</strong> override =
System properties that set on the command line, by the JVM, or directly in =
the POM via <code>systemProperties</code>.</p>
</div>
<div class=3D"paragraph">
<p>Suppose we have a file called <code>mysys.props</code> which contains th=
e following:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-text" data-lang=3D"text">f=
ooprop=3D222</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>This can be configured on the plugin like so:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><pl=
ugin>
  <groupid>org.eclipse.jetty</groupid>
  <artifactid>jetty-maven-plugin</artifactid>
  <configuration>
    <systempropertiesfile>${project.basedir}/mysys.props</systempropertiesf=
ile>
    <webapp>
      <contextpath>/test</contextpath>
    </webapp>
  </configuration>
</plugin></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>You can instead specify the file by setting the System property <code>je=
tty.systemPropertiesFile</code> on the command line.</p>
</div>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"jetty-maven-scanning">Files Scanned by the Jetty Maven Plugin</h3=
>
<div class=3D"paragraph">
<p>If you set a non zero <code>scanInterval</code> <a href=3D"file:///home/=
tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/=
main/asciidoc/index.html#jetty-maven-plugin">configuration parameter</a>, t=
he <code>jetty-maven-plugin</code> will scan certain files every <code>scan=
Interval</code> seconds for changes, and redeploy the webapp if necessary.
The files that are scanned depend on the goal being executed.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"scanner-matrix">Scanner Matrix</h4>
<table class=3D"tableblock frame-all grid-all spread">
<colgroup>
<col style=3D"width: 50%;">
<col style=3D"width: 50%;">
</colgroup>
<thead>
<tr>
<th class=3D"tableblock halign-left valign-top">Goal</th>
<th class=3D"tableblock halign-left valign-top">Files</th>
</tr>
</thead>
<tbody>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><a =
href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jet=
ty-documentation/src/main/asciidoc/index.html#jetty-run-goal">jetty:run</a>=
</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">pom=
.xml, &lt;dependencies&gt;, &lt;classesDirectory&gt;, &lt;testClassesDirect=
ory&gt;, &lt;webXml&gt; or &lt;webAppSourceDirectory&gt;/WEB-INF/web.xml, &=
lt;jettyEnvXml&gt; or &lt;webAppSourceDirectory&gt;/WEB-INF/jetty-web.xml, =
&lt;webAppSourceDirectory&gt;/WEB-INF/jetty-web.xml, &lt;scanTargets&gt;, &=
lt;scanTargetPatterns&gt;, any <a href=3D"file:///home/tian/Downloads/b60/e=
book/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJDU=
RL%7D/org/eclipse/jetty/webapp/WebAppContext.html#setDefaultsDescriptor%28j=
ava.lang.String%29">defaultsDescriptor</a> for the webapp, any <a href=3D"f=
ile:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-docume=
ntation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/webapp/WebAppContex=
t.html#setOverrideDescriptor%28java.lang.String%29">overrideDescriptor</a> =
for the webapp</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><a =
href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jet=
ty-documentation/src/main/asciidoc/index.html#running-assembled-webapp-as-w=
ar">jetty:run-war</a></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">pom=
.xml, &lt;war&gt;</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><a =
href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jet=
ty-documentation/src/main/asciidoc/index.html#running-assembled-webapp-as-e=
xpanded-war">jetty:run-exploded</a></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">pom=
.xml, &lt;war&gt;/WEB-INF/web.xml, &lt;war&gt;/WEB-INF/jetty-web.xml, &lt;w=
ar&gt;/WEB-INF/jetty-env.xml,&lt;war&gt;/WEB-INF/classes, &lt;war&gt;/WEB-I=
NF/lib</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><a =
href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jet=
ty-documentation/src/main/asciidoc/index.html#deploy-war-running-pre-assemb=
led-war">jetty:deploy-war</a></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">pom=
.xml, &lt;war&gt;</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><a =
href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jet=
ty-documentation/src/main/asciidoc/index.html#jetty-run-forked-goal">jetty:=
run-forked</a></p></td>
<td class=3D"tableblock halign-left valign-top"></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><a =
href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jet=
ty-documentation/src/main/asciidoc/index.html#jetty-start-goal">jetty:start=
</a></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">pom=
.xml, &lt;dependencies&gt; from the pom, &lt;classesDirectory&gt;, &lt;test=
ClassesDirectory&gt;, &lt;webXml&gt; or &lt;webAppSourceDirectory&gt;/WEB-I=
NF/web.xml, &lt;jettyEnvXml&gt; or &lt;webAppSourceDirectory&gt;/WEB-INF/je=
tty-web.xml, &lt;webAppSourceDirectory&gt;/WEB-INF/jetty-web.xml, &lt;scanT=
argets&gt;, &lt;scanTargetPatterns&gt;, any <a href=3D"file:///home/tian/Do=
wnloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/as=
ciidoc/%7BJDURL%7D/org/eclipse/jetty/webapp/WebAppContext.html#setDefaultsD=
escriptor%28java.lang.String%29">defaultsDescriptor</a> for the webapp, any=
 <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x=
/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/webapp=
/WebAppContext.html#setOverrideDescriptor%28java.lang.String%29">overrideDe=
scriptor</a> for the webapp</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><a =
href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jet=
ty-documentation/src/main/asciidoc/index.html#jetty-stop-goal">jetty:stop</=
a></p></td>
<td class=3D"tableblock halign-left valign-top"></td>
</tr>
</tbody>
</table>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"jetty-jspc-maven-plugin">Jetty Jspc Maven Plugin</h3>
<div class=3D"paragraph">
<p>This plugin will help you pre-compile your jsps and works in conjunction=
 with the Maven war plugin to put them inside an assembled war.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"jspc-config">Configuration</h4>
<div class=3D"paragraph">
<p>Here=E2=80=99s the basic setup required to put the jspc plugin into your=
 build:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><pl=
ugin>
  <groupid>org.eclipse.jetty</groupid>
   <artifactid>jetty-jspc-maven-plugin</artifactid>
   <version>{VERSION}</version>
   <executions>
     <execution>
       <id>jspc</id>
       <goals>
         <goal>jspc</goal>
       </goals>
       <configuration>
       </configuration>
     </execution>
   </executions>
 </plugin></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The configurable parameters are as follows:</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">webXmlFragment</dt>
<dd>
<p>Default value: <code>$\{project.basedir}/target/webfrag.xml</code></p>
<div class=3D"paragraph">
<p>File into which to generate the servlet declarations.
Will be merged with an existing <code>web.xml</code>.</p>
</div>
</dd>
<dt class=3D"hdlist1">webAppSourceDirectory</dt>
<dd>
<p>Default value: <code>$\{project.basedir}/src/main/webapp</code></p>
<div class=3D"paragraph">
<p>Root of resources directory where jsps, tags etc are located.</p>
</div>
</dd>
<dt class=3D"hdlist1">webXml</dt>
<dd>
<p>Default value: <code>$\{project.basedir}/src/main/webapp/WEB-INF/web.xml=
</code></p>
<div class=3D"paragraph">
<p>The web.xml file to use to merge with the generated fragments.</p>
</div>
</dd>
<dt class=3D"hdlist1">includes</dt>
<dd>
<p>Default value: <code>**\/*.jsp, **\/*.jspx</code></p>
<div class=3D"paragraph">
<p>The comma separated list of patterns for file extensions to be processed=
.</p>
</div>
</dd>
<dt class=3D"hdlist1">excludes</dt>
<dd>
<p>Default value: <code>**\/.svn\/**</code></p>
<div class=3D"paragraph">
<p>The comma separated list of patterns for file extensions to be skipped.<=
/p>
</div>
</dd>
<dt class=3D"hdlist1">classesDirectory</dt>
<dd>
<p>Default value: <code>$\{project.build.outputDirectory}</code></p>
<div class=3D"paragraph">
<p>Location of classes for the webapp.</p>
</div>
</dd>
<dt class=3D"hdlist1">generatedClasses</dt>
<dd>
<p>Default value: <code>$\{project.build.outputDirectory}</code></p>
<div class=3D"paragraph">
<p>Location to put the generated classes for the jsps.</p>
</div>
</dd>
<dt class=3D"hdlist1">insertionMarker</dt>
<dd>
<p>Default value: <em>none</em></p>
<div class=3D"paragraph">
<p>A marker string in the src <code>web.xml</code> file which indicates whe=
re to merge in the generated web.xml fragment.
Note that the marker string will NOT be preserved during the insertion.
Can be left blank, in which case the generated fragment is inserted just be=
fore the line containing <code>&lt;/web-app&gt;</code>.</p>
</div>
</dd>
<dt class=3D"hdlist1">useProvidedScope</dt>
<dd>
<p>Default value: false</p>
<div class=3D"paragraph">
<p>If true, jars of dependencies marked with &lt;scope&gt;provided&lt;/scop=
e&gt; will be placed on the compilation classpath.</p>
</div>
</dd>
<dt class=3D"hdlist1">mergeFragment</dt>
<dd>
<p>Default value: true</p>
<div class=3D"paragraph">
<p>Whether or not to merge the generated fragment file with the source web.=
xml.
The merged file will go into the same directory as the webXmlFragment.</p>
</div>
</dd>
<dt class=3D"hdlist1">keepSources</dt>
<dd>
<p>Default value: false</p>
<div class=3D"paragraph">
<p>If true, the generated .java files are not deleted at the end of process=
ing.</p>
</div>
</dd>
<dt class=3D"hdlist1">sourceVersion</dt>
<dd>
<p>Introduced in Jetty 9.3.6.
Java version of jsp source files.
Defaults to 1.7.</p>
</dd>
<dt class=3D"hdlist1">targetVersion</dt>
<dd>
<p>Introduced in Jetty 9.3.6.
Java version of class files generated from jsps.
Defaults to 1.7.</p>
</dd>
<dt class=3D"hdlist1">tldJarNamePatterns</dt>
<dd>
<p>Default value: <code>.*taglibs[^/]*\.jar|.*jstl-impl[^/]*\.jar$</code></=
p>
<div class=3D"paragraph">
<p>Patterns of jars on the <em>system</em> (ie container) path that contain=
 tlds.
Use | to separate each pattern.</p>
</div>
</dd>
<dt class=3D"hdlist1">jspc</dt>
<dd>
<p>Default value: the <code>org.apache.jasper.JspC</code> instance being co=
nfigured.</p>
<div class=3D"paragraph">
<p>The JspC class actually performs the pre-compilation.
All setters on the JspC class are available.
You can download the javadoc <a href=3D"http://central.maven.org/maven2/org=
/glassfish/web/javax.servlet.jsp/2.3.2/javax.servlet.jsp-2.3.2-javadoc.jar"=
>here</a>.</p>
</div>
</dd>
</dl>
</div>
<div class=3D"paragraph">
<p>Taking all the default settings, here=E2=80=99s how to configure the war=
 plugin to use the generated <code>web.xml</code> that includes all of the =
jsp servlet declarations:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><pl=
ugin>
  <groupid>org.apache.maven.plugins</groupid>
  <artifactid>maven-war-plugin</artifactid>
  <configuration>
    <webxml>${project.basedir}/target/web.xml</webxml>
  </configuration>
</plugin></code></pre>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"jspc-production-precompile">Precompiling only for Production Buil=
d</h4>
<div class=3D"paragraph">
<p>As compiling jsps is usually done during preparation for a production re=
lease and not usually done during development, it is more convenient to put=
 the plugin setup inside a &lt;profile&gt; which which can be deliberately =
invoked during prep for production.</p>
</div>
<div class=3D"paragraph">
<p>For example, the following profile will only be invoked if the flag <cod=
e>-Dprod</code> is present on the run line:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><pr=
ofiles>
    <profile>
      <id>prod</id>
      <activation>
        <property><name>prod</name></property>
      </activation>
      <build>
      <plugins>
        <plugin>
          <groupid>org.eclipse.jetty</groupid>
          <artifactid>jetty-jspc-maven-plugin</artifactid>
          <version>{VERSION}</version>
          <!-- put your configuration in here -->
        </plugin>
        <plugin>
          <groupid>org.apache.maven.plugins</groupid>
          <artifactid>maven-war-plugin</artifactid>
          <!-- put your configuration in here -->
        </plugin>
      </plugins>
      </build>
    </profile>
  </profiles></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The following invocation would cause your code to be compiled, the jsps =
to be compiled, the &lt;servlet&gt; and &lt;servlet-mapping&gt;s inserted i=
n the <code>web.xml</code> and your webapp assembled into a war:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">$ mvn -Dprod package</code></pre>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"jspc-overlay-precompile">Precompiling Jsps with Overlaid Wars</h4=
>
<div class=3D"paragraph">
<p>Precompiling jsps with an overlaid war requires a bit more configuration=
.
This is because you need to separate the steps of unpacking the overlaid wa=
r and then repacking the final target war so the jetty-jspc-maven-plugin ha=
s the opportunity to access the overlaid resources.</p>
</div>
<div class=3D"paragraph">
<p>In the example we=E2=80=99ll show, we will use an overlaid war.
The overlaid war will provide the <code>web.xml</code> file but the jsps wi=
ll be in <code>src/main/webapp</code> (i.e. part of the project that uses t=
he overlay).
We will unpack the overlaid war file, compile the jsps and merge their serv=
let definitions into the extracted <code>web.xml</code>, then pack everythi=
ng into a war.</p>
</div>
<div class=3D"paragraph">
<p>Here=E2=80=99s an example configuration of the war plugin that separate =
those phases into an unpack phase, and then a packing phase:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><pl=
ugin>
    <artifactid>maven-war-plugin</artifactid>
    <executions>
      <execution>
        <id>unpack</id>
        <goals><goal>exploded</goal></goals>
        <phase>generate-resources</phase>
        <configuration>
          <webappdirectory>target/foo</webappdirectory>
          <overlays>
            <overlay>
            <overlay>
              <groupid>org.eclipse.jetty</groupid>
              <artifactid>test-jetty-webapp</artifactid>
            </overlay>
          </overlay></overlays>
        </configuration>
      </execution>
      <execution>
        <id>pack</id>
        <goals><goal>war</goal></goals>
        <phase>package</phase>
        <configuration>
          <warsourcedirectory>target/foo</warsourcedirectory>
          <webxml>target/web.xml</webxml>
        </configuration>
      </execution>
    </executions>
</plugin></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Now you also need to configure the <code>jetty-jspc-maven-plugin</code> =
so that it can use the web.xml that was extracted by the war unpacking and =
merge in the generated definitions of the servlets.
This is in <code>target/foo/WEB-INF/web.xml</code>.
Using the default settings, the <code>web.xml</code> merged with the jsp se=
rvlet definitions will be put into <code>target/web.xml</code>.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><pl=
ugin>
    <groupid>org.eclipse.jetty</groupid>
     <artifactid>jetty-jspc-maven-plugin</artifactid>
     <version>{VERSION}</version>
     <executions>
       <execution>
         <id>jspc</id>
         <goals>
           <goal>jspc</goal>
         </goals>
         <configuration>
            <webxml>target/foo/WEB-INF/web.xml</webxml>
            <includes>**/*.foo</includes>
            <excludes>**/*.fff</excludes>
        </configuration>
      </execution>
    </executions>
</plugin></code></pre>
</div>
</div>
</div>
</div>
</div>
</div>
<div class=3D"sect1">
<h2 id=3D"ant-and-jetty">Ant and Jetty</h2>
<div class=3D"sectionbody">
<div class=3D"paragraph">
<p>This chapter explains how to use Jetty with Ant and the Jetty Ant tasks.=
</p>
</div>
<div class=3D"sect2">
<h3 id=3D"jetty-ant">Ant Jetty Plugin</h3>
<div class=3D"paragraph">
<p>The Ant Jetty plugin is a part of Jetty 9 under the <code>jetty-ant</cod=
e> module.
This plugin makes it possible to start a Jetty web server directly from the=
 Ant build script, and to embed the Jetty web server inside your build proc=
ess.
Its purpose is to provide almost the same functionality as the Jetty plugin=
 for Maven: dynamic application reloading, working directly on web applicat=
ion sources, and tightly integrating with the build system.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><de=
pendency>
   <groupid>org.eclipse.jetty</groupid>
   <artifactid>jetty-ant</artifactid>
 </dependency></code></pre>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"jetty-ant-preparation">Preparing Your Project</h4>
<div class=3D"paragraph">
<p>To set up your project for Ant to run Jetty, you need a Jetty distributi=
on and the jetty-ant Jar:</p>
</div>
<div class=3D"olist arabic">
<ol class=3D"arabic">
<li>
<p><a href=3D"https://www.eclipse.org/jetty/download.html">Download</a> a J=
etty distribution and unpack it in the local filesystem.</p>
</li>
<li>
<p><a href=3D"http://central.maven.org/maven2/org/eclipse/jetty/jetty-ant/"=
>Get</a> the jetty-ant Jar.</p>
</li>
<li>
<p>Make a directory in your project called <code>jetty-lib/</code>.</p>
</li>
<li>
<p>Copy all of the Jars in your Jetty distribution=E2=80=99s <code>lib</cod=
e> directory, and all its subdirectories, into your new <code>jetty-lib</co=
de> dir.
When copying the Jars, <em>don=E2=80=99t</em> preserve the Jetty distributi=
on=E2=80=99s lib dir hierarchy =E2=80=93 all the jars should be directly in=
side your ` jetty-lib` dir.</p>
</li>
<li>
<p>Also copy the jetty-ant Jar you downloaded earlier into the <code>jetty-=
lib</code> dir.</p>
</li>
<li>
<p>Make a directory in your project called <code>jetty-temp</code>.</p>
</li>
</ol>
</div>
<div class=3D"paragraph">
<p>Now you=E2=80=99re ready to edit or create your Ant <code>build.xml</cod=
e> file.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_preparing_the_code_build_xml_code_file">Preparing the <code>buil=
d.xml</code> file</h4>
<div class=3D"paragraph">
<p>Begin with an empty <code>build.xml</code>:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><pr=
oject name=3D"Jetty-Ant integration test" basedir=3D".">
</project></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Add a <code>&lt;taskdef&gt;</code> that imports all available Jetty task=
s:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><pr=
oject name=3D"Jetty-Ant integration test" basedir=3D".">

  <path id=3D"jetty.plugin.classpath">
     <fileset dir=3D"jetty-lib" includes=3D"*.jar">
  </fileset></path>

  <taskdef classpathref=3D"jetty.plugin.classpath" resource=3D"tasks.proper=
ties" loaderref=3D"jetty.loader">

</taskdef></project></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Now you are ready to add a new target for running Jetty:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><pr=
oject name=3D"Jetty-Ant integration test" basedir=3D".">

  <path id=3D"jetty.plugin.classpath">
    <fileset dir=3D"jetty-lib" includes=3D"*.jar">
  </fileset></path>

  <taskdef classpathref=3D"jetty.plugin.classpath" resource=3D"tasks.proper=
ties" loaderref=3D"jetty.loader">

  <target name=3D"jetty.run">
    <jetty.run>
  </jetty.run></target>

</taskdef></project></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>This is the minimal configuration you need. You can now start Jetty on t=
he default port of 8080.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_starting_jetty_via_ant">Starting Jetty via Ant</h4>
<div class=3D"paragraph">
<p>At the command line enter:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">&gt; ant jetty.run</code></pre>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_configuring_the_jetty_container">Configuring the Jetty Container=
</h4>
<div class=3D"paragraph">
<p>A number of configuration options can help you set up the Jetty environm=
ent so that your web application has all the resources it needs:</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">ports and connectors</dt>
<dd>
<p>To configure the port that Jetty starts on you need to define a connecto=
r.
First you need to configure a <code>&lt;typedef&gt;</code> for the Connecto=
r class and then define the connector in the Jetty tags:</p>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><pr=
oject name=3D"Jetty-Ant integration test" basedir=3D".">

  <path id=3D"jetty.plugin.classpath">
    <fileset dir=3D"jetty-lib" includes=3D"*.jar">
  </fileset></path>

  <taskdef classpathref=3D"jetty.plugin.classpath" resource=3D"tasks.proper=
ties" loaderref=3D"jetty.loader">

  <typedef name=3D"connector" classname=3D"org.eclipse.jetty.ant.types.Conn=
ector" classpathref=3D"jetty.plugin.classpath" loaderref=3D"jetty.loader">

  <target name=3D"jetty.run">
    <jetty.run>
      <connectors>
        <connector port=3D"8090">
      </connector></connectors>
    </jetty.run>
  </target>

</typedef></taskdef></project></code></pre>
</div>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock tip">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Tip</div>
</td>
<td class=3D"content">
You can set the port to 0, which starts the Jetty server connector on an ar=
bitrary available port.
You can then access these values from system properties <code>jetty.ant.ser=
ver.port</code> and <code>jetty.ant.server.host</code>.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
</dd>
<dt class=3D"hdlist1">login services</dt>
<dd>
<p>If your web application requires authentication and authorization servic=
es, you can configure these on the Jetty container.
Here=E2=80=99s an example of how to set up an <a href=3D"file:///home/tian/=
Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/=
asciidoc/%7BJDURL%7D/org/eclipse/jetty/security/HashLoginService.html">org.=
eclipse.jetty.security.HashLoginService</a>:</p>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><pr=
oject name=3D"Jetty-Ant integration test" basedir=3D".">

  <path id=3D"jetty.plugin.classpath">
    <fileset dir=3D"jetty-lib" includes=3D"*.jar">
  </fileset></path>

 <taskdef classpathref=3D"jetty.plugin.classpath" resource=3D"tasks.propert=
ies" loaderref=3D"jetty.loader">

 <typedef name=3D"hashLoginService" classname=3D"org.eclipse.jetty.security=
.HashLoginService" classpathref=3D"jetty.plugin.classpath" loaderref=3D"jet=
ty.loader">

  <target name=3D"jetty.run">
    <jetty.run>
      <loginservices>
        <hashloginservice name=3D"Test Realm" config=3D"${basedir}/realm.pr=
operties">
      </hashloginservice></loginservices>
    </jetty.run>
  </target>

</typedef></taskdef></project></code></pre>
</div>
</div>
</dd>
<dt class=3D"hdlist1">request log</dt>
<dd>
<p>The <code>requestLog</code> option allows you to specify a request logge=
r for the Jetty instance.
You can either use the <a href=3D"file:///home/tian/Downloads/b60/ebook/jet=
ty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/or=
g/eclipse/jetty/server/NCSARequestLog.html">org.eclipse.jetty.server.NCSARe=
questLog</a> class, or supply the name of your custom class:</p>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><pr=
oject name=3D"Jetty-Ant integration test" basedir=3D".">

  <path id=3D"jetty.plugin.classpath">
    <fileset dir=3D"jetty-lib" includes=3D"*.jar">
  </fileset></path>

 <taskdef classpathref=3D"jetty.plugin.classpath" resource=3D"tasks.propert=
ies" loaderref=3D"jetty.loader">

  <target name=3D"jetty.run">
    <jetty.run requestlog=3D"com.acme.MyFancyRequestLog">
    </jetty.run>
  </target>

</taskdef></project></code></pre>
</div>
</div>
</dd>
<dt class=3D"hdlist1">temporary directory</dt>
<dd>
<p>You can configure a directory as a temporary file store for uses such as=
 expanding files and compiling JSPs by supplying the <code>tempDirectory</c=
ode> option:</p>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><pr=
oject name=3D"Jetty-Ant integration test" basedir=3D".">

  <path id=3D"jetty.plugin.classpath">
    <fileset dir=3D"jetty-lib" includes=3D"*.jar">
  </fileset></path>

 <taskdef classpathref=3D"jetty.plugin.classpath" resource=3D"tasks.propert=
ies" loaderref=3D"jetty.loader">

  <target name=3D"jetty.run">
    <jetty.run tempdirectory=3D"${basedir}/jetty-temp">
    </jetty.run>
  </target>

</taskdef></project></code></pre>
</div>
</div>
</dd>
<dt class=3D"hdlist1">other context handlers</dt>
<dd>
<p>You may need to configure some other context handlers to run at the same=
 time as your web application.
You can specify these other context handlers using the <code>&lt;contextHan=
dlers&gt;</code> element.
You need to supply a <code>&lt;typedef&gt;</code> for it before you can use=
 it:</p>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><pr=
oject name=3D"Jetty-Ant integration test" basedir=3D".">

  <path id=3D"jetty.plugin.classpath">
    <fileset dir=3D"jetty-lib" includes=3D"*.jar">
  </fileset></path>

 <taskdef classpathref=3D"jetty.plugin.classpath" resource=3D"tasks.propert=
ies" loaderref=3D"jetty.loader">

 <typedef name=3D"contextHandlers" classname=3D"org.eclipse.jetty.ant.types=
.ContextHandlers" classpathref=3D"jetty.plugin.classpath" loaderref=3D"jett=
y.loader">

  <target name=3D"jetty.run">
    <jetty.run>
     <contexthandlers>
       <contexthandler resourcebase=3D"${basedir}/stuff" contextpath=3D"/st=
uff">
     </contexthandler></contexthandlers>
    </jetty.run>
  </target>

</typedef></taskdef></project></code></pre>
</div>
</div>
</dd>
<dt class=3D"hdlist1">system properties</dt>
<dd>
<p>As a convenience, you can configure system properties by using the <code=
>&lt;systemProperties&gt;</code> element.
Be aware that, depending on the purpose of the system property, setting it =
from within the Ant execution may mean that it is evaluated too late, as th=
e JVM evaluates some system properties on entry.</p>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><pr=
oject name=3D"Jetty-Ant integration test" basedir=3D".">

  <path id=3D"jetty.plugin.classpath">
    <fileset dir=3D"jetty-lib" includes=3D"*.jar">
  </fileset></path>

 <taskdef classpathref=3D"jetty.plugin.classpath" resource=3D"tasks.propert=
ies" loaderref=3D"jetty.loader">

  <target name=3D"jetty.run">
    <jetty.run>
      <systemproperties>
        <systemproperty name=3D"foo" value=3D"bar">
      </systemproperty></systemproperties>
    </jetty.run>
  </target>

</taskdef></project></code></pre>
</div>
</div>
</dd>
<dt class=3D"hdlist1">jetty XML file</dt>
<dd>
<p>If you have a lot of configuration to apply to the Jetty container, it c=
an be more convenient to put it into a standard Jetty XML configuration fil=
e and have the Ant plugin apply it before starting Jetty:</p>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><pr=
oject name=3D"Jetty-Ant integration test" basedir=3D".">

  <path id=3D"jetty.plugin.classpath">
    <fileset dir=3D"jetty-lib" includes=3D"*.jar">
  </fileset></path>

 <taskdef classpathref=3D"jetty.plugin.classpath" resource=3D"tasks.propert=
ies" loaderref=3D"jetty.loader">

  <target name=3D"jetty.run">
    <jetty.run jettyxml=3D"${basedir}/jetty.xml">
    </jetty.run>
  </target>

</taskdef></project></code></pre>
</div>
</div>
</dd>
<dt class=3D"hdlist1">scanning for changes</dt>
<dd>
<p>The most useful mode in which to run the Ant plugin is for it to continu=
e to execute Jetty and automatically restart your web application if any pa=
rt of it changes (for example, your IDE
recompiles the classes of the web application).
The <code>scanIntervalSeconds</code> option controls how frequently the <co=
de>&lt;jetty.run&gt;</code> task scans your web application/WAR file for ch=
anges.
The default value of <code>0</code> disables scanning. Here=E2=80=99s an ex=
ample where Jetty checks for changes every five seconds:</p>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><pr=
oject name=3D"Jetty-Ant integration test" basedir=3D".">

  <path id=3D"jetty.plugin.classpath">
    <fileset dir=3D"jetty-lib" includes=3D"*.jar">
  </fileset></path>

 <taskdef classpathref=3D"jetty.plugin.classpath" resource=3D"tasks.propert=
ies" loaderref=3D"jetty.loader">

  <target name=3D"jetty.run">
    <jetty.run scanintervalseconds=3D"5">
    </jetty.run>
  </target>

</taskdef></project></code></pre>
</div>
</div>
</dd>
<dt class=3D"hdlist1">stopping</dt>
<dd>
<p>In normal mode (<code>daemon=3D"false"</code>), the <code>&lt;jetty.run&=
gt;</code> task runs until you <code>cntrl-c</code> it. It may be useful to=
 script both the stop AND the start of Jetty.
For such a case, we provide the <code>&lt;jetty.stop&gt;</code> task.
+
To use it, you need to provide a port and an identifying string to both the=
 ` &lt;jetty.run&gt;` and the <code>&lt;jetty.stop&gt;</code> tasks, where =
<code>&lt;jetty.run&gt;</code> listens on the given port for a stop message=
 containing the given string, and cleanly stops Jetty when it is received.
The <code>&lt;jetty.stop&gt;</code> task sends this stop message.
You can also optionally provide a <code>stopWait</code> value (in seconds),=
 which is the length of time the <code>&lt;jetty.stop&gt;</code> task waits=
 for confirmation that the stop succeeded:</p>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><pr=
oject name=3D"Jetty-Ant integration test" basedir=3D".">

  <path id=3D"jetty.plugin.classpath">
    <fileset dir=3D"jetty-lib" includes=3D"*.jar">
  </fileset></path>

 <taskdef classpathref=3D"jetty.plugin.classpath" resource=3D"tasks.propert=
ies" loaderref=3D"jetty.loader">

  <target name=3D"jetty.run">
    <jetty.run stopport=3D"9999" stopkey=3D"9999">
    </jetty.run>
  </target>

  <target name=3D"jetty.stop">
   <jetty.stop stopport=3D"9999" stopkey=3D"9999" stopwait=3D"10">
  </jetty.stop></target>

</taskdef></project></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>To stop jetty via Ant, enter:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">&gt; ant jetty.stop</code></pre>
</div>
</div>
</dd>
<dt class=3D"hdlist1">execution without pausing ant</dt>
<dd>
<p>Usually, the <code>&lt;jetty.run&gt;</code> task runs until you <code>cn=
trl-c</code> it, pausing the execution of Ant as it does so. In some cases,=
 it may be useful to let Ant continue executing.
For example, to run your unit tests you may need other tasks to execute whi=
le Jetty is running.
For this case, we provide the <code>daemon</code> option.
This defaults to <code>false</code>. For <code>true</code>, Ant continues t=
o execute after starting Jetty.
If Ant exits, so does Jetty. Understand that this option does <em>not</em> =
fork a new process for Jetty.</p>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><pr=
oject name=3D"Jetty-Ant integration test" basedir=3D".">

  <path id=3D"jetty.plugin.classpath">
    <fileset dir=3D"jetty-lib" includes=3D"*.jar">
  </fileset></path>

 <taskdef classpathref=3D"jetty.plugin.classpath" resource=3D"tasks.propert=
ies" loaderref=3D"jetty.loader">

  <target name=3D"jetty.run">
    <jetty.run daemon=3D"true">
    </jetty.run>
  </target>

</taskdef></project></code></pre>
</div>
</div>
</dd>
</dl>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_deploying_a_web_application">Deploying a Web Application</h4>
<div class=3D"paragraph">
<p>Add a <code>&lt;typedef&gt;</code> for the <code>org.eclipse.jetty.ant.A=
ntWebAppContext</code> class with name <em>webApp</em>, then add a <code>&l=
t;webApp&gt;</code> element to <code>&lt;jetty.run&gt;</code> to describe y=
our web application.
The following example deploys a web application that is expanded in the loc=
al directory <code>foo/</code> to context path ` / `:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><pr=
oject name=3D"Jetty-Ant integration test" basedir=3D".">

  <path id=3D"jetty.plugin.classpath">
    <fileset dir=3D"jetty-lib" includes=3D"*.jar">
  </fileset></path>

 <taskdef classpathref=3D"jetty.plugin.classpath" resource=3D"tasks.propert=
ies" loaderref=3D"jetty.loader">

 <typedef name=3D"webApp" classname=3D"org.eclipse.jetty.ant.AntWebAppConte=
xt" classpathref=3D"jetty.plugin.classpath" loaderref=3D"jetty.loader">

  <target name=3D"jetty.run">
    <jetty.run>
      <webapp war=3D"${basedir}/foo" contextpath=3D"/">
    </webapp></jetty.run>
  </target>

</typedef></taskdef></project></code></pre>
</div>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">deploying a WAR file</dt>
<dd>
<p>It is not necessary to expand the web application into a directory.
It is fine to deploy it as a WAR file:</p>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><pr=
oject name=3D"Jetty-Ant integration test" basedir=3D".">

  <path id=3D"jetty.plugin.classpath">
    <fileset dir=3D"jetty-lib" includes=3D"*.jar">
  </fileset></path>

 <taskdef classpathref=3D"jetty.plugin.classpath" resource=3D"tasks.propert=
ies" loaderref=3D"jetty.loader">

 <typedef name=3D"webApp" classname=3D"org.eclipse.jetty.ant.AntWebAppConte=
xt" classpathref=3D"jetty.plugin.classpath" loaderref=3D"jetty.loader">

  <target name=3D"jetty.run">
    <jetty.run>
      <webapp war=3D"${basedir}/foo.war" contextpath=3D"/">
    </webapp></jetty.run>
  </target>

</typedef></taskdef></project></code></pre>
</div>
</div>
</dd>
<dt class=3D"hdlist1">deploying more than one web application</dt>
<dd>
<p>You can also deploy more than one web application:</p>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><pr=
oject name=3D"Jetty-Ant integration test" basedir=3D".">

  <path id=3D"jetty.plugin.classpath">
    <fileset dir=3D"jetty-lib" includes=3D"*.jar">
  </fileset></path>

 <taskdef classpathref=3D"jetty.plugin.classpath" resource=3D"tasks.propert=
ies" loaderref=3D"jetty.loader">

 <typedef name=3D"webApp" classname=3D"org.eclipse.jetty.ant.AntWebAppConte=
xt" classpathref=3D"jetty.plugin.classpath" loaderref=3D"jetty.loader">

  <target name=3D"jetty.run">
    <jetty.run>
      <webapp war=3D"${basedir}/foo.war" contextpath=3D"/">
      <webapp war=3D"${basedir}/other    contextPath=3D" other"=3D"">
      <webapp war=3D"${basedir}/bar.war" contextpath=3D"/bar">
    </webapp></webapp></webapp></jetty.run>
  </target>

</typedef></taskdef></project></code></pre>
</div>
</div>
</dd>
</dl>
</div>
<div class=3D"sect4">
<h5 id=3D"_configuring_the_web_application">Configuring the Web Application=
</h5>
<div class=3D"paragraph">
<p>As the <code>org.eclipse.jetty.ant.AntWebAppContext</code> class is an e=
xtension of
the
<a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/=
jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/webapp/=
WebAppContext.html"><code>org.eclipse.jetty.webapp.WebAppContext</code></a>
class, you can configure it by adding attributes of the same name
(without the <code>set</code> or <code>add</code> prefix) as the setter met=
hods.</p>
</div>
<div class=3D"paragraph">
<p>Here=E2=80=99s an example that specifies the location of the <code>web.x=
ml</code> file (equivalent to method <a href=3D"file:///home/tian/Downloads=
/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/=
%7BJDURL%7D/org/eclipse/jetty/webapp/WebAppContext.html#setDescriptor%28jav=
a.lang.String%29"><code>AntWebAppContext.setDescriptor()</code></a>) and th=
e web application=E2=80=99s temporary directory (equivalent to method <a hr=
ef=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty=
-documentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/webapp/WebAp=
pContext.html#setTempDirectory%28java.io.File%29"><code>AntWebAppContext.se=
tTempDirectory()</code></a>):</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><pr=
oject name=3D"Jetty-Ant integration test" basedir=3D".">

  <path id=3D"jetty.plugin.classpath">
    <fileset dir=3D"jetty-lib" includes=3D"*.jar">
  </fileset></path>

 <taskdef classpathref=3D"jetty.plugin.classpath" resource=3D"tasks.propert=
ies" loaderref=3D"jetty.loader">

 <typedef name=3D"webApp" classname=3D"org.eclipse.jetty.ant.AntWebAppConte=
xt" classpathref=3D"jetty.plugin.classpath" loaderref=3D"jetty.loader">

  <target name=3D"jetty.run">
    <jetty.run>
      <webapp descriptor=3D"${basedir}/web.xml" tempdirectory=3D"${basedir}=
/my-temp" war=3D"${basedir}/foo" contextpath=3D"/">
    </webapp></jetty.run>
  </target>

</typedef></taskdef></project></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Other extra configuration options for the AntWebAppContext include:</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">extra classes and Jars</dt>
<dd>
<p>If your web application=E2=80=99s classes and Jars do not reside inside =
<code>WEB-INF</code> of the resource base directory, you can use the &lt;cl=
asses&gt; and &lt;jar&gt; elements to tell Ant where to find them. Here=E2=
=80=99s an example:</p>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><pr=
oject name=3D"Jetty-Ant integration test" basedir=3D".">

  <path id=3D"jetty.plugin.classpath">
    <fileset dir=3D"jetty-lib" includes=3D"*.jar">
  </fileset></path>

 <taskdef classpathref=3D"jetty.plugin.classpath" resource=3D"tasks.propert=
ies" loaderref=3D"jetty.loader">

 <typedef name=3D"webApp" classname=3D"org.eclipse.jetty.ant.AntWebAppConte=
xt" classpathref=3D"jetty.plugin.classpath" loaderref=3D"jetty.loader">

  <target name=3D"jetty.run">
    <jetty.run>
      <webapp descriptor=3D"${basedir}/web.xml" tempdirectory=3D"${basedir}=
/my-temp" war=3D"${basedir}/foo" contextpath=3D"/">
        <classes dir=3D"${basedir}/classes">
          <include name=3D"**/*.class">
          <include name=3D"**/*.properties">
        </include></include></classes>
        <lib dir=3D"${basedir}/jars">
          <include name=3D"**/*.jar">
          <exclude name=3D"**/*.dll">
        </exclude></include></lib>
      </webapp>
    </jetty.run>
  </target>

</typedef></taskdef></project></code></pre>
</div>
</div>
</dd>
<dt class=3D"hdlist1">context attributes</dt>
<dd>
<p>Jetty allows you to set up ServletContext attributes on your web applica=
tion.
You configure them in a context XML file that is applied to your WebAppCont=
ext instance prior to starting it.
For convenience, the Ant plugin permits you to configure these directly in =
the build file.
Here=E2=80=99s an example:</p>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><pr=
oject name=3D"Jetty-Ant integration test" basedir=3D".">

  <path id=3D"jetty.plugin.classpath">
    <fileset dir=3D"jetty-lib" includes=3D"*.jar">
  </fileset></path>

 <taskdef classpathref=3D"jetty.plugin.classpath" resource=3D"tasks.propert=
ies" loaderref=3D"jetty.loader">

 <typedef name=3D"webApp" classname=3D"org.eclipse.jetty.ant.AntWebAppConte=
xt" classpathref=3D"jetty.plugin.classpath" loaderref=3D"jetty.loader">

  <target name=3D"jetty.run">
    <jetty.run>
      <webapp war=3D"${basedir}/foo" contextpath=3D"/">
        <attributes>
          <attribute name=3D"my.param" value=3D"123">
        </attribute></attributes>
      </webapp>
    </jetty.run>
  </target>

</typedef></taskdef></project></code></pre>
</div>
</div>
</dd>
<dt class=3D"hdlist1"><code>jetty-env.xml</code> file</dt>
<dd>
<p>If you are using features such as <a href=3D"file:///home/tian/Downloads=
/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/=
index.html#configuring_jndi">JNDI</a> with your web application, you may ne=
ed to configure a <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.pr=
oject-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#using_jn=
di"><code>WEB-INF/jetty-env.xml</code></a> file to define resources. If the=
 structure of your web application project is such that the source of <code=
>jetty-env.xml</code> file resides somewhere other than <code>WEB-INF</code=
>, you can use the <code>jettyEnvXml</code> attribute to tell Ant where to =
find it:</p>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><pr=
oject name=3D"Jetty-Ant integration test" basedir=3D".">

  <path id=3D"jetty.plugin.classpath">
    <fileset dir=3D"jetty-lib" includes=3D"*.jar">
  </fileset></path>

 <taskdef classpathref=3D"jetty.plugin.classpath" resource=3D"tasks.propert=
ies" loaderref=3D"jetty.loader">

 <typedef name=3D"webApp" classname=3D"org.eclipse.jetty.ant.AntWebAppConte=
xt" classpathref=3D"jetty.plugin.classpath" loaderref=3D"jetty.loader">

  <target name=3D"jetty.run">
    <jetty.run>
      <webapp war=3D"${basedir}/foo" contextpath=3D"/" jettyenvxml=3D"${bas=
edir}/jetty-env.xml">
        <attributes>
      </attributes></webapp>
    </jetty.run>
  </target>

</typedef></taskdef></project></code></pre>
</div>
</div>
</dd>
<dt class=3D"hdlist1">context XML file</dt>
<dd>
<p>You may prefer or even require to do some advanced configuration of your=
 web application outside of the Ant build file.
In this case, you can use a standard context XML configuration file which t=
he Ant plugin applies to your web application before it is deployed.
Be aware that the settings from the context XML file <em>override</em> thos=
e of the attributes and nested elements you defined in the build file.</p>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml">pro=
ject name=3D"Jetty-Ant integration test" basedir=3D"."&gt;

  <path id=3D"jetty.plugin.classpath">
    <fileset dir=3D"jetty-lib" includes=3D"*.jar">
  </fileset></path>

 <taskdef classpathref=3D"jetty.plugin.classpath" resource=3D"tasks.propert=
ies" loaderref=3D"jetty.loader">

 <typedef name=3D"webApp" classname=3D"org.eclipse.jetty.ant.AntWebAppConte=
xt" classpathref=3D"jetty.plugin.classpath" loaderref=3D"jetty.loader">

  <target name=3D"jetty.run">
    <jetty.run>
      <webapp war=3D"${basedir}/foo" contextpath=3D"/" contextxml=3D"${base=
dir}/jetty-env.xml">
        <attributes>
      </attributes></webapp>
    </jetty.run>
  </target>

</typedef></taskdef></code></pre>
</div>
</div>
</dd>
</dl>
</div>
</div>
</div>
</div>
</div>
</div>
<div class=3D"sect1">
<h2 id=3D"jetty-handlers">Handlers</h2>
<div class=3D"sectionbody">
<div class=3D"sect2">
<h3 id=3D"writing-custom-handlers">Writing Custom Handlers</h3>
<div class=3D"paragraph">
<p>The Handler is the Jetty component that deals with received requests.</p=
>
</div>
<div class=3D"paragraph">
<p>Many users of Jetty never need to write a Jetty Handler, but instead use=
 the <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9=
.4.x/jetty-documentation/src/main/asciidoc/%7BJXURL%7D/org/eclipse/jetty/se=
rvlet/package-summary.html">Servlet API.</a>
You can reuse the existing Jetty handlers for context, security, sessions a=
nd servlets without the need for extension.
However, some users might have special requirements or footprint concerns t=
hat prohibit the use of the full servlet API.
For them implementing a Jetty handler is a straight forward way to provide =
dynamic web content with a minimum of fuss.</p>
</div>
<div class=3D"paragraph">
<p>See the section on <a href=3D"file:///home/tian/Downloads/b60/ebook/jett=
y.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#basi=
c-architecture">Jetty Architecture</a> to understand more about Handlers vs=
. Servlets.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"handler-api">The Handler API</h4>
<div class=3D"paragraph">
<p>The <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty=
-9.4.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/=
server/Handler.html">Handler</a> interface provides Jetty=E2=80=99s core of=
 content generation or manipulation.
Classes that implement this interface are used to coordinate requests, filt=
er requests and generate content.</p>
</div>
<div class=3D"paragraph">
<p>The core API of the Handler interface is:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">p=
ublic void handle(String target, Request baseRequest, HttpServletRequest re=
quest, HttpServletResponse response)
    throws IOException, ServletException</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>An implementation of this method can handle a request and pass the reque=
st onto another handler (or servlet), or it can modify and/or wrap the requ=
est before passing it on.
This gives three styles of handler:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>Coordinating Handlers - Handlers that route requests to other handlers (=
<code>HandlerCollection</code>, <code>ContextHandlerCollection</code>)</p>
</li>
<li>
<p>Filtering Handlers - Handlers that augment a request and pass it on to o=
ther handlers (<code>HandlerWrapper</code>, <code>ContextHandler</code>, <c=
ode>SessionHandler</code>)</p>
</li>
<li>
<p>Generating Handlers - Handlers that produce content (<code>ResourceHandl=
er</code> and <code>ServletHandler</code>)</p>
</li>
</ul>
</div>
<div class=3D"sect4">
<h5 id=3D"target">The Target</h5>
<div class=3D"paragraph">
<p>The target of a handler is an identifier for the resource that should ha=
ndle the passed request.
This is normally the URI that is parsed from an HTTP Request.
However, in two key circumstances the target may differ from the URI of the=
 passed request:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>If the request has been dispatched to a named resource, such as a named =
servlet, the target is the name of that resource.</p>
</li>
<li>
<p>If the request is being made by a call to <a href=3D"http://docs.oracle.=
com/javaee/7/api/javax/servlet/RequestDispatcher.html"><code>RequestDispatc=
her</code></a>, the target is the URI of the included resource and is diffe=
rent to the URI of the actual request.</p>
</li>
</ul>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"request-and-response">The Request and Response</h5>
<div class=3D"paragraph">
<p>The request and response objects used in the signature of the handle met=
hod are
<a href=3D"http://docs.oracle.com/javaee/7/api/javax/servlet/ServletRequest=
.html"><code>ServletRequest</code></a> and <a href=3D"http://docs.oracle.co=
m/javaee/7/api/javax/servlet/ServletResponse.html"><code>ServletResponse</c=
ode></a>.
These are the standard APIs and are moderately restricted in what they can =
do to the request and response.
More often than not, access to the Jetty implementations of these classes i=
s required: <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-=
jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/j=
etty/server/Request.html"><code>Request</code></a> and <a href=3D"file:///h=
ome/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/=
src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/server/Response.html"><code=
>Response</code></a>.
However, as the request and response may be wrapped by handlers, filters an=
d servlets, it is not possible to pass the implementation directly.
The following mantra retrieves the core implementation objects from under a=
ny wrappers:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">R=
equest base_request =3D request instanceof Request ? (Request)request : Htt=
pConnection.getCurrentConnection().getHttpChannel().getRequest();
Response base_response =3D response instanceof Response ? (Response)respons=
e : HttpConnection.getCurrentConnection().getHttpChannel().getResponse();</=
code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Notice that if the handler passes the request on to another handler, it =
should use the Request/Response objects passed in, and not the base objects=
.
This is to preserve any wrapping done by up stream handlers.</p>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"dispatch">The Dispatch</h5>
<div class=3D"paragraph">
<p>The dispatch argument indicates the state of the handling of the call an=
d may be:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p><code>REQUEST =3D=3D 1</code> - An original request received from a conn=
ector.</p>
</li>
<li>
<p><code>FORWARD =3D=3D 2</code> - A request being forwarded by a RequestDi=
spatcher.</p>
</li>
<li>
<p><code>INCLUDE =3D=3D 4</code> - A request being included by a RequestDis=
patcher.</p>
</li>
<li>
<p><code>ERROR =3D=3D 8</code> - A request being forwarded to a error handl=
er by the container.</p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>These mostly have significance for servlet and related handlers.
For example, the security handler only applies authentication and authoriza=
tion to REQUEST dispatches.</p>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"handling-requests">Handling Requests</h4>
<div class=3D"paragraph">
<p>A Handler may handle a request by:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p><a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/index.html#generating-response">Ge=
nerating a Response</a></p>
</li>
<li>
<p><a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/index.html#filtering-request-or-re=
sponse">Filtering the Request and/or Response</a></p>
</li>
<li>
<p><a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/index.html#passing-request-and-res=
ponse">Passing the Request and Response to Another Handler</a></p>
</li>
</ul>
</div>
<div class=3D"sect4">
<h5 id=3D"generating-response">Generating a Response</h5>
<div class=3D"paragraph">
<p>The <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty=
-9.4.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/=
embedded/OneHandler.html"><code>OneHandler</code></a> embedded example show=
s how a simple handler can generate a response.</p>
</div>
<div class=3D"paragraph">
<p>You can use the standard servlet response API, which will typically set =
some status, content headers and then write out the content:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java"> =
response.setContentType("text/html");
 response.setStatus(HttpServletResponse.SC_OK);
 response.getWriter().println("<h1>Hello OneHandler</h1>");</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>It is also very important that a handler indicate that it has completed =
handling the request and that the request should not be passed to other han=
dlers:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java"> =
Request base_request =3D (request instanceof Request) ? (Request)request:Ht=
tpConnection.getCurrentConnection().getHttpChannel().getRequest();
 base_request.setHandled(true);</code></pre>
</div>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"filtering-request-or-response">Filtering the Request and/or Respo=
nse</h5>
<div class=3D"paragraph">
<p>Once the base request or response object is obtained, you can modify it.
Typically you would make modifications to accomplish:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>Breaking the URI into contextPath, servletPath and pathInfo components.<=
/p>
</li>
<li>
<p>Associating a resource base with a request for static content.</p>
</li>
<li>
<p>Associating a session with a request.</p>
</li>
<li>
<p>Associating a security principal with a request.</p>
</li>
<li>
<p>Changing the URI and paths during a request dispatch forward to another =
resource.</p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>You can also update the context of the request:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>Setting the current threads context classloader.</p>
</li>
<li>
<p>Setting thread locals to identify the current <code>ServletContext</code=
>.</p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>Typically Jetty passes a modified request to another handler and undoes =
modifications in a finally block afterwards:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java"> =
try
 {
    base_request.setSession(a_session);
    next_handler.handle(target,request,response,dispatch);
 }
 finally
 {
    base_request.setSession(old_session);
 }</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The classes that implement the <a href=3D"file:///home/tian/Downloads/b6=
0/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7B=
JDURL%7D/org/eclipse/jetty/server/handler/HandlerWrapper.html"><code>Handle=
rWrapper</code></a> class are typically handler filters of this style.</p>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"passing-request-and-response">Passing the Request and Response to=
 Another Handler</h5>
<div class=3D"paragraph">
<p>A handler might simply inspect the request and use the target, request U=
RI or other information to select another handler to pass the request to.
These handlers typically implement the <a href=3D"file:///home/tian/Downloa=
ds/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciido=
c/%7BJDURL%7D/org/eclipse/jetty/server/HandlerContainer.html"><code>Handler=
Container</code></a> interface.</p>
</div>
<div class=3D"paragraph">
<p>Examples include:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p><a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/serv=
er/handler/HandlerCollection.html">Class <code>HandlerCollection</code></a>=
 -
A collection of handlers, where each handler is called regardless of the st=
ate of the request.
This is typically used to pass a request to a <a href=3D"file:///home/tian/=
Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/=
asciidoc/%7BJDURL%7D/org/eclipse/jetty/server/handler/ContextHandlerCollect=
ion.html"><code>ContextHandlerCollection</code>,</a> and then the <a href=
=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-d=
ocumentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/server/handler=
/RequestLogHandler.html"><code>RequestLogHandler</code>.</a></p>
</li>
<li>
<p><a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/serv=
er/handler/HandlerList.html"><code>HandlerList</code></a> - A list of handl=
ers that are called in turn until the request state is set as handled.</p>
</li>
<li>
<p><a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/serv=
er/handler/ContextHandlerCollection.html"><code>ContextHandlerCollection</c=
ode></a> - A collection of Handlers, of which one is selected by best match=
 for the context path.</p>
</li>
</ul>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"more-about-handlers">More About Handlers</h4>
<div class=3D"paragraph">
<p>See the <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-j=
etty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJXURL%7D/">latest Jetty=
 Source XRef</a> and the <a href=3D"file:///home/tian/Downloads/b60/ebook/j=
etty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/=
">latest Jetty JavaDoc</a> for detailed information on each Jetty handler.<=
/p>
</div>
</div>
</div>
</div>
</div>
<div class=3D"sect1">
<h2 id=3D"websocket-intro">WebSocket Introduction</h2>
<div class=3D"sectionbody">
<div class=3D"paragraph">
<p>WebSocket is a new protocol for bidirectional communications over HTTP.<=
/p>
</div>
<div class=3D"paragraph">
<p>It is based on a low level framing protocol that delivers messages in ei=
ther UTF-8 TEXT or BINARY format.</p>
</div>
<div class=3D"paragraph">
<p>A single message in WebSocket can be of any size (the underlying framing=
 however does have a single frame limit of <a href=3D"http://en.wikipedia.o=
rg/wiki/9223372036854775807">63-bits</a>)</p>
</div>
<div class=3D"paragraph">
<p>There can be an unlimited number of messages sent.</p>
</div>
<div class=3D"paragraph">
<p>Messages are sent sequentially, the base protocol does not support inter=
leaved messages.</p>
</div>
<div class=3D"paragraph">
<p>A WebSocket connection goes through some basic state changes:</p>
</div>
<table class=3D"tableblock frame-all grid-all" style=3D"width: 50%;">
<caption class=3D"title">Table 14. WebSocket connection states</caption>
<colgroup>
<col style=3D"width: 50%;">
<col style=3D"width: 50%;">
</colgroup>
<thead>
<tr>
<th class=3D"tableblock halign-left valign-top">State</th>
<th class=3D"tableblock halign-left valign-top">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">CON=
NECTING</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">A H=
TTP Upgrade to WebSocket is in progress</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">OPE=
N</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">The=
 HTTP Upgrade succeeded and the socket is now open and ready to read / writ=
e</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">CLO=
SING</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">A W=
ebSocket Close Handshake has been started</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">CLO=
SED</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Web=
Socket is now closed, no more read/write possible</p></td>
</tr>
</tbody>
</table>
<div class=3D"paragraph">
<p>When a WebSocket is closed, a <a href=3D"file:///home/tian/Downloads/b60=
/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJ=
DURL%7D/org/eclipse/jetty/websocket/api/StatusCode.html">status code</a> an=
d short reason string is provided.</p>
</div>
<div class=3D"sect2">
<h3 id=3D"ws-intro-provides">What Jetty provides</h3>
<div class=3D"paragraph">
<p>Jetty provides an implementation of the following standards and specs.</=
p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1"><a href=3D"http://tools.ietf.org/html/rfc6455">RFC-64=
55</a></dt>
<dd>
<p>The WebSocket Protocol</p>
<div class=3D"paragraph">
<p>We support the version 13 of the released and final spec.</p>
</div>
<div class=3D"paragraph">
<p>Jetty tests its WebSocket protocol implementation using the <a href=3D"h=
ttp://autobahn.ws/testsuite">autobahn testsuite</a>.</p>
</div>
</dd>
</dl>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock important">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Important</div>
</td>
<td class=3D"content">
The early drafts of WebSocket were supported in Jetty 7 and Jetty 8,   but =
this support has been removed in Jetty 9.
This means that Jetty 9 will not support the old browsers that implemented =
the early drafts of WebSocket. (such as Safari 5.0 or Opera 12)
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock tip">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Tip</div>
</td>
<td class=3D"content">
Want to know if the browser you are targeting supports WebSocket?
Use <a href=3D"http://caniuse.com/websockets">caniuse.com/websockets</a> to=
 find out.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1"><a href=3D"http://www.jcp.org/en/jsr/detail?id=3D356"=
>JSR-356</a></dt>
<dd>
<p>The Java WebSocket API (<code>javax.websocket</code>)</p>
<div class=3D"paragraph">
<p>This is the official Java API for working with WebSockets.</p>
</div>
</dd>
</dl>
</div>
<div class=3D"paragraph">
<p>Unstable standards and specs:</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1"><a href=3D"https://datatracker.ietf.org/doc/draft-iet=
f-hybi-websocket-perframe-compression/">perframe-compression</a></dt>
<dd>
<p>Per Frame Compression Extension.</p>
<div class=3D"paragraph">
<p>An early extension draft from the Google/Chromium team that would provid=
e WebSocket frame compression.</p>
</div>
<div class=3D"paragraph">
<p>perframe-compression using deflate algorithm is present on many versions=
 of Chrome/Chromium.</p>
</div>
<div class=3D"paragraph">
<p>Jetty=E2=80=99s support for perframe-compression is based on the draft-0=
4 spec.</p>
</div>
<div class=3D"paragraph">
<p>This standard is being replaced with permessage-compression.</p>
</div>
</dd>
<dt class=3D"hdlist1"><a href=3D"https://datatracker.ietf.org/doc/draft-tyo=
shino-hybi-permessage-compression/">permessage-compression</a></dt>
<dd>
<p>Per Frame Compression Extension.</p>
<div class=3D"paragraph">
<p>This is the replacement for perframe-compression, switching the compress=
ion to being based on the entire message, not the individual frames.</p>
</div>
</dd>
</dl>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"ws-intro-api">WebSocket APIs</h3>
<div class=3D"paragraph">
<p>APIs and libraries to implement your WebSockets using Jetty.</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">Jetty WebSocket API</dt>
<dd>
<p>The basic common API for creating and working with WebSockets using Jett=
y.</p>
</dd>
<dt class=3D"hdlist1">Jetty WebSocket Server API</dt>
<dd>
<p>Write WebSocket Server Endpoints for Jetty.</p>
</dd>
<dt class=3D"hdlist1">Jetty WebSocket Client API</dt>
<dd>
<p>Connect to WebSocket servers with Jetty.</p>
</dd>
<dt class=3D"hdlist1">Java WebSocket Client API</dt>
<dd>
<p>The new standard Java WebSocket Client API (<code>javax.websocket</code>=
) [JSR-356]</p>
</dd>
<dt class=3D"hdlist1">Java WebSocket Server API</dt>
<dd>
<p>The new standard Java WebSocket Server API (<code>javax.websocket.server=
</code>) [JSR-356]</p>
</dd>
</dl>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"_enabling_websocket">Enabling WebSocket</h3>
<div class=3D"paragraph">
<p>To enable websocket, you need to <a href=3D"file:///home/tian/Downloads/=
b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/i=
ndex.html#enabling-modules">enable</a> the <code>websocket</code> <a href=
=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-d=
ocumentation/src/main/asciidoc/index.html#enabling-modules">module</a>.</p>
</div>
<div class=3D"paragraph">
<p>Once this module is enabled for your jetty base, it will apply to all we=
bapps deployed to that base.
If you want to be more selective about which webapps use websocket, then yo=
u can:</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">Disable jsr-356 for a particular webapp</dt>
<dd>
<p>You can disable jsr-356 for a particular webapp by setting the <a href=
=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-d=
ocumentation/src/main/asciidoc/index.html#context_attributes">context attri=
bute</a> <code>org.eclipse.jetty.websocket.jsr356</code> to <code>false</co=
de>.
This will mean that websockets are not available to your webapp, however de=
ployment time   scanning for websocket-related classes such as endpoints wi=
ll still occur.
This can be a significant impost if your webapp contains a lot of classes a=
nd/or jar files.
To completely disable websockets and avoid all setup costs associated with =
it for a particular webapp, use instead the context attribute <code>org.ecl=
ipse.jetty.containerInitializerExclusionPattern</code>, described next, whi=
ch allows you to exclude the websocket ServletContainerInitializer that cau=
ses the scanning.</p>
</dd>
<dt class=3D"hdlist1">Completely disable jsr-356 for a particular webapp</d=
t>
<dd>
<p>Set the <code>org.eclipse.jetty.containerInitializerExclusionPattern</co=
de> <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.=
4.x/jetty-documentation/src/main/asciidoc/index.html#context_attributes">co=
ntext attribute</a> to include <code>org.eclipse.jetty.websocket.jsr356.ser=
ver.deploy.WebSocketServerContainerInitializer</code>.
Here=E2=80=99s an example of doing this in code, although you can do the <a=
 href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/je=
tty-documentation/src/main/asciidoc/index.html#intro-jetty-configuration-we=
bapps">same in xml</a>:</p>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">W=
ebAppContext context =3D new WebAppContext();
context.setAttribute("org.eclipse.jetty.containerInitializerExclusionPatter=
n",
                     "org.eclipse.jetty.websocket.jsr356.server.deploy.WebS=
ocketServerContainerInitializer|com.acme.*");</code></pre>
</div>
</div>
</dd>
</dl>
</div>
</div>
</div>
</div>
<div class=3D"sect1">
<h2 id=3D"websocket-jetty">Jetty Websocket API</h2>
<div class=3D"sectionbody">
<div class=3D"paragraph">
<p>These pages are works in progress that have not been moved to their resp=
ective sections yet.</p>
</div>
<div class=3D"sect2">
<h3 id=3D"jetty-websocket-api">Jetty WebSocket API Usage</h3>
<div class=3D"paragraph">
<p>Jetty provides its own more powerful WebSocket API, with a common core A=
PI for both server and client use of WebSockets.</p>
</div>
<div class=3D"paragraph">
<p>It is an event driven API based on WebSocket Messages.</p>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"jetty-websocket-api-events">WebSocket Events</h3>
<div class=3D"paragraph">
<p>Every WebSocket can receive various events:</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">On Connect Event</dt>
<dd>
<p>An indication to the WebSocket that the Upgrade has succeeded and the We=
bSocket is now open.</p>
<div class=3D"paragraph">
<p>You will receive a <a href=3D"file:///home/tian/Downloads/b60/ebook/jett=
y.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org=
/eclipse/jetty/websocket/api/Session.html"><code>org.eclipse.jetty.websocke=
t.api.Session</code></a> object that references the specific session for th=
is Open Event.</p>
</div>
<div class=3D"paragraph">
<p>For normal WebSockets, it is important to hold onto this Session and use=
 it for communicating with the Remote Endpoint.</p>
</div>
<div class=3D"paragraph">
<p>For Stateless WebSockets, the Session will be passed into each event as =
it occurs, allowing you to only have 1 instance of a WebSocket serving many=
 Remote Endpoints.</p>
</div>
</dd>
<dt class=3D"hdlist1">On Close Event</dt>
<dd>
<p>An indication that the WebSocket is now closed.</p>
<div class=3D"paragraph">
<p>Every Close Event will have a <a href=3D"file:///home/tian/Downloads/b60=
/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJ=
DURL%7D/org/eclipse/jetty/websocket/api/StatusCode.html">Status   Code</a> =
(and an optional Closure Reason Message)</p>
</div>
<div class=3D"paragraph">
<p>A normal WebSocket closure will go through a Close Handshake where both =
the Local Endpoint and the Remote Endpoint both send a Close frame to indic=
ate that the connection is closed.</p>
</div>
<div class=3D"paragraph">
<p>It is possible for the Local WebSocket to indicate its desire to Close b=
y issuing a Close frame to the Remote Endpoint, but the Remote Endpoint can=
 continue to send messages until it sends a Close Frame.
This is known as a Half-Open connection, and it is important to note that o=
nce the Local Endpoint has send the Close Frame it cannot write anymore Web=
Socket traffic.</p>
</div>
<div class=3D"paragraph">
<p>On an abnormal closure, such as a connection disconnect or a connection =
timeout, the low level connection will be terminated without going through =
a Close Handshake, this will still result in an On Close Event (and likely =
a corresponding On Error Event).</p>
</div>
</dd>
<dt class=3D"hdlist1">On Error Event</dt>
<dd>
<p>If an error occurred, during the implementation, the WebSocket will be n=
otified via this event handler.</p>
</dd>
<dt class=3D"hdlist1">On Message Event</dt>
<dd>
<p>An indication that a complete message has been received and is ready for=
 handling by your WebSocket.</p>
<div class=3D"paragraph">
<p>This can be a (UTF8) TEXT message or a raw BINARY message.</p>
</div>
</dd>
</dl>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"jetty-websocket-api-session">WebSocket Session</h3>
<div class=3D"paragraph">
<p>The <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty=
-9.4.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/=
websocket/api/Session.html">Session</a> object can be used to:</p>
</div>
<div class=3D"paragraph">
<p>The Connection State (is it open or not).</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">i=
f(session.isOpen()) {
  // send message
}</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Is the Connection Secure.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">i=
f(session.isSecure()) {
  // connection is using 'wss://'
}</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>What was in the Upgrade Request and Response.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">U=
pgradeRequest req =3D session.getUpgradeRequest();
String channelName =3D req.getParameterMap().get("channelName");

UpgradeRespons resp =3D session.getUpgradeResponse();
String subprotocol =3D resp.getAcceptedSubProtocol();</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>What is the Local and Remote Address.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">I=
netSocketAddress remoteAddr =3D session.getRemoteAddress();</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Get and Set the Idle Timeout</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">s=
ession.setIdleTimeout(2000); // 2 second timeout</code></pre>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"jetty-websocket-api-send-message">Send Messages to Remote Endpoin=
t</h3>
<div class=3D"paragraph">
<p>The most important feature of the Session is access to the <a href=3D"fi=
le:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documen=
tation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/websocket/api/Remote=
Endpoint.html"><code>org.eclipse.jetty.websocket.api.RemoteEndpoint</code><=
/a>needed to send messages.</p>
</div>
<div class=3D"paragraph">
<p>With RemoteEndpoint you can choose to send TEXT or BINARY WebSocket mess=
ages, or the WebSocket PING and PONG control frames.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"blocking">Blocking Send Message</h4>
<div class=3D"paragraph">
<p>Most calls are blocking in nature, and will not return until the send ha=
s completed (or has thrown an exception).</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">R=
emoteEndpoint remote =3D session.getRemote();

// Blocking Send of a BINARY message to remote endpoint
ByteBuffer buf =3D ByteBuffer.wrap(new byte[] { 0x11, 0x22, 0x33, 0x44 });
try
{
    remote.sendBytes(buf);
}
catch (IOException e)
{
    e.printStackTrace(System.err);
}</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>How to send a simple Binary message using the RemoteEndpoint.
This will block until the message is sent, possibly throwing an IOException=
 if unable to send the message.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">R=
emoteEndpoint remote =3D session.getRemote();

// Blocking Send of a TEXT message to remote endpoint
try
{
    remote.sendString("Hello World");
}
catch (IOException e)
{
    e.printStackTrace(System.err);
}</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>How to send a simple Text message using the RemoteEndpoint.
This will block until the message is sent, possibly throwing an IOException=
 if unable to send the message.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"partial">Send Partial Message</h4>
<div class=3D"paragraph">
<p>If you have a large message to send, and want to send it in pieces and p=
arts, you can utilize the partial message sending methods of RemoteEndpoint=
.
Just be sure you finish sending your message (<code>isLast =3D=3D true</cod=
e>).</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">R=
emoteEndpoint remote =3D session.getRemote();

// Blocking Send of a BINARY message to remote endpoint
// Part 1
ByteBuffer buf1 =3D ByteBuffer.wrap(new byte[] { 0x11, 0x22 });
// Part 2 (last part)
ByteBuffer buf2 =3D ByteBuffer.wrap(new byte[] { 0x33, 0x44 });
try
{
    remote.sendPartialBytes(buf1,false);
    remote.sendPartialBytes(buf2,true); // isLast is true
}
catch (IOException e)
{
    e.printStackTrace(System.err);
}</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>How to send a Binary message in 2 parts, using the partial message suppo=
rt in RemoteEndpoint.
This will block until each part of the message is sent, possibly throwing a=
n IOException if unable to send the partial message.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">R=
emoteEndpoint remote =3D session.getRemote();

// Blocking Send of a TEXT message to remote endpoint
String part1 =3D "Hello";
String part2 =3D " World";
try
{
    remote.sendPartialString(part1,false);
    remote.sendPartialString(part2,true); // last part
}
catch (IOException e)
{
    e.printStackTrace(System.err);
}</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>How to send a Text message in 2 parts, using the partial message support=
 in RemoteEndpoint.
This will block until each part of the message is sent, possibly throwing a=
n IOException if unable to send the partial message.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"pingpong">Send Ping / Pong Control Frame</h4>
<div class=3D"paragraph">
<p>You can also send Ping and Pong control frames using the RemoteEndpoint.=
</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">R=
emoteEndpoint remote =3D session.getRemote();

// Blocking Send of a PING to remote endpoint
String data =3D "You There?";
ByteBuffer payload =3D ByteBuffer.wrap(data.getBytes());
try
{
    remote.sendPing(payload);
}
catch (IOException e)
{
    e.printStackTrace(System.err);
}</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>How to send a Ping control frame, with a payload of <code>"You There?"</=
code> (arriving at Remote Endpoint as a byte array payload).
This will block until the message is sent, possibly throwing an IOException=
 if unable to send the ping frame.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">R=
emoteEndpoint remote =3D session.getRemote();

// Blocking Send of a PONG to remote endpoint
String data =3D "Yup, I'm here";
ByteBuffer payload =3D ByteBuffer.wrap(data.getBytes());
try
{
    remote.sendPong(payload);
}
catch (IOException e)
{
    e.printStackTrace(System.err);
}</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>How to send a Pong control frame, with a payload of <code>"Yup I'm here"=
</code> (arriving at Remote Endpoint as a byte array payload).
This will block until the message is sent, possibly throwing an IOException=
 if unable to send the pong frame.</p>
</div>
<div class=3D"paragraph">
<p>To be correct in your usage of Pong frames, you should return the same b=
yte array data that you received in the Ping frame.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"async">Async Send Message</h4>
<div class=3D"paragraph">
<p>However there are also 2 Async send message methods available:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p><a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/webs=
ocket/api/RemoteEndpoint.html#sendBytesByFuture(java.nio.ByteBuffer)"><code=
>RemoteEndpoint.sendBytesByFuture(ByteBuffer message)</code></a></p>
</li>
<li>
<p><a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/webs=
ocket/api/RemoteEndpoint.html#sendStringByFuture(java.lang.String)"><code>R=
emoteEndpoint.sendStringByFuture(String message)</code></a></p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>Both return a <code>Future&lt;Void&gt;</code> that can be used to test f=
or success and failure of the message send using standard <a href=3D"http:/=
/docs.oracle.com/javase/7/docs/api/java/util/concurrent/Future.html"><code>=
java.util.concurrent.Future</code></a> behavior.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">R=
emoteEndpoint remote =3D session.getRemote();

// Async Send of a BINARY message to remote endpoint
ByteBuffer buf =3D ByteBuffer.wrap(new byte[] { 0x11, 0x22, 0x33, 0x44 });
remote.sendBytesByFuture(buf);</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>How to send a simple Binary message using the RemoteEndpoint.
The message will be enqueued for outgoing write, but you will not know if i=
t succeeded or failed.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">R=
emoteEndpoint remote =3D session.getRemote();

// Async Send of a BINARY message to remote endpoint
ByteBuffer buf =3D ByteBuffer.wrap(new byte[] { 0x11, 0x22, 0x33, 0x44 });
try
{
    Future<void> fut =3D remote.sendBytesByFuture(buf);
    // wait for completion (forever)
    fut.get();
}
catch (ExecutionException | InterruptedException e)
{
    // Send failed
    e.printStackTrace();
}</void></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>How to send a simple Binary message using the RemoteEndpoint, tracking t=
he <code>Future&lt;Void&gt;</code> to know if the send succeeded or failed.=
</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">R=
emoteEndpoint remote =3D session.getRemote();

// Async Send of a BINARY message to remote endpoint
ByteBuffer buf =3D ByteBuffer.wrap(new byte[] { 0x11, 0x22, 0x33, 0x44 });
Future<void> fut =3D null;
try
{
    fut =3D remote.sendBytesByFuture(buf);
    // wait for completion (timeout)
    fut.get(2,TimeUnit.SECONDS);
}
catch (ExecutionException | InterruptedException e)
{
    // Send failed
    e.printStackTrace();
}
catch (TimeoutException e)
{
    // timeout
    e.printStackTrace();
    if (fut !=3D null)
    {
        // cancel the message
        fut.cancel(true);
    }
}</void></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>How to send a simple Binary message using the RemoteEndpoint, tracking t=
he <code>Future&lt;Void&gt;</code> and waiting only prescribed amount of ti=
me for the send to complete, cancelling the message if the timeout occurs.<=
/p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">R=
emoteEndpoint remote =3D session.getRemote();

// Async Send of a TEXT message to remote endpoint
remote.sendStringByFuture("Hello World");</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>How to send a simple Text message using the RemoteEndpoint.
The message will be enqueued for outgoing write, but you will not know if i=
t succeeded or failed.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">R=
emoteEndpoint remote =3D session.getRemote();

// Async Send of a TEXT message to remote endpoint
try
{
    Future<void> fut =3D remote.sendStringByFuture("Hello World");
    // wait for completion (forever)
    fut.get();
}
catch (ExecutionException | InterruptedException e)
{
    // Send failed
    e.printStackTrace();
}</void></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>How to send a simple Binary message using the RemoteEndpoint, tracking t=
he <code>Future&lt;Void&gt;</code> to know if the send succeeded or failed.=
</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">R=
emoteEndpoint remote =3D session.getRemote();

// Async Send of a TEXT message to remote endpoint
Future<void> fut =3D null;
try
{
    fut =3D remote.sendStringByFuture("Hello World");
    // wait for completion (timeout)
    fut.get(2,TimeUnit.SECONDS);
}
catch (ExecutionException | InterruptedException e)
{
    // Send failed
    e.printStackTrace();
}
catch (TimeoutException e)
{
    // timeout
    e.printStackTrace();
    if (fut !=3D null)
    {
        // cancel the message
        fut.cancel(true);
    }
}</void></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>How to send a simple Binary message using the RemoteEndpoint, tracking t=
he <code>Future&lt;Void&gt;</code> and waiting only prescribed amount of ti=
me for the send to complete, cancelling the message if the timeout occurs.<=
/p>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"jetty-websocket-api-annotations">Using WebSocket Annotations</h3>
<div class=3D"paragraph">
<p>The most basic form of WebSocket is a marked up POJO with annotations
provided by the Jetty WebSocket API.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">U=
nresolved directive in development/websockets/jetty/jetty-websocket-api-ann=
otations.adoc - include::{SRCDIR}/jetty-websocket/websocket-common/src/test=
/java/examples/echo/AnnotatedEchoSocket.java[]</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The above example is a simple WebSocket echo endpoint that will echo bac=
k any TEXT messages it receives.</p>
</div>
<div class=3D"paragraph">
<p>This implementation is using a stateless approach to a Echo socket, as t=
he Session is being passed into the Message event as the event occurs.
This would allow you to reuse the single instance of the AnnotatedEchoSocke=
t for working with multiple endpoints.</p>
</div>
<div class=3D"paragraph">
<p>The annotations you have available:</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1"><a href=3D"file:///home/tian/Downloads/b60/ebook/jett=
y.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org=
/eclipse/jetty/websocket/api/annotations/WebSocket.html">@WebSocket</a></dt=
>
<dd>
<p>A required class level annotation.</p>
<div class=3D"paragraph">
<p>Flags this POJO as being a WebSocket.</p>
</div>
<div class=3D"paragraph">
<p>The class must be not abstract and public.</p>
</div>
</dd>
<dt class=3D"hdlist1"><a href=3D"file:///home/tian/Downloads/b60/ebook/jett=
y.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org=
/eclipse/jetty/websocket/api/annotations/OnWebSocketConnect.html">@OnWebSoc=
ketConnect</a></dt>
<dd>
<p>An optional method level annotation.</p>
<div class=3D"paragraph">
<p>Flags one method in the class as receiving the On Connect event.</p>
</div>
<div class=3D"paragraph">
<p>Method must be public, not abstract, return void, and have a single <a h=
ref=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jett=
y-documentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/websocket/a=
pi/Session.html">Session</a> parameter.</p>
</div>
</dd>
<dt class=3D"hdlist1"><a href=3D"file:///home/tian/Downloads/b60/ebook/jett=
y.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org=
/eclipse/jetty/websocket/api/annotations/OnWebSocketClose.html">@OnWebSocke=
tClose</a></dt>
<dd>
<p>An optional method level annotation.</p>
<div class=3D"paragraph">
<p>Flags one method in the class as receiving the On Close event.</p>
</div>
<div class=3D"paragraph">
<p>Method signature must be public, not abstract, and return void.</p>
</div>
<div class=3D"paragraph">
<p>The method parameters:</p>
</div>
<div class=3D"olist arabic">
<ol class=3D"arabic">
<li>
<p><a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/webs=
ocket/api/Session.html"><code>Session</code></a> (optional)</p>
</li>
<li>
<p><code>int closeCode</code> (required)</p>
</li>
<li>
<p><code>String closeReason</code> (required)</p>
</li>
</ol>
</div>
</dd>
<dt class=3D"hdlist1"><a href=3D"file:///home/tian/Downloads/b60/ebook/jett=
y.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org=
/eclipse/jetty/websocket/api/annotations/OnWebSocketMessage.html">@OnWebSoc=
ketMessage</a></dt>
<dd>
<p>An optional method level annotation.</p>
<div class=3D"paragraph">
<p>Flags up to 2 methods in the class as receiving On Message events.</p>
</div>
<div class=3D"paragraph">
<p>You can have 1 method for TEXT messages, and 1 method for BINARY message=
s.</p>
</div>
<div class=3D"paragraph">
<p>Method signature must be public, not abstract, and return void.</p>
</div>
<div class=3D"paragraph">
<p>The method parameters for Text messages:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p><a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/webs=
ocket/api/Session.html"><code>Session</code></a> (optional)</p>
</li>
<li>
<p><code>String text</code> (required)</p>
<div class=3D"paragraph">
<p>The method parameters for Binary messages:</p>
</div>
</li>
<li>
<p><a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/webs=
ocket/api/Session.html"><code>Session</code></a> (optional)</p>
</li>
<li>
<p><code>byte buf[]</code> (required)</p>
</li>
<li>
<p><code>int offset</code> (required)</p>
</li>
<li>
<p><code>int length</code> (required)</p>
</li>
</ul>
</div>
</dd>
<dt class=3D"hdlist1"><a href=3D"file:///home/tian/Downloads/b60/ebook/jett=
y.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org=
/eclipse/jetty/websocket/api/annotations/OnWebSocketError.html">@OnWebSocke=
tError</a></dt>
<dd>
<p>An optional method level annotation.</p>
<div class=3D"paragraph">
<p>Flags one method in the class as receiving Error events from the WebSock=
et implementation.</p>
</div>
<div class=3D"paragraph">
<p>Method signatures must be public, not abstract, and return void.</p>
</div>
<div class=3D"paragraph">
<p>The method parameters:</p>
</div>
<div class=3D"olist arabic">
<ol class=3D"arabic">
<li>
<p><a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/webs=
ocket/api/Session.html"><code>Session</code></a> (optional)</p>
</li>
<li>
<p><code>Throwable cause</code> (required)</p>
</li>
</ol>
</div>
</dd>
<dt class=3D"hdlist1"><a href=3D"file:///home/tian/Downloads/b60/ebook/jett=
y.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org=
/eclipse/jetty/websocket/api/annotations/OnWebSocketFrame.html">@OnWebSocke=
tFrame</a></dt>
<dd>
<p>An optional method level annotation.</p>
<div class=3D"paragraph">
<p>Flags one method in the class as receiving Frame events from the WebSock=
et implementation after they have been processed by any extensions declared=
 during the Upgrade handshake.</p>
</div>
<div class=3D"paragraph">
<p>Method signatures must be public, not abstract, and return void.</p>
</div>
<div class=3D"paragraph">
<p>The method parameters:</p>
</div>
<div class=3D"olist arabic">
<ol class=3D"arabic">
<li>
<p><a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/webs=
ocket/api/Session.html"><code>Session</code></a> (optional)</p>
</li>
<li>
<p><a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/webs=
ocket/api/extensions/Frame.html"><code>Frame</code></a> (required)</p>
<div class=3D"paragraph">
<p>The Frame received will be notified on this method, then be processed by=
 Jetty, possibly resulting in another event, such as On Close, or On Messag=
e.
Changes to the Frame will not be seen by Jetty.</p>
</div>
</li>
</ol>
</div>
</dd>
</dl>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"jetty-websocket-api-listener">Using WebSocketListener</h3>
<div class=3D"paragraph">
<p>The basic form of a WebSocket using the <a href=3D"file:///home/tian/Dow=
nloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asc=
iidoc/%7BJDURL%7D/org/eclipse/jetty/websocket/api/WebSocketListener.html"><=
code>org.eclipse.jetty.websocket.api.WebSocketListener</code></a> for incom=
ing events.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">U=
nresolved directive in development/websockets/jetty/jetty-websocket-api-lis=
tener.adoc - include::{SRCDIR}/jetty-websocket/websocket-common/src/test/ja=
va/examples/echo/ListenerEchoSocket.java[]</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>This is by far the most basic and best performing (speed and memory wise=
) WebSocket implementation you can create.
If the listener is too much work for you, you can instead opt for the WebSo=
cketAdapter</p>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"jetty-websocket-api-adapter">Using the WebSocketAdapter</h3>
<div class=3D"paragraph">
<p>A basic adapter for managing the Session object on the WebSocketListener=
.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">U=
nresolved directive in development/websockets/jetty/jetty-websocket-api-ada=
pter.adoc - include::{SRCDIR}/jetty-websocket/websocket-common/src/test/jav=
a/examples/echo/AdapterEchoSocket.java[]</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>This is a convenience class to make using the WebSocketListener easier, =
and provides some useful methods to check the state of the Session.</p>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"jetty-websocket-server-api">Jetty WebSocket Server API</h3>
<div class=3D"paragraph">
<p>Jetty provides the ability to wire up WebSocket endpoints to Servlet Pat=
h Specs via the use of a WebSocketServlet bridge servlet.</p>
</div>
<div class=3D"paragraph">
<p>Internally, Jetty manages the HTTP Upgrade to WebSocket and migration fr=
om a HTTP Connection to a WebSocket Connection.</p>
</div>
<div class=3D"paragraph">
<p>This will only work when running within the Jetty Container (unlike past=
 Jetty technologies, you cannot get Jetty WebSocket server functionality ru=
nning Jetty within other containers like JBoss, Tomcat, or WebLogic).</p>
</div>
<div class=3D"sect3">
<h4 id=3D"_the_jetty_websocketservlet">The Jetty WebSocketServlet</h4>
<div class=3D"paragraph">
<p>To wire up your WebSocket to a specific path via the WebSocketServlet, y=
ou will need to extend org.eclipse.jetty.websocket.servlet.WebSocketServlet=
 and specify what WebSocket object should be created with incoming Upgrade =
requests.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">U=
nresolved directive in development/websockets/jetty/jetty-websocket-server-=
api.adoc - include::{SRCDIR}/jetty-websocket/websocket-servlet/src/test/jav=
a/examples/MyEchoServlet.java[]</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>This example will create a Servlet mapped via the <a href=3D"http://docs=
.oracle.com/javaee/6/api/javax/servlet/annotation/WebServlet.html">@WebServ=
let</a> annotation to the Servlet path spec of <code>"/echo"</code> (or you=
 can do this manually in the <code>WEB-INF/web.xml</code> of your web appli=
cation) which will create MyEchoSocket instances when encountering HTTP Upg=
rade requests.</p>
</div>
<div class=3D"paragraph">
<p>The <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty=
-9.4.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/=
websocket/servlet/WebSocketServlet.html#configure(org.eclipse.jetty.websock=
et.servlet.WebSocketServletFactory)"><code>WebSocketServlet.configure(WebSo=
cketServletFactory factory)</code></a> is where you put your specific confi=
guration for your WebSocket.
In the example we specify a 10 second idle timeout and register MyEchoSocke=
t with the default WebSocketCreator the WebSocket class we want to be creat=
ed on Upgrade.</p>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Note</div>
</td>
<td class=3D"content">
It is important that you take in account any firewall or router timeouts
when configuring websockets. Be sure the websocket configuration is
lower than your firewall or router.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_using_the_websocketcreator">Using the WebSocketCreator</h4>
<div class=3D"paragraph">
<p>All WebSocket=E2=80=99s are created via whatever <a href=3D"file:///home=
/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src=
/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/websocket/servlet/WebSocketCre=
ator.html">WebSocketCreator</a> you have registered with the <a href=3D"fil=
e:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-document=
ation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/websocket/servlet/Web=
SocketServletFactory.html">WebSocketServletFactory</a>.</p>
</div>
<div class=3D"paragraph">
<p>By default, the WebSocketServletFactory is a simple WebSocketCreator cap=
able of creating a single WebSocket object.
Use <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.=
4.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/web=
socket/servlet/WebSocketServletFactory.html#register(java.lang.Class)"><cod=
e>WebSocketCreator.register(Class&lt;?&gt; websocket)</code></a> to tell th=
e WebSocketServletFactory which class it should instantiate (make sure it h=
as a default constructor).</p>
</div>
<div class=3D"paragraph">
<p>If you have a more complicated creation scenario, you might want to prov=
ide your own WebSocketCreator that bases the WebSocket it creates off of in=
formation present in the UpgradeRequest object.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">U=
nresolved directive in development/websockets/jetty/jetty-websocket-server-=
api.adoc - include::{SRCDIR}/jetty-websocket/websocket-servlet/src/test/jav=
a/examples/MyAdvancedEchoCreator.java[]</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Here we show a WebSocketCreator that will utilize the <a href=3D"http://=
tools.ietf.org/html/rfc6455#section-1.9">WebSocket subprotocol</a> informat=
ion from request to determine what WebSocket type should be
created.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">U=
nresolved directive in development/websockets/jetty/jetty-websocket-server-=
api.adoc - include::{SRCDIR}/jetty-websocket/websocket-servlet/src/test/jav=
a/examples/MyAdvancedEchoServlet.java[]</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>When you want a custom WebSocketCreator, use <a href=3D"file:///home/tia=
n/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/mai=
n/asciidoc/%7BJDURL%7D/org/eclipse/jetty/websocket/servlet/WebSocketServlet=
Factory.html#setCreator(org.eclipse.jetty.websocket.servlet.WebSocketCreato=
r)"><code>WebSocketServletFactory.setCreator(WebSocketCreator creator)</cod=
e></a> and the WebSocketServletFactory will use your creator for all incomi=
ng Upgrade requests on this servlet.</p>
</div>
<div class=3D"paragraph">
<p>Other uses for a WebSocketCreator:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>Controlling the selection of WebSocket subprotocol</p>
</li>
<li>
<p>Performing any WebSocket origin you deem important.</p>
</li>
<li>
<p>Obtaining the HTTP headers from incoming request</p>
</li>
<li>
<p>Obtaining the Servlet HttpSession object (if it exists)</p>
</li>
<li>
<p>Specifying a response status code and reason</p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>If you don=E2=80=99t want to accept the upgrade, simply return null from=
 the link:{JDURL}/org/eclipse/jetty/websocket/servlet/WebSocketCreator.html=
#createWebSocket(org.eclipse.jetty.websocket.api.UpgradeRequest, org.eclips=
e.jetty.websocket.api.UpgradeResponse)[<code>WebSocketCreator.createWebSock=
et(UpgradeRequest req, UpgradeResponse resp)</code>] method.</p>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"jetty-websocket-client-api">Jetty WebSocket Client API</h3>
<div class=3D"paragraph">
<p>Jetty also provides a Jetty WebSocket Client Library to write make talki=
ng to WebSocket servers easier.</p>
</div>
<div class=3D"paragraph">
<p>To use the Jetty WebSocket Client on your own Java project you will need=
 the following maven artifacts.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><de=
pendency>
  <groupid>org.eclipse.jetty.websocket</groupid>
  <artifactid>websocket-client</artifactid>
  <version>${project.version}</version>
</dependency></code></pre>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_the_websocketclient">The WebSocketClient</h4>
<div class=3D"paragraph">
<p>To use the WebSocketClient you will need to hook up a WebSocket object i=
nstance to a specific destination WebSocket URI.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">U=
nresolved directive in development/websockets/jetty/jetty-websocket-client-=
api.adoc - include::{SRCDIR}/jetty-websocket/websocket-client/src/test/java=
/examples/SimpleEchoClient.java[]</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The above example connects to a remote WebSocket server and hands off a =
SimpleEchoSocket to perform the logic on the websocket once connected, wait=
ing for the socket to register that it has closed.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">U=
nresolved directive in development/websockets/jetty/jetty-websocket-client-=
api.adoc - include::{SRCDIR}/jetty-websocket/websocket-client/src/test/java=
/examples/SimpleEchoSocket.java[]</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>When the SimpleEchoSocket connects, it sends 2 Text messages and then cl=
oses the socket.</p>
</div>
<div class=3D"paragraph">
<p>The onMessage(String msg) receives the responses from the remote server =
WebSocket and outputs them to the console.</p>
</div>
</div>
</div>
</div>
</div>
<div class=3D"sect1">
<h2 id=3D"continuations">Continuations</h2>
<div class=3D"sectionbody">
<div class=3D"sect2">
<h3 id=3D"continuations-intro">Introduction</h3>
<div class=3D"paragraph">
<p>Continuations are a mechanism to implement Asynchronous servlets similar=
 to asynchronous features in Servlet 3.0, but provides a simpler and portab=
le interface.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"_why_asynchronous_servlets">Why Asynchronous Servlets ?</h4>
<div class=3D"sect4">
<h5 id=3D"_not_asynchronous_io">Not Asynchronous IO</h5>
<div class=3D"paragraph">
<p>The concept of Asynchronous Servlets is often confused with Asynchronous=
 IO or the use of NIO.
However, Asynchronous Servlets are not primarily motivated by asynchronous =
IO, since:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>HTTP Requests are mostly small and arrive in a single packet. Servlets r=
arely block on requests.</p>
</li>
<li>
<p>Many responses are small and fit within the server buffers, so servlets =
often do not block writing responses.</p>
</li>
<li>
<p>Even if we could expose asynchronous IO in a servlet, it is a hard parad=
igm to program. For example what would an application do if it read 2 bytes=
 of a 3 byte UTF-8 character?
It would have to buffer and wait for more bytes.
This is best done by the container rather than the application.</p>
</li>
</ul>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_asynchronous_waiting">Asynchronous Waiting</h5>
<div class=3D"paragraph">
<p>The main use-case for asynchronous servlets is waiting for non-IO events=
 or resources.
Many web applications need to wait at some stage during the processing of a=
 HTTP request, for example:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>Waiting for a resource to be available before processing the request (e.=
g., thread, JDBC Connection).</p>
</li>
<li>
<p>Waiting for an application event in an AJAX Comet application (e.g., cha=
t message, price change).</p>
</li>
<li>
<p>Waiting for a response from a remote service (e.g., RESTful or SOAP call=
 to a web service).</p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>The servlet API (pre 2.5) supports only a synchronous call style, so tha=
t any waiting that a servlet needs to do must be with blocking.
Unfortunately this means that the thread allocated to the request must be h=
eld during that wait along with all its resources: kernel thread, stack mem=
ory and often pooled buffers, character converters, EE authentication conte=
xt, etc.
It is wasteful of system resources to hold these resources while waiting. S=
ignificantly better scalability and quality of service can be achieved if w=
aiting is done asynchronously.</p>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_asynchronous_servlet_examples">Asynchronous Servlet Examples</h4=
>
<div class=3D"sect4">
<h5 id=3D"_ajax_comet_server_push">AJAX Comet Server Push</h5>
<div class=3D"paragraph">
<p>Web 2.0 applications can use the <a href=3D"http://en.wikipedia.org/wiki=
/Comet_(programming)">comet</a> technique (aka AJAX Push, Server Push, Long=
 Polling) to dynamically update a web page without refreshing the entire pa=
ge.</p>
</div>
<div class=3D"paragraph">
<p>Consider a stock portfolio web application. Each browser will send a lon=
g poll request to the server asking for any of the user=E2=80=99s stock pri=
ces that have changed. The server will receive the long poll requests from =
all its clients, but will not immediately respond.
Instead the server waits until a stock price changes, at which time it will=
 send a response to each of the clients with that stock in their portfolio.
The clients that receive the long poll response will immediately send anoth=
er long poll request so they may obtain future price changes.</p>
</div>
<div class=3D"paragraph">
<p>Thus the server will typically hold a long poll request for every connec=
ted user, so if the servlet is not asynchronous, there would need more than=
 1000 threads available to handle 1000 simultaneous users.
1000 threads can consume over 256MB of memory; that would be better used fo=
r the application rather than idly waiting for a price to change.</p>
</div>
<div class=3D"paragraph">
<p>If the servlet is asynchronous, then the number of threads needed is gov=
erned by the time to generate each response and the frequency of price chan=
ges.
If every user receives a price every 10 seconds and the response takes 10ms=
 to generate, then 1000 users can be serviced with just 1 thread, and the 2=
56MB of stack be freed for other purposes.</p>
</div>
<div class=3D"paragraph">
<p>For more on comet see the <a href=3D"http://cometd.org/">cometd</a> proj=
ect that works asynchronously with Jetty.</p>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_asynchronous_restful_web_service">Asynchronous RESTful Web Servi=
ce</h5>
<div class=3D"paragraph">
<p>Consider a web application that accesses a remote web service (e.g., SOA=
P service or RESTful service).
Typically a remote web service can take hundreds of milliseconds to produce=
 a response=E2=80=89=E2=80=94=E2=80=89eBay=E2=80=99s RESTful web service fr=
equently takes 350ms to respond with a list of auctions matching a given ke=
yword=E2=80=89=E2=80=94=E2=80=89while only a few 10s of milliseconds of CPU=
 time are needed to locally process a request and generate a response.</p>
</div>
<div class=3D"paragraph">
<p>To handle 1000 requests per second, which each perform a 200ms web servi=
ce call, a webapp would needs 1000*(200+20)/1000 =3D 220 threads and 110MB =
of stack memory.
It would also be vulnerable to thread starvation if bursts occurred or the =
web service became slower. If handled asynchronously, the web application w=
ould not need to hold a thread while waiting for web service response.
Even if the asynchronous mechanism cost 10ms (which it doesn=E2=80=99t), th=
en this webapp would need 1000*(20+10)/1000 =3D 30 threads and 15MB of stac=
k memory.
This is a 86% reduction in the resources required and 95MB more memory woul=
d be available for the application.
Furthermore, if multiple web services request are required, the asynchronou=
s approach allows these to be made in parallel rather than serially, withou=
t allocating additional threads.</p>
</div>
<div class=3D"paragraph">
<p>For an example of Jetty=E2=80=99s solution, see the <a href=3D"https://w=
ebtide.com/async-rest-jetty-9/">Asynchronous REST example</a></p>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_quality_of_service_e_g_jdbc_connection_pool">Quality of Service =
(e.g., JDBC Connection Pool)</h5>
<div class=3D"paragraph">
<p>Consider a web application handling on average 400 requests per second, =
with each request interacting with the database for 50ms.
To handle this load, 400*50/1000 =3D 20 JDBC connections are need on averag=
e.
However, requests do not come at an even rate and there are often bursts an=
d pauses.
To protect a database from bursts, often a JDBC connection pool is applied =
to limit the simultaneous requests made on the database.
So for this application, it would be reasonable to apply a JDBC pool of 30 =
connections, to provide for a 50% margin.</p>
</div>
<div class=3D"paragraph">
<p>If momentarily the request rate doubled, then the 30 connections would o=
nly be able to handle 600 requests per second, and 200 requests per second =
would join those waiting on the JDBC Connection pool.
Then if the servlet container had a thread pool with 200 threads, that woul=
d be entirely consumed by threads waiting for JDBC connections in 1 second =
of this request rate.
After 1s, the web application would be unable to process any requests at al=
l because no threads would be available.
Even requests that do not use the database would be blocked due to thread s=
tarvation.
To double the thread pool would require an additional 100MB of stack memory=
 and would only give the application another 1s of grace under load!</p>
</div>
<div class=3D"paragraph">
<p>This thread starvation situation can also occur if the database runs slo=
wly or is momentarily unavailable.
Thread starvation is a very frequently reported problem, and causes the ent=
ire web service to lock up and become unresponsive.
If the web container was able to suspend the requests waiting for a JDBC co=
nnection without threads, then thread starvation would not occur, as only 3=
0 threads would be consumed by requests accessing the database and the othe=
r 470 threads would be available to process the request that do not access =
the database.</p>
</div>
<div class=3D"paragraph">
<p>For an example of Jetty=E2=80=99s solution, see the Quality of Service F=
ilter.</p>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_servlet_threading_model">Servlet Threading Model</h4>
<div class=3D"paragraph">
<p>The scalability issues of Java servlets are caused mainly by the server =
threading model:</p>
</div>
<div class=3D"sect4">
<h5 id=3D"_thread_per_connection">Thread per connection</h5>
<div class=3D"paragraph">
<p>The traditional IO model of Java associated a thread with every TCP/IP c=
onnection.
If you have a few very active threads, this model can scale to a very high =
number of requests per second.</p>
</div>
<div class=3D"paragraph">
<p>However, the traffic profile typical of many web applications is many pe=
rsistent HTTP connections that are mostly idle while users read pages or se=
arch for the next link to click. With such profiles, the thread-per-connect=
ion model can have problems scaling to the thousands of threads required to=
 support thousands of users on large scale deployments.</p>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_thread_per_request">Thread per request</h5>
<div class=3D"paragraph">
<p>The Java NIO libraries support asynchronous IO, so that threads no longe=
r need to be allocated to every connection.
When the connection is idle (between requests), then the connection is adde=
d to an NIO select set, which allows one thread to scan many connections fo=
r activity.
Only when IO is detected on a connection is a thread allocated to it.
However, the servlet 2.5 API model still requires a thread to be allocated =
for the duration of the request handling.</p>
</div>
<div class=3D"paragraph">
<p>This thread-per-request model allows much greater scaling of connections=
 (users) at the expense of a small reduction to maximum requests per second=
 due to extra scheduling latency.</p>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_asynchronous_request_handling">Asynchronous Request handling</h5=
>
<div class=3D"paragraph">
<p>The Jetty Continuation (and the servlet 3.0 asynchronous) API introduce =
a change in the servlet API that allows a request to be dispatched multiple=
 times to a servlet.
If the servlet does not have the resources required on a dispatch, then the=
 request is suspended (or put into asynchronous mode), so that the servlet =
may return from the dispatch without a response being sent.
When the waited-for resources become available, the request is re-dispatche=
d to the servlet, with a new thread, and a response is generated.</p>
</div>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"continuations-using">Using Continuations</h3>
<div class=3D"paragraph">
<p>Asynchronous servlets were originally introduced with Jetty 6 Continuati=
ons, which were a Jetty specific mechanism.
From Jetty 7 onwards, the Continuations API has been extended to be a gener=
al purpose API that will work asynchronously on any servlet-3.0 container, =
as well as on Jetty 6, 7, or 8.
Continuations will also work in blocking mode with any servlet 2.5 containe=
r.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"_obtaining_a_continuation">Obtaining a Continuation</h4>
<div class=3D"paragraph">
<p>The <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty=
-9.4.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/=
continuation/ContinuationSupport.html">ContinuationSupport</a> factory clas=
s can be used to obtain a continuation instance associated with a request:<=
/p>
</div>
<div class=3D"paragraph">
<p><code>Continuation continuation =3D ContinuationSupport.getContinuation(=
request);</code></p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_suspending_a_request">Suspending a Request</h4>
<div class=3D"paragraph">
<p>To suspend a request, the suspend method can be called on the continuati=
on:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java"> =
   void doGet(HttpServletRequest request, HttpServletResponse response)
      {
      ...
      // optionally:
      // continuation.setTimeout(long);
      continuation.suspend();
      ...
      }</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The lifecycle of the request will be extended beyond the return to the  =
container from the <code>Servlet.service(...)</code> method and <code>Filte=
r.doFilter(...)</code> calls. When these dispatch methods return, the suspe=
nded request will not yet be committed and a response will not yet be sent =
to the HTTP client.</p>
</div>
<div class=3D"paragraph">
<p>Once the request has been suspended, the continuation should be register=
ed with an asynchronous service so that it may be used by an asynchronous c=
allback when the waited-for event happens.</p>
</div>
<div class=3D"paragraph">
<p>The request will be suspended until either <code>continuation.resume()</=
code> or <code>continuation.complete()</code> is called. If neither is call=
ed then the continuation will timeout.
The timeout should be set before the suspend, by a call to <code>continuati=
on.setTimeout(long)</code> if no timeout is set, then the default period is=
 used.
If no timeout listeners resume or complete the continuation, then the conti=
nuation is resumed with <code>continuation.isExpired()</code> true.</p>
</div>
<div class=3D"paragraph">
<p>Suspension is analogous to the servlet 3.0 <code>request.startAsync()</c=
ode> method. Unlike jetty 6 continuations, an exception is not thrown by su=
spend and the method should return normally.
This allows the registration of the continuation to occur after suspension =
and avoids the need for a mutex.
If an exception is desirable (to bypass code that is unaware of continuatio=
ns and may try to commit the response), then <code>continuation.undispatch(=
)</code> may be called to exit the current thread from the current dispatch=
 by throwing a <code>ContinuationThrowable</code>.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_resuming_a_request">Resuming a Request</h4>
<div class=3D"paragraph">
<p>Once an asynchronous event has occurred, the continuation can be resumed=
:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java"> =
   void myAsyncCallback(Object results)
    {
    continuation.setAttribute("results",results);
    continuation.resume();
    }</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>When a continuation is resumed, the request is re-dispatched to the serv=
let container, almost as if the request had been received again.
However during the re-dispatch, the <code>continuation.isInitial()</code> m=
ethod returns false and any attributes set by the asynchronous handler are =
available.</p>
</div>
<div class=3D"paragraph">
<p>Continuation resume is analogous to Servlet 3.0 <code>AsyncContext.dispa=
tch()</code>.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_completing_a_request">Completing a Request</h4>
<div class=3D"paragraph">
<p>As an alternative to resuming a request, an asynchronous handler may  wr=
ite the response itself. After writing the response, the handler must indic=
ate the request handling is complete by calling the complete method:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java"> =
   void myAsyncCallback(Object results)
    {
      writeResults(continuation.getServletResponse(),results);
      continuation.complete();
    }</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>After complete is called, the container schedules the response to be  co=
mmitted and flushed. Continuation complete is analogous to Servlet 3.0 <cod=
e>AsyncContext.complete()</code>.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_continuation_listeners">Continuation Listeners</h4>
<div class=3D"paragraph">
<p>An application may monitor the status of a continuation by using a Conti=
nuationListener:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java"> =
   void doGet(HttpServletRequest request, HttpServletResponse response)
    {
      ...

      Continuation continuation =3D ContinuationSupport.getContinuation(req=
uest);
      continuation.addContinuationListener(new ContinuationListener()
      {
        public void onTimeout(Continuation continuation) { ... }
        public void onComplete(Continuation continuation) { ... }
      });

      continuation.suspend();
      ...
    }</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Continuation listeners are analogous to Servlet 3.0 AsyncListeners.</p>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"continuations-patterns">Common Continuation Patterns</h3>
<div class=3D"sect3">
<h4 id=3D"_suspend_resume_pattern">Suspend Resume Pattern</h4>
<div class=3D"paragraph">
<p>The suspend/resume style is used when a servlet and/or filter is used to=
 generate the response after an asynchronous wait that is terminated by an =
asynchronous handler.
Typically a request attribute is used to pass results and to indicate if th=
e request has already been suspended.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">v=
oid doGet(HttpServletRequest request, HttpServletResponse response)
{
     // if we need to get asynchronous results
     Object results =3D request.getAttribute("results");
     if (results=3D=3Dnull)
     {
       final Continuation continuation =3D ContinuationSupport.getContinuat=
ion(request);

       // if this is not a timeout
       if (continuation.isExpired())
       {
         sendMyTimeoutResponse(response);
         return;
       }

       // suspend the request
       continuation.suspend(); // always suspend before registration

       // register with async service.  The code here will depend on the
       // the service used (see Jetty HttpClient for example)
       myAsyncHandler.register(new MyHandler()
       {
          public void onMyEvent(Object result)
          {
            continuation.setAttribute("results",results);
            continuation.resume();
          }
       });
       return; // or continuation.undispatch();
     }

     // Send the results
     sendMyResultResponse(response,results);
}</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>This style is very good when the response needs the facilities of the se=
rvlet container (e.g., it uses a web framework) or if one event may resume =
many requests so the container=E2=80=99s thread pool can be used to handle =
each of them.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_suspend_continue_pattern">Suspend Continue Pattern</h4>
<div class=3D"paragraph">
<p>The suspend/complete style is used when an asynchronous handler is used =
to generate the response:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">v=
oid doGet(HttpServletRequest request, HttpServletResponse response)
{
     final Continuation continuation =3D ContinuationSupport.getContinuatio=
n(request);

     // if this is not a timeout
     if (continuation.isExpired())
     {
       sendMyTimeoutResponse(request,response);
       return;
     }

     // suspend the request
     continuation.suspend(); // response may be wrapped.

     // register with async service.  The code here will depend on the
     // the service used (see Jetty HttpClient for example)
     myAsyncHandler.register(new MyHandler()
     {
       public void onMyEvent(Object result)
       {
         sendMyResultResponse(continuation.getServletResponse(),results);
         continuation.complete();
       }
     });
}</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>This style is very good when the response does not need the facilities o=
f the servlet container (e.g., it does not use a web framework) and if an e=
vent will resume only one continuation.
If many responses are to be sent (e.g., a chat room), then writing one resp=
onse may block and cause a DOS on the other responses.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_examples">Examples</h4>
<div class=3D"ulist">
<ul>
<li>
<p>The <a href=3D"https://github.com/eclipse/jetty.project/blob/jetty-8/tes=
t-jetty-webapp/src/main/java/com/acme/ChatServlet.java">ChatServlet example=
</a> shows how the suspend/resume style can be used to directly code a chat=
 room (See similar <a href=3D"https://github.com/eclipse/jetty.project/blob=
/master/tests/test-webapps/test-jetty-webapp/src/main/java/com/acme/ChatSer=
vlet.java">example</a> using Async Servlets).
The same principles are applied to frameworks like <a href=3D"http://cometd=
.org/">cometd</a> which provide an richer environment for such applications=
, based on Continuations.</p>
</li>
<li>
<p>The <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty=
-9.4.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/=
servlets/QoSFilter.html">QoSFilter</a> uses suspend/resume style to limit t=
he number of requests simultaneously within the filter.
This can be used to protect a JDBC connection pool or other limited resourc=
e from too many simultaneous requests.</p>
<div class=3D"paragraph">
<p>If too many requests are received, the extra requests wait for a short t=
ime on a semaphore, before being suspended.
As requests within the filter return, they use a priority queue to resume t=
he suspended requests.
This allows your authenticated or priority users to get a better share of y=
our server=E2=80=99s resources when the machine is under load.</p>
</div>
</li>
<li>
<p>The <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty=
-9.4.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/=
servlets/DoSFilter.html">DosFilter</a> is similar to the QoSFilter, but pro=
tects a web application from a denial of service attack, as much as is poss=
ible from within a web application.</p>
<div class=3D"paragraph">
<p>If too many requests are detected coming from one source, then those req=
uests are suspended and a warning generated.
This works on the assumption that the attacker may be written in simple blo=
cking style, so by suspending you are hopefully consuming their resources. =
True protection from DOS can only be achieved by network devices (or eugeni=
cs :)).</p>
</div>
</li>
<li>
<p>The <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty=
-9.4.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/=
proxy/ProxyServlet.html">ProxyServlet</a> uses the suspend/complete style a=
nd the Jetty asynchronous HTTP client to implement a scalable Proxy server =
(or transparent proxy).</p>
</li>
</ul>
</div>
</div>
</div>
</div>
</div>
<div class=3D"sect1">
<h2 id=3D"frameworks">Frameworks</h2>
<div class=3D"sectionbody">
<div class=3D"sect2">
<h3 id=3D"framework-jetty-spring">Spring Setup</h3>
<div class=3D"paragraph">
<p>You can assemble and configure Jetty in code or with almost any IoC styl=
e framework including Spring.
If all you want to do is setup a Jetty server in your stock Spring usage, s=
imply look at the xml snippet below as an example.
If you want to replace the jetty-xml being used to start the normal Jetty d=
istribution with spring, you may do so however currently it will not levera=
ge the rest of the module system.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"_jetty_spring_module">Jetty-Spring Module</h4>
<div class=3D"paragraph">
<p>The skeleton of a jetty spring module can be enabled from the jetty-dist=
ribution via the <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.pro=
ject-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#startup-m=
odules">module mechanism</a>.
For example:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">$ java -jar start.jar --add-to-start=3Dspring</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>This (or the alternative <a href=3D"file:///home/tian/Downloads/b60/eboo=
k/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.htm=
l#start-jar">--add-to-start</a>=3Dspring command) creates a <code>${jetty.h=
ome}/lib/spring</code> directory and populates it with the jetty-spring int=
egration jar.
It does NOT supply the spring jars and their dependencies.
You will need to download these and place them into jetty=E2=80=99s classpa=
th - you can use the <code>${jetty.home}/lib/spring</code> directory create=
d by spring.mod for this purpose.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_using_spring_to_configure_jetty">Using Spring to Configure Jetty=
</h4>
<div class=3D"paragraph">
<p>Configuring Jetty via Spring is simply a matter of calling the API as Sp=
ring beans.
The following is an example mimicking the default jetty startup configurati=
on.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><!-=
-?xml version=3D"1.0" encoding=3D"UTF-8"?-->


<!-- =3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D -->
<!-- Configure the Jetty Server with Spring                          -->
<!-- This file is the similar to jetty.xml, but written in spring    -->
<!-- XmlBeanFactory format.                                          -->
<!-- =3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D -->

<beans>
    <bean id=3D"contexts" class=3D"org.eclipse.jetty.server.handler.Context=
HandlerCollection">
    <bean id=3D"server" name=3D"Main" class=3D"org.eclipse.jetty.server.Ser=
ver" init-method=3D"start" destroy-method=3D"stop">
        <constructor-arg>
            <bean id=3D"threadPool" class=3D"org.eclipse.jetty.util.thread.=
QueuedThreadPool">
                <property name=3D"minThreads" value=3D"10">
                <property name=3D"maxThreads" value=3D"50">
            </property></property></bean>
        </constructor-arg>
        <property name=3D"connectors">
            <list>
                <bean id=3D"connector" class=3D"org.eclipse.jetty.server.Se=
rverConnector">
                    <constructor-arg ref=3D"server">
                    <property name=3D"port" value=3D"8080">
                </property></constructor-arg></bean>
            </list>
        </property>
        <property name=3D"handler">
            <bean id=3D"handlers" class=3D"org.eclipse.jetty.server.handler=
.HandlerCollection">
            <property name=3D"handlers">
                    <list>
                        <ref bean=3D"contexts">
                        <bean id=3D"defaultHandler" class=3D"org.eclipse.je=
tty.server.handler.DefaultHandler">
                    </bean></ref></list>
                </property>
            </bean>
        </property>
        <property name=3D"beans">
            <list>
                <bean id=3D"deploymentManager" class=3D"org.eclipse.jetty.d=
eploy.DeploymentManager">
                    <property name=3D"contexts" ref=3D"contexts">
                    <property name=3D"appProviders">
                        <list>
                            <bean id=3D"webAppProvider" class=3D"org.eclips=
e.jetty.deploy.providers.WebAppProvider">
                                <property name=3D"monitoredDirName" value=
=3D"webapps">
                                <property name=3D"scanInterval" value=3D"1"=
>
                                <property name=3D"extractWars" value=3D"tru=
e">
                            </property></property></property></bean>
                        </list>
                    </property>
                </property></bean>
            </list>
        </property>
    </bean>
</bean></beans></code></pre>
</div>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"framework-jetty-osgi">OSGI</h3>
<div class=3D"sect3">
<h4 id=3D"_introduction">Introduction</h4>
<div class=3D"paragraph">
<p>The Jetty OSGi infrastructure provides a Jetty container inside an OSGi =
container.
Traditional JavaEE webapps can be deployed, in addition to Jetty <code>Cont=
extHandlers</code>, along with OSGi web bundles.
In addition, the infrastructure also supports the OSGi <code>HttpService</c=
ode> interface.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_general_setup">General Setup</h4>
<div class=3D"paragraph">
<p>All of the Jetty jars contain manifest entries appropriate to ensure tha=
t they can be deployed into an OSGi container as bundles.
You will need to install some jetty jars into your OSGi container.
You can always find the Jetty jars either in the Maven Central repository, =
or you can <a href=3D"https://www.eclipse.org/jetty/download.html">download=
</a> a distribution of Jetty.
Here=E2=80=99s the absolute minimal set of Jetty jars:</p>
</div>
<table class=3D"tableblock frame-all grid-all spread">
<caption class=3D"title">Table 15. Bundle Name Mapping</caption>
<colgroup>
<col style=3D"width: 50%;">
<col style=3D"width: 50%;">
</colgroup>
<thead>
<tr>
<th class=3D"tableblock halign-left valign-top">Jar</th>
<th class=3D"tableblock halign-left valign-top">Bundle Symbolic Name</th>
</tr>
</thead>
<tbody>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">jet=
ty-util</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">org=
.eclipse.jetty.util</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">jet=
ty-http</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">org=
.eclipse.jetty.http</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">jet=
ty-io</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">org=
.eclipse.jetty.io</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">jet=
ty-security</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">org=
.eclipse.jetty.security</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">jet=
ty-server</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">org=
.eclipse.jetty.server</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">jet=
ty-servlet</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">org=
.eclipse.jetty.servlet</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">jet=
ty-webapp</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">org=
.eclipse.jetty.webapp</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">jet=
ty-deploy</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">org=
.eclipse.jetty.deploy</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">jet=
ty-xml</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">org=
.eclipse.jetty.xml</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">jet=
ty-osgi-servlet-api</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">org=
.eclipse.jetty.toolchain</p></td>
</tr>
</tbody>
</table>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Note</div>
</td>
<td class=3D"content">
We recommend that you also deploy the <a href=3D"file:///home/tian/Download=
s/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc=
/index.html#osgi-annotations">annotation-related</a> jars also, as the Serv=
let Specification increasingly relies on annotations for functionality.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
<div class=3D"paragraph">
<p>You will also need the <strong>OSGi Event Management service</strong> an=
d the <strong>OSGi Configuration Management service</strong>.
If your OSGi container does not automatically make these available, you wil=
l need to add them in a way appropriate to your container.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_the_jetty_osgi_container">The Jetty OSGi Container</h4>
<div class=3D"sect4">
<h5 id=3D"_the_jetty_osgi_boot_jar">The jetty-osgi-boot jar</h5>
<div class=3D"paragraph">
<p>Now that you have the basic set of Jetty jars installed, you can install=
 the <a href=3D"http://central.maven.org/maven2/org/eclipse/jetty/osgi/jett=
y-osgi-boot/">jetty-osgi-boot.jar</a> bundle, downloadable from the maven c=
entral repo <a href=3D"http://central.maven.org/maven2/org/eclipse/jetty/os=
gi/jetty-osgi-boot/">here.</a></p>
</div>
<div class=3D"paragraph">
<p>This bundle will instantiate and make available the Jetty OSGi container=
 when it is started.
If this bundle is not auto-started upon installation into your OSGi contain=
er, you should start it manually using a command appropriate for your conta=
iner.</p>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"customize-jetty-container">Customizing the Jetty Container</h5>
<div class=3D"paragraph">
<p>Before going ahead with the install, you may want to customize the Jetty=
 container.
In general this is done by a combination of System properties and the usual=
 Jetty xml configuration files.
The way you define the System properties will depend on which OSGi containe=
r you are using, so ensure that you are familiar with how to set them for y=
our environment.
In the following examples, we will assume that the OSGi container allows us=
 to set System properties as simple <code>name=3Dvalue</code> pairs.</p>
</div>
<div class=3D"paragraph">
<p>The available System properties are:</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">jetty.http.port</dt>
<dd>
<p>If not specified, this defaults to the usual jetty port of 8080.</p>
</dd>
<dt class=3D"hdlist1">jetty.home</dt>
<dd>
<p>Either this property <em>or</em> the <strong>jetty.home.bundle</strong> =
<em>must</em> be specified.
This property should point to a file system location that has an <code>etc/=
</code> directory containing xml files to configure the Jetty container on =
startup.
For example:</p>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-plain" data-lang=3D"plain"=
>jetty.home=3D/opt/custom/jetty</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Where <code>/opt/custom/jetty</code> contains:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-plain" data-lang=3D"plain"=
>etc/jetty.xml
etc/jetty-selector.xml
etc/jetty-deployer.xml
etc/jetty-special.xml</code></pre>
</div>
</div>
</dd>
<dt class=3D"hdlist1">jetty.home.bundle</dt>
<dd>
<p>Either this property <em>or</em> the <strong>jetty.home</strong> propert=
y must be specified.
This property should specify the symbolic name of a bundle which contains a=
 directory called <code>jettyhome/</code>.
The <code>jettyhome/</code> directory should have a subdirectory called <co=
de>etc/</code> that contains the xml files to be applied to Jetty on startu=
p.
The jetty-osgi-boot.jar contains a <code>jettyhome/</code> directory with a=
 default set of xml configuration files.
Here=E2=80=99s how you would specify it:</p>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-plain" data-lang=3D"plain"=
>jetty.home.bundle=3Dorg.eclipse.jetty.osgi.boot</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Here=E2=80=99s a partial listing of that jar that shows you the names of=
 the xml files contained within it:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-plain" data-lang=3D"plain"=
>META-INF/MANIFEST.MF
jettyhome/etc/jetty.xml
jettyhome/etc/jetty-deployer.xml
jettyhome/etc/jetty-http.xml</code></pre>
</div>
</div>
</dd>
<dt class=3D"hdlist1">jetty.etc.config.urls</dt>
<dd>
<p>This specifies the paths of the xml files that are to be used.
If not specified, they default to:</p>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-plain" data-lang=3D"plain"=
>etc/jetty.xml,etc/jetty-http.xml,etc/jetty-deployer.xml</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Note that the paths can either be relative or absolute, or a mixture.
If the path is relative, it is resolved against either <strong>jetty.home</=
strong> or <strong>jetty.home.bundle</strong>, whichever was specified.
You can use this ability to mix and match jetty configuration files to add =
functionality, such as adding in a https connector.
Here=E2=80=99s an example of adding a HTTPS connector, using the relevant f=
iles from the jetty-distribution:</p>
</div>
<div class=3D"literalblock">
<div class=3D"content">
<pre>etc/jetty.xml, etc/jetty-http.xml, /opt/jetty/etc/jetty-ssl.xml, /opt/=
jetty/etc/jetty-https.xml, etc/jetty-deployer.xml</pre>
</div>
</div>
<div class=3D"paragraph">
<p>Note that regardless of whether you set the <strong>jetty.home</strong> =
or <strong>jetty.home.bundle</strong> property, when Jetty executes the con=
figuration files, it will set an appropriate value for <strong>jetty.home</=
strong> so that references in xml files to <code>&lt;property name=3D"jetty=
.home"&gt;</code> will work.
Be careful, however, if you are mixing and matching relative and absolute c=
onfiguration file paths: the value of <strong>jetty.home</strong> is determ=
ined from the resolved location of the <em>relative</em> files only.</p>
</div>
</dd>
</dl>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_the_jetty_container_as_an_osgi_service">The Jetty Container as a=
n OSGi Service</h5>
<div class=3D"paragraph">
<p>You can now go ahead and deploy the jetty-osgi-boot.jar into your OSGi c=
ontainer.
A Jetty server instance will be created, the xml config files applied to it=
, and then published as an OSGi service.
Normally, you will not need to interact with this service instance, however=
 you can retrieve a reference to it using the usual OSGi API:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">o=
rg.osgi.framework.BundleContext bc;
org.osgi.framework.ServiceReference ref =3D bc.getServiceReference("org.ecl=
ipse.jetty.server.Server");</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The Server service has a couple of properties associated with it that yo=
u can retrieve using the <code>org.osgi.framework.ServiceReference.getPrope=
rty(String)</code> method:</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">managedServerName</dt>
<dd>
<p>The Jetty Server instance created by the jetty-osgi-boot.jar will be cal=
led "defaultJettyServer"</p>
</dd>
<dt class=3D"hdlist1">jetty.etc.config.urls</dt>
<dd>
<p>The list of xml files resolved from either <strong>jetty.home</strong> o=
r <strong>jetty.home.bundle</strong>/jettyhome</p>
</dd>
</dl>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_adding_more_jetty_servers">Adding More Jetty Servers</h5>
<div class=3D"paragraph">
<p>As we have seen in the previous section, the jetty-osgi-boot code will c=
reate an <code>org.eclipse.jetty.server.Server</code> instance, apply the x=
ml configuration files specified by <strong>jetty.etc.config.urls</strong> =
System property to it, and then register it as an OSGi Service.
The name associated with this default instance is <code>defaultJettyServer<=
/code>.</p>
</div>
<div class=3D"paragraph">
<p>You can create other Server instances, register them as OSGi Services, a=
nd the jetty-osgi-boot code will notice them, and configure them so that th=
ey can deploy <code>ContextHandlers</code> and webapp bundles.
When you deploy webapps or <code>ContextHandlers</code> as bundles or Servi=
ces (see sections below) you can target them to be deployed to a particular=
 server instance via
the Server=E2=80=99s name.</p>
</div>
<div class=3D"paragraph">
<p>Here=E2=80=99s an example of how to create a new Server instance and reg=
ister it with OSGi so that the jetty-osgi-boot code will find it and config=
ure it so it can be a deployment target:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">p=
ublic class Activator implements BundleActivator
{

    public void start(BundleContext context) throws Exception
    {

        Server server =3D new Server();
        //do any setup on Server in here
        String serverName =3D "fooServer";
        Dictionary serverProps =3D new Hashtable();
        //define the unique name of the server instance
        serverProps.put("managedServerName", serverName);
        serverProps.put("jetty.http.port", "9999");
        //let Jetty apply some configuration files to the Server instance
        serverProps.put("jetty.etc.config.urls", "file:/opt/jetty/etc/jetty=
.xml,file:/opt/jetty/etc/jetty-selector.xml,file:/opt/jetty/etc/jetty-deplo=
yer.xml");
        //register as an OSGi Service for Jetty to find
        context.registerService(Server.class.getName(), server, serverProps=
);

    }
}</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Now that we have created a new Server called "fooServer", we can deploy =
webapps and <code>ContextHandlers</code> as Bundles or Services to it (see =
below for more information on this). Here=E2=80=99s an example of deploying=
 a webapp as a Service and targeting it to the "fooServer" Server we create=
d above:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">p=
ublic class Activator implements BundleActivator
{

    public void start(BundleContext context) throws Exception
    {

        //Create a webapp context as a Service and target it at the "fooSer=
ver" Server instance
        WebAppContext webapp =3D new WebAppContext();
        Dictionary props =3D new Hashtable();
        props.put("war",".");
        props.put("contextPath","/acme");
        props.put("managedServerName", "fooServer");
        context.registerService(ContextHandler.class.getName(),webapp,props=
);
    }
}</code></pre>
</div>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_deploying_bundles_as_webapps">Deploying Bundles as Webapps</h4>
<div class=3D"paragraph">
<p>The Jetty OSGi container listens for the installation of bundles, and wi=
ll automatically attempt to deploy any that appear to be webapps.</p>
</div>
<div class=3D"paragraph">
<p>Any of the following criteria are sufficient for Jetty to deploy the bun=
dle as a webapp:</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">Bundle contains a WEB-INF/web.xml file</dt>
<dd>
<p>If the bundle contains a web descriptor, then it is automatically deploy=
ed.
This is an easy way to deploy classic JavaEE webapps.</p>
</dd>
<dt class=3D"hdlist1">Bundle MANIFEST contains Jetty-WarFolderPath (for rel=
eases prior tojetty-9.3) or Jetty-WarResourcePath</dt>
<dd>
<p>This is the location within the bundle of the webapp resources.
Typically this would be used if the bundle is not a pure webapp, but rather=
 the webapp is a component of the bundle.
Here=E2=80=99s an example of a bundle where the resources of the webapp are=
 not located at the root of the bundle, but rather inside the subdirectory =
<code>web/</code> :</p>
<div class=3D"paragraph">
<p><code>MANIFEST</code>:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-plain" data-lang=3D"plain"=
>Bundle-Name: Web
Jetty-WarResourcePath: web
Import-Package: javax.servlet;version=3D"3.1",
 javax.servlet.resources;version=3D"3.1"
Bundle-SymbolicName: com.acme.sample.web</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Bundle contents:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-plain" data-lang=3D"plain"=
>META-INF/MANIFEST.MF
web/index.html
web/foo.html
web/WEB-INF/web.xml
com/acme/sample/web/MyStuff.class
com/acme/sample/web/MyOtherStuff.class</code></pre>
</div>
</div>
</dd>
<dt class=3D"hdlist1">Bundle MANIFEST contains Web-ContextPath</dt>
<dd>
<p>This header can be used in conjunction with either of the two preceding =
headers to control the context path to which the webapp is deployed, or alo=
ne to identify that the bundle=E2=80=99s contents should be published as a =
webapp.
This header is part of the RFC-66 specification for using webapps with OSGi=
.
Here=E2=80=99s an example based on the previous one where we use the <code>=
Web-ContextPath</code> header to set its deployment context path to be "/sa=
mple" :</p>
<div class=3D"paragraph">
<p><code>MANIFEST</code>:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-plain" data-lang=3D"plain"=
>Bundle-Name: Web
Jetty-WarResourcePath: web
Web-ContextPath: /sample
Import-Package: javax.servlet;version=3D"3.1",
 javax.servlet.resources;version=3D"3.1"
Bundle-SymbolicName: com.acme.sample.web</code></pre>
</div>
</div>
</dd>
</dl>
</div>
<div class=3D"paragraph">
<p>You can also define extra headers in your bundle MANIFEST that help
customize the web app to be deployed:</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">Jetty-defaultWebXmlFilePath</dt>
<dd>
<p>The location of a <code>webdefault.xml</code> file to apply to the webap=
p.
The location can be either absolute (either absolute path or file: url), or=
 relative (in which case it is interpreted as relative to the bundle root).
Defaults to the <code>webdefault.xml</code> file built into the Jetty OSGi =
container.</p>
</dd>
<dt class=3D"hdlist1">Jetty-WebXmlFilePath</dt>
<dd>
<p>The location of the <code>web.xml</code> file.
The location can be either absolute (either absolute path or file: url), or=
 relative (in which case it is interpreted as relative to the bundle root).
Defaults to <code>WEB-INF/web.xml</code></p>
</dd>
<dt class=3D"hdlist1">Jetty-extraClassPath</dt>
<dd>
<p>A classpath of additional items to add to the webapp=E2=80=99s classload=
er.</p>
</dd>
<dt class=3D"hdlist1">Jetty-bundleInstall</dt>
<dd>
<p>The path to the base folder that overrides the computed bundle installat=
ion - mostly useful for those OSGi frameworks that unpack bundles by defaul=
t.</p>
</dd>
<dt class=3D"hdlist1">Require-TldBundle</dt>
<dd>
<p>A comma separated list of bundle symbolic names of bundles containing TL=
Ds that this webapp depends upon.</p>
</dd>
<dt class=3D"hdlist1">managedServerName</dt>
<dd>
<p>The name of the Server instance to which to deploy this webapp bundle.
If not specified, defaults to the default Server instance called "defaultJe=
ttyServer".</p>
</dd>
<dt class=3D"hdlist1">Jetty-WarFragmentResourcePath</dt>
<dd>
<p>The path within a fragment hosted by the web-bundle that contains static=
 resources for the webapp.
The path is appended to the base resource for the webapp (see Jetty-WarReso=
urcePath).</p>
</dd>
<dt class=3D"hdlist1">Jetty-WarPrependFragmentResourcePath</dt>
<dd>
<p>The path within a fragment hosted by the web-bundle that contains static=
 resources for the webapp.
The path is prepended to the base resource for the webapp (see Jetty-WarRes=
ourcePath).</p>
</dd>
<dt class=3D"hdlist1">Jetty-ContextFilePath</dt>
<dd>
<p>A comma separated list of paths within the webapp bundle to Jetty contex=
t files that will be applied to the webapp.
Alternatively you may include a single Jetty context file called <code>jett=
y-webapp-context.xml</code> in the webapp bundle=E2=80=99s META-INF directo=
ry and it will be automatically applied to the webapp.</p>
</dd>
</dl>
</div>
<div class=3D"sect4">
<h5 id=3D"_determining_the_context_path_for_a_webapp_bundle">Determining th=
e Context Path for a Webapp Bundle</h5>
<div class=3D"paragraph">
<p>As we have seen in the previous section, if the bundle <code>MANIFEST</c=
ode> contains the RFC-66 header <strong>Web-ContextPath</strong>, Jetty wil=
l use that as the context path.
If the <code>MANIFEST</code> does not contain that header, then Jetty will =
concoct a context path based on the last element of the bundle=E2=80=99s lo=
cation (by calling <code>Bundle.getLocation()</code>) after stripping off a=
ny file extensions.</p>
</div>
<div class=3D"paragraph">
<p>For example, suppose we have a bundle whose location is:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-plain" data-lang=3D"plain"=
>file://some/where/over/the/rainbow/oz.war</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The corresponding synthesized context path would be:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-plain" data-lang=3D"plain"=
>/oz</code></pre>
</div>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_extra_properties_available_for_webapp_bundles">Extra Properties =
Available for Webapp Bundles</h5>
<div class=3D"paragraph">
<p>You can further customize your webapp by including a Jetty context xml f=
ile that is applied to the webapp.
This xml file must be placed in <code>META-INF</code> of the bundle, and mu=
st be called <code>jetty-webapp-context.xml</code>.</p>
</div>
<div class=3D"paragraph">
<p>Here=E2=80=99s an example of a webapp bundle listing containing such a f=
ile:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-plain" data-lang=3D"plain"=
>META-INF/MANIFEST.MF
META-INF/jetty-webapp-context.xml
web/index.html
web/foo.html
web/WEB-INF/web.xml
com/acme/sample/web/MyStuff.class
com/acme/sample/web/MyOtherStuff.class</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Here=E2=80=99s an example of the contents of a <code>META-INF/jetty-weba=
pp-context.xml</code> file:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><!-=
-?xml version=3D"1.0" encoding=3D"UTF-8"?-->



<configure class=3D"org.eclipse.jetty.webapp.WebAppContext">
  <set name=3D"defaultsDescriptor"><property name=3D"bundle.root">META-INF/=
webdefault.xml</property></set>
</configure></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>As you can see, it is a normal context xml file used to set up a webapp.
There are, however, some additional useful properties that can be reference=
d</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">Server</dt>
<dd>
<p>This is a reference to the Jetty <code>org.eclipse.jetty.server.Server</=
code> instance to which the webapp being configured in the context xml file=
 will be deployed.</p>
</dd>
<dt class=3D"hdlist1">bundle.root</dt>
<dd>
<p>This is a reference to the <code>org.eclipse.jetty.util.resource.Resourc=
e</code> that represents the location of the Bundle.
Note that this could be either a directory in the file system if the OSGi c=
ontainer automatically unpacks bundles, or it may be a jar:file: url if the=
 bundle remains packed.</p>
</dd>
</dl>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_deploying_bundles_as_jetty_contexthandlers">Deploying Bundles as=
 Jetty ContextHandlers</h4>
<div class=3D"paragraph">
<p>In addition to deploying webapps, the Jetty OSGi container listens for t=
he installation of bundles that are not heavyweight webapps, but rather use=
 the flexible Jetty-specific concept of <code>ContextHandlers</code>.</p>
</div>
<div class=3D"paragraph">
<p>The following is the criteria used to decide if a bundle can be deployed=
 as a <code>ContextHandler</code>:</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">Bundle MANIFEST contains Jetty-ContextFilePath</dt>
<dd>
<p>A comma separated list of names of context files - each one of which rep=
resents a ContextHandler that should be deployed by Jetty.
The context files can be inside the bundle, external to the bundle somewher=
e on the file system, or external to the bundle in the <strong>jetty.home</=
strong> directory.</p>
<div class=3D"paragraph">
<p>A context file that is inside the bundle:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-plain" data-lang=3D"plain"=
>Jetty-ContextFilePath: ./a/b/c/d/foo.xml</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>A context file that is on the file system:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-plain" data-lang=3D"plain"=
>Jetty-ContextFilePath: /opt/app/contexts/foo.xml</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>A context file that is relative to jetty.home:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-plain" data-lang=3D"plain"=
>Jetty-ContextFilePath: contexts/foo.xml</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>A number of different context files:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-plain" data-lang=3D"plain"=
>Jetty-ContextFilePath: ./a/b/c/d/foo.xml,/opt/app/contexts/foo.xml,context=
s/foo.xml</code></pre>
</div>
</div>
</dd>
</dl>
</div>
<div class=3D"paragraph">
<p>Other <code>MANIFEST</code> properties that can be used to configure the=
 deployment of the <code>ContextHandler</code>:</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">managedServerName</dt>
<dd>
<p>The name of the Server instance to which to deploy this webapp bundle.
If not specified, defaults to the default Server instance called "defaultJe=
ttyServer".</p>
</dd>
</dl>
</div>
<div class=3D"sect4">
<h5 id=3D"_determining_the_context_path_for_a_contexthandler_bundle">Determ=
ining the Context Path for a ContextHandler Bundle</h5>
<div class=3D"paragraph">
<p>Usually, the context path for the ContextHandler will be set by the cont=
ext xml file.
However, you can override any path set in the context xml file by using the=
 <strong>Web-ContextPath</strong> header in the <code>MANIFEST</code>.</p>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_extra_properties_available_for_context_xml_files">Extra Properti=
es Available for Context Xml Files</h5>
<div class=3D"paragraph">
<p>Before the Jetty OSGi container applies a context xml file found in a <s=
trong>Jetty-ContextFilePath</strong> <code>MANIFEST</code> header, it sets =
a few useful propertiesthat can be referred to within the xml file:</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">Server</dt>
<dd>
<p>This is a reference to the Jetty <code>org.eclipse.jetty.server.Server</=
code> instance to which the <code>ContextHandler</code> being configured in=
 the context xml file will be deployed.</p>
</dd>
<dt class=3D"hdlist1">bundle.root</dt>
<dd>
<p>This is a reference to the <code>org.eclipse.jetty.util.resource.Resourc=
e</code> that represents the location of the Bundle (obtained by calling <c=
ode>Bundle.getLocation()</code>).
Note that this could be either a directory in the file system if the OSGi c=
ontainer automatically unpacks bundles, or it may be a jar:file: url if the=
 bundle remains packed.</p>
</dd>
</dl>
</div>
<div class=3D"paragraph">
<p>Here=E2=80=99s an example of a context xml file that makes use of these =
properties:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml">Unr=
esolved directive in development/frameworks/osgi.adoc - include::{SRCDIR}/j=
etty-osgi/test-jetty-osgi-context/src/main/context/acme.xml[]</code></pre>
</div>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"services-as-webapps">Deploying Services as Webapps</h4>
<div class=3D"paragraph">
<p>In addition to listening for bundles whose format or <code>MANIFEST</cod=
e> entries define a webapp or <code>ContextHandler</code> for to be deploye=
d, the Jetty OSGi container also listens for the registration of OSGi servi=
ces that are instances of <code>org.eclipse.jetty.webapp.WebAppContext</cod=
e>.
So you may programmatically create a <code>WebAppContext</code>, register i=
t as a service, and have Jetty pick it up and deploy it.</p>
</div>
<div class=3D"paragraph">
<p>Here=E2=80=99s an example of doing that with a simple bundle that serves=
 static content, and an <code>org.osgi.framework.BundleActivator</code> tha=
t instantiates the <code>WebAppContext</code>:</p>
</div>
<div class=3D"paragraph">
<p>The bundle contents:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-plain" data-lang=3D"plain"=
>META-INF/MANIFEST.MF
index.html
com/acme/osgi/Activator.class</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The <code>MANIFEST.MF</code>:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-plain" data-lang=3D"plain"=
>Bundle-Classpath: .
Bundle-Name: Jetty OSGi Test WebApp
DynamicImport-Package: org.eclipse.jetty.*;version=3D"[9.0,10.0)"
Bundle-Activator: com.acme.osgi.Activator
Import-Package: org.eclipse.jetty.server.handler;version=3D"[9.0,10)",
 org.eclipse.jetty.webapp;version=3D"[9.0,10)",
 org.osgi.framework;version=3D "[1.5,2)",
 org.osgi.service.cm;version=3D"1.2.0",
 org.osgi.service.packag eadmin;version=3D"[1.2,2)",
 org.osgi.service.startlevel;version=3D"1.0.0",
 org.osgi.service.url;version=3D"1.0.0",
 org.osgi.util.tracker;version=3D "1.3.0",
 org.xml.sax,org.xml.sax.helpers
Bundle-SymbolicName: com.acme.testwebapp</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The Activator code:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">p=
ublic void start(BundleContext context) throws Exception
{
    WebAppContext webapp =3D new WebAppContext();
    Dictionary props =3D new Hashtable();
    props.put("Jetty-WarResourcePath",".");
    props.put("contextPath","/acme");
    context.registerService(ContextHandler.class.getName(),webapp,props);
}</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The above setup is sufficient for Jetty to recognize and deploy the <cod=
e>WebAppContext</code> at /acme.</p>
</div>
<div class=3D"paragraph">
<p>As the example shows, you can use OSGi Service properties in order to co=
mmunicate extra configuration information to Jetty:</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">Jetty-WarFolderPath (for releases prior to 9.3) or Je=
tty-WarResourcePath</dt>
<dd>
<p>The location within the bundle of the root of the static resources for t=
he webapp</p>
</dd>
<dt class=3D"hdlist1">Web-ContextPath</dt>
<dd>
<p>The context path at which to deploy the webapp.</p>
</dd>
<dt class=3D"hdlist1">Jetty-defaultWebXmlFilePath</dt>
<dd>
<p>The location within the bundle of a <code>webdefault.xml</code> file to =
apply to the webapp.
Defaults to that of the Jetty OSGi container.</p>
</dd>
<dt class=3D"hdlist1">Jetty-WebXmlFilePath</dt>
<dd>
<p>The location within the bundle of the <code>web.xml</code> file.
Defaults to <code>WEB-INF/web.xml</code></p>
</dd>
<dt class=3D"hdlist1">Jetty-extraClassPath</dt>
<dd>
<p>A classpath of additional items to add to the webapp=E2=80=99s classload=
er.</p>
</dd>
<dt class=3D"hdlist1">Jetty-bundleInstall</dt>
<dd>
<p>The path to the base folder that overrides the computed bundle installat=
ion - mostly useful for those OSGi frameworks that unpack bundles by defaul=
t.</p>
</dd>
<dt class=3D"hdlist1">Require-TldBundle</dt>
<dd>
<p>A comma separated list of bundle symbolic names of bundles containing TL=
Ds that this webapp depends upon.</p>
</dd>
<dt class=3D"hdlist1">managedServerName</dt>
<dd>
<p>The name of the Server instance to which to deploy this webapp.
If not specified, defaults to the default Server instance called "defaultJe=
ttyServer".</p>
</dd>
<dt class=3D"hdlist1">Jetty-WarFragmentResourcePath</dt>
<dd>
<p>The path within a fragment hosted by the web-bundle that contains static=
 resources for the webapp.
The path is appended to the base resource for the webapp (see Jetty-WarReso=
urcePath).</p>
</dd>
<dt class=3D"hdlist1">Jetty-WarPrependFragmentResourcePath</dt>
<dd>
<p>The path within a fragment hosted by the web-bundle that contains static=
 resources for the webapp.
The path is prepended to the base resource for the webapp (see Jetty-WarRes=
ourcePath).</p>
</dd>
</dl>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_deploying_services_as_contexthandlers">Deploying Services as Con=
textHandlers</h4>
<div class=3D"paragraph">
<p>Similarly to WebApp`Contexts, the Jetty OSGi container can detect the re=
gistration of an OSGi Service that represents a <code>ContextHandler</code>=
 and ensure that it is deployed.
The <code>ContextHandler</code> can either be fully configured before it is=
 registered as an OSGi service - in which case the Jetty OSGi container wil=
l merely deploy it - or the <code>ContextHandler</code> can be partially co=
nfigured, with the Jetty OSGi container completing the configuration via a =
context xml file and properties associated with the Service.</p>
</div>
<div class=3D"paragraph">
<p>Here=E2=80=99s an example of doing that with a simple bundle that serves=
 static content with an <code>org.osgi.framework.BundleActivator</code> tha=
t instantiates a <code>ContextHandler</code> and registers it as an OSGi Se=
rvice, passing in properties that define a context xml file and context pat=
h for Jetty to apply upon deployment:</p>
</div>
<div class=3D"paragraph">
<p>The bundle contents:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-plain" data-lang=3D"plain"=
>META-INF/MANIFEST.MF
static/index.html
acme.xml
com/acme/osgi/Activator.class
com/acme/osgi/Activator$1.class</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The <code>MANIFEST</code>:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-plain" data-lang=3D"plain"=
>Bundle-Classpath: .
Bundle-Name: Jetty OSGi Test Context
DynamicImport-Package: org.eclipse.jetty.*;version=3D"[9.0,10.0)"
Bundle-Activator: com.acme.osgi.Activator
Import-Package: javax.servlet;version=3D"2.6.0",
 javax.servlet.resources;version=3D"2.6.0",
 org.eclipse.jetty.server.handler;version=3D"[9.0,10)",
 org.osgi.framework;version=3D"[1.5,2)",
 org.osgi.service.cm;version=3D"1.2.0",
 org.osgi.service.packageadmin;version=3D"[1.2,2)",
 org.osgi.service.startlevel;version=3D"1.0.0.o",
 org.osgi.service.url;version=3D"1.0.0",
 org.osgi.util.tracker;version=3D"1.3.0",
 org.xml.sax,org.xml.sax.helpers
Bundle-SymbolicName: com.acme.testcontext</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The Activator code:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">p=
ublic void start(final BundleContext context) throws Exception
{
    ContextHandler ch =3D new ContextHandler();
    ch.addEventListener(new ServletContextListener () {

            @Override
            public void contextInitialized(ServletContextEvent sce)
            {
               System.err.println("Context is initialized");
            }

            @Override
            public void contextDestroyed(ServletContextEvent sce)
            {
                System.err.println("Context is destroyed!");
            }

    });
    Dictionary props =3D new Hashtable();
    props.put("Web-ContextPath","/acme");
    props.put("Jetty-ContextFilePath", "acme.xml");
    context.registerService(ContextHandler.class.getName(),ch,props);
}</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The contents of the <code>acme.xml</code> context file:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml">Unr=
esolved directive in development/frameworks/osgi.adoc - include::{SRCDIR}/j=
etty-osgi/test-jetty-osgi-context/src/main/context/acme.xml[]</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>You may also use the following OSGi Service properties:</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">managedServerName</dt>
<dd>
<p>The name of the Server instance to which to deploy this webapp.
If not specified, defaults to the default Server instance called "defaultJe=
ttyServer".</p>
</dd>
</dl>
</div>
<div class=3D"sect4">
<h5 id=3D"_extra_properties_available_for_context_xml_files_2">Extra Proper=
ties Available for Context Xml Files</h5>
<div class=3D"paragraph">
<p>Before the Jetty OSGi container applies a context xml file found in a <c=
ode>Jetty-ContextFilePath</code> property, it sets a few useful properties =
that can be referred to within the xml file:</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">Server</dt>
<dd>
<p>This is a reference to the Jetty <code>org.eclipse.jetty.server.Server</=
code> instance to which the <code>ContextHandler</code> being configured in=
 the context xml file will be deployed.</p>
</dd>
<dt class=3D"hdlist1">bundle.root</dt>
<dd>
<p>This is a reference to the <code>org.eclipse.jetty.util.resource.Resourc=
e</code> that represents the location of the Bundle publishing the <code>Co=
ntextHandler</code> as a Service (obtained by calling <code>Bundle.getLocat=
ion()</code>).
Note that this could be either a directory in the file system if the OSGi c=
ontainer automatically unpacks bundles, or it may be a jar:file: url if the=
 bundle remains packed.</p>
</dd>
</dl>
</div>
<div class=3D"paragraph">
<p>In the example above, you can see both of these properties being used in=
 the context xml file.</p>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_support_for_the_osgi_service_platform_enterprise_specification">=
Support for the OSGi Service Platform Enterprise Specification</h4>
<div class=3D"paragraph">
<p>The Jetty OSGi container implements several aspects of the Enterprise Sp=
ecification v4.2 for the <code>WebAppContexts</code> and <code>ContextHandl=
ers</code> that it deploys from either bundles or OSGi services as outlined=
 in foregoing sections.</p>
</div>
<div class=3D"sect4">
<h5 id=3D"_context_attributes">Context Attributes</h5>
<div class=3D"paragraph">
<p>For each <code>WebAppContext</code> or <code>ContextHandler</code>, the =
following context attribute is set, as required by section <em>128.6.1 Bund=
le Context</em> page 427:</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">osgi-bundleContext</dt>
<dd>
<p>The value of this attribute is the <code>BundleContext</code> representi=
ng the Bundle associated with the <code>WebAppContext</code> or <code>Conte=
xtHandler</code>.</p>
</dd>
</dl>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_service_attributes">Service Attributes</h5>
<div class=3D"paragraph">
<p>As required by the specification section <em>128.3.4 Publishing the Serv=
let Context</em> page 421, each <code>WebAppContext</code> and <code>Contex=
tHandler</code> deployed by the Jetty OSGi container is also published as a=
n OSGi service (unless it has been already - see sections 1.6 and 1.7).
The following properties are associated with these services:</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">osgi.web.symbolicname</dt>
<dd>
<p>The symbolic name of the Bundle associated with the <code>WebAppContext<=
/code> or <code>ContextHandler</code></p>
</dd>
<dt class=3D"hdlist1">osgi.web.version</dt>
<dd>
<p>The Bundle-Version header from the Bundle associated with the <code>WebA=
ppContext</code> or <code>ContextHandler</code></p>
</dd>
<dt class=3D"hdlist1">osgi.web.contextpath</dt>
<dd>
<p>The context path of the <code>WebAppContext</code> or <code>ContextHandl=
er</code></p>
</dd>
</dl>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_osgi_events">OSGi Events</h5>
<div class=3D"paragraph">
<p>As required by the specification section <em>128.5 Events</em> pg 426, t=
he
following OSGi Event Admin events will be posted:</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">org/osgi/service/web/DEPLOYING</dt>
<dd>
<p>The Jetty OSGi container is about to deploy a <code>WebAppContext</code>=
 or <code>ContextHandler</code></p>
</dd>
<dt class=3D"hdlist1">org/osgi/service/web/DEPLOYED</dt>
<dd>
<p>The Jetty OSGi container has finished deploying a <code>WebAppContext</c=
ode> or <code>ContextHandler</code> and it is in service</p>
</dd>
<dt class=3D"hdlist1">org/osgi/service/web/UNDEPLOYING</dt>
<dd>
<p>The Jetty OSGi container is about to undeploy a <code>WebAppContext</cod=
e> or <code>ContextHandler</code></p>
</dd>
<dt class=3D"hdlist1">org/osgi/service/web/UNDEPLOYED</dt>
<dd>
<p>The Jetty OSGi container has finished undeploying a <code>WebAppContext<=
/code> or <code>ContextHandler</code> and it is no longer in service</p>
</dd>
<dt class=3D"hdlist1">org/osgi/service/web/FAILED</dt>
<dd>
<p>The Jetty OSGi container failed to deploy a <code>WebAppContext</code> o=
r <code>ContextHandler</code></p>
</dd>
</dl>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_using_jsps">Using JSPs</h4>
<div class=3D"sect4">
<h5 id=3D"_setup">Setup</h5>
<div class=3D"paragraph">
<p>In order to use JSPs with your webapps and bundles you will need to inst=
all the JSP and JSTL jars and their dependencies into your OSGi container.
Some you will find in the Jetty distribution, whereas others you will need =
to download from <a href=3D"http://central.maven.org/maven2/org/eclipse/jet=
ty/orbit/">Maven central</a>.
Here is the list of recommended jars (NOTE the version numbers may change i=
n future):</p>
</div>
<table class=3D"tableblock frame-all grid-all spread">
<caption class=3D"title">Table 16. Jars Required for JSP</caption>
<colgroup>
<col style=3D"width: 33.3333%;">
<col style=3D"width: 33.3333%;">
<col style=3D"width: 33.3334%;">
</colgroup>
<thead>
<tr>
<th class=3D"tableblock halign-left valign-top">Jar</th>
<th class=3D"tableblock halign-left valign-top">Bundle Symbolic Name</th>
<th class=3D"tableblock halign-left valign-top">Location</th>
</tr>
</thead>
<tbody>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">The=
 <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x=
/jetty-documentation/src/main/asciidoc/index.html#osgi-annotations">annotat=
ion jars</a></p></td>
<td class=3D"tableblock halign-left valign-top"></td>
<td class=3D"tableblock halign-left valign-top"></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">org=
.mortbay.jasper:apache-el</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">org=
.mortbay.jasper.apache-el</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Dis=
tribution lib/apache-jsp</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">org=
.mortbay.jasper:apache-jsp</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">org=
.mortbay.jasper.apache-jsp</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Dis=
tribution lib/apache-jsp</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">org=
.eclipse.jetty:apache-jsp</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">org=
.eclipse.jetty.apache-jsp</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Dis=
tribution lib/apache-jsp</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">org=
.eclipse.jdt.core-3.8.2.v20130121.jar</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">org=
.eclipse.jdt.core.compiler.batch</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Dis=
tribution lib/apache-jsp</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">org=
.eclipse.jetty.osgi:jetty-osgi-boot-jsp</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">org=
.eclipse.jetty.osgi.boot.jsp</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><a =
href=3D"http://central.maven.org/maven2/org/eclipse/jetty/osgi/jetty-osgi-b=
oot-jsp">Maven
central</a></p></td>
</tr>
</tbody>
</table>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"olist NOTE">
<ol class=3D"NOTE">
<li>
<p>As of Jetty 9.2.3 the jetty-osgi-boot-jsp bundle changed to using Apache=
 Jasper as the JSP implementation.
Prior to this the Glassfish Jasper implementation was used, which had a dif=
ferent set of dependencies - pay careful attention to the jars listed both =
at the top of this page and in this section, as deployment of other jars ca=
n cause incomplete or incorrect package resolution in the OSGi container.</=
p>
</li>
<li>
<p>The order of deployment is important.
Deploy these bundles in the order shown or you may experience strange failu=
res in the compilation of jsps.
This can be hard to diagnose but is almost always caused by the <code>Servl=
etContainerInitializer</code> in the <code>org.eclipse.jetty.apache-jsp</co=
de> bundle for the jsp container not being invoked due to incorrect startup=
 of the annotation jars.</p>
</li>
</ol>
</div>
</blockquote>
</div>
<div class=3D"paragraph">
<p>For the JSTL library, we recommend the use of the implementation from Gl=
assfish, as it has fewer dependencies:</p>
</div>
<table class=3D"tableblock frame-all grid-all spread">
<caption class=3D"title">Table 17. Jars Required for Glassfish JSTL</captio=
n>
<colgroup>
<col style=3D"width: 33.3333%;">
<col style=3D"width: 33.3333%;">
<col style=3D"width: 33.3334%;">
</colgroup>
<thead>
<tr>
<th class=3D"tableblock halign-left valign-top">Jar</th>
<th class=3D"tableblock halign-left valign-top">Bundle Symbolic Name</th>
<th class=3D"tableblock halign-left valign-top">Location</th>
</tr>
</thead>
<tbody>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">The=
 jsp jars</p></td>
<td class=3D"tableblock halign-left valign-top"></td>
<td class=3D"tableblock halign-left valign-top"></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">org=
.eclipse.jetty.orbit:javax.servlet.jsp.jstl-1.2.0.v201105211821.jar</p></td=
>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">jav=
ax.servlet.jsp.jstl</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Dis=
tribution lib/jsp</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">org=
.glassfish.web:javax.servlet.jsp.jstl-1.2.2.jar</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">org=
.glassfish.web.javax.servlet.jsp.jstl</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Dis=
tribution lib/jsp</p></td>
</tr>
</tbody>
</table>
<div class=3D"paragraph">
<p>However, if you wish, you may use the JSTL implementation from Apache in=
stead, although you will need to source some dependency jars with suitable =
OSGi manifests:</p>
</div>
<table class=3D"tableblock frame-all grid-all spread">
<caption class=3D"title">Table 18. Jars Required for Apache JSTL</caption>
<colgroup>
<col style=3D"width: 33.3333%;">
<col style=3D"width: 33.3333%;">
<col style=3D"width: 33.3334%;">
</colgroup>
<thead>
<tr>
<th class=3D"tableblock halign-left valign-top">Jar</th>
<th class=3D"tableblock halign-left valign-top">Bundle Symbolic Name</th>
<th class=3D"tableblock halign-left valign-top">Location</th>
</tr>
</thead>
<tbody>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">The=
 jsp jars</p></td>
<td class=3D"tableblock halign-left valign-top"></td>
<td class=3D"tableblock halign-left valign-top"></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">org=
.apache.taglibs:taglibs-standard-spec:jar:1.2.1</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">org=
.apache.taglibs.taglibs-standard-spec</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Dis=
tribution lib/apache-jstl</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">org=
.apache.taglibs:taglibs-standard-spec:jar:1.2.1</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">org=
.apache.taglibs.standard-impl</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Dis=
tribution lib/apache-jstl</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">org=
.apache.xalan 2.7.1</p></td>
<td class=3D"tableblock halign-left valign-top"></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Try
<a href=3D"http://download.eclipse.org/tools/orbit/downloads/drops/R2014052=
5021250/repository/plugins/org.apache.xalan_2.7.1.v201005080400.jar">Eclips=
e
Orbit</a></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">org=
.apache.xml.serializer 2.7.1</p></td>
<td class=3D"tableblock halign-left valign-top"></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Try
<a href=3D"http://download.eclipse.org/tools/orbit/downloads/drops/R2014052=
5021250/repository/plugins/org.apache.xml.serializer_2.7.1.v201005080400.ja=
r">Eclipse
Orbit</a></p></td>
</tr>
</tbody>
</table>
</div>
<div class=3D"sect4">
<h5 id=3D"_the_jetty_osgi_boot_jsp_jar">The jetty-osgi-boot-jsp jar</h5>
<div class=3D"paragraph">
<p>To be able to use JSPs you will need to also install the <a href=3D"http=
://central.maven.org/maven2/org/eclipse/jetty/osgi/jetty-osgi-boot-jsp/">je=
tty-osgi-boot-jsp.jar</a> into your OSGi container.
This jar can be obtained from maven central <a href=3D"http://central.maven=
.org/maven2/org/eclipse/jetty/osgi/jetty-osgi-boot-jsp/">here</a>.</p>
</div>
<div class=3D"paragraph">
<p>This bundle acts as a fragment extension to the jetty-osgi-boot.jar and =
adds in support for using JSP.</p>
</div>
<div class=3D"sect5">
<h6 id=3D"_using_taglibs">Using TagLibs</h6>
<div class=3D"paragraph">
<p>The Jetty JSP OSGi container will make available the JSTL tag library to=
 all webapps.
If you only use this tag library, then your webapp will work without any fu=
rther modification.</p>
</div>
<div class=3D"paragraph">
<p>However, if you make use of other taglibs, you will need to ensure that =
they are installed into the OSGi container, and also define some System pro=
perties and/or <code>MANIFEST</code> headers in your webapp.
This is necessary because the classloading regime used by the OSGi containe=
r is very different than that used by JSP containers, and the <code>MANIFES=
T</code> of a normal webapp does not contain enough information for the OSG=
i environment to allow a JSP container to find and resolve TLDs referenced =
in the webapp=E2=80=99s .jsp files.</p>
</div>
<div class=3D"paragraph">
<p>Firstly, lets look at an example of a web bundle=E2=80=99s modified <cod=
e>MANIFEST</code> file so you get an idea of what is required.
This example is a web bundle that uses the Spring servlet framework:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-plain" data-lang=3D"plain"=
>Bundle-SymbolicName: com.acme.sample
Bundle-Name: WebSample
Web-ContextPath: taglibs
Import-Bundle: org.springframework.web.servlet
Require-TldBundle: org.springframework.web.servlet
Bundle-Version: 1.0.0
Import-Package: org.eclipse.virgo.web.dm;version=3D"[3.0.0,4.0.0)",org.s
 pringframework.context.config;version=3D"[2.5.6,4.0.0)",org.springframe
 work.stereotype;version=3D"[2.5.6,4.0.0)",org.springframework.web.bind.
 annotation;version=3D"[2.5.6,4.0.0)",org.springframework.web.context;ve
 rsion=3D"[2.5.6,4.0.0)",org.springframework.web.servlet;version=3D"[2.5.6
 ,4.0.0)",org.springframework.web.servlet.view;version=3D"[2.5.6,4.0.0)"</c=
ode></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The <strong>Require-TldBundle</strong> header tells the Jetty OSGi conta=
iner that this bundle contains TLDs that need to be passed over to the JSP =
container for processing.
The <strong>Import-Bundle</strong> header ensures that the implementation c=
lasses for these TLDs will be available to the webapp on the OSGi classpath=
.</p>
</div>
<div class=3D"paragraph">
<p>The format of the <strong>Require-TldBundle</strong> header is a comma s=
eparated list of one or more symbolic names of bundles containing TLDs.</p>
</div>
</div>
<div class=3D"sect5">
<h6 id=3D"_container_path_taglibs">Container Path Taglibs</h6>
<div class=3D"paragraph">
<p>Some TLD jars are required to be found on the Jetty OSGi container=E2=80=
=99s classpath, rather than considered part of the web bundle=E2=80=99s cla=
sspath.
For example, this is true of JSTL and Java Server Faces.
The Jetty OSGi container takes care of JSTL for you, but you can control wh=
ich other jars are considered as part of the container=E2=80=99s classpath =
by using the System property <strong>org.eclipse.jetty.osgi.tldbundles</str=
ong>:</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">org.eclipse.jetty.osgi.tldbundles</dt>
<dd>
<p>System property defined on the OSGi environment that is a comma separate=
d list of symbolic names of bundles containing taglibs that will be treated=
 as if they are on the container=E2=80=99s classpath for web bundles.
For example:</p>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-plain" data-lang=3D"plain"=
>org.eclipse.jetty.osgi.tldbundles=3Dcom.acme.special.tags,com.foo.web,org.=
bar.web.framework</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>You will still need to define the <strong>Import-Bundle</strong> header =
in the <code>MANIFEST</code> file for the web bundle to ensure that the TLD=
 bundles are on the OSGi classpath.</p>
</div>
</dd>
</dl>
</div>
<div class=3D"paragraph">
<p>Alternatively or additionally, you can define a pattern as a context att=
ribute that will match symbolic bundle names in the OSGi environment contai=
ning TLDs that should be considered as discovered from the container=E2=80=
=99s classpath.</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">org.eclipse.jetty.server.webapp.containerIncludeBundl=
ePattern</dt>
<dd>
<p>This pattern must be specified as a context attribute of the <code>WebAp=
pContext</code> representing the web bundle.
Unless you are deploying your own <code>WebAppContext</code> (see <a href=
=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-d=
ocumentation/src/main/asciidoc/index.html#services-as-webapps">Deploying Se=
rvices as Webapps</a>), you won=E2=80=99t have a reference to the <code>Web=
AppContext</code> to do this.
In that case, it can be specified on the <code>org.eclipse.jetty.deploy.Dep=
loymentManager</code>, where it will be applied to <em>every</em> webapp de=
ployed by the Jetty OSGi container.
The <code>jetty-osgi-boot.jar</code> contains the default <code>jettyhome/e=
tc/jetty-deploy.xml</code> file where the <code>DeploymentManager</code> is=
 defined.
To set the pattern, you will need to provide your own etc files - see the s=
ection on <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-je=
tty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#customize-jetty-=
container">customizing the jetty container</a> for how to do this. Here=E2=
=80=99s how the <code>jetty-deploy.xml</code> file would look if we defined=
 a pattern that matched all bundle symbolic names ending in "tag" and "web"=
:</p>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><!-=
-?xml version=3D"1.0"?-->

<configure id=3D"Server" class=3D"org.eclipse.jetty.server.Server">
    <call name=3D"addBean">
      <arg>
        <new id=3D"DeploymentManager" class=3D"org.eclipse.jetty.deploy.Dep=
loymentManager">
          <set name=3D"contexts">
            <ref refid=3D"Contexts">
          </ref></set>
          <call name=3D"setContextAttribute">
            <arg>org.eclipse.jetty.server.webapp.ContainerIncludeBundlePatt=
ern</arg>
            <arg>.*\.tag$|.*\.web$</arg>
          </call>
        </new>
      </arg>
    </call>
</configure></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Again, you will still need to define suitable <strong>Import-Bundle</str=
ong> headers in your web bundle <code>MANIFEST</code> to ensure that bundle=
s matching the pattern are available on the OSGi class path.</p>
</div>
</dd>
</dl>
</div>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"osgi-annotations">Using Annotations/ServletContainerInitializers<=
/h4>
<div class=3D"paragraph">
<p>Annotations are very much part of the Servlet 3.0 and 3.1 specifications=
.
In order to use them with Jetty in OSGi, you will need to deploy some extra=
 jars into your OSGi container:</p>
</div>
<table class=3D"tableblock frame-all grid-all spread">
<caption class=3D"title">Table 19. Jars Required for Annotations</caption>
<colgroup>
<col style=3D"width: 33.3333%;">
<col style=3D"width: 33.3333%;">
<col style=3D"width: 33.3334%;">
</colgroup>
<thead>
<tr>
<th class=3D"tableblock halign-left valign-top">Jar</th>
<th class=3D"tableblock halign-left valign-top">Bundle Symbolic Name</th>
<th class=3D"tableblock halign-left valign-top">Location</th>
</tr>
</thead>
<tbody>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">org=
.ow2.asm:asm-5.0.1.jar</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">org=
.objectweb.asm</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><a =
href=3D"http://central.maven.org/maven2/org/ow2/asm/asm">Maven central</a><=
/p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">org=
.ow2.asm:asm-commons-5.0.1.jar</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">org=
.objectweb.asm.commons</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><a =
href=3D"http://central.maven.org/maven2/org/ow2/asm/asm-commons">Maven cent=
ral</a></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">org=
.ow2.asm:asm-tree-5.0.1.jar</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">org=
.objectweb.asm.tree</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><a =
href=3D"http://central.maven.org/maven2/org/ow2/asm/asm-tree">Maven central=
</a></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">org=
.apache.aries:org.apache.aries.util-1.0.1.jar</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">org=
.apache.aries.util</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><a =
href=3D"http://central.maven.org/maven2/org/apache/aries/org.apache.aries.u=
til/">Maven
central</a></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">org=
.apache.aries.spifly:org.apache.aries.spifly.dynamic.bundle-1.0.1.jar</p></=
td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">org=
.apache.aries.spifly.dynamic.bundle</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><a =
href=3D"http://central.maven.org/maven2/org/apache/aries/spifly/org.apache.=
aries.spifly.dynamic.bundle/">Maven
central</a></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">jav=
ax.annotation:javax.annotation-api-1.2.jar</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">jav=
ax.annotation-api</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><a =
href=3D"http://central.maven.org/maven2/javax/annotation/javax.annotation-a=
pi/">Maven
central</a></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">jta=
 api version 1.1.1 (eg
org.apache.geronimo.specs:geronimo-jta_1.1_spec-1.1.1.jar)<sup>*</sup></p><=
/td>
<td class=3D"tableblock halign-left valign-top"></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Mav=
en
central</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">jav=
ax mail api version 1.4.1 (eg
org.eclipse.jetty.orbit:javax.mail.glassfish-1.4.1.v201005082020.jar)<sup>*=
</sup></p></td>
<td class=3D"tableblock halign-left valign-top"></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Mav=
en central</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">jet=
ty-jndi</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">org=
.eclipse.jetty.jndi</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Dis=
tribution lib/</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">jet=
ty-plus</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">org=
.eclipse.jetty.plus</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Dis=
tribution lib/</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">jet=
ty-annotations</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">org=
.eclipse.jetty.annotations</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Dis=
tribution lib/</p></td>
</tr>
</tbody>
</table>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock important">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Important</div>
</td>
<td class=3D"content">
If you wish to use JSPs you will need to deploy these annotation-related ja=
rs.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Note</div>
</td>
<td class=3D"content">
You may be able to deploy later versions or other providers of these specif=
ications, however these particular versions are known to have correct manif=
ests and have been tested and known to work with OSGi.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
<div class=3D"paragraph">
<p>Even if your webapp itself does not not use annotations, you may need to=
 deploy these jars because your webapp depends on a Jetty module or a 3rd p=
arty library that uses a <a href=3D"http://docs.oracle.com/javaee/6/api/jav=
ax/servlet/ServletContainerInitializer.html">javax.servlet.ServletContainer=
Initializer</a>.
This interface requires annotation support.
It is implemented by providers of code that extend the capabilities of the =
container.
An xample of this is the Jetty JSR356 Websocket implementation, although it=
 is being used increasingly commonly in popular libraries like <a href=3D"h=
ttp://projects.spring.io/spring-framework/">Spring</a>, <a href=3D"https://=
jersey.java.net/">Jersey</a> and JSP containers.</p>
</div>
<div class=3D"paragraph">
<p>To find <code>ServletContainerInitializers</code> on the classpath, Jett=
y uses the Java <a href=3D"http://docs.oracle.com/javase/7/docs/api/java/ut=
il/ServiceLoader.html"><code>ServiceLoader</code></a>
mechanism.
For this to function in OSGi, you will need an OSGi R5 compatible container=
, and have support for the <a href=3D"http://blog.osgi.org/2013/02/javautil=
serviceloader-in-osgi.html">Service Loader Mediator</a>.
Jetty has been tested with the <a href=3D"http://aries.apache.org/modules/s=
pi-fly.html">Aries SpiFly</a> module,which is the reference implementation =
of the Service Loader Mediator, and is listed in the jars above.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_osgi_containers">OSGi Containers</h4>
<div class=3D"sect4">
<h5 id=3D"_felix">Felix</h5>
<div class=3D"paragraph">
<p>The Jetty OSGi integration has been successfully tested against <a href=
=3D"http://felix.apache.org/">Felix</a> 5.0.0.</p>
</div>
<div class=3D"paragraph">
<p>You will require the following extra Felix services, available as separa=
tely downloadable jars:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p><a href=3D"http://felix.apache.org/documentation/subprojects/apache-feli=
x-config-admin.html">Felix Configuration Admin Service</a></p>
</li>
<li>
<p><a href=3D"http://felix.apache.org/documentation/subprojects/apache-feli=
x-event-admin.html">Felix Event Admin Service</a></p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>Unfortunately, as of Felix 4.x there is a difficultly with the resolutio=
n of the <code>javax.transaction</code> package.
A <a href=3D"http://mail-archives.apache.org/mod_mbox/felix-users/201211.mb=
ox/%3CCAPr=3D90M+5vYjPqAvyTU+gYHr64y_FosBYELeUYcU_rFEJF3Cxw@mail.gmail.com%=
3E">description of the problem</a> and hint to solving it is described [<a =
href=3D"http://mail-archives.apache.org/mod_mbox/felix-users/201211.mbox/%3=
CCAPr=3D90M+5vYjPqAvyTU+gYHr64y_FosBYELeUYcU_rFEJF3Cxw@mail.gmail.com%3E">h=
ere</a>].</p>
</div>
<div class=3D"paragraph">
<p>The simplest solution for this is to extract the <code>default.propertie=
s</code> file from the <code>felix.jar</code>, change the declaration of th=
e <code>javax.sql</code> and <code>javax.transaction</code> packages and se=
t the changed lines as the value of the <code>org.osgi.framework.system.pac=
kages</code> property in the <code>conf/config.properties</code> file.</p>
</div>
<div class=3D"paragraph">
<p>The <code>default.properties</code> file defines the default <code>org.o=
sgi.framework.system.packages</code> property like this:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-properties" data-lang=3D"p=
roperties"># Default packages exported by system bundle.
org.osgi.framework.system.packages=3Dorg.osgi.framework; version=3D1.7.0, \
 org.osgi.framework.hooks.bundle; version=3D1.1.0, \
 org.osgi.framework.hooks.resolver; version=3D1.0.0, \
 org.osgi.framework.hooks.service; version=3D1.1.0, \
 org.osgi.framework.hooks.weaving; version=3D1.0.0, \
 org.osgi.framework.launch; version=3D1.1.0, \
 org.osgi.framework.namespace; version=3D1.0.0, \
 org.osgi.framework.startlevel; version=3D1.0.0, \
 org.osgi.framework.wiring; version=3D1.1.0, \
 org.osgi.resource; version=3D1.0.0, \
 org.osgi.service.packageadmin; version=3D1.2.0, \
 org.osgi.service.startlevel; version=3D1.1.0, \
 org.osgi.service.url; version=3D1.0.0, \
 org.osgi.util.tracker; version=3D1.5.1 \
 ${jre-${java.specification.version}}</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The last line must be substituted for one of the definitions further dow=
n in the file that is suitable for the jvm you are using.</p>
</div>
<div class=3D"paragraph">
<p>You will take these lines and copy them into the <code>conf/config.prope=
rties</code> file, after having replaced the line <code>$\{jre-$\{java.spec=
ification.version}}</code> with all of the lines relevant to your version o=
f the jvm.</p>
</div>
<div class=3D"paragraph">
<p>For example, for a 1.7 jvm, you will find this property definition:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-properties" data-lang=3D"p=
roperties">jre-1.7=3D, \
 javax.accessibility;uses:=3D"javax.swing.text";version=3D"0.0.0.1_007_Java=
SE", \
 javax.activation;version=3D"0.0.0.1_007_JavaSE", \
 javax.activity;version=3D"0.0.0.1_007_JavaSE", \
 javax.annotation.processing;uses:=3D"javax.tools,javax.lang.model,javax.la=
ng.model.element,javax.lang.model.util";version=3D"0.0.0.1_007_JavaSE", \
 javax.annotation;version=3D"0.0.0.1_007_JavaSE", \
 javax.crypto.interfaces;uses:=3D"javax.crypto.spec,javax.crypto";version=
=3D"0.0.0.1_007_JavaSE", \
 javax.crypto.spec;uses:=3D"javax.crypto";version=3D"0.0.0.1_007_JavaSE", \
 javax.crypto;uses:=3D"javax.crypto.spec";version=3D"0.0.0.1_007_JavaSE", \
 javax.imageio.event;uses:=3D"javax.imageio";version=3D"0.0.0.1_007_JavaSE"=
, \
 javax.imageio.metadata;uses:=3D"org.w3c.dom,javax.imageio";version=3D"0.0.=
0.1_007_JavaSE", \
 javax.imageio.plugins.bmp;uses:=3D"javax.imageio";version=3D"0.0.0.1_007_J=
avaSE", \
 javax.imageio.plugins.jpeg;uses:=3D"javax.imageio";version=3D"0.0.0.1_007_=
JavaSE", \
 javax.imageio.spi;uses:=3D"javax.imageio.stream,javax.imageio,javax.imagei=
o.metadata";version=3D"0.0.0.1_007_JavaSE", \
 javax.imageio.stream;uses:=3D"javax.imageio";version=3D"0.0.0.1_007_JavaSE=
", \
 javax.imageio;uses:=3D"javax.imageio.metadata,javax.imageio.stream,javax.i=
mageio.spi,javax.imageio.event";version=3D"0.0.0.1_007_JavaSE", \
 javax.jws.soap;version=3D"0.0.0.1_007_JavaSE", \
 javax.jws;version=3D"0.0.0.1_007_JavaSE", \
 javax.lang.model.element;uses:=3D"javax.lang.model.type,javax.lang.model";=
version=3D"0.0.0.1_007_JavaSE", \
 javax.lang.model.type;uses:=3D"javax.lang.model.element,javax.lang.model";=
version=3D"0.0.0.1_007_JavaSE", \
 javax.lang.model.util;uses:=3D"javax.lang.model,javax.lang.model.element,j=
avax.annotation.processing,javax.lang.model.type";version=3D"0.0.0.1_007_Ja=
vaSE", \
 javax.lang.model;version=3D"0.0.0.1_007_JavaSE", \
 javax.management.loading;uses:=3D"javax.management";version=3D"0.0.0.1_007=
_JavaSE", \
 javax.management.modelmbean;uses:=3D"javax.management,javax.management.loa=
ding";version=3D"0.0.0.1_007_JavaSE", \
 javax.management.monitor;uses:=3D"javax.management";version=3D"0.0.0.1_007=
_JavaSE", \
 javax.management.openmbean;uses:=3D"javax.management";version=3D"0.0.0.1_0=
07_JavaSE", \
 javax.management.relation;uses:=3D"javax.management";version=3D"0.0.0.1_00=
7_JavaSE", \
 javax.management.remote.rmi;uses:=3D"javax.management.remote,javax.securit=
y.auth,javax.management,javax.management.loading,javax.naming,javax.rmi.ssl=
,org.omg.CORBA,org.omg.CORBA_2_3.portable,org.omg.CORBA.portable,javax.rmi.=
CORBA,javax.rmi";version=3D"0.0.0.1_007_JavaSE", \
 javax.management.remote;uses:=3D"javax.security.auth,javax.management";ver=
sion=3D"0.0.0.1_007_JavaSE", \
 javax.management.timer;uses:=3D"javax.management";version=3D"0.0.0.1_007_J=
avaSE", \
 javax.management;uses:=3D"javax.management.loading,javax.management.openmb=
ean";version=3D"0.0.0.1_007_JavaSE", \
 javax.naming.directory;uses:=3D"javax.naming";version=3D"0.0.0.1_007_JavaS=
E", \
 javax.naming.event;uses:=3D"javax.naming,javax.naming.directory";version=
=3D"0.0.0.1_007_JavaSE", \
 javax.naming.ldap;uses:=3D"javax.naming,javax.naming.directory,javax.net.s=
sl,javax.naming.event";version=3D"0.0.0.1_007_JavaSE", \
 javax.naming.spi;uses:=3D"javax.naming,javax.naming.directory";version=3D"=
0.0.0.1_007_JavaSE", \
 javax.naming;uses:=3D"javax.naming.spi";version=3D"0.0.0.1_007_JavaSE", \
 javax.net.ssl;uses:=3D"javax.security.cert,javax.security.auth.x500,javax.=
net";version=3D"0.0.0.1_007_JavaSE", \
 javax.net;version=3D"0.0.0.1_007_JavaSE", \
 javax.print.attribute.standard;uses:=3D"javax.print.attribute";version=3D"=
0.0.0.1_007_JavaSE", \
 javax.print.attribute;version=3D"0.0.0.1_007_JavaSE", \
 javax.print.event;uses:=3D"javax.print,javax.print.attribute";version=3D"0=
.0.0.1_007_JavaSE", \
 javax.print;uses:=3D"javax.print.attribute,javax.print.event,javax.print.a=
ttribute.standard";version=3D"0.0.0.1_007_JavaSE", \
 javax.rmi.CORBA;uses:=3D"org.omg.CORBA,org.omg.CORBA_2_3.portable,org.omg.=
CORBA.portable,org.omg.SendingContext";version=3D"0.0.0.1_007_JavaSE", \
 javax.rmi.ssl;uses:=3D"javax.net,javax.net.ssl";version=3D"0.0.0.1_007_Jav=
aSE", \
 javax.rmi;uses:=3D"org.omg.CORBA,javax.rmi.CORBA";version=3D"0.0.0.1_007_J=
avaSE", \
 javax.script;version=3D"0.0.0.1_007_JavaSE", \
 javax.security.auth.callback;version=3D"0.0.0.1_007_JavaSE", \
 javax.security.auth.kerberos;uses:=3D"javax.security.auth,javax.crypto";ve=
rsion=3D"0.0.0.1_007_JavaSE", \
 javax.security.auth.login;uses:=3D"javax.security.auth,javax.security.auth=
.callback";version=3D"0.0.0.1_007_JavaSE", \
 javax.security.auth.spi;uses:=3D"javax.security.auth.callback,javax.securi=
ty.auth.login,javax.security.auth";version=3D"0.0.0.1_007_JavaSE", \
 javax.security.auth.x500;uses:=3D"javax.security.auth";version=3D"0.0.0.1_=
007_JavaSE", \
 javax.security.auth;version=3D"0.0.0.1_007_JavaSE", \
 javax.security.cert;version=3D"0.0.0.1_007_JavaSE", \
 javax.security.sasl;uses:=3D"javax.security.auth.callback";version=3D"0.0.=
0.1_007_JavaSE", \
 javax.sound.midi.spi;uses:=3D"javax.sound.midi";version=3D"0.0.0.1_007_Jav=
aSE", \
 javax.sound.midi;uses:=3D"javax.sound.midi.spi";version=3D"0.0.0.1_007_Jav=
aSE", \
 javax.sound.sampled.spi;uses:=3D"javax.sound.sampled";version=3D"0.0.0.1_0=
07_JavaSE", \
 javax.sound.sampled;uses:=3D"javax.sound.sampled.spi";version=3D"0.0.0.1_0=
07_JavaSE", \
 javax.sql.rowset.serial;uses:=3D"javax.sql.rowset";version=3D"0.0.0.1_007_=
JavaSE", \
 javax.sql.rowset.spi;uses:=3D"javax.sql,javax.naming,javax.sql.rowset";ver=
sion=3D"0.0.0.1_007_JavaSE", \
 javax.sql.rowset;uses:=3D"javax.sql,javax.sql.rowset.serial,javax.sql.rows=
et.spi";version=3D"0.0.0.1_007_JavaSE", \
 javax.sql;uses:=3D"javax.transaction.xa";version=3D"0.0.0.1_007_JavaSE", \
 javax.swing.border;uses:=3D"javax.swing";version=3D"0.0.0.1_007_JavaSE", \
 javax.swing.colorchooser;uses:=3D"javax.swing,javax.swing.border,javax.swi=
ng.event,javax.swing.text";version=3D"0.0.0.1_007_JavaSE", \
 javax.swing.event;uses:=3D"javax.swing,javax.swing.text,javax.swing.table,=
javax.swing.tree,javax.swing.undo";version=3D"0.0.0.1_007_JavaSE", \
 javax.swing.filechooser;uses:=3D"javax.swing";version=3D"0.0.0.1_007_JavaS=
E", \
 javax.swing.plaf.basic;uses:=3D"javax.swing.border,javax.swing,javax.swing=
.plaf,javax.swing.text,javax.swing.event,javax.swing.colorchooser,javax.acc=
essibility,javax.swing.filechooser,javax.swing.text.html,javax.sound.sample=
d,javax.swing.table,javax.swing.plaf.synth,javax.swing.tree";version=3D"0.0=
.0.1_007_JavaSE", \
 javax.swing.plaf.metal;uses:=3D"javax.swing.plaf,javax.swing,javax.swing.b=
order,javax.swing.text,javax.swing.plaf.basic,javax.swing.filechooser,javax=
.swing.event,javax.swing.tree";version=3D"0.0.0.1_007_JavaSE", \
 javax.swing.plaf.multi;uses:=3D"javax.accessibility,javax.swing,javax.swin=
g.plaf,javax.swing.filechooser,javax.swing.text,javax.swing.tree";version=
=3D"0.0.0.1_007_JavaSE", \
 javax.swing.plaf.nimbus;uses:=3D"javax.swing,javax.swing.plaf,javax.swing.=
border,javax.swing.plaf.synth";version=3D"0.0.0.1_007_JavaSE", \
 javax.swing.plaf.synth;uses:=3D"javax.swing,javax.swing.plaf,javax.swing.t=
ext,javax.swing.border,javax.swing.plaf.basic,javax.swing.colorchooser,java=
x.swing.event,javax.xml.parsers,org.xml.sax,org.xml.sax.helpers,javax.swing=
.table,javax.swing.tree";version=3D"0.0.0.1_007_JavaSE", \
 javax.swing.plaf;uses:=3D"javax.swing,javax.swing.border,javax.accessibili=
ty,javax.swing.filechooser,javax.swing.text,javax.swing.tree";version=3D"0.=
0.0.1_007_JavaSE", \
 javax.swing.table;uses:=3D"javax.swing.event,javax.swing.plaf,javax.swing.=
border,javax.swing,javax.accessibility";version=3D"0.0.0.1_007_JavaSE", \
 javax.swing.text.html.parser;uses:=3D"javax.swing.text,javax.swing.text.ht=
ml";version=3D"0.0.0.1_007_JavaSE", \
 javax.swing.text.html;uses:=3D"javax.swing.event,javax.swing.text,javax.ac=
cessibility,javax.swing,javax.swing.plaf,javax.swing.border,javax.swing.und=
o";version=3D"0.0.0.1_007_JavaSE", \
 javax.swing.text.rtf;uses:=3D"javax.swing.text";version=3D"0.0.0.1_007_Jav=
aSE", \
 javax.swing.text;uses:=3D"javax.swing.event,javax.swing.tree,javax.swing.u=
ndo,javax.swing,javax.swing.plaf,javax.swing.plaf.basic,javax.print,javax.p=
rint.attribute,javax.accessibility,javax.swing.text.html";version=3D"0.0.0.=
1_007_JavaSE", \
 javax.swing.tree;uses:=3D"javax.swing.event,javax.swing,javax.swing.border=
,javax.swing.plaf,javax.swing.plaf.basic";version=3D"0.0.0.1_007_JavaSE", \
 javax.swing.undo;uses:=3D"javax.swing,javax.swing.event";version=3D"0.0.0.=
1_007_JavaSE", \
 javax.swing;uses:=3D"javax.swing.event,javax.accessibility,javax.swing.tex=
t,javax.swing.plaf,javax.swing.border,javax.swing.tree,javax.swing.table,ja=
vax.swing.colorchooser,javax.swing.plaf.basic,javax.swing.text.html,javax.s=
wing.filechooser,javax.print,javax.print.attribute,javax.swing.plaf.metal";=
version=3D"0.0.0.1_007_JavaSE", \
 javax.tools;uses:=3D"javax.lang.model.element,javax.annotation.processing,=
javax.lang.model";version=3D"0.0.0.1_007_JavaSE", \
 javax.transaction.xa;version=3D"0.0.0.1_007_JavaSE", \
 javax.transaction;version=3D"0.0.0.1_007_JavaSE", \
 javax.xml.bind.annotation.adapters;uses:=3D"javax.xml.bind";version=3D"0.0=
.0.1_007_JavaSE", \
 javax.xml.bind.annotation;uses:=3D"javax.xml.transform,javax.xml.bind,java=
x.xml.parsers,javax.xml.transform.dom,org.w3c.dom";version=3D"0.0.0.1_007_J=
avaSE", \
 javax.xml.bind.attachment;uses:=3D"javax.activation";version=3D"0.0.0.1_00=
7_JavaSE", \
 javax.xml.bind.helpers;uses:=3D"javax.xml.bind.annotation.adapters,javax.x=
ml.transform.dom,org.w3c.dom,org.xml.sax,javax.xml.bind.attachment,javax.xm=
l.stream,javax.xml.transform,javax.xml.transform.stream,javax.xml.validatio=
n,javax.xml.transform.sax,javax.xml.bind,javax.xml.parsers";version=3D"0.0.=
0.1_007_JavaSE", \
 javax.xml.bind.util;uses:=3D"javax.xml.transform.sax,javax.xml.bind,org.xm=
l.sax,org.xml.sax.ext,org.xml.sax.helpers";version=3D"0.0.0.1_007_JavaSE", =
\
 javax.xml.bind;uses:=3D"javax.xml.validation,javax.xml.namespace,javax.xml=
.datatype,javax.xml.transform,javax.xml.bind.annotation,javax.xml.transform=
.stream,org.w3c.dom,javax.xml.bind.attachment,javax.xml.stream,javax.xml.bi=
nd.annotation.adapters,org.xml.sax";version=3D"0.0.0.1_007_JavaSE", \
 javax.xml.crypto.dom;uses:=3D"javax.xml.crypto,org.w3c.dom";version=3D"0.0=
.0.1_007_JavaSE", \
 javax.xml.crypto.dsig.dom;uses:=3D"javax.xml.crypto.dsig,javax.xml.crypto,=
org.w3c.dom,javax.xml.crypto.dom";version=3D"0.0.0.1_007_JavaSE", \
 javax.xml.crypto.dsig.keyinfo;uses:=3D"javax.xml.crypto";version=3D"0.0.0.=
1_007_JavaSE", \
 javax.xml.crypto.dsig.spec;uses:=3D"javax.xml.crypto";version=3D"0.0.0.1_0=
07_JavaSE", \
 javax.xml.crypto.dsig;uses:=3D"javax.xml.crypto,javax.xml.crypto.dsig.spec=
,javax.xml.crypto.dsig.keyinfo";version=3D"0.0.0.1_007_JavaSE", \
 javax.xml.crypto;uses:=3D"javax.xml.crypto.dsig.keyinfo";version=3D"0.0.0.=
1_007_JavaSE", \
 javax.xml.datatype;uses:=3D"javax.xml.namespace";version=3D"0.0.0.1_007_Ja=
vaSE", \
 javax.xml.namespace;version=3D"0.0.0.1_007_JavaSE", \
 javax.xml.parsers;uses:=3D"javax.xml.validation,org.w3c.dom,org.xml.sax,or=
g.xml.sax.helpers";version=3D"0.0.0.1_007_JavaSE", \
 javax.xml.soap;uses:=3D"javax.activation,javax.xml.namespace,org.w3c.dom,j=
avax.xml.transform.dom,javax.xml.transform";version=3D"0.0.0.1_007_JavaSE",=
 \
 javax.xml.stream.events;uses:=3D"javax.xml.namespace,javax.xml.stream";ver=
sion=3D"0.0.0.1_007_JavaSE", \
 javax.xml.stream.util;uses:=3D"javax.xml.stream,javax.xml.stream.events,ja=
vax.xml.namespace";version=3D"0.0.0.1_007_JavaSE", \
 javax.xml.stream;uses:=3D"javax.xml.stream.events,javax.xml.namespace,java=
x.xml.stream.util,javax.xml.transform";version=3D"0.0.0.1_007_JavaSE", \
 javax.xml.transform.dom;uses:=3D"javax.xml.transform,org.w3c.dom";version=
=3D"0.0.0.1_007_JavaSE", \
 javax.xml.transform.sax;uses:=3D"org.xml.sax.ext,javax.xml.transform,org.x=
ml.sax,javax.xml.transform.stream";version=3D"0.0.0.1_007_JavaSE", \
 javax.xml.transform.stax;uses:=3D"javax.xml.stream,javax.xml.transform,jav=
ax.xml.stream.events";version=3D"0.0.0.1_007_JavaSE", \
 javax.xml.transform.stream;uses:=3D"javax.xml.transform";version=3D"0.0.0.=
1_007_JavaSE", \
 javax.xml.transform;version=3D"0.0.0.1_007_JavaSE", \
 javax.xml.validation;uses:=3D"org.w3c.dom.ls,javax.xml.transform,javax.xml=
.transform.stream,org.xml.sax,org.w3c.dom";version=3D"0.0.0.1_007_JavaSE", =
\
 javax.xml.ws.handler.soap;uses:=3D"javax.xml.ws.handler,javax.xml.namespac=
e,javax.xml.soap,javax.xml.bind";version=3D"0.0.0.1_007_JavaSE", \
 javax.xml.ws.handler;uses:=3D"javax.xml.ws,javax.xml.namespace";version=3D=
"0.0.0.1_007_JavaSE", \
 javax.xml.ws.http;uses:=3D"javax.xml.ws";version=3D"0.0.0.1_007_JavaSE", \
 javax.xml.ws.soap;uses:=3D"javax.xml.ws.spi,javax.xml.ws,javax.xml.soap";v=
ersion=3D"0.0.0.1_007_JavaSE", \
 javax.xml.ws.spi.http;version=3D"0.0.0.1_007_JavaSE", \
 javax.xml.ws.spi;uses:=3D"javax.xml.ws,javax.xml.ws.wsaddressing,javax.xml=
.transform,org.w3c.dom,javax.xml.namespace,javax.xml.ws.handler,javax.xml.b=
ind";version=3D"0.0.0.1_007_JavaSE", \
 javax.xml.ws.wsaddressing;uses:=3D"javax.xml.bind.annotation,javax.xml.nam=
espace,org.w3c.dom,javax.xml.transform,javax.xml.bind,javax.xml.ws,javax.xm=
l.ws.spi";version=3D"0.0.0.1_007_JavaSE", \
 javax.xml.ws;uses:=3D"javax.xml.ws.handler,javax.xml.ws.spi,javax.xml.ws.s=
pi.http,javax.xml.transform,org.w3c.dom,javax.xml.bind.annotation,javax.xml=
.transform.stream,javax.xml.bind,javax.xml.namespace";version=3D"0.0.0.1_00=
7_JavaSE", \
 javax.xml.xpath;uses:=3D"org.xml.sax,javax.xml.namespace";version=3D"0.0.0=
.1_007_JavaSE", \
 javax.xml;version=3D"0.0.0.1_007_JavaSE", \
 org.ietf.jgss;version=3D"0.0.0.1_007_JavaSE", \
 org.omg.CORBA.DynAnyPackage;uses:=3D"org.omg.CORBA";version=3D"0.0.0.1_007=
_JavaSE", \
 org.omg.CORBA.ORBPackage;uses:=3D"org.omg.CORBA";version=3D"0.0.0.1_007_Ja=
vaSE", \
 org.omg.CORBA.TypeCodePackage;uses:=3D"org.omg.CORBA";version=3D"0.0.0.1_0=
07_JavaSE", \
 org.omg.CORBA.portable;uses:=3D"org.omg.CORBA,org.omg.CORBA_2_3.portable";=
version=3D"0.0.0.1_007_JavaSE", \
 org.omg.CORBA;uses:=3D"org.omg.CORBA.portable,org.omg.CORBA.DynAnyPackage,=
org.omg.CORBA.ORBPackage,org.omg.CORBA_2_3.portable,org.omg.CORBA.TypeCodeP=
ackage";version=3D"0.0.0.1_007_JavaSE", \
 org.omg.CORBA_2_3.portable;uses:=3D"org.omg.CORBA,org.omg.CORBA.portable";=
version=3D"0.0.0.1_007_JavaSE", \
 org.omg.CORBA_2_3;uses:=3D"org.omg.CORBA,org.omg.CORBA.portable";version=
=3D"0.0.0.1_007_JavaSE", \
 org.omg.CosNaming.NamingContextExtPackage;uses:=3D"org.omg.CORBA,org.omg.C=
ORBA.portable";version=3D"0.0.0.1_007_JavaSE", \
 org.omg.CosNaming.NamingContextPackage;uses:=3D"org.omg.CORBA,org.omg.CORB=
A.portable,org.omg.CosNaming";version=3D"0.0.0.1_007_JavaSE", \
 org.omg.CosNaming;uses:=3D"org.omg.CORBA.portable,org.omg.CORBA,org.omg.Po=
rtableServer,org.omg.CosNaming.NamingContextPackage,org.omg.CosNaming.Namin=
gContextExtPackage";version=3D"0.0.0.1_007_JavaSE", \
 org.omg.Dynamic;uses:=3D"org.omg.CORBA,org.omg.CORBA.portable";version=3D"=
0.0.0.1_007_JavaSE", \
 org.omg.DynamicAny.DynAnyFactoryPackage;uses:=3D"org.omg.CORBA,org.omg.COR=
BA.portable";version=3D"0.0.0.1_007_JavaSE", \
 org.omg.DynamicAny.DynAnyPackage;uses:=3D"org.omg.CORBA,org.omg.CORBA.port=
able";version=3D"0.0.0.1_007_JavaSE", \
 org.omg.DynamicAny;uses:=3D"org.omg.CORBA,org.omg.CORBA.portable,org.omg.D=
ynamicAny.DynAnyFactoryPackage,org.omg.DynamicAny.DynAnyPackage";version=3D=
"0.0.0.1_007_JavaSE", \
 org.omg.IOP.CodecFactoryPackage;uses:=3D"org.omg.CORBA,org.omg.CORBA.porta=
ble";version=3D"0.0.0.1_007_JavaSE", \
 org.omg.IOP.CodecPackage;uses:=3D"org.omg.CORBA,org.omg.CORBA.portable";ve=
rsion=3D"0.0.0.1_007_JavaSE", \
 org.omg.IOP;uses:=3D"org.omg.CORBA,org.omg.CORBA.portable,org.omg.IOP.Code=
cFactoryPackage,org.omg.IOP.CodecPackage";version=3D"0.0.0.1_007_JavaSE", \
 org.omg.Messaging;uses:=3D"org.omg.CORBA,org.omg.CORBA.portable";version=
=3D"0.0.0.1_007_JavaSE", \
 org.omg.PortableInterceptor.ORBInitInfoPackage;uses:=3D"org.omg.CORBA,org.=
omg.CORBA.portable";version=3D"0.0.0.1_007_JavaSE", \
 org.omg.PortableInterceptor;uses:=3D"org.omg.CORBA,org.omg.CORBA.portable,=
org.omg.IOP,org.omg.PortableInterceptor.ORBInitInfoPackage,org.omg.CORBA_2_=
3.portable,org.omg.Dynamic";version=3D"0.0.0.1_007_JavaSE", \
 org.omg.PortableServer.CurrentPackage;uses:=3D"org.omg.CORBA,org.omg.CORBA=
.portable";version=3D"0.0.0.1_007_JavaSE", \
 org.omg.PortableServer.POAManagerPackage;uses:=3D"org.omg.CORBA,org.omg.CO=
RBA.portable";version=3D"0.0.0.1_007_JavaSE", \
 org.omg.PortableServer.POAPackage;uses:=3D"org.omg.CORBA,org.omg.CORBA.por=
table";version=3D"0.0.0.1_007_JavaSE", \
 org.omg.PortableServer.ServantLocatorPackage;uses:=3D"org.omg.CORBA,org.om=
g.CORBA.portable";version=3D"0.0.0.1_007_JavaSE", \
 org.omg.PortableServer.portable;uses:=3D"org.omg.CORBA,org.omg.PortableSer=
ver";version=3D"0.0.0.1_007_JavaSE", \
 org.omg.PortableServer;uses:=3D"org.omg.CORBA,org.omg.CORBA.portable,org.o=
mg.PortableServer.CurrentPackage,org.omg.PortableServer.POAManagerPackage,o=
rg.omg.PortableServer.POAPackage,org.omg.PortableServer.portable,org.omg.CO=
RBA_2_3,org.omg.PortableServer.ServantLocatorPackage";version=3D"0.0.0.1_00=
7_JavaSE", \
 org.omg.SendingContext;uses:=3D"org.omg.CORBA,org.omg.CORBA.portable";vers=
ion=3D"0.0.0.1_007_JavaSE", \
 org.omg.stub.java.rmi;uses:=3D"javax.rmi.CORBA";version=3D"0.0.0.1_007_Jav=
aSE", \
 org.w3c.dom.bootstrap;uses:=3D"org.w3c.dom";version=3D"0.0.0.1_007_JavaSE"=
, \
 org.w3c.dom.events;uses:=3D"org.w3c.dom,org.w3c.dom.views";version=3D"0.0.=
0.1_007_JavaSE", \
 org.w3c.dom.ls;uses:=3D"org.w3c.dom,org.w3c.dom.events,org.w3c.dom.travers=
al";version=3D"0.0.0.1_007_JavaSE", \
 org.w3c.dom;version=3D"0.0.0.1_007_JavaSE", \
 org.xml.sax.ext;uses:=3D"org.xml.sax,org.xml.sax.helpers";version=3D"0.0.0=
.1_007_JavaSE", \
 org.xml.sax.helpers;uses:=3D"org.xml.sax";version=3D"0.0.0.1_007_JavaSE", =
\
 org.xml.sax;version=3D"0.0.0.1_007_JavaSE"</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Remove the definition for the <code>javax.transaction</code> packages, a=
nd remove the <code>uses:=3D</code> clause for the <code>javax.sql</code> p=
ackages (but leaving the <code>version</code> clause). Concatenate all the =
lines together.
You=E2=80=99ll wind up with something like this in your <code>conf/config.p=
roperties</code> file:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-properties" data-lang=3D"p=
roperties">org.osgi.framework.system.packages=3Dorg.osgi.framework;version=
=3D1.7.0, org.osgi.framework.hooks.bundle;version=3D1.1.0, org.osgi.framewo=
rk.hooks.resolver;version=3D1.0.0, org.osgi.framework.hooks.service;version=
=3D1.1.0, org.osgi.framework.hooks.weaving;version=3D1.0.0, org.osgi.framew=
ork.launch;version=3D1.1.0, org.osgi.framework.namespace;version=3D1.0.0, o=
rg.osgi.framework.startlevel;version=3D1.0.0, org.osgi.framework.wiring;ver=
sion=3D1.1.0, org.osgi.resource;version=3D1.0.0, org.osgi.service.packagead=
min; version=3D1.2.0, org.osgi.service.startlevel; version=3D1.1.0, org.osg=
i.service.url;version=3D1.0.0, org.osgi.util.tracker;version=3D1.5.1 javax.=
accessibility;uses:=3D"javax.swing.text";version=3D"0.0.0.1_007_JavaSE", ja=
vax.activation;version=3D"0.0.0.1_007_JavaSE", javax.activity;version=3D"0.=
0.0.1_007_JavaSE", javax.annotation.processing;uses:=3D"javax.tools,javax.l=
ang.model,javax.lang.model.element,javax.lang.model.util";version=3D"0.0.0.=
1_007_JavaSE", javax.annotation;version=3D"0.0.0.1_007_JavaSE", javax.crypt=
o.interfaces;uses:=3D"javax.crypto.spec,javax.crypto";version=3D"0.0.0.1_00=
7_JavaSE", javax.crypto.spec;uses:=3D"javax.crypto";version=3D"0.0.0.1_007_=
JavaSE", javax.crypto;uses:=3D"javax.crypto.spec";version=3D"0.0.0.1_007_Ja=
vaSE", javax.imageio.event;uses:=3D"javax.imageio";version=3D"0.0.0.1_007_J=
avaSE", javax.imageio.metadata;uses:=3D"org.w3c.dom,javax.imageio";version=
=3D"0.0.0.1_007_JavaSE", javax.imageio.plugins.bmp;uses:=3D"javax.imageio";=
version=3D"0.0.0.1_007_JavaSE", javax.imageio.plugins.jpeg;uses:=3D"javax.i=
mageio";version=3D"0.0.0.1_007_JavaSE", javax.imageio.spi;uses:=3D"javax.im=
ageio.stream,javax.imageio,javax.imageio.metadata";version=3D"0.0.0.1_007_J=
avaSE", javax.imageio.stream;uses:=3D"javax.imageio";version=3D"0.0.0.1_007=
_JavaSE", javax.imageio;uses:=3D"javax.imageio.metadata,javax.imageio.strea=
m,javax.imageio.spi,javax.imageio.event";version=3D"0.0.0.1_007_JavaSE", ja=
vax.jws.soap;version=3D"0.0.0.1_007_JavaSE", javax.jws;version=3D"0.0.0.1_0=
07_JavaSE", javax.lang.model.element;uses:=3D"javax.lang.model.type,javax.l=
ang.model";version=3D"0.0.0.1_007_JavaSE", javax.lang.model.type;uses:=3D"j=
avax.lang.model.element,javax.lang.model";version=3D"0.0.0.1_007_JavaSE", j=
avax.lang.model.util;uses:=3D"javax.lang.model,javax.lang.model.element,jav=
ax.annotation.processing,javax.lang.model.type";version=3D"0.0.0.1_007_Java=
SE", javax.lang.model;version=3D"0.0.0.1_007_JavaSE", javax.management.load=
ing;uses:=3D"javax.management";version=3D"0.0.0.1_007_JavaSE", javax.manage=
ment.modelmbean;uses:=3D"javax.management,javax.management.loading";version=
=3D"0.0.0.1_007_JavaSE", javax.management.monitor;uses:=3D"javax.management=
";version=3D"0.0.0.1_007_JavaSE", javax.management.openmbean;uses:=3D"javax=
.management";version=3D"0.0.0.1_007_JavaSE", javax.management.relation;uses=
:=3D"javax.management";version=3D"0.0.0.1_007_JavaSE", javax.management.rem=
ote.rmi;uses:=3D"javax.management.remote,javax.security.auth,javax.manageme=
nt,javax.management.loading,javax.naming,javax.rmi.ssl,org.omg.CORBA,org.om=
g.CORBA_2_3.portable,org.omg.CORBA.portable,javax.rmi.CORBA,javax.rmi";vers=
ion=3D"0.0.0.1_007_JavaSE", javax.management.remote;uses:=3D"javax.security=
.auth,javax.management";version=3D"0.0.0.1_007_JavaSE", javax.management.ti=
mer;uses:=3D"javax.management";version=3D"0.0.0.1_007_JavaSE", javax.manage=
ment;uses:=3D"javax.management.loading,javax.management.openmbean";version=
=3D"0.0.0.1_007_JavaSE", javax.naming.directory;uses:=3D"javax.naming";vers=
ion=3D"0.0.0.1_007_JavaSE", javax.naming.event;uses:=3D"javax.naming,javax.=
naming.directory";version=3D"0.0.0.1_007_JavaSE", javax.naming.ldap;uses:=
=3D"javax.naming,javax.naming.directory,javax.net.ssl,javax.naming.event";v=
ersion=3D"0.0.0.1_007_JavaSE", javax.naming.spi;uses:=3D"javax.naming,javax=
.naming.directory";version=3D"0.0.0.1_007_JavaSE", javax.naming;uses:=3D"ja=
vax.naming.spi";version=3D"0.0.0.1_007_JavaSE", javax.net.ssl;uses:=3D"java=
x.security.cert,javax.security.auth.x500,javax.net";version=3D"0.0.0.1_007_=
JavaSE", javax.net;version=3D"0.0.0.1_007_JavaSE", javax.print.attribute.st=
andard;uses:=3D"javax.print.attribute";version=3D"0.0.0.1_007_JavaSE", java=
x.print.attribute;version=3D"0.0.0.1_007_JavaSE", javax.print.event;uses:=
=3D"javax.print,javax.print.attribute";version=3D"0.0.0.1_007_JavaSE", java=
x.print;uses:=3D"javax.print.attribute,javax.print.event,javax.print.attrib=
ute.standard";version=3D"0.0.0.1_007_JavaSE", javax.rmi.CORBA;uses:=3D"org.=
omg.CORBA,org.omg.CORBA_2_3.portable,org.omg.CORBA.portable,org.omg.Sending=
Context";version=3D"0.0.0.1_007_JavaSE", javax.rmi.ssl;uses:=3D"javax.net,j=
avax.net.ssl";version=3D"0.0.0.1_007_JavaSE", javax.rmi;uses:=3D"org.omg.CO=
RBA,javax.rmi.CORBA";version=3D"0.0.0.1_007_JavaSE", javax.script;version=
=3D"0.0.0.1_007_JavaSE", javax.security.auth.callback;version=3D"0.0.0.1_00=
7_JavaSE", javax.security.auth.kerberos;uses:=3D"javax.security.auth,javax.=
crypto";version=3D"0.0.0.1_007_JavaSE", javax.security.auth.login;uses:=3D"=
javax.security.auth,javax.security.auth.callback";version=3D"0.0.0.1_007_Ja=
vaSE", javax.security.auth.spi;uses:=3D"javax.security.auth.callback,javax.=
security.auth.login,javax.security.auth";version=3D"0.0.0.1_007_JavaSE", ja=
vax.security.auth.x500;uses:=3D"javax.security.auth";version=3D"0.0.0.1_007=
_JavaSE", javax.security.auth;version=3D"0.0.0.1_007_JavaSE", javax.securit=
y.cert;version=3D"0.0.0.1_007_JavaSE", javax.security.sasl;uses:=3D"javax.s=
ecurity.auth.callback";version=3D"0.0.0.1_007_JavaSE", javax.sound.midi.spi=
;uses:=3D"javax.sound.midi";version=3D"0.0.0.1_007_JavaSE", javax.sound.mid=
i;uses:=3D"javax.sound.midi.spi";version=3D"0.0.0.1_007_JavaSE", javax.soun=
d.sampled.spi;uses:=3D"javax.sound.sampled";version=3D"0.0.0.1_007_JavaSE",=
 javax.sound.sampled;uses:=3D"javax.sound.sampled.spi";version=3D"0.0.0.1_0=
07_JavaSE", javax.sql.rowset.serial;version=3D"0.0.0.1_007_JavaSE", javax.s=
ql.rowset.spi;version=3D"0.0.0.1_007_JavaSE", javax.sql.rowset;version=3D"0=
.0.0.1_007_JavaSE", javax.sql;version=3D"0.0.0.1_007_JavaSE", javax.swing.b=
order;uses:=3D"javax.swing";version=3D"0.0.0.1_007_JavaSE", javax.swing.col=
orchooser;uses:=3D"javax.swing,javax.swing.border,javax.swing.event,javax.s=
wing.text";version=3D"0.0.0.1_007_JavaSE", javax.swing.event;uses:=3D"javax=
.swing,javax.swing.text,javax.swing.table,javax.swing.tree,javax.swing.undo=
";version=3D"0.0.0.1_007_JavaSE", javax.swing.filechooser;uses:=3D"javax.sw=
ing";version=3D"0.0.0.1_007_JavaSE", javax.swing.plaf.basic;uses:=3D"javax.=
swing.border,javax.swing,javax.swing.plaf,javax.swing.text,javax.swing.even=
t,javax.swing.colorchooser,javax.accessibility,javax.swing.filechooser,java=
x.swing.text.html,javax.sound.sampled,javax.swing.table,javax.swing.plaf.sy=
nth,javax.swing.tree";version=3D"0.0.0.1_007_JavaSE", javax.swing.plaf.meta=
l;uses:=3D"javax.swing.plaf,javax.swing,javax.swing.border,javax.swing.text=
,javax.swing.plaf.basic,javax.swing.filechooser,javax.swing.event,javax.swi=
ng.tree";version=3D"0.0.0.1_007_JavaSE", javax.swing.plaf.multi;uses:=3D"ja=
vax.accessibility,javax.swing,javax.swing.plaf,javax.swing.filechooser,java=
x.swing.text,javax.swing.tree";version=3D"0.0.0.1_007_JavaSE", javax.swing.=
plaf.nimbus;uses:=3D"javax.swing,javax.swing.plaf,javax.swing.border,javax.=
swing.plaf.synth";version=3D"0.0.0.1_007_JavaSE", javax.swing.plaf.synth;us=
es:=3D"javax.swing,javax.swing.plaf,javax.swing.text,javax.swing.border,jav=
ax.swing.plaf.basic,javax.swing.colorchooser,javax.swing.event,javax.xml.pa=
rsers,org.xml.sax,org.xml.sax.helpers,javax.swing.table,javax.swing.tree";v=
ersion=3D"0.0.0.1_007_JavaSE", javax.swing.plaf;uses:=3D"javax.swing,javax.=
swing.border,javax.accessibility,javax.swing.filechooser,javax.swing.text,j=
avax.swing.tree";version=3D"0.0.0.1_007_JavaSE", javax.swing.table;uses:=3D=
"javax.swing.event,javax.swing.plaf,javax.swing.border,javax.swing,javax.ac=
cessibility";version=3D"0.0.0.1_007_JavaSE", javax.swing.text.html.parser;u=
ses:=3D"javax.swing.text,javax.swing.text.html";version=3D"0.0.0.1_007_Java=
SE", javax.swing.text.html;uses:=3D"javax.swing.event,javax.swing.text,java=
x.accessibility,javax.swing,javax.swing.plaf,javax.swing.border,javax.swing=
.undo";version=3D"0.0.0.1_007_JavaSE", javax.swing.text.rtf;uses:=3D"javax.=
swing.text";version=3D"0.0.0.1_007_JavaSE", javax.swing.text;uses:=3D"javax=
.swing.event,javax.swing.tree,javax.swing.undo,javax.swing,javax.swing.plaf=
,javax.swing.plaf.basic,javax.print,javax.print.attribute,javax.accessibili=
ty,javax.swing.text.html";version=3D"0.0.0.1_007_JavaSE", javax.swing.tree;=
uses:=3D"javax.swing.event,javax.swing,javax.swing.border,javax.swing.plaf,=
javax.swing.plaf.basic";version=3D"0.0.0.1_007_JavaSE", javax.swing.undo;us=
es:=3D"javax.swing,javax.swing.event";version=3D"0.0.0.1_007_JavaSE", javax=
.swing;uses:=3D"javax.swing.event,javax.accessibility,javax.swing.text,java=
x.swing.plaf,javax.swing.border,javax.swing.tree,javax.swing.table,javax.sw=
ing.colorchooser,javax.swing.plaf.basic,javax.swing.text.html,javax.swing.f=
ilechooser,javax.print,javax.print.attribute,javax.swing.plaf.metal";versio=
n=3D"0.0.0.1_007_JavaSE", javax.tools;uses:=3D"javax.lang.model.element,jav=
ax.annotation.processing,javax.lang.model";version=3D"0.0.0.1_007_JavaSE", =
javax.xml.bind.annotation.adapters;uses:=3D"javax.xml.bind";version=3D"0.0.=
0.1_007_JavaSE", javax.xml.bind.annotation;uses:=3D"javax.xml.transform,jav=
ax.xml.bind,javax.xml.parsers,javax.xml.transform.dom,org.w3c.dom";version=
=3D"0.0.0.1_007_JavaSE", javax.xml.bind.attachment;uses:=3D"javax.activatio=
n";version=3D"0.0.0.1_007_JavaSE", javax.xml.bind.helpers;uses:=3D"javax.xm=
l.bind.annotation.adapters,javax.xml.transform.dom,org.w3c.dom,org.xml.sax,=
javax.xml.bind.attachment,javax.xml.stream,javax.xml.transform,javax.xml.tr=
ansform.stream,javax.xml.validation,javax.xml.transform.sax,javax.xml.bind,=
javax.xml.parsers";version=3D"0.0.0.1_007_JavaSE", javax.xml.bind.util;uses=
:=3D"javax.xml.transform.sax,javax.xml.bind,org.xml.sax,org.xml.sax.ext,org=
.xml.sax.helpers";version=3D"0.0.0.1_007_JavaSE", javax.xml.bind;uses:=3D"j=
avax.xml.validation,javax.xml.namespace,javax.xml.datatype,javax.xml.transf=
orm,javax.xml.bind.annotation,javax.xml.transform.stream,org.w3c.dom,javax.=
xml.bind.attachment,javax.xml.stream,javax.xml.bind.annotation.adapters,org=
.xml.sax";version=3D"0.0.0.1_007_JavaSE", javax.xml.crypto.dom;uses:=3D"jav=
ax.xml.crypto,org.w3c.dom";version=3D"0.0.0.1_007_JavaSE", javax.xml.crypto=
.dsig.dom;uses:=3D"javax.xml.crypto.dsig,javax.xml.crypto,org.w3c.dom,javax=
.xml.crypto.dom";version=3D"0.0.0.1_007_JavaSE", javax.xml.crypto.dsig.keyi=
nfo;uses:=3D"javax.xml.crypto";version=3D"0.0.0.1_007_JavaSE", javax.xml.cr=
ypto.dsig.spec;uses:=3D"javax.xml.crypto";version=3D"0.0.0.1_007_JavaSE", j=
avax.xml.crypto.dsig;uses:=3D"javax.xml.crypto,javax.xml.crypto.dsig.spec,j=
avax.xml.crypto.dsig.keyinfo";version=3D"0.0.0.1_007_JavaSE", javax.xml.cry=
pto;uses:=3D"javax.xml.crypto.dsig.keyinfo";version=3D"0.0.0.1_007_JavaSE",=
 javax.xml.datatype;uses:=3D"javax.xml.namespace";version=3D"0.0.0.1_007_Ja=
vaSE", javax.xml.namespace;version=3D"0.0.0.1_007_JavaSE", javax.xml.parser=
s;uses:=3D"javax.xml.validation,org.w3c.dom,org.xml.sax,org.xml.sax.helpers=
";version=3D"0.0.0.1_007_JavaSE", javax.xml.soap;uses:=3D"javax.activation,=
javax.xml.namespace,org.w3c.dom,javax.xml.transform.dom,javax.xml.transform=
";version=3D"0.0.0.1_007_JavaSE", javax.xml.stream.events;uses:=3D"javax.xm=
l.namespace,javax.xml.stream";version=3D"0.0.0.1_007_JavaSE", javax.xml.str=
eam.util;uses:=3D"javax.xml.stream,javax.xml.stream.events,javax.xml.namesp=
ace";version=3D"0.0.0.1_007_JavaSE", javax.xml.stream;uses:=3D"javax.xml.st=
ream.events,javax.xml.namespace,javax.xml.stream.util,javax.xml.transform";=
version=3D"0.0.0.1_007_JavaSE", javax.xml.transform.dom;uses:=3D"javax.xml.=
transform,org.w3c.dom";version=3D"0.0.0.1_007_JavaSE", javax.xml.transform.=
sax;uses:=3D"org.xml.sax.ext,javax.xml.transform,org.xml.sax,javax.xml.tran=
sform.stream";version=3D"0.0.0.1_007_JavaSE", javax.xml.transform.stax;uses=
:=3D"javax.xml.stream,javax.xml.transform,javax.xml.stream.events";version=
=3D"0.0.0.1_007_JavaSE", javax.xml.transform.stream;uses:=3D"javax.xml.tran=
sform";version=3D"0.0.0.1_007_JavaSE", javax.xml.transform;version=3D"0.0.0=
.1_007_JavaSE", javax.xml.validation;uses:=3D"org.w3c.dom.ls,javax.xml.tran=
sform,javax.xml.transform.stream,org.xml.sax,org.w3c.dom";version=3D"0.0.0.=
1_007_JavaSE", javax.xml.ws.handler.soap;uses:=3D"javax.xml.ws.handler,java=
x.xml.namespace,javax.xml.soap,javax.xml.bind";version=3D"0.0.0.1_007_JavaS=
E", javax.xml.ws.handler;uses:=3D"javax.xml.ws,javax.xml.namespace";version=
=3D"0.0.0.1_007_JavaSE", javax.xml.ws.http;uses:=3D"javax.xml.ws";version=
=3D"0.0.0.1_007_JavaSE", javax.xml.ws.soap;uses:=3D"javax.xml.ws.spi,javax.=
xml.ws,javax.xml.soap";version=3D"0.0.0.1_007_JavaSE", javax.xml.ws.spi.htt=
p;version=3D"0.0.0.1_007_JavaSE", javax.xml.ws.spi;uses:=3D"javax.xml.ws,ja=
vax.xml.ws.wsaddressing,javax.xml.transform,org.w3c.dom,javax.xml.namespace=
,javax.xml.ws.handler,javax.xml.bind";version=3D"0.0.0.1_007_JavaSE", javax=
.xml.ws.wsaddressing;uses:=3D"javax.xml.bind.annotation,javax.xml.namespace=
,org.w3c.dom,javax.xml.transform,javax.xml.bind,javax.xml.ws,javax.xml.ws.s=
pi";version=3D"0.0.0.1_007_JavaSE", javax.xml.ws;uses:=3D"javax.xml.ws.hand=
ler,javax.xml.ws.spi,javax.xml.ws.spi.http,javax.xml.transform,org.w3c.dom,=
javax.xml.bind.annotation,javax.xml.transform.stream,javax.xml.bind,javax.x=
ml.namespace";version=3D"0.0.0.1_007_JavaSE", javax.xml.xpath;uses:=3D"org.=
xml.sax,javax.xml.namespace";version=3D"0.0.0.1_007_JavaSE", javax.xml;vers=
ion=3D"0.0.0.1_007_JavaSE", org.ietf.jgss;version=3D"0.0.0.1_007_JavaSE", o=
rg.omg.CORBA.DynAnyPackage;uses:=3D"org.omg.CORBA";version=3D"0.0.0.1_007_J=
avaSE", org.omg.CORBA.ORBPackage;uses:=3D"org.omg.CORBA";version=3D"0.0.0.1=
_007_JavaSE", org.omg.CORBA.TypeCodePackage;uses:=3D"org.omg.CORBA";version=
=3D"0.0.0.1_007_JavaSE", org.omg.CORBA.portable;uses:=3D"org.omg.CORBA,org.=
omg.CORBA_2_3.portable";version=3D"0.0.0.1_007_JavaSE", org.omg.CORBA;uses:=
=3D"org.omg.CORBA.portable,org.omg.CORBA.DynAnyPackage,org.omg.CORBA.ORBPac=
kage,org.omg.CORBA_2_3.portable,org.omg.CORBA.TypeCodePackage";version=3D"0=
.0.0.1_007_JavaSE", org.omg.CORBA_2_3.portable;uses:=3D"org.omg.CORBA,org.o=
mg.CORBA.portable";version=3D"0.0.0.1_007_JavaSE", org.omg.CORBA_2_3;uses:=
=3D"org.omg.CORBA,org.omg.CORBA.portable";version=3D"0.0.0.1_007_JavaSE", o=
rg.omg.CosNaming.NamingContextExtPackage;uses:=3D"org.omg.CORBA,org.omg.COR=
BA.portable";version=3D"0.0.0.1_007_JavaSE", org.omg.CosNaming.NamingContex=
tPackage;uses:=3D"org.omg.CORBA,org.omg.CORBA.portable,org.omg.CosNaming";v=
ersion=3D"0.0.0.1_007_JavaSE", org.omg.CosNaming;uses:=3D"org.omg.CORBA.por=
table,org.omg.CORBA,org.omg.PortableServer,org.omg.CosNaming.NamingContextP=
ackage,org.omg.CosNaming.NamingContextExtPackage";version=3D"0.0.0.1_007_Ja=
vaSE", org.omg.Dynamic;uses:=3D"org.omg.CORBA,org.omg.CORBA.portable";versi=
on=3D"0.0.0.1_007_JavaSE", org.omg.DynamicAny.DynAnyFactoryPackage;uses:=3D=
"org.omg.CORBA,org.omg.CORBA.portable";version=3D"0.0.0.1_007_JavaSE", org.=
omg.DynamicAny.DynAnyPackage;uses:=3D"org.omg.CORBA,org.omg.CORBA.portable"=
;version=3D"0.0.0.1_007_JavaSE", org.omg.DynamicAny;uses:=3D"org.omg.CORBA,=
org.omg.CORBA.portable,org.omg.DynamicAny.DynAnyFactoryPackage,org.omg.Dyna=
micAny.DynAnyPackage";version=3D"0.0.0.1_007_JavaSE", org.omg.IOP.CodecFact=
oryPackage;uses:=3D"org.omg.CORBA,org.omg.CORBA.portable";version=3D"0.0.0.=
1_007_JavaSE", org.omg.IOP.CodecPackage;uses:=3D"org.omg.CORBA,org.omg.CORB=
A.portable";version=3D"0.0.0.1_007_JavaSE", org.omg.IOP;uses:=3D"org.omg.CO=
RBA,org.omg.CORBA.portable,org.omg.IOP.CodecFactoryPackage,org.omg.IOP.Code=
cPackage";version=3D"0.0.0.1_007_JavaSE", org.omg.Messaging;uses:=3D"org.om=
g.CORBA,org.omg.CORBA.portable";version=3D"0.0.0.1_007_JavaSE", org.omg.Por=
tableInterceptor.ORBInitInfoPackage;uses:=3D"org.omg.CORBA,org.omg.CORBA.po=
rtable";version=3D"0.0.0.1_007_JavaSE", org.omg.PortableInterceptor;uses:=
=3D"org.omg.CORBA,org.omg.CORBA.portable,org.omg.IOP,org.omg.PortableInterc=
eptor.ORBInitInfoPackage,org.omg.CORBA_2_3.portable,org.omg.Dynamic";versio=
n=3D"0.0.0.1_007_JavaSE", org.omg.PortableServer.CurrentPackage;uses:=3D"or=
g.omg.CORBA,org.omg.CORBA.portable";version=3D"0.0.0.1_007_JavaSE", org.omg=
.PortableServer.POAManagerPackage;uses:=3D"org.omg.CORBA,org.omg.CORBA.port=
able";version=3D"0.0.0.1_007_JavaSE", org.omg.PortableServer.POAPackage;use=
s:=3D"org.omg.CORBA,org.omg.CORBA.portable";version=3D"0.0.0.1_007_JavaSE",=
 org.omg.PortableServer.ServantLocatorPackage;uses:=3D"org.omg.CORBA,org.om=
g.CORBA.portable";version=3D"0.0.0.1_007_JavaSE", org.omg.PortableServer.po=
rtable;uses:=3D"org.omg.CORBA,org.omg.PortableServer";version=3D"0.0.0.1_00=
7_JavaSE", org.omg.PortableServer;uses:=3D"org.omg.CORBA,org.omg.CORBA.port=
able,org.omg.PortableServer.CurrentPackage,org.omg.PortableServer.POAManage=
rPackage,org.omg.PortableServer.POAPackage,org.omg.PortableServer.portable,=
org.omg.CORBA_2_3,org.omg.PortableServer.ServantLocatorPackage";version=3D"=
0.0.0.1_007_JavaSE", org.omg.SendingContext;uses:=3D"org.omg.CORBA,org.omg.=
CORBA.portable";version=3D"0.0.0.1_007_JavaSE", org.omg.stub.java.rmi;uses:=
=3D"javax.rmi.CORBA";version=3D"0.0.0.1_007_JavaSE", org.w3c.dom.bootstrap;=
uses:=3D"org.w3c.dom";version=3D"0.0.0.1_007_JavaSE", org.w3c.dom.events;us=
es:=3D"org.w3c.dom,org.w3c.dom.views";version=3D"0.0.0.1_007_JavaSE", org.w=
3c.dom.ls;uses:=3D"org.w3c.dom,org.w3c.dom.events,org.w3c.dom.traversal";ve=
rsion=3D"0.0.0.1_007_JavaSE", org.w3c.dom;version=3D"0.0.0.1_007_JavaSE", o=
rg.xml.sax.ext;uses:=3D"org.xml.sax,org.xml.sax.helpers";version=3D"0.0.0.1=
_007_JavaSE", org.xml.sax.helpers;uses:=3D"org.xml.sax";version=3D"0.0.0.1_=
007_JavaSE", org.xml.sax;version=3D"0.0.0.1_007_JavaSE"</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>You should now be able to start Felix, and deploy all the jars listed on=
 this page.
You should see output similar to this on the console, using the <code>felix=
:lb</code> command:</p>
</div>
<div class=3D"literalblock">
<div class=3D"content">
<pre>    ID|State      |Level|Name
    0|Active     |    0|System Bundle (4.4.1)
    1|Active     |    1|ASM (5.0.1)
    2|Active     |    1|ASM commons classes (5.0.1)
    3|Active     |    1|ASM Tree class visitor (5.0.1)
    4|Active     |    1|geronimo-jta_1.1_spec (1.1.1)
    5|Active     |    1|javax.annotation API (1.2.0)
    6|Active     |    1|javax.mail bundle from Glassfish (1.4.1.v2010050820=
20)
    7|Active     |    1|Java Server Pages Standard Tag Library API Bundle (=
1.2.0.v201105211821)
    8|Active     |    1|JavaServer Pages (TM) TagLib Implementation (1.2.2)
    9|Active     |    1|Jetty :: Servlet Annotations (9.2.4.SNAPSHOT)
   10|Active     |    1|Jetty :: Deployers (9.2.4.SNAPSHOT)
   11|Active     |    1|Jetty :: Http Utility (9.2.4.SNAPSHOT)
   12|Active     |    1|Jetty :: IO Utility (9.2.4.SNAPSHOT)
   13|Active     |    1|Jetty :: JNDI Naming (9.2.4.SNAPSHOT)
   14|Active     |    1|Jetty :: OSGi :: Boot (9.2.4.SNAPSHOT)
   15|Resolved   |    1|Jetty-OSGi-Jasper Integration (9.2.4.SNAPSHOT)
   16|Active     |    1|Jetty Servlet API and Schemas for OSGi (3.1.0.SNAPS=
HOT)
   17|Active     |    1|Jetty :: Plus (9.2.4.SNAPSHOT)
   18|Active     |    1|Jetty :: Security (9.2.4.SNAPSHOT)
   19|Active     |    1|Jetty :: Server Core (9.2.4.SNAPSHOT)
   20|Active     |    1|Jetty :: Servlet Handling (9.2.4.SNAPSHOT)
   21|Active     |    1|Jetty :: Utility Servlets and Filters (9.2.4.SNAPSH=
OT)
   22|Active     |    1|Jetty :: Utilities (9.2.4.SNAPSHOT)
   23|Active     |    1|Jetty :: Webapp Application Support (9.2.4.SNAPSHOT=
)
   24|Active     |    1|Jetty :: XML utilities (9.2.4.SNAPSHOT)
   25|Active     |    1|Apache Aries SPI Fly Dynamic Weaving Bundle (1.0.1)
   26|Active     |    1|Apache Aries Util (1.0.0)
   27|Active     |    1|Apache Felix Bundle Repository (2.0.2)
   28|Active     |    1|Apache Felix Configuration Admin Service (1.8.0)
   29|Active     |    1|Apache Felix EventAdmin (1.3.2)
   30|Active     |    1|Apache Felix Gogo Command (0.14.0)
   31|Active     |    1|Apache Felix Gogo Runtime (0.12.1)
   32|Active     |    1|Apache Felix Gogo Shell (0.10.0)
   33|Active     |    1|Apache Felix Log Service (1.0.1)
   34|Active     |    1|Jetty :: Apache JSP (9.2.4.SNAPSHOT)
   35|Active     |    1|Eclipse Compiler for Java(TM) (3.8.2.v20130121-1453=
25)
   36|Active     |    1|Mortbay EL API and Implementation (8.0.9)
   37|Active     |    1|Mortbay Jasper (8.0.9)</pre>
</div>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_eclipse">Eclipse</h5>
<div class=3D"paragraph">
<p>The Jetty OSGi integration has been successfully tested against <a href=
=3D"https://www.eclipse.org/equinox/">Equinox</a> Mars RC1.</p>
</div>
<div class=3D"paragraph">
<p>Ensure that these services are present:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p><a href=3D"https://www.eclipse.org/equinox/bundles/">Configuration Admin=
</a></p>
</li>
<li>
<p><a href=3D"https://www.eclipse.org/equinox/bundles/">Event Admin</a></p>
</li>
</ul>
</div>
<div class=3D"sect5">
<h6 id=3D"_eclipse_update_site">Eclipse Update Site</h6>
<div class=3D"paragraph">
<p>There is a list of Eclipse P2 sites for the jetty releases maintained at=
 <a href=3D"http://download.eclipse.org/jetty/updates/jetty-bundles-9.x/" c=
lass=3D"bare">http://download.eclipse.org/jetty/updates/jetty-bundles-9.x/<=
/a></p>
</div>
<div class=3D"paragraph">
<p>Each P2 repo has one big feature group that defines most of the Jetty ja=
rs.
<strong>Beware: No 3rd party dependency jars are included, so you will need=
 to have installed the dependencies listed previously in this document.</st=
rong></p>
</div>
<div class=3D"paragraph">
<p>In addition, as the feature group includes websocket, you will need to d=
ownload and have installed the <code>javax.websocket-api</code> jar:</p>
</div>
<table class=3D"tableblock frame-all grid-all spread">
<caption class=3D"title">Table 20. Extra Jars Required for Websocket</capti=
on>
<colgroup>
<col style=3D"width: 33.3333%;">
<col style=3D"width: 33.3333%;">
<col style=3D"width: 33.3334%;">
</colgroup>
<thead>
<tr>
<th class=3D"tableblock halign-left valign-top">Jar</th>
<th class=3D"tableblock halign-left valign-top">Bundle Symbolic Name</th>
<th class=3D"tableblock halign-left valign-top">Location</th>
</tr>
</thead>
<tbody>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">jav=
ax.websocket-api</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">jav=
ax.websocket-api</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><a =
href=3D"http://central.maven.org/maven2/javax/websocket/websocket-api">Mave=
n
central</a></p></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"framework-weld">Weld</h3>
<div class=3D"paragraph">
<p><a href=3D"http://seamframework.org/Weld">Weld</a> can be used to add su=
pport for CDI (Contexts and Dependency Injection) to Servlets, Listeners an=
d Filters.
It is easily configured with Jetty 9.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"weld-setup-distro">Weld Setup</h4>
<div class=3D"paragraph">
<p>The easiest way to configure weld is within the jetty distribution itsel=
f:</p>
</div>
<div class=3D"olist arabic">
<ol class=3D"arabic">
<li>
<p>Enable the startup <a href=3D"file:///home/tian/Downloads/b60/ebook/jett=
y.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#star=
tup-modules">module</a> called "cdi".</p>
</li>
<li>
<p>Ensure your <code>WEB-INF/web.xml</code> contains the following:</p>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml">  <=
listener>
    <listener-class>org.jboss.weld.environment.servlet.Listener</listener-c=
lass>
  </listener>

  <resource-env-ref>
    <description>Object factory for the CDI Bean Manager</description>
    <resource-env-ref-name>BeanManager</resource-env-ref-name>
    <resource-env-ref-type>javax.enterprise.inject.spi.BeanManager</resourc=
e-env-ref-type>
  </resource-env-ref></code></pre>
</div>
</div>
</li>
</ol>
</div>
<div class=3D"paragraph">
<p>That should be it so when you start up your jetty distribution with the =
webapp you should see output similar to the following (providing your loggi=
ng is the default configuration):</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">2015-06-18 12:13:54.924:INFO::main: Logging initialized @485ms
2015-06-18 12:13:55.231:INFO:oejs.Server:main: jetty-9.3.1-SNAPSHOT
2015-06-18 12:13:55.264:INFO:oejdp.ScanningAppProvider:main: Deployment mon=
itor [file:///tmp/cdi-demo/webapps/] at interval 1
2015-06-18 12:13:55.607:WARN:oeja.AnnotationConfiguration:main: ServletCont=
ainerInitializers: detected. Class hierarchy: empty
Jun 18, 2015 12:13:55 PM org.jboss.weld.environment.servlet.EnhancedListene=
r onStartup
INFO: WELD-ENV-001008: Initialize Weld using ServletContainerInitializer
Jun 18, 2015 12:13:55 PM org.jboss.weld.bootstrap.WeldStartup <clinit>
INFO: WELD-000900: 2.2.9 (Final)
Jun 18, 2015 12:13:55 PM org.jboss.weld.environment.servlet.deployment.WebA=
ppBeanArchiveScanner scan
WARN: WELD-ENV-001004: Found both WEB-INF/beans.xml and WEB-INF/classes/MET=
A-INF/beans.xml. It's not portable to use both locations at the same time. =
Weld is going to use file:/tmp/jetty-0.0.0.0-8080-cdi-webapp.war-_cdi-webap=
p-any-8161614308407422636.dir/webapp/WEB-INF/beans.xml.
Jun 18, 2015 12:13:55 PM org.jboss.weld.bootstrap.WeldStartup startContaine=
r
INFO: WELD-000101: Transactional services not available. Injection of @Inje=
ct UserTransaction not available. Transactional observers will be invoked s=
ynchronously.
Jun 18, 2015 12:13:55 PM org.jboss.weld.interceptor.util.InterceptionTypeRe=
gistry <clinit>
WARN: WELD-001700: Interceptor annotation class javax.ejb.PostActivate not =
found, interception based on it is not enabled
Jun 18, 2015 12:13:55 PM org.jboss.weld.interceptor.util.InterceptionTypeRe=
gistry <clinit>
WARN: WELD-001700: Interceptor annotation class javax.ejb.PrePassivate not =
found, interception based on it is not enabled
Jun 18, 2015 12:13:56 PM org.jboss.weld.bootstrap.MissingDependenciesRegist=
ry handleResourceLoadingException
Jun 18, 2015 12:13:56 PM org.jboss.weld.environment.servlet.WeldServletLife=
cycle findContainer
INFO: WELD-ENV-001002: Container detection skipped - custom container class=
 loaded: org.jboss.weld.environment.jetty.JettyContainer.
Jun 18, 2015 12:13:56 PM org.jboss.weld.environment.jetty.JettyContainer in=
itialize
INFO: WELD-ENV-001200: Jetty 7.2+ detected, CDI injection will be available=
 in Servlets and Filters. Injection into Listeners should work on Jetty 9.1=
.1 and newer.
Jun 18, 2015 12:13:56 PM org.jboss.weld.environment.servlet.Listener contex=
tInitialized
INFO: WELD-ENV-001006: org.jboss.weld.environment.servlet.EnhancedListener =
used for ServletContext notifications
Jun 18, 2015 12:13:56 PM org.jboss.weld.environment.servlet.EnhancedListene=
r contextInitialized
INFO: WELD-ENV-001009: org.jboss.weld.environment.servlet.Listener used for=
 ServletRequest and HttpSession notifications
2015-06-18 12:13:56.535:INFO:oejsh.ContextHandler:main: Started o.e.j.w.Web=
AppContext@6574b225{/cdi-webapp,file:///tmp/jetty-0.0.0.0-8080-cdi-webapp.w=
ar-_cdi-webapp-any-8161614308407422636.dir/webapp/,AVAILABLE}{/cdi-webapp.w=
ar}
2015-06-18 12:13:56.554:INFO:oejs.ServerConnector:main: Started ServerConne=
ctor@7112f81c{HTTP/1.1,[http/1.1]}{0.0.0.0:8080}
2015-06-18 12:13:56.587:INFO:oejus.SslContextFactory:main: x509=3D{jetty.ec=
lipse.org=3Djetty} wild=3D{} alias=3Dnull for SslContextFactory@3214ee6(fil=
e:///tmp/cdi-demo/etc/keystore,file:///tmp/cdi-demo/etc/keystore)
2015-06-18 12:13:56.821:INFO:oejs.ServerConnector:main: Started ServerConne=
ctor@69176a9b{SSL,[ssl, http/1.1]}{0.0.0.0:8443}
2015-06-18 12:13:56.822:INFO:oejs.Server:main: Started @2383ms</clinit></cl=
init></clinit></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>For use with the jetty-maven-plugin, the best idea is to make the org.jb=
oss.weld.servlet:weld-servlet artifact a <em>plugin</em> dependency (<em>no=
t</em> a webapp dependency), then follow step 2 above.</p>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"framework-metro">Metro</h3>
<div class=3D"paragraph">
<p><a href=3D"https://metro.java.net/">Metro</a> is the reference implement=
ation for <a href=3D"http://jcp.org/en/jsr/detail?id=3D109">web services</a=
>.
You can easily use Metro with Jetty to integrate web services with your web=
 applications.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"metro-setup-distro">Metro Setup</h4>
<div class=3D"olist arabic">
<ol class=3D"arabic">
<li>
<p><a href=3D"https://metro.java.net/latest/download.html">Download</a> the=
 Metro distribution and unpack it to your disk.
We=E2=80=99ll refer to the unpacked location as <code>$metro.home</code>.</=
p>
</li>
<li>
<p>Create the directory <code>$jetty.home/lib/metro</code></p>
</li>
<li>
<p>Copy the jars from $metro.home/lib to <code>$jetty.home/lib/metro</code>=
</p>
</li>
<li>
<p>Edit the start.ini file and add an OPTION line for metro near the end.</=
p>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-plain" data-lang=3D"plain"=
>OPTIONS=3Dmetro</code></pre>
</div>
</div>
</li>
</ol>
</div>
<div class=3D"paragraph">
<p>That=E2=80=99s all the setup you need to do to integrate Jetty and Metro=
.</p>
</div>
<div class=3D"paragraph">
<p>Now read the <a href=3D"https://metro.java.net/discover/">Metro document=
ation</a> on <a href=3D"https://metro.java.net/getting-started/">how to cre=
ate web services</a>.
The Metro distribution you downloaded should also contain several example w=
eb applications in the $metro.home/samples directory that you can build and=
 deploy to Jetty (simply by copying the war file produced by the build).</p=
>
</div>
<div class=3D"paragraph">
<p>Here=E2=80=99s an example of the log output from Jetty when one of the s=
ample Metro wars (from <code>$metro.home/samples/async</code>) is deployed =
to Jetty:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">[2093] java -jar start.jar

2013-07-26 15:47:53.480:INFO:oejs.Server:main: jetty-9.0.4.v20130625
2013-07-26 15:47:53.549:INFO:oejdp.ScanningAppProvider:main: Deployment mon=
itor [file:/home/user/jetty-distribution-{VERSION}/webapps/] at interval 1
Jul 26, 2013 3:47:53 PM com.sun.xml.ws.transport.http.servlet.WSServletCont=
extListener contextInitialized
INFO: WSSERVLET12: JAX-WS context listener initializing
Jul 26, 2013 3:47:56 PM com.sun.xml.ws.server.MonitorBase createRoot
INFO: Metro monitoring rootname successfully set to: com.sun.metro:pp=3D/,t=
ype=3DWSEndpoint,name=3D/metro-async-AddNumbersService-AddNumbersImplPort
Jul 26, 2013 3:47:56 PM com.sun.xml.ws.transport.http.servlet.WSServletDele=
gate <init>
INFO: WSSERVLET14: JAX-WS servlet initializing
2013-07-26 15:47:56.800:INFO:oejsh.ContextHandler:main: Started o.e.j.w.Web=
AppContext@75707c77{/metro-async,file:/tmp/jetty-0.0.0.0-8080-metro-async.w=
ar-_metro-async-any-/webapp/,AVAILABLE}{/metro-async.war}
2013-07-26 15:47:56.853:INFO:oejs.ServerConnector:main: Started ServerConne=
ctor@47dce809{HTTP/1.1}{0.0.0.0:8080}</init></code></pre>
</div>
</div>
</div>
</div>
</div>
</div>
<h1 id=3D"jetty-ref-guide" class=3D"sect0">Jetty Reference Guide</h1>
<div class=3D"sect1">
<h2 id=3D"architecture">Architecture</h2>
<div class=3D"sectionbody">
<div class=3D"paragraph">
<p>General items related to the architecture of jetty and how it deals with=
 certain design decisions.</p>
</div>
<div class=3D"sect2">
<h3 id=3D"basic-architecture">Jetty Architecture</h3>
<div class=3D"sect3">
<h4 id=3D"_view_from_20_000_feet">View from 20,000 feet</h4>
<div class=3D"paragraph">
<p>The Jetty <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project=
-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/=
jetty/server/Server.html">Server</a> is the plumbing between
a collection of `Connector`s that accept connections and a collection of `H=
andler`s that
service requests from the connections and produce responses, with threads f=
rom a thread pool doing the work.</p>
</div>
<div class=3D"paragraph">
<p><span class=3D"image"><img src=3D"file:///home/tian/Downloads/b60/ebook/=
jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/images/jett=
y-high-level-architecture.png" alt=3D"image" width=3D"576"></span></p>
</div>
<div class=3D"paragraph">
<p>While the Jetty request/responses are derived from the Servlet API, the =
full features of the Servlet API
are only available if you configure the appropriate handlers.
For example, the session API on the request is inactive unless the request =
has been passed to a <code>SessionHandler</code>.
The concept of a Servlet itself is implemented by a <code>ServletHandler</c=
ode>.
If Servlets are not required, there is very little overhead in the use of t=
he servlet request/response APIs.
Thus you can build a Jetty server using only connectors and handlers, witho=
ut using Servlets.</p>
</div>
<div class=3D"paragraph">
<p>The job of configuring Jetty is building a tree of connectors and handle=
rs and providing their individual configurations.
As Jetty components are simply Plain Old Java Objects (POJOs), you can acco=
mplish this assembly
and configuration of components by a variety of techniques:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>In code, see the examples in the Jetty Source XRef.</p>
</li>
<li>
<p>Using Jetty XML, a dependency injection style in XML format.</p>
</li>
<li>
<p>With your dependency injection framework of choice, Spring or XBean.</p>
</li>
<li>
<p>Using Jetty WebApp and Context Deployers.</p>
</li>
</ul>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_patterns">Patterns</h4>
<div class=3D"paragraph">
<p>The implementation of Jetty follows some fairly standard patterns.
Most abstract concepts such as <code>Connector`s and `Handler`s are capture=
d by interfaces.
Generic handling for those interfaces is then provided in an abstract imple=
mentation
such as `AbstractConnector</code> and <code>AbstractHandler</code>.</p>
</div>
<div class=3D"paragraph">
<p><span class=3D"image"><img src=3D"file:///home/tian/Downloads/b60/ebook/=
jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/images/basi=
c-architecture-patterns.png" alt=3D"image" width=3D"576"></span></p>
</div>
<div class=3D"paragraph">
<p>The JSR77 inspired life cycle of most Jetty components is represented by=
 the <code>LifeCycle</code>
interface and the <code>AbstractLifeCycle</code> implementation used as the=
 base of many Jetty components.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_connectors">Connectors</h4>
<div class=3D"paragraph">
<p>A <code>Connector</code> is the component that accepts TCP connections.
For each accepted TCP connection, the <code>Connector</code> asks a <code>C=
onnectionFactory</code> to create
a <code>Connection</code> object that handles the network traffic on that T=
CP connection, parsing
and generating bytes for a specific protocol.</p>
</div>
<div class=3D"paragraph">
<p>A <code>ServerConnector</code> can therefore be configured with one or m=
ore <code>ConnectionFactory</code>.</p>
</div>
<div class=3D"paragraph">
<p>The simplest case is a single <code>ConnectionFactory</code> such as <co=
de>HttpConnectionFactory</code>, that
creates <code>HttpConnection</code> objects that parse and generate bytes f=
or the HTTP/1.1 protocol.</p>
</div>
<div class=3D"paragraph">
<p>A more complex case can be a <code>ServerConnector</code> configured wit=
h three factories:
<code>ProxyConnectionFactory</code>, <code>SslConnectionFactory</code> and =
<code>HttpConnectionFactory</code>.
Such connector will be able to handle PROXY protocol bytes coming from a lo=
ad balancer
such as HAProxy (with the <code>ProxyConnectionFactory</code>), then handle=
 TLS bytes (with
<code>SslConnectionFactory</code>) and therefore decrypting/encrypting the =
bytes from/to a remote
client, and finally handling HTTP/1.1 bytes (with <code>HttpConnectionFacto=
ry</code>).
Each <code>ConnectionFactory</code> is asked to create a <code>Connection</=
code> object for each TCP connection;
the <code>Connection</code> objects will be chained together to handle the =
bytes, each for its
own protocol.
Therefore the <code>ProxyConnection</code> will handle the PROXY protocol b=
ytes, <code>SslConnection</code>
will handle the encryption/decryption of the bytes, and <code>HttpConnectio=
n</code> will handle
the HTTP/1.1 bytes producing a request and response object that will be pro=
cessed by
applications.</p>
</div>
<div class=3D"paragraph">
<p>Advanced usages of Jetty will allow users to write their own <code>Conne=
ctionFactory</code> to
handle custom protocols that are not implemented directly by the Jetty proj=
ect,
therefore using Jetty as a generic network server.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_handlers">Handlers</h4>
<div class=3D"paragraph">
<p>A <code>Handler</code> is the component that deals with HTTP requests an=
d responses.
The core API of a handler is the handle method:</p>
</div>
<div class=3D"paragraph">
<p><span class=3D"image"><img src=3D"file:///home/tian/Downloads/b60/ebook/=
jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/images/basi=
c-architecture-handlers.png" alt=3D"image" width=3D"576"></span></p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">p=
ublic void handle(String target, Request baseRequest, HttpServletRequest re=
quest, HttpServletResponse response) throws IOException, ServletException</=
code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Parameters:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p><code>target</code> =E2=80=93 the target of the request, either a URI or=
 a name.</p>
</li>
<li>
<p><code>baseRequest</code> =E2=80=93 the original unwrapped request object=
.</p>
</li>
<li>
<p><code>request</code> =E2=80=93 the request object, either as the <code>b=
aseRequest</code> object or a wrapper of <code>baseRequest</code>.
You can use the HttpConnection.getCurrentConnection() method to access the =
Request object if required.</p>
</li>
<li>
<p>response =E2=80=93 the response object, either unwrapped as <code>Respon=
se</code> or a wrapper of that response.
You can use the HttpConnection.getCurrentConnection() method to access the =
<code>Response</code> object if required.</p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>An implementation of this method can handle the request, pass the reques=
t onto another handler (or servlet)
or it might modify and/or wrap the request and then pass it on.
This gives three styles of Handler:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>Coordinating handlers =E2=80=93 handlers that route requests to other ha=
ndlers (<code>HandlerCollection</code>, <code>ContextHandlerCollection</cod=
e>)</p>
</li>
<li>
<p>Filtering handlers =E2=80=93 handlers that augment a request and pass it=
 on to other handlers (<code>HandlerWrapper</code>, <code>ContextHandler</c=
ode>, <code>SessionHandler</code>)</p>
</li>
<li>
<p>Generating handlers =E2=80=93 handlers that produce content (<code>Resou=
rceHandler</code> and <code>ServletHandler</code>)</p>
</li>
</ul>
</div>
<div class=3D"sect4">
<h5 id=3D"_nested_handlers_and_handlers_called_sequentially">Nested Handler=
s and Handlers Called Sequentially</h5>
<div class=3D"paragraph">
<p>You can combine handlers to handle different aspects of a request by nes=
ting them,
calling them in sequence, or by combining the two models.</p>
</div>
<div class=3D"paragraph">
<p><span class=3D"image"><img src=3D"file:///home/tian/Downloads/b60/ebook/=
jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/images/basi=
c-architecture-nested-handlers.png" alt=3D"image" width=3D"576"></span></p>
</div>
<div class=3D"paragraph">
<p>Handlers called in sequence perform actions that do not depend on the ne=
xt invocation, nor on the handler order.
They handle a request and generate the response without interacting with ot=
her handlers.
The main class for this model is <code>HandlerCollection</code>.</p>
</div>
<div class=3D"paragraph">
<p>Nested handlers are called according to a before/invokeNext/after patter=
n.
The main class for nested handlers is <code>HandlerWrapper</code>.
Nested handlers are much more common than those called in sequence.</p>
</div>
<div class=3D"paragraph">
<p>See also <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-=
jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#writing-custom=
-handlers">Writing Custom Handlers</a>.</p>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_servlet_handler">Servlet Handler</h5>
<div class=3D"paragraph">
<p>The <code>ServletHandler</code> is a <code>Handler</code> that generates=
 content by passing the request to any
configured Servlet Filters and then to a Servlet mapped by a URI pattern.</=
p>
</div>
<div class=3D"paragraph">
<p><span class=3D"image"><img src=3D"file:///home/tian/Downloads/b60/ebook/=
jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/images/basi=
c-architecture-servlet-handler.png" alt=3D"image" width=3D"576"></span></p>
</div>
<div class=3D"paragraph">
<p>A <code>ServletHandler</code> is normally deployed within the scope of a=
 <code>ServletContext</code>, which is a
<code>ContextHandler</code> that provides convenience methods for mapping U=
RIs to servlets.</p>
</div>
<div class=3D"paragraph">
<p>Filters and Servlets can also use a <code>RequestDispatcher</code> to re=
route a request to another context
or another Servlet in the current context.</p>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"what-is-a-context">Contexts</h4>
<div class=3D"paragraph">
<p>Contexts are handlers that group other handlers below a particular URI c=
ontext path or a virtual host.
Typically a context can have:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>A context path that defines which requests are handled by the context (e=
.g. <code>/myapp</code>)</p>
</li>
<li>
<p>A resource base for static content (a document root)</p>
</li>
<li>
<p>A class loader to obtain classes specific to the context (typically from=
 <code>/WEB-INF/classes</code> and <code>/WEB-INF/lib</code>)</p>
</li>
<li>
<p>Virtual host names</p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>Contexts implementations include:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p><code>ContextHandler</code></p>
</li>
<li>
<p><code>ServletContextHandler</code></p>
</li>
<li>
<p><code>WebAppContext</code></p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>A web application context combines handlers for security, session and se=
rvlets in a single unit
that you can configure with a <code>web.xml</code> descriptor.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_web_application">Web Application</h4>
<div class=3D"paragraph">
<p>A <code>WebAppContext</code> is a derivation of <code>ServletContextHand=
ler</code> that supports the standardized layout
of a web application and configuration of session, security, listeners, fil=
ter, servlets, and JSP
via a <code>web.xml</code> descriptor normally found in the <code>/WEB-INF<=
/code> directory of a web application.</p>
</div>
<div class=3D"paragraph">
<p><span class=3D"image"><img src=3D"file:///home/tian/Downloads/b60/ebook/=
jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/images/basi=
c-architecture-web-application.png" alt=3D"image" width=3D"576"></span></p>
</div>
<div class=3D"paragraph">
<p>Essentially <code>WebAppContext</code> is a convenience class that assis=
ts the construction and configuration
of other handlers to achieve a standard web application configuration.
Configuration is actually done by pluggable implementations of the Configur=
ation class and the
prime among these is <code>WebXmlConfiguration.</code></p>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"jetty-classloading">Jetty Classloading</h3>
<div class=3D"paragraph">
<p>Class loading in a web container is slightly more complex than a normal =
Java application.
The normal configuration is that each web context (web application or WAR f=
ile) has its own classloader, which has the system classloader as its paren=
t.
Such a classloader hierarchy is normal in Java, however the servlet specifi=
cation complicates the hierarchy because it requires the following:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>Classes contained within WEB-INF/lib or WEB-INF/classes have priority ov=
er classes on the parent classloader.
This is the opposite of the normal behaviour of a Java 2 classloader.</p>
</li>
<li>
<p>System classes such as <code>java.lang.String</code> are excluded from t=
he webapp priority, and you may not replace them with classes in <code>WEB-=
INF/lib</code> or <code>WEB-INF/</code> classes.
Unfortunately the specification does not clearly state what classes are <em=
>System</em> classes, and it is unclear if all javax classes should be trea=
ted as System classes.</p>
</li>
<li>
<p>Server implementation classes like <a href=3D"file:///home/tian/Download=
s/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc=
/%7BJDURL%7D/org/eclipse/jetty/server/Server.html">Server</a> should be hid=
den from the web application and should not be available in any classloader=
.
Unfortunately the specification does not state what classes are <em>Server<=
/em> classes, and it is unclear if common libraries like the Xerces parser =
should be treated as Implementation classes.</p>
</li>
</ul>
</div>
<div class=3D"sect3">
<h4 id=3D"configuring-webapp-classloading">Configuring Webapp Classloading<=
/h4>
<div class=3D"paragraph">
<p>Jetty provides configuration options to control the three webapp class l=
oading issues identified above.</p>
</div>
<div class=3D"paragraph">
<p>You can configure webapp classloading by several methods on the <a href=
=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-d=
ocumentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/webapp/WebAppC=
ontext.html">WebAppContext</a>.
You can call these methods directly if you are working with the Jetty API, =
or you can inject methods from a context XML file if you are using the Cont=
ext Provider (<a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.projec=
t-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#using-contex=
t-provider">[using-context-provider]</a>).
You CANNOT set these methods from a <code>jetty-web.xml</code> file, as it =
executes after the classloader configuration is set.</p>
</div>
<div class=3D"sect4">
<h5 id=3D"controlling-webapp-classloader-priority">Controlling Webapp Class=
loader Priority</h5>
<div class=3D"paragraph">
<p>The method <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.projec=
t-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse=
/jetty/webapp/WebAppContext.html#isParentLoaderPriority()">org.eclipse.jett=
 .webapp.WebAppContext.setParentLoaderPriority(boolean)</a> allows control =
over the priority given to webapp classes over system classes.
If you set it to false (the default), Jetty uses standard webapp classloadi=
ng priority.
However, if in this mode some classes that are dependencies of other classe=
s are loaded from the parent classloader (due to settings of system classes=
 below), ambiguities might arise as both the webapp and system classloader =
versions can end up being loaded.</p>
</div>
<div class=3D"paragraph">
<p>If set to true, Jetty uses normal JavaSE classloading priority, and give=
s priority to the parent/system classloader.
This avoids the issues of multiple versions of a class within a webapp, but=
 the version the parent/system loader provides must be the right version fo=
r all webapps you configure in this way.</p>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"configuring-webapp-caching">Configuring Webapp Classloader Cachin=
g</h5>
<div class=3D"paragraph">
<p>Introduced in Jetty 9.3.6, the <a href=3D"file:///home/tian/Downloads/b6=
0/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7B=
JDURL%7D/org/eclipse/jetty/webapp/CachingWebAppClassLoader.html">CachingWeb=
AppClassLoader</a> can be used to cache <code>getResource(String)</code> re=
sults.
For webapps that search for classes and resources regularly, this can incre=
ase speed and performance.
This is an optional feature and it should be noted that it can conflict wit=
h several other libraries such as JSP, JSTL, JSF and CDI.
As such, this feature must be manually enabled for each webapp you want to =
use it in.</p>
</div>
<div class=3D"paragraph">
<p>Below is an example of implementing this feature using Jetty IoC XML for=
mat:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml">&lt=
;Configure id=3D"mywebapp" class=3D"org.eclipse.jetty.webapp.WebAppContext"=
&gt;

...

  &lt;Set name=3D"classLoader"&gt;
    &lt;New class=3D"org.eclipse.jetty.webapp.CachingWebAppClassLoader"&gt;
      &lt;Arg&gt;&lt;Ref refid=3D"mywebapp"/&gt;&lt;/Arg&gt;
    &lt;/New&gt;
  &lt;/Set&gt;

...
&lt;/Configure&gt;</code></pre>
</div>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"classloading-setting-system-classes">Setting System Classes</h5>
<div class=3D"paragraph">
<p>You can call the methods <a href=3D"file:///home/tian/Downloads/b60/eboo=
k/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJDURL%=
7D/org/eclipse/jetty/webapp/WebAppContext.html#setSystemClasses%28java.lang=
.String%5B%5D%29">org.eclipse.jetty.webapp.WebAppContext.setSystemClasses(S=
tring Array)</a> or <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.=
project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org/e=
clipse/jetty/webapp/WebAppContext.html#addSystemClass(java.lang.String)">or=
g.eclipse.jetty.webapp.WebAppContext.addSystemClass(String)</a> to allow fi=
ne control over which classes are considered System classes.</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>A web application can see a System class.</p>
</li>
<li>
<p>A WEB-INF class cannot replace a System class.</p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>The default system classes are:</p>
</div>
<table class=3D"tableblock frame-all grid-all spread">
<caption class=3D"title">Table 21. Default System Classes</caption>
<colgroup>
<col style=3D"width: 8%;">
<col style=3D"width: 92%;">
</colgroup>
<thead>
<tr>
<th class=3D"tableblock halign-left valign-top">System Classes</th>
<th class=3D"tableblock halign-left valign-top">java.</th>
</tr>
</thead>
<tbody>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Jav=
a SE classes (per servlet spec v2.5 / SRV.9.7.2).</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">jav=
ax.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Jav=
a SE classes (per servlet spec v2.5 / SRV.9.7.2).</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">org=
.xml.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Nee=
ded by javax.xml.</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">org=
.w3c.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Nee=
ded by javax.xml.</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">org=
.eclipse.jetty.continuation.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Web=
app can see and not change continuation classes.</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">org=
.eclipse.jetty.jndi.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Web=
app can see and not change naming classes.</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">org=
.eclipse.jetty.jaas.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Web=
app can see and not change JAAS classes.</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">org=
.eclipse.jetty.websocket.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Web=
Socket is a Jetty extension.</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">org=
.eclipse.jetty.servlet.DefaultServlet</p></td>
</tr>
</tbody>
</table>
<div class=3D"paragraph">
<p>Absolute classname can be passed, names ending with . are treated as pac=
kages names, and names starting with - are treated as negative matches and =
must be listed before any enclosing packages.</p>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"setting-server-classes">Setting Server Classes</h5>
<div class=3D"paragraph">
<p>You can call the methods <a href=3D"file:///home/tian/Downloads/b60/eboo=
k/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJDURL%=
7D/org/eclipse/jetty/webapp/WebAppContext.html#setServerClasses%28java.lang=
.String%5B%5D%29">org.eclipse.jetty.webapp.WebAppContext.setServerClasses(S=
tring Array)</a> or
<a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/=
jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/webapp/=
WebAppContext.html#addServerClass(java.lang.String)">org.eclipse.jetty.weba=
pp.WebAppContext.addServerClass(String)</a> to allow fine control over whic=
h classes are considered Server classes.</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>A web application cannot see a Server class.</p>
</li>
<li>
<p>A WEB-INF class can replace a Server class.</p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>The default server classes are:</p>
</div>
<table class=3D"tableblock frame-all grid-all spread">
<caption class=3D"title">Table 22. Default Server Classes</caption>
<colgroup>
<col style=3D"width: 8%;">
<col style=3D"width: 92%;">
</colgroup>
<thead>
<tr>
<th class=3D"tableblock halign-left valign-top">Server Classes</th>
<th class=3D"tableblock halign-left valign-top">-org.eclipse.jetty.continua=
tion.</th>
</tr>
</thead>
<tbody>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Don=
=E2=80=99t hide continuation classes.</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">-or=
g.eclipse.jetty.jndi.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Don=
=E2=80=99t hide naming classes.</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">-or=
g.eclipse.jetty.jaas.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Don=
=E2=80=99t hide jaas classes.</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">-or=
g.eclipse.jetty.servlets.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Don=
=E2=80=99t hide utility servlet classes if provided.</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">-or=
g.eclipse.jetty.servlet.DefaultServlet</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Don=
=E2=80=99t hide default servlet.</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">-or=
g.eclipse.jetty.servlet.listener.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Don=
=E2=80=99t hide utility listeners</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">-or=
g.eclipse.jetty.websocket.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Don=
=E2=80=99t hide websocket extension.</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">org=
.eclipse.jetty.</p></td>
</tr>
</tbody>
</table>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"adding-extra-classpaths">Adding Extra Classpaths to Jetty</h4>
<div class=3D"paragraph">
<p>You can add extra classpaths to Jetty in several ways.</p>
</div>
<div class=3D"sect4">
<h5 id=3D"classpaths-using-start-jar">Using <code>start.jar</code></h5>
<div class=3D"paragraph">
<p>If you are using <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.=
project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#advanc=
ed-start-features">[advanced-start-features]</a>, at startup the jetty runt=
ime automatically loads option Jars from the top level <code>$jetty.home/li=
b</code> directory. The default settings include:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>Adding Jars under <code>$jetty.home/lib/ext</code> to the system classpa=
th.
You can place additional Jars here.</p>
</li>
<li>
<p>Adding the directory <code>$jetty.home/resources</code> to the classpath=
 (may contain classes or other resources).</p>
</li>
<li>
<p>Adding a single path defined by the command line parameter <em>path</em>=
.</p>
</li>
</ul>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"using-extra-classpath-method">Using the extraClasspath() method</=
h5>
<div class=3D"paragraph">
<p>You can add an additional classpath to a context classloader by calling =
<a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/=
jetty-documentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/webapp/=
WebAppContext.html#setExtraClasspath(java.lang.String)">org.eclipse.jetty.w=
ebapp.WebAppContext.setExtraClasspath(String)</a> with a comma-separated li=
st of paths.
You can do so directly to the API via a context XML file such as the follow=
ing:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><co=
nfigure class=3D"org.eclipse.jetty.webapp.WebAppContext">
 ...
 <set name=3D"extraClasspath>../my/classes,../my/jars/special.jar,../my/jar=
s/other.jar</Set>
 ...</code></pre>
</div>
</div>
</div>
</div>
<div class=3D" sect3"=3D"">
<h4 id=3D"using-custom-webappclassloader">Using a Custom WebAppClassLoader<=
/h4>
<div class=3D"paragraph">
<p>If none of the alternatives already described meet your needs, you can a=
lways provide a custom classloader for your webapp.
We recommend, but do not require, that your custom loader subclasses <a hre=
f=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-=
documentation/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/webapp/WebApp=
ClassLoader.html">WebAppClassLoader</a>.
You configure the classloader for the webapp like so:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">M=
yCleverClassLoader myCleverClassLoader =3D new MyCleverClassLoader();
 ...
   WebAppContext webapp =3D new WebAppContext();
 ...
   webapp.setClassLoader(myCleverClassLoader);</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>You can also accomplish this in a context xml file.</p>
</div>
</set></configure></code></pre></div><code class=3D"language-xml" data-lang=
=3D"xml">
<div class=3D"sect3">
<h4 id=3D"starting-jetty-custom-classloader">Starting Jetty with a Custom C=
lassLoader</h4>
<div class=3D"paragraph">
<p>If you start a Jetty server using a custom class loader=E2=80=93consider=
 the Jetty classes not being available to the system class loader, only you=
r custom class loader=E2=80=93you may run into class loading issues when th=
e WebAppClassLoader kicks in.
By default the WebAppClassLoader uses the system class loader as its parent=
, hence the problem. This is easy to fix, like so:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">c=
ontext.setClassLoader(new WebAppClassLoader(this.getClass().getClassLoader(=
), context));</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>or</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">c=
ontext.setClassLoader(new WebAppClassLoader(new MyCustomClassLoader(), cont=
ext));</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>[[1xx-responses]]
=3D=3D=3D Managing 1xx Responses</p>
</div>
<div class=3D"paragraph">
<p>The <a href=3D"http://www.ietf.org/rfc/rfc2616.txt">HTTP RFC</a> allows =
for 1xx informational responses to be sent before a real content response.
Unfortunately the servlet specification does not provide a way for these to=
 be sent, so Jetty has had to provide non-standard handling of these header=
s.</p>
</div>
<div class=3D"paragraph">
<p>[[100-continue]]
=3D=3D=3D=3D 100 Continue</p>
</div>
<div class=3D"paragraph">
<p>The 100 Continue response should be sent by the server when a client sen=
ds a request with a Expect: 100-continue header, as the client will not sen=
d the body of the request until the 100 continue response has been sent.</p=
>
</div>
<div class=3D"paragraph">
<p>The intent of this feature is to allow a server to inspect the headers a=
nd to tell the client to not send a request body that might be too large or=
 insufficiently private or otherwise unable to be handled.</p>
</div>
<div class=3D"paragraph">
<p>Jetty achieves this by waiting until the input stream or reader is obtai=
ned by the filter/servlet, before sending the 100 continues response.
Thus a filter/servlet may inspect the headers of a request before getting t=
he input stream and send an error response (or redirect etc.) rather than t=
he 100 continues.</p>
</div>
<div class=3D"paragraph">
<p>[[102-processing]]
=3D=3D=3D=3D 102 Processing</p>
</div>
<div class=3D"paragraph">
<p><a href=3D"http://www.ietf.org/rfc/rfc2518.txt">RFC 2518</a> defines the=
 102 processing response that can be sent "when the server has a reasonable=
 expectation that the request will take significant time to complete.
As guidance, if a method is taking longer than 20 seconds (a reasonable, bu=
t arbitrary value) to process the server SHOULD return a 102 (Processing) r=
esponse".</p>
</div>
<div class=3D"paragraph">
<p>So if a request is received with the Expect: 102-processing header, then=
 a filter/servlet may send a 102 response (without terminating further proc=
essing) by calling <code>servletResponse.sendError(102);</code>.</p>
</div>
</div>
</code></div><code class=3D"language-xml" data-lang=3D"xml">
<div class=3D"sect2">
<h3 id=3D"creating-custom-protocol">Creating a Custom Protocol</h3>
<div class=3D"paragraph">
<p>You can create custom protocols with Jetty. This page provides an exampl=
e of how to do so, with Telnet as the protocol.</p>
</div>
<div class=3D"paragraph">
<p>To create a custom Telnet protocol, complete the following tasks:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>Implement a <code>TelnetServerConnectionFactory</code>.</p>
</li>
<li>
<p>Implement a <code>TelnetServerConnection</code> by extending <code>o.e.j=
.io.AbstractConnection</code>.</p>
</li>
<li>
<p>Create a parser/interpreter for the bytes you receive (this is totally i=
ndependent from Jetty).</p>
</li>
<li>
<p>If needed, design an API for the application to use to process the bytes=
 received (also independent from Jetty).
The API likely has a <em>respond back</em> primitive that uses a Jetty prov=
ided <code>EndPoint</code> and <code>EndPoint.write(Callback, Buffer...)</c=
ode> to write the response bytes.</p>
</li>
</ul>
</div>
<div class=3D"sect3">
<h4 id=3D"server-connection-factory">Implementing a TelnetServerConnectionF=
actory</h4>
<div class=3D"paragraph">
<p>Begin with an <code>org.eclipse.jetty.server.ServerConnector</code>, whi=
ch you can use as is. <code>ServerConnector</code> takes a <code>o.e.j.serv=
er.ConnectionFactory</code>, which creates <code>o.e.j.io.Connection</code>=
 objects that interpret the bytes the connector receives.
You must implement <code>ConnectionFactory</code> with a <code>TelnetServer=
ConnectionFactory</code>, where you return a Connection implementation (for=
 example, <code>TelnetServerConnection</code>).</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"telnet-server-connection">Implementing the TelnetServerConnection=
</h4>
<div class=3D"paragraph">
<p>For the Connection implementation you need to extend from <code>o.e.j.io=
.AbstractConnection</code> because it provides many facilities that you wou=
ld otherwise need to re-implement from scratch.</p>
</div>
<div class=3D"paragraph">
<p>For each Connection instance there is associated an <code>o.e.j.io.EndPo=
int</code> instance.
Think of <code>EndPoint</code> as a specialized version of JDK=E2=80=99s <c=
ode>SocketChannel</code>.
You use the <code>EndPoint</code> to read, write, and close.
You don=E2=80=99t need to implement <code>EndPoint</code>, because Jetty pr=
ovides concrete
classes for you to use.</p>
</div>
<div class=3D"paragraph">
<p>The Connection is the <em>passive</em> side (that is, Jetty calls it whe=
n there is data to read), while the <code>EndPoint</code> is the active par=
t (that is, applications call it to write data to the other end).
When there is data to read, Jetty calls <code>AbstractConnection.onFillable=
()</code>, which you must implement in your <code>TelnetServerConnection</c=
ode>.</p>
</div>
<div class=3D"paragraph">
<p>A typical implementation reads bytes from the <code>EndPoint</code> by c=
alling <code>EndPoint.fill(ByteBuffer)</code>.
For examples, look at both the simpler <code>SPDYConnection</code> (in the =
SPDY client package, but server also uses it), and the slightly more comple=
x <code>HttpConnection</code>.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"parser-interpreter">Parsing the Bytes Received</h4>
<div class=3D"paragraph">
<p>After you read the bytes, you need to parse them.
For the Telnet protocol there is not much to parse, but perhaps you have yo=
ur own commands that you want to interpret and execute.
Therefore typically every connection has an associated parser instance.
In turn, a parser usually emits parse events that a parser listener interpr=
ets, as the following examples illustrate:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>In HTTP, the Jetty HTTP parser parses the request line (and emits a pars=
er event), then parses the headers (and emits a parser event for each) unti=
l it recognizes the end of the headers (and emits another parser event).
At that point, the <em>interpreter</em> or parser listener (which for HTTP =
is <code>o.e.j.server.HttpChannel</code>) has all the information necessary=
 to build a <code>HttpServletRequest</code> object and can call the user co=
de (the web application, that is, servlets/filters).</p>
</li>
<li>
<p>In SPDY, the Jetty SPDY parser parses a SPDY frame (and emits a parser e=
vent), and the parser listener (an instance of o.e.j.spdy.StandardSession) =
interprets the parser events and calls user code (application-provided list=
eners).</p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>With <code>ConnectionFactory</code>, Connection, parser, and parser list=
eners in place, you have configured the read side.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"api-byte-processor">Designing an API to Process Bytes</h4>
<div class=3D"paragraph">
<p>At this point, server applications typically write data back to the clie=
nt.</p>
</div>
<div class=3D"paragraph">
<p>The Servlet API (for HTTP) or application-provided listeners (for SPDY) =
expose an interface to web applications so that they can write data back to=
 the client.
The implementation of those interfaces must link back to the <code>EndPoint=
</code> instance associated with the Connection instance so that it can wri=
te data via <code>EndPoint.write(Callback, ByteBuffer...)</code>.
This is an asynchronous call, and it notifies the callback when all the buf=
fers have been fully written.</p>
</div>
<div class=3D"paragraph">
<p>For example, in the Servlet API, applications use a <code>ServletOutputS=
tream</code> to write the response content.
<code>ServletOutputStream</code> is an abstract class that Jetty implements=
, enabling Jetty to handle the writes from the web application; the writes =
eventually end up in an <code>EndPoint.write(...)</code> call.</p>
</div>
<div class=3D"sect4">
<h5 id=3D"api-tips">Tips for Designing an API</h5>
<div class=3D"paragraph">
<p>If you want to write a completely asynchronous implementation, your API =
to write data to the client must have a callback/promise concept: =E2=80=9C=
Call me back when you are done, and (possibly) give me the result of the co=
mputation."</p>
</div>
<div class=3D"paragraph">
<p>SPDY=E2=80=99s Stream class is a typical example.
Notice how the methods there exist in two versions, a synchronous (blocking=
) one, and an asynchronous one that takes as last parameter a Callback (if =
no result is needed), or a Promise (if a result is needed).
It is trivial to write the synchronous version in terms of the asynchronous=
 version.</p>
</div>
<div class=3D"paragraph">
<p>You can use <code>EndPoint.write(Callback, ByteBuffer...)</code> in a bl=
ocking way as follows:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">F=
utureCallback callback =3D new FutureCallback();
endPoint.write(callback, buffers);
callback.get();</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>With the snippet above your API can be synchronous or asynchronous (your=
 choice), but implemented synchronously.</p>
</div>
</div>
</div>
</div>
</code></div><code class=3D"language-xml" data-lang=3D"xml">
</code></div><code class=3D"language-xml" data-lang=3D"xml">
<div class=3D"sect1">
<h2 id=3D"platforms">Platforms, Stacks and Alternative Distributions</h2>
<div class=3D"sectionbody">
<div class=3D"sect2">
<h3 id=3D"_many_many_options">Many many options=E2=80=A6=E2=80=8B</h3>
<div class=3D"paragraph">
<p>In addition to using Jetty in its distribution form and its multiple emb=
edded forms, there are a number of alternative ways to use Jetty.
Many products and open source projects out there distribute Jetty themselve=
s, in both distribution and embedded forms, not to mention different operat=
ing systems bundling Jetty in other installable forms.</p>
</div>
<div class=3D"paragraph">
<p>If your platform supports Jetty from a distribution or deployment perspe=
ctive and want to be included on this list just fork the documentation and =
submit a pull request, or contact us.
Check out our list of <a href=3D"http://www.eclipse.org/jetty/powered">Powe=
red By</a> page for software that makes use of Jetty, often in novel and ex=
citing ways.</p>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"jelastic">Jelastic</h3>
<div class=3D"paragraph">
<p>Jelastic is a wonderful place to host your applications with solid suppo=
rt for Jetty.
As a cloud hosting platform they take the majority of configuration and ins=
tallation details out of the picture and focus on letting you focus on your=
 web application.</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p><a href=3D"http://jelastic.com/why">Why Jelastic?</a></p>
</li>
<li>
<p><a href=3D"http://jelastic.com/jetty-hosting">Jetty Hosting</a></p>
</li>
</ul>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"cloudfoundry">CloudFoundry</h3>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock warning">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Warning</div>
</td>
<td class=3D"content">
This is an increasingly aged integration, things like likely changed enough=
 this is not directly useful but may serve as a useful starting point shoul=
d someone want to look into it.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
<div class=3D"sect3">
<h4 id=3D"cloudfoundry-overview">Overview</h4>
<div class=3D"paragraph">
<p><a href=3D"http://www.cloudfoundry.com/">CloudFoundry</a> is an open pla=
tform intended as a place to deploy end user applications in a manner which=
 is both simple and eminently scalable to fit the needs of the application.
With the release of their V2 framework the Jetty project has created a buil=
dpack which allows you to deploy your java based web application onto Jetty=
 and still make use of the remainder of the CloudFoundry platform.</p>
</div>
<div class=3D"paragraph">
<p>This buildpack itself is quite simple to use.
A collection of ruby scripting and the buildpack conventions will allow Jet=
ty to be downloaded, configured and customized to your needs and then have =
your web application deployed onto it.
While the default buildpack we have created is useful to deploy a stock con=
figuration of jetty, it is quite likely that you will want to fork the buil=
dpack and tweak it to fit your immediate needs.
This process is made trivial since buildpacks install from a github reposit=
ory.
For example, to change the jetty version simply fork it in GitHub and tweak=
 the <code>JETTY_VERSION</code> string in the <code>jetty_web.rb</code> fil=
e.</p>
</div>
<div class=3D"paragraph">
<p>If you have additional modifications to make to the Jetty server, like p=
erhaps configuring additional static contexts, setting up a proxy servlet, =
adding jar files to the jetty home/lib/ext directory, etc you can either ad=
apt the ruby scripting directly or place them under the appropriate locatio=
n in the <code>/resources</code> directory of this buildpack and they will =
be copied into the correct location.</p>
</div>
<div class=3D"paragraph">
<p>For the time being I=E2=80=99ll leave this buildpack under my personal g=
ithub account and should there be interest expressed I am more then happy t=
o push it over to <a href=3D"https://github.com/jetty-project" class=3D"bar=
e">https://github.com/jetty-project</a> down the road for proper contributi=
ons, etc.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"cloudfoundry-usage">Usage</h4>
<div class=3D"paragraph">
<p>To show how incredibly easy it is to use the Jetty buildpack with cloudf=
oundry, this is all the more you need to do to deploy your application.
Refer to the CloudFoundry <a href=3D"http://docs.cloudfoundry.com/">documen=
tation</a> to get started, get the <code>cf</code> utilities installed and =
an environment configured.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">$ cf push snifftest --buildpack=3Dgit://github.com/jmcc0nn3ll/jetty-buil=
dpack.git</code></pre>
</div>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock tip">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Tip</div>
</td>
<td class=3D"content">
In this example the web application is uploaded from the <strong>current</s=
trong> directory so make sure you have changed directory into the root of y=
our web application.
The <code>snifftest</code> on the commandline referrs to what you are calli=
ng the application, not the directory to deploy.
Also note that the webapplication is installed into the <code>ROOT</code> c=
ontext of Jetty as is available at the root context of the server.
Any additional web applications will have to be configured within the build=
pack as mentioned above.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
<div class=3D"paragraph">
<p>You will be prompted to answer a series of questions describing the exec=
ution environment and any additional services you need enabled (databases, =
etc).</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-plain" data-lang=3D"plain"=
>Instances&gt; 1

Custom startup command&gt; none

1: 64M
2: 128M
3: 256M
4: 512M
5: 1G
Memory Limit&gt; 256M

Creating snifftest... OK

1: snifftest
2: none
Subdomain&gt; snifftest

1: a1-app.cf-app.com
2: none
Domain&gt; a1-app.cf-app.com

Binding snifftest.a1-app.cf-app.com to snifftest... OK

Create services for application?&gt; n

Save configuration?&gt; n</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Once answered you will see the installation process of your application.=
</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-plain" data-lang=3D"plain"=
>Uploading snifftest... OK
Starting snifftest... OK
-&gt; Downloaded app package (4.0K)
Initialized empty Git repository in /tmp/buildpacks/jetty-buildpack.git/.gi=
t/
Installing jetty-buildpack.git.
Downloading JDK...
Copying openjdk-1.7.0_21.tar.gz from the buildpack cache ...
Unpacking JDK to .jdk
Downloading Jetty: jetty-distribution-{VERSION}.tar.gz
Downloading jetty-distribution-{VERSION}.tar.gz from http://repo2.maven.org=
/maven2/org/eclipse/jetty/jetty-distribution/9.0.3.v20130506/ ...
Unpacking Jetty to .jetty
-&gt; Uploading staged droplet (36M)
-&gt; Uploaded droplet
Checking snifftest...
Staging in progress...
Staging in progress...
Staging in progress...
Staging in progress...
Staging in progress...
Staging in progress...
  0/1 instances: 1 starting
  0/1 instances: 1 starting
  0/1 instances: 1 starting
  0/1 instances: 1 starting
  1/1 instances: 1 running
OK</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The application is now available at the configured location! Under the u=
rl <code>http://snifftest.a1-app.cf-app.com/</code> in this particular exam=
ple.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"cloudfoundry-acknowledgements">Acknowledgements</h4>
<div class=3D"paragraph">
<p>The Jetty buildpack was forked from the CloudFoundry Java buildpack. The=
 Virgo Buildpack that Glyn worked on was used as a sanity check.</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p><a href=3D"http://github.com/cloudfoundry/cloudfoundry-buildpack-java" c=
lass=3D"bare">http://github.com/cloudfoundry/cloudfoundry-buildpack-java</a=
></p>
</li>
<li>
<p><a href=3D"http://github.com/glyn/virgo-buildpack" class=3D"bare">http:/=
/github.com/glyn/virgo-buildpack</a></p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>CloudFoundry buildpacks were modelled on Heroku buildpacks.</p>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"elastic-beanstalk">Amazon Elastic Beanstalk</h3>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock warning">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Warning</div>
</td>
<td class=3D"content">
This is an increasingly aged integration, things like likely changed enough=
 this is not directly useful but may serve as a useful starting point shoul=
d someone want to look into it.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
<div class=3D"paragraph">
<p><a href=3D"http://aws.amazon.com/elasticbeanstalk/">Elastic Beanstalk</a=
> is a component with the <a href=3D"http://aws.amazon.com/">Amazon Web Ser=
vices</a> offering that allows you to configure an entire virtual machine b=
ased on one of several available baseline configurations and then customize=
 it through a powerful configuration system. While the default offerings cu=
rrently available are based on Tomcat for for the java community, we worked=
 out the basics using that configuration system to enable the usage of Jett=
y instead.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"elastic-beanstalk-overview">Overview</h4>
<div class=3D"paragraph">
<p>Elastic beanstalk has a very <a href=3D"http://aws.amazon.com/about-aws/=
whats-new/2012/10/02/introducing-aws-elastic-beanstalk-configuration-files/=
">powerful configuration mechanism</a> so this integration taps into that t=
o effectively rework the tomcat configuration and replace it with the bits =
required to make jetty run in its place. Below is a walk through of what th=
e various configuration files are doing and how the general flow of configu=
ration on beanstalk happens.</p>
</div>
<div class=3D"paragraph">
<p>There is an <code>.ebextensions</code> directory in your beanstalk appli=
cation which contains all of the files requires to configure and customize =
your beanstalk and application combo.
Files that end in .config in this directory are processed in alphabetical o=
rder.</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">00-java7.config</dt>
<dd>
<p>installs java 7 onto the beanstalk environment and makes it the   defaul=
t</p>
</dd>
<dt class=3D"hdlist1">10-tweak.config</dt>
<dd>
<p>not required, but changes the <code>/opt/elasticbeanstalk</code> directo=
ry to be readable making debugging easier</p>
</dd>
<dt class=3D"hdlist1">11-jetty.config</dt>
<dd>
<p>installs jetty9 into <code>/opt/jetty-9</code> and removes unneeded dist=
ribution files</p>
</dd>
<dt class=3D"hdlist1">12-beanstalk.config</dt>
<dd>
<p>handles replacing tomcat with jetty in many configuration files, configu=
res logging and wires up system startup processes.
Some files in your <code>.ebextensions</code> directory are moved to replac=
e files under   /opt/elasticbeanstalk.</p>
</dd>
</dl>
</div>
<div class=3D"paragraph">
<p>If you look in the <code>.ebextensions</code> directory of your applicat=
ion you should also see other jetty specific xml and ini files.
The final config file handles these as they are largely customization for y=
our application.</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">20-testapp.config</dt>
<dd>
<p>layers application specific configuration files into the jetty installat=
ion</p>
</dd>
</dl>
</div>
<div class=3D"paragraph">
<p>The files in our example test webapp here enable various OPTIONS for lib=
raries that need to be loaded, customize the root application being deploye=
d and even deploy additional contexts like we do in our jetty distribution =
demo.
This is also the mechanism that you would use to wire up application specif=
ic things, for example if you needed additional software installed, customi=
zed directories made, etc.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"elastic-beanstalk-maven">Maven Bits</h4>
<div class=3D"paragraph">
<p>Support for this feature leverages Maven to make things easy and is comp=
osed of three different modules.</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">jetty-beanstalk-overlay</dt>
<dd>
<p>This is the collection of scripts that are required to wedge jetty into =
the normal beanstalk setup.
This module is intended to extract into an webapp to enable it for beanstal=
k usage with jetty.</p>
</dd>
<dt class=3D"hdlist1">jetty-beanstalk-resources</dt>
<dd>
<p>This generates an artifact of files that are downloaded by the configura=
tion process and contains replacements for certain beanstalk files as well =
as various system level jetty configuration files like an updated <code>jet=
ty.sh</code> script for the <code>/etc/init.d</code> setup.</p>
</dd>
<dt class=3D"hdlist1">jetty-beanstalk-testapp</dt>
<dd>
<p>An example webapp that shows both how to combine the war file from anoth=
er maven module with the jetty-beanstalk-overlay to produce a beanstalk ena=
bled application bundle.
Also included is examples of how to alter the jetty configuration for thing=
s like a customized
<code>start.ini</code> file.</p>
</dd>
</dl>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Note</div>
</td>
<td class=3D"content">
The test webapps needs access to a snapshot version of the test-jetty-webap=
p so it really serves as more of an example of how to layer your webapp wit=
h the bits required to customize your app for beanstalk and jetty.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
<div class=3D"paragraph">
<p>To actually make use of these artifacts you currently must clone this gi=
t repository and build it locally.
Once you have the artifacts you simply need to copy the approach in the jet=
ty-beanstalk-testapp to apply the configuration to your webapp.</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p><a href=3D"https://github.com/jmcc0nn3ll/jetty-beanstalk" class=3D"bare"=
>https://github.com/jmcc0nn3ll/jetty-beanstalk</a></p>
</li>
</ul>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock important">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Important</div>
</td>
<td class=3D"content">
Bluepill is used to manage the start and stop process of the app server.
This seems to be a problematic bit of software with a colored history and t=
he version in use at the time of this writing is old.
When starting and stopping (or restarting) the appserver you may see error =
messages show up that the Server timed out getting a response or things lik=
e that.
These are red herrings and my experience is that jetty has started and stop=
ped just fine, the pid file required shows up in a very timely fashion (und=
er <code>/var/run/jetty.pid</code>) so do check that the app server has sta=
rted, but please be aware there is a strangeness here that hasn=E2=80=99t b=
een sorted out yet.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"fedora">Fedora</h3>
<div class=3D"paragraph">
<p>As of Fedora 19, Jetty 9 is the version of Jetty available.
This distribution of Jetty is not created or maintained by the Jetty projec=
t though we have had a fair amount of communication with the folks behind i=
t and we are very pleased with how this Linux distribution has stayed curre=
nt.
Releases are kept largely in sync with our releases as there is a wonderful=
 automatic notification mechanism in place for Fedora that detects our rele=
ases and immediately opens an issue for them to update.</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p><a href=3D"https://admin.fedoraproject.org/pkgdb/acls/name/jetty">Jetty =
on Fedora</a></p>
</li>
</ul>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"ubuntu">Ubuntu</h3>
<div class=3D"paragraph">
<p>Currently there are no actual <code>.deb</code> files available for inst=
alling on Debian based Linux machines but there is a handy blog that as bee=
n largely been kept up to date on the steps involved through the comments.<=
/p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p><a href=3D"http://pietervogelaar.nl/ubuntu-12-04-install-jetty-9/">Insta=
ll Jetty9
on Ubuntu</a></p>
</li>
</ul>
</div>
</div>
</div>
</div>
<div class=3D"sect1">
<h2 id=3D"reference-section">Jetty XML Reference</h2>
<div class=3D"sectionbody">
<div class=3D"sect2">
<h3 id=3D"jetty-xml-syntax">Jetty XML Syntax</h3>
<div class=3D"paragraph">
<p>The Jetty XML syntax is a straightforward mapping of XML elements to a J=
ava API so that POJOs can be instantiated and getters, setters, and methods=
 called.
It is very similar to Inversion Of Control (IOC) or Dependency Injection (D=
I) frameworks like Spring or Plexus (but it predates all of them).
Typically Jetty XML is used by <code>jetty.xml</code> to configure a Jetty =
server or by a <code>context.xml</code> file to configure a ContextHandler =
or subclass, but you can also use the mechanism to configure arbitrary POJO=
s.</p>
</div>
<div class=3D"paragraph">
<p>This page describes the basic syntax of Jetty XML configuration. See <a =
href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jet=
ty-documentation/src/main/asciidoc/index.html#jetty-xml-usage">Jetty XML Us=
age</a> for information on how you can use and combine Jetty XML.
See configuration files for specific examples.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"basic-xml-configuration-file-example">Basic XML Configuration Fil=
e Example</h4>
<div class=3D"paragraph">
<p>The following XML configuration file creates some Java objects and sets =
some attributes:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><!-=
-?xml version=3D"1.0"?-->

<configure id=3D"foo" class=3D"com.acme.Foo">
  <set name=3D"name">demo</set>
  <set name=3D"nested">
    <new id=3D"bar" class=3D"com.acme.Bar">
      <arg>true</arg>
      <set name=3D"wibble">10</set>
      <set name=3D"wobble">xyz</set>
      <set name=3D"parent"><ref refid=3D"foo"></ref></set>
      <call name=3D"init">
         <arg>false</arg>
      </call>
    </new>
  </set>

  <ref refid=3D"bar">
    <set name=3D"wibble">20</set>
    <get name=3D"parent">
      <set name=3D"name">demo2</set>
    </get>
  </ref>
</configure></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The XML above is equivalent to the following Java code:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">c=
om.acme.Foo foo =3D new com.acme.Foo();
foo.setName("demo");

com.acme.Bar bar =3D new com.acme.Bar(true);
bar.setWibble(10);
bar.setWobble("xyz");
bar.setParent(foo);
bar.init(false);

foo.setNested(bar);

bar.setWibble(20);
bar.getParent().setName("demo2");</code></pre>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_overview_2">Overview</h4>
<div class=3D"sect4">
<h5 id=3D"jetty-xml-dtd">Understanding DTD and Parsing</h5>
<div class=3D"paragraph">
<p>The document type descriptor
(<a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x=
/jetty-documentation/src/main/asciidoc/%7BGITBROWSEURL%7D/jetty-xml/src/mai=
n/resources/org/eclipse/jetty/xml/configure_9_0.dtd?h=3Drelease-9">configur=
e.dtd</a>) describes all valid elements in a Jetty XML configuration file u=
sing the Jetty IoC format.
The first two lines of an XML must reference the DTD to be used to validate=
 the XML like:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><!-=
-?xml version=3D"1.0" encoding=3D"UTF-8"?-->

...</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Typcically a good XML editor will fetch the DTD from the URL and use it =
to give syntax highlighting and validation while a configuration file is be=
ing edited.
Some editors also allows DTD files to be locally cached.
The URL may point to configure.dtd if you want the latest current version, =
or to a specific version like configure_9_0.dtd if you want a particular va=
lidation feature set.</p>
</div>
<div class=3D"paragraph">
<p>Files that conform to the configure.dtd format are processed in Jetty by=
 the <code>XmlConfiguration</code> class which may also validate the XML (u=
sing a version of the DTD from the classes jar file), but is by default run=
 in a forgiving mode that tries to work around validation failures.</p>
</div>
<div class=3D"paragraph">
<p>To ensure your <code>web.xml</code>, <code>web-fragment.xml</code> and <=
code>webdefault.xml</code> files are validated, you will also need to set t=
he <code>validateXml</code> attribute to true:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><ca=
ll name=3D"setAttribute">
     <arg>org.eclipse.jetty.webapp.validateXml</arg>
     <arg type=3D"Boolean">true</arg>
</call></code></pre>
</div>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_jetty_xml_configuration_scope">Jetty XML Configuration Scope</h5=
>
<div class=3D"paragraph">
<p>The configuration of object instances with Jetty IoC XML is done on a sc=
oped basis, so that for any given XML element there is a corresponding Obje=
ct in scope and the nested XML elements apply to that.
The outer most scope is given by a Configure element and elements like Call=
, New and Get establish new scopes.
The following example uses the name fields to explain the scope.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><co=
nfigure class=3D"com.example.Foo">
  <set name=3D"fieldOnFoo">value</set>
  <set name=3D"fieldOnFoo">
    <new class=3D"com.example.Bar">
      <set name=3D"fieldOnBar">value</set>
      <call name=3D"methodOnBarWithNoArgs">
    </call></new>
  </set>

  <call name=3D"methodOnFoo">
    <arg>value for first arg of methodOnFoo</arg>
    <arg><new class=3D"com.example.Bar"></new></arg>
    <set name=3D"fieldOnObjectReturnedByMethodOnFoo">value</set>
    <call name=3D"methodOnObjectReturnedByMethodOnFooWithNoArgs">
  </call>
</call></configure></code></pre>
</div>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_coercing_arguments_to_a_type">Coercing Arguments to a Type</h5>
<div class=3D"paragraph">
<p>When trying to match XML elements to java elements, Jetty <code>XmlConfi=
guration</code> may need to coerces values to match method arguments.
By default it does so on a best effort basis, but you can also specify expl=
icit types with the <code>type</code> attribute.
Supported values for type are: <code>String</code>, <code>Character</code>,=
 <code>Short</code>, <code>Byte</code>, <code>Integer</code>, <code>Long</c=
ode>, <code>Boolean</code>, <code>Float</code>, <code>Double</code>, <code>=
char</code>, <code>short</code>, <code>byte</code>, <code>int</code>, <code=
>long</code>, <code>boolean</code>, <code>float</code>, <code>double</code>=
, <code>URL</code>, <code>InetAddress</code>, <code>InetAddrPort</code>, an=
d <code>void</code>.</p>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_referring_to_a_class">Referring to a Class</h5>
<div class=3D"paragraph">
<p>If you do not specify the classname, Jetty assumes you are calling the m=
ethod on the object that is current in scope (eg the object of the surround=
ing <code>Configure</code>, <code>New</code> or <code>Get</code> clause).
If the class attribute is specified to a fully-qualified class name, then i=
t is either used to create a new instance (<code>Configure</code> and <code=
>New</code> elements) or is used to access a static (<code>Call</code>, <co=
de>Set</code> or <code>Get</code> elements).</p>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_referring_to_an_object">Referring to an Object</h5>
<div class=3D"paragraph">
<p>You can use the id attribute to store a reference to the current object =
when first creating or referring to this object.
You can then use the <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty=
.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#jetty=
-xml-ref">Ref element</a> to reference the object later.
The ID must be unique for each object you create.</p>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_attribute_vs_element_style">Attribute vs Element Style</h5>
<div class=3D"paragraph">
<p>For XML elements that contain only other XML Elements, there is a choice=
 of using attributes or elements style.
The following is an example of attribute style:</p>
</div>
<div class=3D"literalblock">
<div class=3D"content">
<pre>  &lt;Call id=3D"result" class=3D"org.example.SomeClass" name=3D"someM=
ethod" arg=3D"value0,value1"/&gt;</pre>
</div>
</div>
<div class=3D"paragraph">
<p>Attribute style has the benefit of brevity, but is limited by: values ca=
n only be Strings; multivalued items can not contain <em>,</em>; values may=
 not be subject to property expansion or other elements that return values.
Thus, the more verbose element style is available and the following is sema=
ntically equivalent to the attribute style above:</p>
</div>
<div class=3D"literalblock">
<div class=3D"content">
<pre>  &lt;Call&gt;
    &lt;Id&gt;result&lt;/Id&gt;
    &lt;Class&gt;org.example.SomeClass&lt;/Class&gt;
    &lt;Name&gt;someMethod&lt;/Name&gt;
    &lt;Arg&gt;value0&lt;/Arg&gt;
    &lt;Arg&gt;value1&lt;/Arg&gt;
  &lt;/Call&gt;</pre>
</div>
</div>
<div class=3D"paragraph">
<p>Note that multivalued elements like <code>Arg</code> must be repeated an=
d may not be comma-separated like they are when provided as attributes.
It is possible to use a mix of styles and the following example shows a mor=
etypical example that uses property expansion as the reason for element sty=
le:</p>
</div>
<div class=3D"literalblock">
<div class=3D"content">
<pre>  &lt;Call id=3D"result" name=3D"someMethod"&gt;
    &lt;Class&gt;&lt;Property name=3D"which.class"&gt;
      &lt;Default&gt;&lt;Property name=3D"default.class" default=3D"org.exa=
mple.SomeClass"/&gt;
    &lt;/Property&gt;&lt;/Class&gt;
    &lt;Arg&gt;value0&lt;/Arg&gt;
    &lt;Arg&gt;value1&lt;/Arg&gt;
  &lt;/Call&gt;</pre>
</div>
</div>
<div class=3D"paragraph">
<p>Attributes may not be expressed as elements when their parent element is=
 one that contains data.
Thus <code>Arg</code>, <code>Item</code>, <code>Set</code>, <code>Put</code=
> and <code>Get</code> elements may not have their attributes expressed as =
elements.</p>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"jetty-xml-configure">&lt;Configure&gt;</h4>
<div class=3D"paragraph">
<p>This is the root element that specifies the class of object that is to b=
e configured.
It is usually either the Server, in <code>jetty.xml</code>, or a <code>WebA=
ppContext</code> in <code>jetty-web.xml</code>.</p>
</div>
<table class=3D"tableblock frame-all grid-all spread">
<colgroup>
<col style=3D"width: 33.3333%;">
<col style=3D"width: 33.3333%;">
<col style=3D"width: 33.3334%;">
</colgroup>
<thead>
<tr>
<th class=3D"tableblock halign-left valign-top">Attribute</th>
<th class=3D"tableblock halign-left valign-top">Required</th>
<th class=3D"tableblock halign-left valign-top">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">id<=
/p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">no<=
/p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">A r=
eference to the object that was created. If you define
multiple <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jet=
ty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#jetty-xml-configu=
re">Configure element</a>s with the same id,
they will be treated as one object, even if they=E2=80=99re in different fi=
les.
You can use this to break up configuration of an object (such as the
Server) across multiple files.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">cla=
ss</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">no<=
/p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">The=
 fully qualified classname of the object to be
configured. Could be <code>org.eclipse.jetty.server.Server</code>,
<code>org.eclipse.jetty.webapp.WebAppContext</code>, a handler, etc.</p></t=
d>
</tr>
</tbody>
</table>
<div class=3D"sect4">
<h5 id=3D"_can_contain">Can Contain</h5>
<div class=3D"paragraph">
<p><a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/index.html#jetty-xml-set">Set elem=
ent</a>, <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jet=
ty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#jetty-xml-get">Ge=
t element</a>,
<a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/=
jetty-documentation/src/main/asciidoc/index.html#jetty-xml-put">Put element=
</a>, <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-=
9.4.x/jetty-documentation/src/main/asciidoc/index.html#jetty-xml-call">Call=
 element</a>,
<a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/=
jetty-documentation/src/main/asciidoc/index.html#jetty-xml-new">New element=
</a>, <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-=
9.4.x/jetty-documentation/src/main/asciidoc/index.html#jetty-xml-ref">Ref e=
lement</a>,
<a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/=
jetty-documentation/src/main/asciidoc/index.html#jetty-xml-array">Array ele=
ment</a>, <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-je=
tty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#jetty-xml-map">M=
ap element</a>,
<a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/=
jetty-documentation/src/main/asciidoc/index.html#jetty-xml-property">Proper=
ty element</a></p>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_examples_2">Examples</h5>
<div class=3D"sect5">
<h6 id=3D"_basic_example">Basic Example</h6>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><co=
nfigure class=3D"org.eclipse.jetty.server.Server">
  <set name=3D"port">8080</set>
</configure></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>This is equivalent to:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">o=
rg.eclipse.jetty.server.Server server =3D new org.eclipse.jetty.server.Serv=
er();
server.setPort(8080);</code></pre>
</div>
</div>
</div>
<div class=3D"sect5">
<h6 id=3D"_using_id_to_break_up_configuration_of_one_object_across_multiple=
_files">Using id to break up configuration of one object across multiple fi=
les</h6>
<div class=3D"paragraph">
<p>In <code>etc/jetty.xml</code>:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><co=
nfigure id=3D"Server" class=3D"org.eclipse.jetty.server.Server">
  <!-- basic configuration here -->
</configure></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>In <code>etc/jetty-logging.xml</code>:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><co=
nfigure id=3D"Server" class=3D"org.eclipse.jetty.server.Server">
  <!-- assumes that you have the basic server configuration set up; this fi=
le only contains additional configuration for logging -->
</configure></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Then run the combined configuration using:</p>
</div>
<div class=3D"literalblock">
<div class=3D"content">
<pre>java -jar start.jar etc/jetty.xml jetty-logging.xml</pre>
</div>
</div>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"jetty-xml-set">&lt;Set&gt;</h4>
<div class=3D"paragraph">
<p>A Set element maps to a call to a setter method or field on the current =
object.
It can contain text and/or elements such as <code>Call</code>, <code>New</c=
ode>, <code>SystemProperty</code>, etc., as values.
The name and optional type attributes are used to select the setter method.
If you do not specify a value type, white space is trimmed out of the value=
.
If it contains multiple elements as values, they are added as strings befor=
e being converted to any specified type.</p>
</div>
<table class=3D"tableblock frame-all grid-all spread">
<colgroup>
<col style=3D"width: 33.3333%;">
<col style=3D"width: 33.3333%;">
<col style=3D"width: 33.3334%;">
</colgroup>
<thead>
<tr>
<th class=3D"tableblock halign-left valign-top">Attribute</th>
<th class=3D"tableblock halign-left valign-top">Required</th>
<th class=3D"tableblock halign-left valign-top">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">nam=
e</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">yes=
</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">the=
 name of the setter method to call, or the field to set.
If the name given is xxx, then a setXxx method is used. If the setXxx
method cannot be found, then the xxx field is used.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">typ=
e</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">no<=
/p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">the=
 declared type of the argument. See also discussion of
type for Arg for how to define null and empty string values.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">cla=
ss</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">no<=
/p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">if =
present, then this Set is treated as a static set method
invocation</p></td>
</tr>
</tbody>
</table>
<div class=3D"sect4">
<h5 id=3D"_can_contain_2">Can Contain</h5>
<div class=3D"paragraph">
<p>value text, <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.proje=
ct-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#jetty-xml-g=
et">Get element</a>, <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty=
.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#jetty=
-xml-call">Call
element</a>, <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project=
-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#jetty-xml-new=
">New element</a>, <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.p=
roject-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#jetty-x=
ml-ref">Ref
element</a>, <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project=
-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#jetty-xml-arr=
ay">Array element</a>, <a href=3D"file:///home/tian/Downloads/b60/ebook/jet=
ty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#jet=
ty-xml-map">Map
element</a>, <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project=
-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#jetty-xml-sys=
tem-property">System Property element</a>,
<a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/=
jetty-documentation/src/main/asciidoc/index.html#jetty-xml-property">Proper=
ty element</a></p>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_examples_3">Examples</h5>
<div class=3D"sect5">
<h6 id=3D"_basic_example_2">Basic Example</h6>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><co=
nfigure id=3D"server" class=3D"org.eclipse.jetty.server.Server">
  <set name=3D"port">8080</set>
</configure></code></pre>
</div>
</div>
</div>
<div class=3D"sect5">
<h6 id=3D"_set_via_a_system_property">Set via a System Property</h6>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><co=
nfigure id=3D"server" class=3D"org.eclipse.jetty.server.Server">
  <set name=3D"port"><systemproperty name=3D"jetty.http.port"></systemprope=
rty></set>
</configure></code></pre>
</div>
</div>
</div>
<div class=3D"sect5">
<h6 id=3D"_creating_a_newobject_and_setting_it_on_the_server">Creating a Ne=
wObject and Setting It on the Server</h6>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><co=
nfigure id=3D"server" class=3D"org.eclipse.jetty.server.Server">
  <set name=3D"threadPool">
    <new class=3D"org.eclipse.jetty.util.thread.QueuedThreadPool">
      <set name=3D"minThreads">10</set>
      <set name=3D"maxThreads">1000</set>
    </new>
  </set>
</configure></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>This is equivalent to:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">o=
rg.eclipse.jetty.server.Server server =3D new org.eclipse.jetty.server.Serv=
er();

org.eclipse.jetty.util.thread.QueuedThreadPool threadPool =3D new org.eclip=
se.jetty.util.thread.QueuedThreadPool();
threadPool.setMinThreads(10);
threadPool.setMaxThreads(1000);

server.setThreadPool(threadPool);</code></pre>
</div>
</div>
</div>
<div class=3D"sect5">
<h6 id=3D"_invoking_a_static_setter">Invoking a Static Setter</h6>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><co=
nfigure id=3D"server" class=3D"org.eclipse.jetty.server.Server">
  <set class=3D"org.eclipse.jetty.util.log.Log" name=3D"logToParent">logger=
Name</set>
</configure></code></pre>
</div>
</div>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"jetty-xml-get">&lt;Get&gt;</h4>
<div class=3D"paragraph">
<p>A Get element maps to a call to a getter method or field on the current =
object.
It can contain nested elements such as <code>Set</code>, <code>Put</code>, =
<code>Call</code>, etc.; these act on the object returned by the <code>Get<=
/code> call.</p>
</div>
<table class=3D"tableblock frame-all grid-all spread">
<colgroup>
<col style=3D"width: 33.3333%;">
<col style=3D"width: 33.3333%;">
<col style=3D"width: 33.3334%;">
</colgroup>
<thead>
<tr>
<th class=3D"tableblock halign-left valign-top">Attribute</th>
<th class=3D"tableblock halign-left valign-top">Required</th>
<th class=3D"tableblock halign-left valign-top">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">nam=
e</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">yes=
</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">the=
 name of the getter method to call, or the field to get.
If the name given is xxx, then a getXxx method is used. If the getXxx
method cannot be found, then the xxx field is used.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">cla=
ss</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">no<=
/p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">f p=
resent, then this Get is treated as a static getter or
field.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">id<=
/p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">no<=
/p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">if =
present, then you can use this id to refer to the returned
object later.</p></td>
</tr>
</tbody>
</table>
<div class=3D"sect4">
<h5 id=3D"_can_contain_3">Can Contain</h5>
<div class=3D"paragraph">
<p><a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/index.html#jetty-xml-set">Set elem=
ent</a>, <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jet=
ty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#jetty-xml-get">Ge=
t element</a>,
<a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/=
jetty-documentation/src/main/asciidoc/index.html#jetty-xml-put">Put element=
</a>, <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-=
9.4.x/jetty-documentation/src/main/asciidoc/index.html#jetty-xml-call">Call=
 element</a>,
<a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/=
jetty-documentation/src/main/asciidoc/index.html#jetty-xml-new">New element=
</a>, <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-=
9.4.x/jetty-documentation/src/main/asciidoc/index.html#jetty-xml-ref">Ref e=
lement</a>,
<a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/=
jetty-documentation/src/main/asciidoc/index.html#jetty-xml-array">Array ele=
ment</a>, <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-je=
tty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#jetty-xml-map">M=
ap element</a>,
<a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/=
jetty-documentation/src/main/asciidoc/index.html#jetty-xml-property">Proper=
ty element</a></p>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_examples_4">Examples</h5>
<div class=3D"sect5">
<h6 id=3D"_basic_example_3">Basic Example</h6>
<div class=3D"paragraph">
<p>This simple example doesn=E2=80=99t do much on its own.
You would normally use this in conjunction with a <code>&lt;Ref id=3D"Logge=
r" /&gt;</code>.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><co=
nfigure id=3D"server" class=3D"org.eclipse.jetty.server.Server">
  <get id=3D"Logger" class=3D"org.eclipse.jetty.util.log.Log" name=3D"log">
</get></configure></code></pre>
</div>
</div>
</div>
<div class=3D"sect5">
<h6 id=3D"_invoking_a_static_getter_and_call_methods_on_the_returned_object=
">Invoking a Static Getter and Call Methods on the Returned Object</h6>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><co=
nfigure id=3D"server" class=3D"org.eclipse.jetty.server.Server">
    <get class=3D"java.lang.System" name=3D"out">
      <call name=3D"println">
        <arg>Server version is: <get class=3D"org.eclipse.jetty.server.Serv=
er" name=3D"version"></get></arg>
      </call>
    </get>
</configure></code></pre>
</div>
</div>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"jetty-xml-put">&lt;Put&gt;</h4>
<div class=3D"paragraph">
<p>A Put element maps to a call to a put method on the current object, whic=
h must implement the Map interface.
It can contain text and/or elements such as <code>Call</code>, <code>New</c=
ode>, <code>SystemProperty</code>, etc. as values.
If you do not specify a no value type, white space is trimmed out of the va=
lue.
If it contains multiple elements as values, they are added as strings befor=
e being converted to any specified type.</p>
</div>
<table class=3D"tableblock frame-all grid-all spread">
<colgroup>
<col style=3D"width: 33.3333%;">
<col style=3D"width: 33.3333%;">
<col style=3D"width: 33.3334%;">
</colgroup>
<thead>
<tr>
<th class=3D"tableblock halign-left valign-top">Attribute</th>
<th class=3D"tableblock halign-left valign-top">Required</th>
<th class=3D"tableblock halign-left valign-top">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">nam=
e</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">yes=
</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">use=
d as the put key</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">typ=
e</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">no<=
/p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">for=
ces the type of the value. See also discussion of type for
Arg for how to define null and empty string values.</p></td>
</tr>
</tbody>
</table>
<div class=3D"sect4">
<h5 id=3D"_can_contain_4">Can Contain</h5>
<div class=3D"paragraph">
<p>value text, <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.proje=
ct-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#jetty-xml-g=
et">Get element</a>, <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty=
.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#jetty=
-xml-call">Call
element</a>, <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project=
-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#jetty-xml-new=
">New element</a>, <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.p=
roject-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#jetty-x=
ml-ref">Ref
element</a>, <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project=
-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#jetty-xml-arr=
ay">Array element</a>, <a href=3D"file:///home/tian/Downloads/b60/ebook/jet=
ty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#jet=
ty-xml-map">Map
element</a>, <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project=
-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#jetty-xml-sys=
tem-property">System Property element</a>,
<a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/=
jetty-documentation/src/main/asciidoc/index.html#jetty-xml-property">Proper=
ty element</a></p>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_example_2">Example</h5>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><ge=
t name=3D"someKindOfMap">
   <put name=3D"keyName">objectValue</put>
</get></code></pre>
</div>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"jetty-xml-call">&lt;Call&gt;</h4>
<div class=3D"paragraph">
<p>A <code>Call</code> element maps to an arbitrary call to a method on the=
 current object.
It can contain a sequence of Arg elements followed by a sequence of configu=
ration elements, such as Set, Put, Call.
The &lt;Arg&gt;s are passed as arguments to the method; the sequence of con=
figuration elements act on the object returned by the original call.</p>
</div>
<table class=3D"tableblock frame-all grid-all spread">
<colgroup>
<col style=3D"width: 33.3333%;">
<col style=3D"width: 33.3333%;">
<col style=3D"width: 33.3334%;">
</colgroup>
<thead>
<tr>
<th class=3D"tableblock halign-left valign-top">Attribute</th>
<th class=3D"tableblock halign-left valign-top">Required</th>
<th class=3D"tableblock halign-left valign-top">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">nam=
e</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">yes=
</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">the=
 name of the arbitrary method to call. The method called
will use the exact name you provide it.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">cla=
ss</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">no<=
/p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">if =
present, then this Call is treated as a static method.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">id<=
/p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">no<=
/p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">if =
present, you can use this id to refer to any object returned
by the call, for later use.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">arg=
</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">no<=
/p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">com=
ma separated list of arguments may be used for simple
string values rather than Arg elements</p></td>
</tr>
</tbody>
</table>
<div class=3D"sect4">
<h5 id=3D"_can_contain_5">Can Contain</h5>
<div class=3D"paragraph">
<p>Attributes as elements (Id, Name, Class) plus <a href=3D"file:///home/ti=
an/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/ma=
in/asciidoc/index.html#jetty-xml-arg">Arg
element</a>, <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project=
-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#jetty-xml-set=
">Set element</a>, <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.p=
roject-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#jetty-x=
ml-get">Get
element</a>, <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project=
-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#jetty-xml-put=
">Put element</a>, <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.p=
roject-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#jetty-x=
ml-call">Call
element</a>, <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project=
-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#jetty-xml-new=
">New element</a>, <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.p=
roject-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#jetty-x=
ml-ref">Ref
element</a>, <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project=
-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#jetty-xml-arr=
ay">Array element</a>, <a href=3D"file:///home/tian/Downloads/b60/ebook/jet=
ty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#jet=
ty-xml-map">Map
element</a>, <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project=
-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#jetty-xml-pro=
perty">Property element</a></p>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_examples_5">Examples</h5>
<div class=3D"sect5">
<h6 id=3D"_basic_example_4">Basic example</h6>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><ca=
ll name=3D"doFoo">
  <arg>bar</arg>
  <set name=3D"test">1, 2, 3</set>
</call></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>This is equivalent to:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">O=
bject o2 =3D o1.doFoo("bar");
o2.setTest("1, 2, 3");</code></pre>
</div>
</div>
</div>
<div class=3D"sect5">
<h6 id=3D"_invoking_a_static_method">Invoking a static method</h6>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><ca=
ll class=3D"com.acme.Foo" name=3D"setString">
  <arg>somestring</arg>
</call></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Which is equivalent to:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">c=
om.acme.Foo.setString("somestring");</code></pre>
</div>
</div>
</div>
<div class=3D"sect5">
<h6 id=3D"_invoking_the_actual_methodinstead_of_relying_on_getter_setter_ma=
gic">Invoking the Actual MethodInstead of Relying on Getter/Setter Magic</h=
6>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><co=
nfigure id=3D"Server" class=3D"org.eclipse.jetty.server.Server">
  <call name=3D"getPort" id=3D"port">
  <call class=3D"com.acme.Environment" name=3D"setPort">
    <arg>
      <ref refid=3D"port">
    </ref></arg>
  </call>
</call></configure></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Which is equivalent to:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">o=
rg.mortbay.jetty.Server server =3D new org.mortbay.jetty.Server();
com.acme.Environment.setPort( server.getPort() );</code></pre>
</div>
</div>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"jetty-xml-arg">&lt;Arg&gt;</h4>
<div class=3D"paragraph">
<p>An Arg element can be an argument of either a method or a constructor.
Use it within <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.projec=
t-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#jetty-syntax=
-call">[jetty-syntax-call]</a> and <a href=3D"file:///home/tian/Downloads/b=
60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/in=
dex.html#jetty-syntax-new">[jetty-syntax-new]</a>.</p>
</div>
<div class=3D"paragraph">
<p>It can contain text and/or elements, such as <code>Call</code>, <code>Ne=
w</code>, <code>SystemProperty</code>, etc., as values.
The optional type attribute can force the type of the value.
If you don=E2=80=99t specify a type, white space is trimmed out of the valu=
e.
If it contains multiple elements as values, they are added as strings befor=
e being converted to any specified type.
Simple <code>String</code> arguments can also be specified as a string sepa=
rated arg attribute on the parent element.</p>
</div>
<table class=3D"tableblock frame-all grid-all spread">
<colgroup>
<col style=3D"width: 33.3333%;">
<col style=3D"width: 33.3333%;">
<col style=3D"width: 33.3334%;">
</colgroup>
<thead>
<tr>
<th class=3D"tableblock halign-left valign-top">Attribute</th>
<th class=3D"tableblock halign-left valign-top">Required</th>
<th class=3D"tableblock halign-left valign-top">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">typ=
e</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">no<=
/p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">for=
ce the type of the argument. If you do not provide a value
for the element, if you use type of "String", the value will be the
empty string (""), otherwise it is null.</p></td>
</tr>
</tbody>
</table>
<div class=3D"sect4">
<h5 id=3D"_can_contain_6">Can Contain</h5>
<div class=3D"paragraph">
<p>value text, <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.proje=
ct-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#jetty-xml-g=
et">Get element</a>, <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty=
.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#jetty=
-xml-call">Call
element</a>, <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project=
-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#jetty-xml-new=
">New element</a>, <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.p=
roject-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#jetty-x=
ml-ref">Ref
element</a>, <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project=
-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#jetty-xml-arr=
ay">Array element</a>, <a href=3D"file:///home/tian/Downloads/b60/ebook/jet=
ty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#jet=
ty-xml-map">Map
element</a>, <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project=
-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#jetty-xml-sys=
tem-property">System Property element</a>,
<a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/=
jetty-documentation/src/main/asciidoc/index.html#jetty-xml-property">Proper=
ty element</a></p>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_examples_6">Examples</h5>
<div class=3D"sect5">
<h6 id=3D"_basic_examples">Basic examples</h6>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><ar=
g>foo</arg> <!-- String -->
<arg>true</arg> <!-- Boolean -->
<arg>1</arg> <!-- int, long, short, float, double -->
<arg><ref refid=3D"foo"></ref></arg>  <!-- any object; reference a previous=
ly created object with id "foo", and pass it as a parameter -->
<arg></arg> <!-- null value -->
<arg type=3D"String"></arg> <!-- empty string "" --></code></pre>
</div>
</div>
</div>
<div class=3D"sect5">
<h6 id=3D"_coercing_type">Coercing Type</h6>
<div class=3D"paragraph">
<p>This explicitly coerces the type to a boolean:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><ar=
g type=3D"boolean">False</arg></code></pre>
</div>
</div>
</div>
<div class=3D"sect5">
<h6 id=3D"_as_a_parameter">As a Parameter</h6>
<div class=3D"paragraph">
<p>Here are a couple of examples of <a href=3D"file:///home/tian/Downloads/=
b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/i=
ndex.html#jetty-xml-arg">Arg element</a> being used as a parameter to metho=
ds and to constructors:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><ca=
ll class=3D"com.acme.Environment" name=3D"setFoo">
  <arg>
    <new class=3D"com.acme.Foo">
      <arg>bar</arg>
    </new>
  </arg>
</call></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>This is equivalent to:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">c=
om.acme.Environment.setFoo(new com.acme.Foo("bar"));</code></pre>
</div>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><ne=
w class=3D"com.acme.Baz">
  <arg>
    <call id=3D"bar" class=3D"com.acme.MyStaticObjectFactory" name=3D"creat=
eObject">
      <arg>2</arg>
    </call>
  </arg>
</new></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>This is equivalent to:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">n=
ew com.acme.Baz(com.acme.MyStaticObjectFactory.createObject(2));</code></pr=
e>
</div>
</div>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"jetty-xml-new">&lt;New&gt;</h4>
<div class=3D"paragraph">
<p>Instantiates an object.
Equivalent to <code>new</code> in Java, and allows the creation of a new ob=
ject.
A <code>New</code> element can contain a sequence of <a href=3D"file:///hom=
e/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/sr=
c/main/asciidoc/index.html#jetty-xml-arg"><code>Arg</code> element</a>'s, f=
ollowed by a sequence of configuration elements (<code>Set</code>, <code>Pu=
t</code>, etc).
<a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/=
jetty-documentation/src/main/asciidoc/index.html#jetty-xml-arg"><code>Arg</=
code> element</a>'s are used to select a constructor for the object to be c=
reated.
The sequence of configuration elements then acts on the newly-created objec=
t.</p>
</div>
<table class=3D"tableblock frame-all grid-all spread">
<colgroup>
<col style=3D"width: 33.3333%;">
<col style=3D"width: 33.3333%;">
<col style=3D"width: 33.3334%;">
</colgroup>
<thead>
<tr>
<th class=3D"tableblock halign-left valign-top">Attribute</th>
<th class=3D"tableblock halign-left valign-top">Required</th>
<th class=3D"tableblock halign-left valign-top">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">cla=
ss</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">yes=
</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">ful=
ly qualified classname, which determines the type of the
new object that is instantiated.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">id<=
/p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">no<=
/p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">giv=
es a unique name to the object which can be referenced later
by Ref elements.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">arg=
</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">no<=
/p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">com=
ma separated list of arguments may be used for simple
string values rather than Arg elements</p></td>
</tr>
</tbody>
</table>
<div class=3D"sect4">
<h5 id=3D"_can_contain_7">Can Contain</h5>
<div class=3D"paragraph">
<p>Attributes as elements (Id, Class) plus <a href=3D"file:///home/tian/Dow=
nloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asc=
iidoc/index.html#jetty-xml-arg">Arg
element</a>, <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project=
-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#jetty-xml-set=
">Set element</a>, <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.p=
roject-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#jetty-x=
ml-get">Get
element</a>, <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project=
-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#jetty-xml-put=
">Put element</a>, <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.p=
roject-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#jetty-x=
ml-call">Call
element</a>, <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project=
-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#jetty-xml-new=
">New element</a>, <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.p=
roject-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#jetty-x=
ml-ref">Ref
element</a>, <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project=
-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#jetty-xml-arr=
ay">Array element</a>, <a href=3D"file:///home/tian/Downloads/b60/ebook/jet=
ty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#jet=
ty-xml-map">Map
element</a>, <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project=
-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#jetty-xml-pro=
perty">Property element</a></p>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_examples_7">Examples</h5>
<div class=3D"sect5">
<h6 id=3D"_basic_example_5">Basic example</h6>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><ne=
w class=3D"com.acme.Foo">
  <arg>bar</arg>
</new></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Which is equivalent to:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">c=
om.acme.Foo foo =3D new com.acme.Foo("bar");</code></pre>
</div>
</div>
</div>
<div class=3D"sect5">
<h6 id=3D"_instantiate_with_the_default_constructor">Instantiate with the D=
efault Constructor</h6>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><ne=
w class=3D"com.acme.Foo"></new></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Which is equivalent to:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">c=
om.acme.Foo foo =3D new com.acme.Foo();</code></pre>
</div>
</div>
</div>
<div class=3D"sect5">
<h6 id=3D"_instantiate_with_multiple_arguments_then_configuring_further">In=
stantiate with Multiple Arguments, Then Configuring Further</h6>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><ne=
w id=3D"foo" class=3D"com.acme.Foo">
   <arg>bar</arg>
   <arg>baz</arg>
   <set name=3D"test">1, 2, 3</set>
 </new></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Which is equivalent to:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">O=
bject foo =3D new com.acme.Foo("bar", "baz");
foo.setTest("1, 2, 3");</code></pre>
</div>
</div>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"jetty-xml-ref">&lt;Ref&gt;</h4>
<div class=3D"paragraph">
<p>A <code>Ref</code> element allows a previously created object to be refe=
renced by a unique id.
It can contain a sequence of elements, such as <code>Set</code> or <code>Pu=
t</code> which then act on the referenced object.
You can also use a <code>Ref</code> element as a value for other elements s=
uch as <code>Set</code> and <code>Arg</code>.</p>
</div>
<div class=3D"paragraph">
<p>The <code>Ref</code> element provides convenience and eases readability.
You can usually achieve the effect of the <code>Ref</code> by nesting eleme=
nts (method calls), but this can get complicated very easily.
The Ref element makes it possible to refer to the same object if you=E2=80=
=99re using it multiple times, or passing it into multiple methods.
It also makes it possible to split up configuration across multiple files.<=
/p>
</div>
<table class=3D"tableblock frame-all grid-all spread">
<colgroup>
<col style=3D"width: 33.3333%;">
<col style=3D"width: 33.3333%;">
<col style=3D"width: 33.3334%;">
</colgroup>
<thead>
<tr>
<th class=3D"tableblock halign-left valign-top">Attribute</th>
<th class=3D"tableblock halign-left valign-top">Required</th>
<th class=3D"tableblock halign-left valign-top">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">ref=
id</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">yes=
</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">the=
 unique identifier used to name a previously created
object.</p></td>
</tr>
</tbody>
</table>
<div class=3D"sect4">
<h5 id=3D"_can_contain_8">Can Contain</h5>
<div class=3D"paragraph">
<p><a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/index.html#jetty-xml-set">Set elem=
ent</a>, <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jet=
ty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#jetty-xml-get">Ge=
t element</a>,
<a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/=
jetty-documentation/src/main/asciidoc/index.html#jetty-xml-put">Put element=
</a>, <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-=
9.4.x/jetty-documentation/src/main/asciidoc/index.html#jetty-xml-call">Call=
 element</a>,
<a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/=
jetty-documentation/src/main/asciidoc/index.html#jetty-xml-new">New element=
</a>, <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-=
9.4.x/jetty-documentation/src/main/asciidoc/index.html#jetty-xml-ref">Ref e=
lement</a>,
<a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/=
jetty-documentation/src/main/asciidoc/index.html#jetty-xml-array">Array ele=
ment</a>, <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-je=
tty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#jetty-xml-map">M=
ap element</a>,
<a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/=
jetty-documentation/src/main/asciidoc/index.html#jetty-xml-property">Proper=
ty element</a></p>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_examples_8">Examples</h5>
<div class=3D"sect5">
<h6 id=3D"_basic_example_6">Basic example</h6>
<div class=3D"paragraph">
<p>Use the referenced object as an argument to a method call or constructor=
:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><ge=
t id=3D"foo" name=3D"xFoo">
<set name=3D"test"><ref refid=3D"foo"></ref></set></get></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>This is equivalent to:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">f=
oo =3D getXFoo();
setSomeMethod(foo);</code></pre>
</div>
</div>
</div>
<div class=3D"sect5">
<h6 id=3D"_manipulating_the_object_returned_by_ref">Manipulating the Object=
 Returned by Ref</h6>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><ge=
t id=3D"foo" name=3D"xFoo">
<ref refid=3D"foo">
  <set name=3D"test">1, 2, 3</set>
</ref></get></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>This is equivalent to:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">f=
oo =3D getXFoo();
foo.setTest("1, 2, 3");</code></pre>
</div>
</div>
</div>
<div class=3D"sect5">
<h6 id=3D"_ref_vs_nested_elements">Ref vs. Nested Elements</h6>
<div class=3D"paragraph">
<p>Here is an example of the difference in syntax between using the <code>R=
ef</code> element, and nesting method calls.
They are exactly equivalent:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><!-=
- using Ref in conjunction with Get -->
<configure id=3D"Server" class=3D"org.eclipse.jetty.server.Server">
  <get id=3D"Logger" class=3D"org.eclipse.jetty.util.log.Log" name=3D"log">
  <ref refid=3D"Logger">
    <set name=3D"debugEnabled">true</set>
  </ref>
</get></configure>
<!-- calling the setter directly on the object returned by Get -->
<configure id=3D"Server" class=3D"org.eclipse.jetty.server.Server">
  <get class=3D"org.eclipse.jetty.util.log.Log" name=3D"log">
    <set name=3D"debugEnabled">true</set>
  </get>
</configure></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Here is a more practical example, taken from the handler configuration s=
ection in <code>etc/jetty.xml</code>:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><se=
t name=3D"handler">
  <new id=3D"Handlers" class=3D"org.eclipse.jetty.server.handler.HandlerCol=
lection">
    <set name=3D"handlers">
      <array type=3D"org.eclipse.jetty.server.Handler">
        <item>
          <!-- create a new instance of a ContextHandlerCollection named "C=
ontexts" -->
          <new id=3D"Contexts" class=3D"org.eclipse.jetty.server.handler.Co=
ntextHandlerCollection">
        </new></item>
        <item>
          <new id=3D"DefaultHandler" class=3D"org.eclipse.jetty.server.hand=
ler.DefaultHandler">
        </new></item>
        <item>
          <!-- create a new instance of a RequestLogHandler named "RequestL=
og" -->
          <new id=3D"RequestLog" class=3D"org.eclipse.jetty.server.handler.=
RequestLogHandler">
        </new></item>
      </array>
    </set>
  </new>
</set>

<call name=3D"addBean">
  <arg>
    <new class=3D"org.eclipse.jetty.deploy.ContextDeployer">
      <!-- pass in the ContextHandlerCollection object ("Contexts") that wa=
s created earlier, as an argument -->
      <set name=3D"contexts"><ref refid=3D"Contexts"></ref></set>
    </new>
  </arg>
</call>

<!-- configure the RequestLogHandler object ("RequestLog") that we created =
earlier -->
<ref refid=3D"RequestLog">
  ....
</ref></code></pre>
</div>
</div>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"jetty-xml-array">&lt;Array&gt;</h4>
<div class=3D"paragraph">
<p>An <code>Array</code> element allows the creation of a new array.</p>
</div>
<table class=3D"tableblock frame-all grid-all spread">
<colgroup>
<col style=3D"width: 33.3333%;">
<col style=3D"width: 33.3333%;">
<col style=3D"width: 33.3334%;">
</colgroup>
<thead>
<tr>
<th class=3D"tableblock halign-left valign-top">Attribute</th>
<th class=3D"tableblock halign-left valign-top">Required</th>
<th class=3D"tableblock halign-left valign-top">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">typ=
e</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">no<=
/p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">spe=
cify what types of items the array can contain.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">id<=
/p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">no<=
/p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">uni=
que identifier you can use to refer to the array later.</p></td>
</tr>
</tbody>
</table>
<div class=3D"sect4">
<h5 id=3D"_can_contain_9">Can Contain</h5>
<div class=3D"paragraph">
<p><a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/index.html#jetty-xml-item">Item el=
ement</a></p>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_example_3">Example</h5>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><ar=
ray type=3D"java.lang.String">
   <item>value0</item>
   <item><new class=3D"java.lang.String"><arg>value1</arg></new></item>
</array></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>This is equivalent to:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">S=
tring[] a =3D new String[] { "value0", new String("value1") };</code></pre>
</div>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"jetty-xml-item">&lt;Item&gt;</h4>
<div class=3D"paragraph">
<p>An <code>Item</code> element defines an entry for Array and Map elements=
.</p>
</div>
<table class=3D"tableblock frame-all grid-all spread">
<colgroup>
<col style=3D"width: 33.3333%;">
<col style=3D"width: 33.3333%;">
<col style=3D"width: 33.3334%;">
</colgroup>
<thead>
<tr>
<th class=3D"tableblock halign-left valign-top">Attribute</th>
<th class=3D"tableblock halign-left valign-top">Required</th>
<th class=3D"tableblock halign-left valign-top">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">typ=
e</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">no<=
/p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">for=
ce the types of value.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">id<=
/p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">no<=
/p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">uni=
que identifier that you can use to refer to the array later.</p></td>
</tr>
</tbody>
</table>
<div class=3D"sect4">
<h5 id=3D"_can_contain_10">Can Contain</h5>
<div class=3D"paragraph">
<p><a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/index.html#jetty-xml-get">Get elem=
ent</a>, <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jet=
ty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#jetty-xml-call">C=
all element</a>,
<a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/=
jetty-documentation/src/main/asciidoc/index.html#jetty-xml-new">New element=
</a>, <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-=
9.4.x/jetty-documentation/src/main/asciidoc/index.html#jetty-xml-ref">Ref e=
lement</a>,
<a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/=
jetty-documentation/src/main/asciidoc/index.html#jetty-xml-array">Array ele=
ment</a>, <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-je=
tty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#jetty-xml-map">M=
ap element</a>,
<a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/=
jetty-documentation/src/main/asciidoc/index.html#jetty-xml-system-property"=
>System Property element</a>,
<a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/=
jetty-documentation/src/main/asciidoc/index.html#jetty-xml-property">Proper=
ty element</a></p>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"jetty-xml-map">&lt;Map&gt;</h4>
<div class=3D"paragraph">
<p>A <code>Map</code> element allows the creation of a new HashMap and to p=
opulate it with <code>(key, value)</code> pairs.</p>
</div>
<table class=3D"tableblock frame-all grid-all spread">
<colgroup>
<col style=3D"width: 33.3333%;">
<col style=3D"width: 33.3333%;">
<col style=3D"width: 33.3334%;">
</colgroup>
<thead>
<tr>
<th class=3D"tableblock halign-left valign-top">Attribute</th>
<th class=3D"tableblock halign-left valign-top">Required</th>
<th class=3D"tableblock halign-left valign-top">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">id<=
/p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">no<=
/p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">uni=
que identifier you can use to refer to the map later.</p></td>
</tr>
</tbody>
</table>
<div class=3D"sect4">
<h5 id=3D"_can_contain_11">Can Contain</h5>
<div class=3D"paragraph">
<p><a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/index.html#jetty-xml-entry">Entry =
element</a></p>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_example_4">Example</h5>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><ma=
p>
  <entry>
    <item>keyName</item>
    <item><new class=3D"java.lang.String"><arg>value1</arg></new></item>
  </entry>
</map></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>This is equivalent to:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">M=
ap m =3D new HashMap();
m.put("keyName", new String("value1"));</code></pre>
</div>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"jetty-xml-entry">&lt;Entry&gt;</h4>
<div class=3D"paragraph">
<p>An <code>Entry</code> element contains a key-value <a href=3D"file:///ho=
me/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/s=
rc/main/asciidoc/index.html#jetty-xml-item">Item element</a> pair for a <co=
de>Map</code>.</p>
</div>
<div class=3D"sect4">
<h5 id=3D"_can_contain_12">Can Contain</h5>
<div class=3D"paragraph">
<p><a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/index.html#jetty-xml-item">Item el=
ement</a></p>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"jetty-xml-system-property">&lt;SystemProperty&gt;</h4>
<div class=3D"paragraph">
<p>A <code>SystemProperty</code> element gets the value of a JVM system pro=
perty.
It can be used within elements that accept values, such as <code>Set</code>=
, <code>Put</code>, <code>Arg</code>.</p>
</div>
<table class=3D"tableblock frame-all grid-all spread">
<colgroup>
<col style=3D"width: 33.3333%;">
<col style=3D"width: 33.3333%;">
<col style=3D"width: 33.3334%;">
</colgroup>
<thead>
<tr>
<th class=3D"tableblock halign-left valign-top">Attribute</th>
<th class=3D"tableblock halign-left valign-top">Required</th>
<th class=3D"tableblock halign-left valign-top">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">nam=
e</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">yes=
</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">pro=
perty name</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">def=
ault</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">no<=
/p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">a d=
efault value as a fallback</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">id<=
/p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">no<=
/p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">uni=
que identifier which you can use to refer to the array
later.</p></td>
</tr>
</tbody>
</table>
<div class=3D"sect4">
<h5 id=3D"_can_contain_13">Can Contain</h5>
<div class=3D"paragraph">
<p>Only attributes as Elements (<code>Id</code>, <code>Name</code>, <code>D=
efault</code>).</p>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_example_5">Example</h5>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><sy=
stemproperty name=3D"jetty.http.port" default=3D"8080"></systemproperty></c=
ode></pre>
</div>
</div>
<div class=3D"paragraph">
<p>That is equivalent to:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">S=
ystem.getProperty("jetty.http.port", "8080");</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Both try to retrieve the value of <code>jetty.http.port</code>.
If <code>jetty.http.port</code> is not set, then 8080 is used.</p>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"jetty-xml-property">&lt;Property&gt;</h4>
<div class=3D"paragraph">
<p>A <code>Property</code> element allows arbitrary properties to be retrie=
ved by name.
It can contain a sequence of elements, such as <code>Set</code>, <code>Put<=
/code>, <code>Call</code> that act on the retrieved object.</p>
</div>
<table class=3D"tableblock frame-all grid-all spread">
<colgroup>
<col style=3D"width: 33.3333%;">
<col style=3D"width: 33.3333%;">
<col style=3D"width: 33.3334%;">
</colgroup>
<thead>
<tr>
<th class=3D"tableblock halign-left valign-top">Attribute</th>
<th class=3D"tableblock halign-left valign-top">Required</th>
<th class=3D"tableblock halign-left valign-top">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">nam=
e</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">yes=
</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">pro=
perty name</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">def=
ault</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">no<=
/p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">a d=
efault value as a fallback</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">id<=
/p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">no<=
/p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">uni=
que identifier which you can use to refer to the array
later.</p></td>
</tr>
</tbody>
</table>
<div class=3D"paragraph">
<p>The <code>Name</code> attribute may be a comma separated list of propert=
y names, with the first property name being the "official" name, and the ot=
hers names being old, deprecated property names that are kept for backward =
compatibility.
A warning log is issued when deprecated property names are used.
The <code>Default</code> attribute contains the value to use in case none o=
f the property names is found.</p>
</div>
<div class=3D"sect4">
<h5 id=3D"_can_contain_14">Can Contain</h5>
<div class=3D"paragraph">
<p>The attributes may be expressed as contained Elements (<code>Id</code>, =
<code>Name</code>, <code>Default</code>).</p>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_example_6">Example</h5>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><pr=
operty name=3D"Server">
  <call id=3D"jdbcIdMgr" name=3D"getAttribute">
    <arg>jdbcIdMgr</arg>
  </call>
</property></code></pre>
</div>
</div>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"jetty-xml-usage">Jetty XML Usage</h3>
<div class=3D"paragraph">
<p>Jetty provides an XML-based configuration.
It is grounded in Java=E2=80=99s Reflection API. Classes in the <code>java.=
lang.reflect</code> represent Java methods and classes, such that you can i=
nstantiate objects and invoke their methods based on their names and argume=
nt types.
Behind the scenes, Jetty=E2=80=99s XML config parser translates the XML ele=
ments and attributes into Reflection calls.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"using-jettyxml">Using jetty.xml</h4>
<div class=3D"paragraph">
<p>To use <code>jetty.xml</code>, specify it as a configuration file when r=
unning Jetty.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java"> =
java -jar start.jar etc/jetty.xml</code></pre>
</div>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Note</div>
</td>
<td class=3D"content">
If you start Jetty without specifying a configuration file, Jetty automatic=
ally locates and uses the default installation <code>jetty.xml</code> file.
Therefore <code>java -jar start.jar</code> is equivalent to <code>java -jar=
 start.jar etc/jetty.xml</code> .
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"using-multiple-configuration-files">Using Multiple Configuration =
Files</h4>
<div class=3D"paragraph">
<p>You are not limited to one configuration file; you can use multiple conf=
iguration files when running Jetty, and Jetty will configure the appropriat=
e server instance.
The ID of the server in the <code>&lt;Configure&gt;</code> tag specifies th=
e instance you want to configure.
Each server ID in a configuration file creates a new server instance within=
 the same JVM.
If you use the same ID across multiple configuration files, those configura=
tions are all applied to the same server.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"setting-parameters-in-configuration-files">Setting Parameters in =
Configuration Files</h4>
<div class=3D"paragraph">
<p>You can set parameters in configuration files either with system propert=
ies (using <code>&lt;SystemProperty&gt;</code>) or properties files (using =
<code>&lt;Property&gt;</code>) passed via the command line.
For example, this code in <code>jetty.xml</code> allows the port to be defi=
ned on the command line, falling back onto `8080`if the port is not specifi=
ed:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml">  <=
set name=3D"port"><systemproperty name=3D"jetty.http.port" default=3D"8080"=
></systemproperty></set></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Then you modify the port while running Jetty by using this command:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java"> =
java -Djetty.http.port=3D8888 -jar start.jar etc/jetty.xml</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>An example of defining both system properties and properties files from =
the command line:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java"> =
java -Djetty.http.port=3D8888 -jar start.jar myjetty.properties etc/jetty.x=
ml etc/other.xml</code></pre>
</div>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"jetty-xml-config">jetty.xml</h3>
<div class=3D"paragraph">
<p><code>jetty.xml</code> is the default configuration file for Jetty, typi=
cally located at ` $JETTY_HOME/etc/jetty.xml`. Usually the <code>jetty.xml<=
/code> configures:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>The Server class (or subclass if extended) and global options.</p>
</li>
<li>
<p>A ThreadPool (min and max thread).</p>
</li>
<li>
<p>Connectors (ports, timeouts, buffer sizes, protocol).</p>
</li>
<li>
<p>The handler structure (default handlers and/or a contextHandlerCollectio=
ns).</p>
</li>
<li>
<p>The deployment manager that scans for and deploys webapps and contexts.<=
/p>
</li>
<li>
<p>Login services that provide authentication checking.</p>
</li>
<li>
<p>A request log.</p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>Not all Jetty features are configured in <code>jetty.xml</code>.
There are several optional configuration files that share the same format a=
s <code>jetty.xml</code> and, if specified, concatenate to it.
These configuration files are also stored in <code>$JETTY_HOME/etc/</code>,=
 and examples of them are in <a href=3D"http://github.com/eclipse/jetty.pro=
ject/jetty-server/src/main/config/etc/">Github Repository</a>.
The selection of which configuration files to use is controlled by <a href=
=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-d=
ocumentation/src/main/asciidoc/index.html#advanced-start-features">[advance=
d-start-features]</a> and the process of merging configuration is described=
 in <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.=
4.x/jetty-documentation/src/main/asciidoc/index.html#jetty-xml-usage">Jetty=
 XML Usage</a>.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"root-element-jetty-xml">Root Element</h4>
<div class=3D"paragraph">
<p><code>jetty.xml</code> configures an instance of the <code>Jetty org.ecl=
ipse.jetty.server.Server.</code></p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><!-=
-?xml version=3D"1.0"?-->


<configure id=3D"Server" class=3D"org.eclipse.jetty.server.Server">
 ...
</configure></code></pre>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"jetty-xml-examples">Examples</h4>
<div class=3D"paragraph">
<p><code>$JETTY_HOME/etc</code> contains the default <code>jetty.xml</code>=
, as well as other sample configuration files (<code>jetty-*.xml</code>) wh=
ich can be passed to the server via the command line.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"jetty-xml-additional-resources">Additional Resources</h4>
<div class=3D"ulist">
<ul>
<li>
<p><a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/index.html#jetty-xml-syntax">Jetty=
 XML Syntax</a> =E2=80=93in-depth reference for Jetty-specific configuratio=
n XML syntax.</p>
</li>
<li>
<p><a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/index.html#jetty-xml-config">jetty=
.xml</a> =E2=80=93configuration file for configuring the entire server</p>
</li>
</ul>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"jetty-web-xml-config">jetty-web.xml</h3>
<div class=3D"paragraph">
<p><code>jetty-web.xml</code> is a Jetty configuration file that you can bu=
ndle with a specific web application.
The format of <code>jetty-web.xml</code> is the same as <a href=3D"file:///=
home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation=
/src/main/asciidoc/index.html#jetty-xml-config">jetty.xml</a> =E2=80=93 it =
is an XML mapping of the Jetty API.</p>
</div>
<div class=3D"paragraph">
<p>This document offers an overview for using the <code>jetty-web.xml</code=
> configuration file.
For a more in-depth look at the syntax, see <a href=3D"file:///home/tian/Do=
wnloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/as=
ciidoc/index.html#jetty-xml-syntax">Jetty XML Syntax</a>.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"root-element-jetty-web-xml">Root Element</h4>
<div class=3D"paragraph">
<p><code>jetty-web.xml</code> applies on a per-webapp basis, and configures=
 an instance of <code>org.eclipse.jetty.webapp.WebAppContext</code>.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><!-=
-?xml version=3D"1.0" encoding=3D"UTF-8"?-->


<configure class=3D"org.eclipse.jetty.webapp.WebAppContext">
 ..
</configure></code></pre>
</div>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock caution">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Caution</div>
</td>
<td class=3D"content">
Make sure you are applying the configuration to an instance of the proper c=
lass. <code>jetty-web.xml</code> configures an instance of WebAppContext; <=
code>jetty.xml</code> configures an instance of Server.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"using-jetty-web-xml">Using jetty-web.xml</h4>
<div class=3D"paragraph">
<p>Place the <code>jetty-web.xml</code> into your web application=E2=80=99s=
 <code>WEB-INF</code> folder.
When Jetty deploys a web application, it looks for a file called <code>WEB-=
INF/jetty-web.xml</code> or <code>WEB-INF/web-jetty.xml</code> within the w=
eb application (or WAR) and applies the configuration found there.
Be aware that <code>jetty-web.xml</code> is called <em>after</em> all other=
 configuration has been applied to the web application.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"jetty-web-xml-examples"><code>jetty-web.xml</code> Examples</h4>
<div class=3D"paragraph">
<p>The distribution contains an example of <code>jetty-web.xml</code> insid=
e the WEB-INF folder of the test webapp war (<code>$JETTY_HOME/webapps/test=
.war/WEB-INF/jetty-web.xml</code>).</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"additional-jetty-web-xml-resources">Additional <code>jetty-web.xm=
l</code> Resources</h4>
<div class=3D"ulist">
<ul>
<li>
<p><a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/index.html#jetty-xml-syntax">Jetty=
 XML Syntax</a> =E2=80=93in-depth reference for Jetty-specific configuratio=
n XML syntax.</p>
</li>
<li>
<p><a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/index.html#jetty-xml-config">jetty=
.xml</a> =E2=80=93configuration file for configuring the entire server</p>
</li>
</ul>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"jetty-env-xml">jetty-env.xml</h3>
<div class=3D"paragraph">
<p><code>jetty-env.xml</code> is an optional Jetty file that configures JND=
I resources for an individual webapp.
The format of <code>jetty-env.xml</code> is the same as <a href=3D"file:///=
home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation=
/src/main/asciidoc/index.html#jetty-xml-config">jetty.xml</a> =E2=80=93it i=
s an XML mapping of the Jetty API.</p>
</div>
<div class=3D"paragraph">
<p>When Jetty deploys a web application, it automatically looks for a file =
called ` WEB-INF/jetty-env.xml` within the web application (or WAR), and se=
ts up the webapp naming environment so that naming references in the <code>=
WEB-INF/web.xml</code> file can be resolved from the information provided i=
n the <code>WEB-INF/jetty-env.xml</code> and <a href=3D"file:///home/tian/D=
ownloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/a=
sciidoc/index.html#jetty-xml-config">jetty.xml</a> files.
You define global naming resources on the server via <code>jetty.xml</code>=
.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"jetty-env-root-element">jetty-env.xml Root Element</h4>
<div class=3D"paragraph">
<p>Jetty applies <code>jetty-env.xml</code> on a per-webapp basis, and conf=
igures an instance of <code>org.eclipse.jetty.webapp.WebAppContext.</code><=
/p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><!-=
-?xml version=3D"1.0" encoding=3D"UTF-8"?-->


<configure class=3D"org.eclipse.jetty.webapp.WebAppContext">
 ..
</configure></code></pre>
</div>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock caution">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Caution</div>
</td>
<td class=3D"content">
Make sure you are applying the configuration to an instance of the proper c=
lass. <code>jetty-env.xml</code> configures an instance of WebAppContext, a=
nd not an instance of Server.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"using-jetty-env-xml">Using <code>jetty-env.xml</code></h4>
<div class=3D"paragraph">
<p>Place the <code>jetty-env.xml</code> file in your web application=E2=80=
=99s WEB-INF folder.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"> <!=
--?xml version=3D"1.0"?-->
=20

 <configure class=3D"org.eclipse.jetty.webapp.WebAppContext">

   <!-- Add an EnvEntry only valid for this webapp               -->
   <new id=3D"gargle" class=3D"org.eclipse.jetty.plus.jndi.EnvEntry">
     <arg>gargle</arg>
     <arg type=3D"java.lang.Double">100</arg>
     <arg type=3D"boolean">true</arg>
   </new>

  <!-- Add an override for a global EnvEntry                           -->
   <new id=3D"wiggle" class=3D"org.eclipse.jetty.plus.jndi.EnvEntry">
     <arg>wiggle</arg>
     <arg type=3D"java.lang.Double">55.0</arg>
     <arg type=3D"boolean">true</arg>
   </new>

   <!-- an XADataSource                                                -->
   <new id=3D"mydatasource99" class=3D"org.eclipse.jetty.plus.jndi.Resource=
">
     <arg>jdbc/mydatasource99</arg>
     <arg>
       <new class=3D"com.atomikos.jdbc.SimpleDataSourceBean">
         <set name=3D"xaDataSourceClassName">org.apache.derby.jdbc.Embedded=
XADataSource</set>
         <set name=3D"xaDataSourceProperties">databaseName=3Dtestdb99;creat=
eDatabase=3Dcreate</set>
         <set name=3D"UniqueResourceName">mydatasource99</set>
       </new>
     </arg>
   </new>

 </configure></code></pre>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"additional-jetty-env-xml-resources">Additional jetty-env.xml Reso=
urces</h4>
<div class=3D"ulist">
<ul>
<li>
<p><a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/index.html#jetty-xml-syntax">Jetty=
 XML Syntax</a> =E2=80=93In-depth reference for Jetty-specific configuratio=
n XML syntax.</p>
</li>
<li>
<p><a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/index.html#jetty-xml-config">jetty=
.xml</a> =E2=80=93Configuration file for configuring the entire server.</p>
</li>
</ul>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"webdefault-xml">webdefault.xml</h3>
<div class=3D"paragraph">
<p>The <code>webdefault.xml</code> file saves web applications from having =
to define a lot of house-keeping and container-specific elements in their o=
wn <code>web.xml</code> files.
For example, you can use it to set up mime-type mappings and JSP servlet-ma=
ppings.
Jetty applies <code>webdefault.xml</code> to a web application <em>before</=
em> the application=E2=80=99s own <code>WEB-INF/web.xml</code>, which means=
 that it cannot override values inside the webapp=E2=80=99s <code>web.xml</=
code>.
It uses the <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-=
jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#jetty-xml-conf=
ig">jetty.xml</a> syntax.
Generally, it is convenient for all webapps in a Jetty instance to share th=
e same <code>webdefault.xml</code> file.
However, it is certainly possible to provide differentiated ` webdefault.xm=
l` files for individual web applications.</p>
</div>
<div class=3D"paragraph">
<p>The <code>webdefault.xml</code> file is located in <code>$(jetty.home)/e=
tc/webdefault.xml</code>.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"using-webdefault-xml">Using webdefault.xml</h4>
<div class=3D"paragraph">
<p>You can specify a custom configuration file to use for specific webapps,=
 or for all webapps. If you do not specify an alternate defaults descriptor=
, the $JETTY-HOME/etc/jetty-deploy.xml file will configure jetty to automat=
ically use $JETTY_HOME/etc/<code>webdefault.xml</code>.</p>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Note</div>
</td>
<td class=3D"content">
To ensure your <code>webdefault.xml</code> files are validated, you will ne=
ed to set the <code>validateXml</code> attribute to true as described <a hr=
ef=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty=
-documentation/src/main/asciidoc/index.html#jetty-xml-dtd">here.</a>
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
<div class=3D"sect4">
<h5 id=3D"creating-custom-webdefault-xml-one-webapp">Creating a Custom webd=
efault.xml for One WebApp</h5>
<div class=3D"paragraph">
<p>You can specify a custom <code>webdefault.xml</code> for an individual w=
eb application in that webapp=E2=80=99s <a href=3D"file:///home/tian/Downlo=
ads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciid=
oc/index.html#jetty-xml-config">jetty.xml</a> as follows:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><co=
nfigure class=3D"org.eclipse.jetty.webapp.WebAppContext">
  ...
  <!-- Set up the absolute path to the custom webdefault.xml -->
  <set name=3D"defaultsDescriptor">/my/path/to/webdefault.xml</set>
  ...
</configure></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The equivalent in code is:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">i=
mport org.eclipse.jetty.webapp.WebAppContext;

    ...

    WebAppContext wac =3D new WebAppContext();
    ...
    //Set up the absolute path to the custom webdefault.xml.
    wac.setDefaultsDescriptor("/my/path/to/webdefault.xml");
    ...</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Alternatively, you can use a <a href=3D"file:///home/tian/Downloads/b60/=
ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index=
.html#jetty-classloading">Jetty Classloading</a> to find the resource repre=
senting your custom <code>webdefault.xml</code>.</p>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"creating-custom-webdefault-xml-multiple-webapps">Creating a Custo=
m <code>webdefault.xml</code> for Multiple WebApps</h5>
<div class=3D"paragraph">
<p>If you want to apply the same custom <code>webdefault.xml</code> to a nu=
mber of webapps, provide the path to the file in <a href=3D"file:///home/ti=
an/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/ma=
in/asciidoc/index.html#jetty-xml-config">jetty.xml</a> in the $JETTY_HOME/e=
tc/jetty-deploy.xml file:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml">   =
<set name=3D"defaultsDescriptor"><property name=3D"jetty.home" default=3D".=
">/other/path/to/another/webdefault.xml</property></set></code></pre>
</div>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"webdefault-xml-using-jetty-maven-plugin">Using the Jetty Maven Pl=
ugin</h5>
<div class=3D"paragraph">
<p>Similarly, when using the <a href=3D"file:///home/tian/Downloads/b60/ebo=
ok/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.ht=
ml#jetty-maven-plugin">Jetty Maven Plugin</a> you provide a customized <cod=
e>webdefault.xml</code> file for your webapp as follows:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><pr=
oject>
    ...
    <plugins>
        <plugin>
            ...
            <artifactid>jetty-maven-plugin</artifactid>
            <configuration>
                <webapp>
                  ...
                  <defaultsdescriptor>/my/path/to/webdefault.xml</defaultsd=
escriptor>
                </webapp>
            </configuration>
        </plugin>
        ...
    </plugins>
    ...
</project></code></pre>
</div>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"webdefault-xml-additional-resources">Additional Resources</h5>
<div class=3D"ulist">
<ul>
<li>
<p><a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/index.html#jetty-web-xml-config">j=
etty-web.xml</a> =E2=80=93Reference for <code>web.xml</code> files</p>
</li>
<li>
<p><a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/index.html#override-web-xml">Jetty=
 override-web.xml</a> =E2=80=93Information for this <code>web.xml</code> -f=
ormatted file, applied after the webapp=E2=80=99s <code>web.xml</code> weba=
pp.</p>
</li>
<li>
<p><a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/index.html#jetty-xml-config">jetty=
.xml</a> =E2=80=93Reference for <code>jetty.xml</code> files</p>
</li>
</ul>
</div>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"override-web-xml">Jetty override-web.xml</h3>
<div class=3D"paragraph">
<p>To deploy a web application or WAR into different environments, most lik=
ely you will need to customize the webapp for compatibility with each envir=
onment.
The challenge is to do so without changing the webapp itself. You can use a=
 <code>jetty.xml</code> file for some of this work since it is not part of =
the webapp.
But there are some changes that <code>jetty.xml</code> cannot accomplish, f=
or example, modifications to servlet init-params and context init-params.
Using <code>webdefault.xml</code> is not an option because Jetty applies <c=
ode>webdefault.xml</code> to a web application <em>before</em> the applicat=
ion=E2=80=99s own <code>WEB-INF/web.xml</code>, which means that it cannot =
override values inside the webapp=E2=80=99s ` web.xml`.</p>
</div>
<div class=3D"paragraph">
<p>The solution is <code>override-web.xml</code>.
It is a <code>web.xml</code> file that Jetty applies to a web application <=
em>after</em> the application=E2=80=99s own <code>WEB-INF/web.xml</code>, w=
hich means that it can override values or add new elements.
This is defined on a per-webapp basis, using the <a href=3D"file:///home/ti=
an/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/ma=
in/asciidoc/index.html#jetty-xml-syntax">Jetty XML Syntax</a>.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"using-override-web-xml">Using override-web.xml</h4>
<div class=3D"paragraph">
<p>You can specify the <code>override-web.xml</code> to use for an individu=
al web application in a deployable xml file located in Jetty webapps folder=
 .
For example, if you had a webapp named MyApp, you would place a deployable =
xml file named <code>myapp.xml</code> in <code>${jetty.base}/webapps</code>=
 which includes an <code>overrideDescriptor</code> entry for the <code>over=
ride-web.xml</code> file.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><co=
nfigure class=3D"org.eclipse.jetty.webapp.WebAppContext">
  ...
  <!-- Set up the path to the custom override descriptor,
  relative to your $(jetty.home) directory or to the current directory -->
  <set name=3D"overrideDescriptor"><systemproperty name=3D"jetty.home" defa=
ult=3D".">/my/path/to/override-web.xml</systemproperty></set>
  ...
</configure></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The equivalent in code is:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">i=
mport org.eclipse.jetty.webapp.WebAppContext;

    ...

    WebAppContext wac =3D new WebAppContext();
    ...
    //Set the path to the override descriptor, based on your $(jetty.home) =
directory
    wac.setOverrideDescriptor(System.getProperty("jetty.home")+"/my/path/to=
/override-web.xml");
    ...</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Alternatively, you can use the classloader (<a href=3D"file:///home/tian=
/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main=
/asciidoc/index.html#jetty-classloading">Jetty Classloading</a>) to get the=
 path to the override descriptor as a resource.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"override-using-jetty-maven-plugin">Using the Jetty Maven Plugin</=
h4>
<div class=3D"paragraph">
<p>Use the <code>&lt;overrideDescriptor&gt;</code> tag as follows:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><pr=
oject>
    ...
    <plugins>
        <plugin>
            ...
            <artifactid>jetty-maven-plugin</artifactid>
            <configuration>
                <webappconfig>
                  ...
                  <overridedescriptor>src/main/resources/override-web.xml</=
overridedescriptor>
                </webappconfig>
            </configuration>
        </plugin>
        ...
    </plugins>
    ...
</project></code></pre>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"override-web-xml-additional-resources">Additional Resources</h4>
<div class=3D"ulist">
<ul>
<li>
<p><a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/index.html#webdefault-xml">webdefa=
ult.xml</a> =E2=80=93Information for this <code>web.xml</code> -formatted f=
ile, applied before the webapp=E2=80=99s <code>web.xml</code> webapp.</p>
</li>
<li>
<p><a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/index.html#jetty-xml-config">jetty=
.xml</a> =E2=80=93Reference for <code>jetty.xml</code> files</p>
</li>
</ul>
</div>
</div>
</div>
</div>
</div>
<div class=3D"sect1">
<h2 id=3D"troubleshooting">Troubleshooting</h2>
<div class=3D"sectionbody">
<div class=3D"paragraph">
<p>This is a collection of helpful tricks and tips that we have come across=
 to address odd issues that might arise.</p>
</div>
<div class=3D"sect2">
<h3 id=3D"troubleshooting-zip-exceptions">Troubleshooting Zip Exceptions</h=
3>
<div class=3D"paragraph">
<p>A Zip exception occurs when Jetty rereads a Jar or WAR file.</p>
</div>
<div class=3D"paragraph">
<p>The JVM maintains a cache of zip file indexes, and does not support hot =
replacement of zip files.
Thus if you redeploy a web application using the same WAR or Jar files, exc=
eptions occur when Jetty rereads the jars.
See <a href=3D"http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=3D4774421=
">Oracle Bug 4774421</a> for more information.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"remedy">Remedy</h4>
<div class=3D"paragraph">
<p>The remedy is to avoid hot replacing Jar or WAR files, which can be diff=
icult if you are using the
<a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/=
jetty-documentation/src/main/asciidoc/index.html#configuring-specific-webap=
p-deployment">Webapp Provider</a>.
You can use the following techniques to reduce exposure to this issue:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>Deploy unpacked classes in the <code>WEB-INF/classes</code> directory ra=
ther than as a Jar file under <code>WEB-INF/lib</code>.</p>
</li>
<li>
<p>Deploy all WAR and Jar files with a version number in their filename or =
path.
If the code changes, a new version number applies, avoiding the cache probl=
em.</p>
</li>
<li>
<p>Deploy a packed WAR file with the <a href=3D"file:///home/tian/Downloads=
/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/=
%7BJDURL%7D/org/eclipse/jetty/webapp/WebAppContext.html#setExtractWAR(boole=
an)">setExtractWAR</a> option set to true.
This causes the WAR to be extracted to a <a href=3D"file:///home/tian/Downl=
oads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/ascii=
doc/index.html#ref-temporary-directories">temporary directory</a> and thus =
to a new location.
This might not be sufficient if you want to hot-replace and re-extract the =
WAR, so you might also need to use <a href=3D"file:///home/tian/Downloads/b=
60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7=
BJDURL%7D/org/eclipse/jetty/webapp/WebAppContext.html#setCopyWebInf(boolean=
)">WebAppContext.setCopyWebInf(true)</a>, which (re)copies just the WEB-INF=
 directory to a different location.</p>
</li>
<li>
<p>Deploy an unpacked WAR file with the <a href=3D"file:///home/tian/Downlo=
ads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciid=
oc/%7BJDURL%7D/org/eclipse/jetty/webapp/WebAppContext.html#setCopyWebDir(bo=
olean)">setCopyWebDir</a> option set to true.
This causes the directory to be extracted to a new location.</p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>If you have problems with <a href=3D"file:///home/tian/Downloads/b60/ebo=
ok/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.ht=
ml#troubleshooting-locked-files-on-windows">Windows file-locking</a> preven=
ting static file editing (such as JSP or HTML), use the <a href=3D"file:///=
home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation=
/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/webapp/WebAppContext.html#=
setCopyWebDir(boolean)">WebAppContext .setCopyWebDir(true)</a> option.</p>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"troubleshooting-locked-files-on-windows">Troubleshooting Locked F=
iles on Windows</h3>
<div class=3D"paragraph">
<p>Jetty buffers static content for webapps such as HTML files, CSS files, =
images, etc.
If you are using NIO connectors, Jetty uses memory-mapped files to do this.
The problem is that on Windows, memory mapping a file causes the file to lo=
ck, so that you cannot update or replace the file.
Effectively this means that you have to stop Jetty to update a file.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"_remedy">Remedy</h4>
<div class=3D"paragraph">
<p>Jetty provides a configuration switch in the <code>webdefault.xml</code>=
 file for the DefaultServlet that enables or disables the use of memory-map=
ped files.
If you are running on Windows and are having file-locking problems, you sho=
uld set this switch to disable memory-mapped file buffers.</p>
</div>
<div class=3D"paragraph">
<p>The default <code>webdefault.xml</code> file is found in the jetty distr=
ibution under the <code>etc/</code> directory or in the <code>jetty-webapp-=
${VERSION}.jar</code> artifact at <code>org/eclipse/jetty/webapp/webdefault=
.xml</code>.
Edit the file in the distribution or extract it to a convenient disk locati=
on and edit it to change <code>useFileMappedBuffer</code> to false.
The easiest option is to simply edit the default file contained in the jett=
y distribution itself.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><in=
it-param>
   <param-name>useFileMappedBuffer</param-name>
   <param-value>true</param-value> <!-- change to false -->
 </init-param></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Make sure to apply your custom <code>webdefault.xml</code> file to all o=
f your webapps.
You can do that by changing the configuration of the Deployment Manager in =
<code>etc/jetty-deploy.xml</code>.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><ca=
ll id=3D"webappprovider" name=3D"addAppProvider">
  <arg>
    <new class=3D"org.eclipse.jetty.deploy.providers.WebAppProvider">
      .
      .
      <!-- this should be the new custom webdefault.xml or change should be=
 made in this file -->
      <set name=3D"defaultsDescriptor"><property name=3D"jetty.home" defaul=
t=3D".">/etc/webdefault.xml</property></set>
      <set name=3D"scanInterval">1</set>
      <set name=3D"extractWars">true</set>
      .
      .
    </new>
  </arg>
</call></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Alternatively, if you have individually configured your webapps with con=
text xml files, you need to call the <code>WebAppContext.setDefaultsDescrip=
tor(String path)</code> method:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><ne=
w id=3D"myWebAppContext" class=3D"org.eclipse.jetty.webapp.WebAppContext">
  <set name=3D"contextPath">/</set>
  <set name=3D"war">./webapps/fredapp</set>
  <set name=3D"defaultsDescriptor">/home/fred/jetty/mywebdefaults.xml</set>
  .
  .
</new></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Instead, you could redefine the DefaultServlet in your web.xml file, mak=
ing sure to set useFileMappedBuffer to false:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><we=
b-app ...=3D"">
 ...
 <servlet>
     <servlet-name>Default</servlet-name>
     <servlet-class>org.eclipse.jetty.servlet.DefaultServlet</servlet-class=
>
     <init-param>
       <param-name>useFileMappedBuffer</param-name>
       <param-value>false</param-value>
     </init-param>
     <load-on-startup>0</load-on-startup>
   </servlet>
 ...
 </web-app></code></pre>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_alternate_remedy">Alternate Remedy</h4>
<div class=3D"paragraph">
<p>You can force a <code>WebAppContext</code> to always copy a web app dire=
ctory on deployment.
The base directory of your web app (ie the root directory where your static=
 content exists) will be copied to the <a href=3D"file:///home/tian/Downloa=
ds/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciido=
c/index.html#ref-temporary-directories">temp directory</a>.
Configure this in an xml file like so:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><ne=
w id=3D"myWebAppContext" class=3D"org.eclipse.jetty.webapp.WebAppContext">
  <set name=3D"contextPath">/</set>
  <set name=3D"war">./webapps/fredapp</set>
  <set name=3D"copyWebDir">true</set>
  .
  .
</new></code></pre>
</div>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Note</div>
</td>
<td class=3D"content">
Be careful with this option when using an explicitly set<a href=3D"file:///=
home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation=
/src/main/asciidoc/index.html#ref-temp-directories">temp directory</a> name=
 - as the name of the temp directory will not unique across redeployments, =
copying the static content into the same directory name each time may not a=
void the locking problem.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"preventing-memory-leaks">Preventing Memory Leaks</h3>
<div class=3D"paragraph">
<p>If you have memory leaks, and you have thoroughly investigated tools lik=
e jconsole, yourkit, jprofiler, jvisualvm or any of the other profiling and=
 analysis tools, and you can eliminate your code as the source of the probl=
em, read the following sections about how to prevent memory leaks in your a=
pplication.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"preventing-webapp-classloader-pinning">Preventing WebApp Classloa=
der Pinning</h4>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Note</div>
</td>
<td class=3D"content">
This feature is available for Jetty 7.6.6 and later.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
<div class=3D"paragraph">
<p>Code that keeps references to a webapp classloader can cause memory leak=
s.
These leaks fall generally into two categories: static fields and daemon th=
reads.</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>A static field is initialized with the value of the classloader, which h=
appens to be a webapp classloader; as Jetty undeploys and redeploys the web=
app, the static reference lives on, meaning garbage collecting cannot occur=
 for the webapp classloader.</p>
</li>
<li>
<p>When Jetty starts as a daemon thread and is outside the lifecycle of the=
 webapp, threads have references to the context classloader that created th=
em, leading to a memory leak if that classloader belongs to a webapp.
For a good discussion of the issue see <a href=3D"http://cdivilly.wordpress=
.com/tag/sun-awt-appcontext/">Anatomy of a PermGen Memory Leak.</a></p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>We provide a number of <a href=3D"file:///home/tian/Downloads/b60/ebook/=
jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7BJDURL%7D=
//org/eclipse/jetty/util/preventers/package-summary.html">workaround classe=
s</a> that preemptively invoke the problematic code with the Jetty classloa=
der, thereby ensuring the webapp classloader is not pinned.
Be aware that since some of the problematic code creates threads, you shoul=
d be selective about which preventers you enable, and use only those that a=
re specific to your application.</p>
</div>
<div class=3D"sect4">
<h5 id=3D"preventers-table">Preventers</h5>
<div class=3D"paragraph">
<p>Jetty includes the following preventers.</p>
</div>
<table class=3D"tableblock frame-all grid-all spread">
<colgroup>
<col style=3D"width: 50%;">
<col style=3D"width: 50%;">
</colgroup>
<thead>
<tr>
<th class=3D"tableblock halign-left valign-top">Preventer Name</th>
<th class=3D"tableblock halign-left valign-top">Problem Addressed</th>
</tr>
</thead>
<tbody>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">App=
ContextLeakPreventer</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">The=
 call to <code>AppContext.getAppContext()</code> keeps a static reference t=
o the context classloader. The JRE can invoke AppContext in many different =
places.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">AWT=
LeakPreventer</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">The=
 <code>java.awt.Toolkit</code> class has a static field that is the default=
 toolkit.
Creating the default toolkit causes the creation of an <code>EventQueue</co=
de>, which has a classloader field initialized with the thread context clas=
s loader.
See <a href=3D"https://issues.jboss.org/browse/AS7-3733">JBoss bug AS7-3733=
.</a></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">DOM=
LeakPreventer</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">DOM=
 parsing can cause the webapp classloader to be pinned, due to the static f=
ield ` RuntimeException` of <code>com.sun.org.apache.xerces.internal.parser=
s.AbstractDOMParser.</code> <a href=3D"http://bugs.sun.com/bugdatabase/view=
_bug.do?bug_id=3D6916498">Oracle bug 6916498</a> specifically mentions that=
 a heap dump might not identify the GCRoot as the uncollected loader, makin=
g it difficult to identify the cause of the leak.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Dri=
verManagerLeakPreventer</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">The=
 number of threads dedicated to accepting incoming connections.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">GCT=
hreadLeakPreventer</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Cal=
ls to <code>sun.misc.GC.requestLatency</code> create a daemon thread that k=
eeps a reference to the context classloader.
A known caller of this method is the RMI impl. See <a href=3D"http://stacko=
verflow.com/questions/6626680/does-java-garbage-collection-log-entry-full-g=
c-system-mean-some-class-called">Stackoverflow: Does java garbage collectio=
n log entry <em>Full GC system</em> mean some class
called System.gc()?</a></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Jav=
a2DLeakPreventer</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>sun.java2d.Disposer</code> keeps a reference to the classloader.
See <a href=3D"https://issues.apache.org/bugzilla/show_bug.cgi?id=3D51687">=
ASF bug 51687.</a></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">LDA=
PLeakPreventer</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">If =
<code>com.sun.jndi.LdapPoolManager</code> class is loaded and the system pr=
operty `   com.sun.jndi.ldap.connect.pool.timeout` is set to a nonzero valu=
e, a daemon thread starts and keeps a reference to the context classloader.=
</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Log=
inConfigurationLeakPreventer</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">The=
 <code>javax.security.auth.login.Configuration</code> class keeps a static =
reference to the thread context classloader.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Sec=
urityProviderLeakPreventer</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Som=
e security providers, such as <code>sun.security.pkcs11.SunPKCS11</code> st=
art a deamon thread that traps the thread context classloader.</p></td>
</tr>
</tbody>
</table>
</div>
<div class=3D"sect4">
<h5 id=3D"configuring-preventers">Configuring Preventers</h5>
<div class=3D"paragraph">
<p>You can individually enable each preventer by adding an instance to a Se=
rver with the ` addBean(Object)` call. Here=E2=80=99s an example of how to =
do it in code with the <code>org.eclipse.jetty.util.preventers.AppContextLe=
akPreventer</code>:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">S=
erver server =3D new Server();
server.addBean(new AppContextLeakPreventer());</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>You can add the equivalent in code to the <code>$JETTY_HOME/etc/jetty.xm=
l</code> file or any jetty xml file that is configuring a Server instance.
Be aware that if you have more than one Server instance in your JVM, you sh=
ould configure these preventers on just <em>one</em> of them.
Here=E2=80=99s the example from code put into xml:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-xml" data-lang=3D"xml"><co=
nfigure id=3D"Server" class=3D"org.eclipse.jetty.server.Server">

   <call name=3D"addBean">
    <arg>
      <new class=3D"org.eclipse.jetty.util.preventers.AppContextLeakPrevent=
er">
    </new></arg>
   </call>

</configure></code></pre>
</div>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"jsp-bugs">JSP Bugs: Permgen Problems</h4>
<div class=3D"paragraph">
<p>The JSP engine in Jetty is Jasper.
This was originally developed under the Apache Tomcat project, but over tim=
e many different project have forked it.
All Jetty versions up to 6 used Apache-based Jasper exclusively, with Jetty=
 6 using Apache Jasper only for JSP 2.0.
With the advent of JSP 2.1, Jetty 6 switched to using Jasper from Sun=E2=80=
=99s <a href=3D"https://glassfish.java.net/">Glassfish</a> project, which i=
s now the reference implementation.</p>
</div>
<div class=3D"paragraph">
<p>All forks of Jasper suffer from a problem whereby using JSP tag files pu=
ts the permgen space under pressure.
This is because of the classloading architecture of the JSP implementation.
Each JSP file is effectively compiled and its class loaded in its own class=
loader to allow for hot replacement.
Each JSP that contains references to a tag file compiles the tag if necessa=
ry and then loads it using its own classloader.
If you have many JSPs that refer to the same tag file, the tag=E2=80=99s cl=
ass is loaded over and over again into permgen space, once for each JSP.
See <a href=3D"http://java.net/jira/browse/GLASSFISH-3963">Glassfish bug 39=
63</a> and <a href=3D"https://issues.apache.org/bugzilla/show_bug.cgi?id=3D=
43878">Apache bug 43878.</a>
The Apache Tomcat project has already closed this bug with status WON=E2=80=
=99T FIX, however the Glassfish folks still have the bug open and have sche=
duled it to be fixed.
When the fix becomes available, the Jetty project will pick it up and incor=
porate into our release program.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"jvm-bugs">JVM Bugs</h4>
<div class=3D"paragraph">
<p>This section describes garbage collection and direct ByteBuffer problems=
.</p>
</div>
<div class=3D"sect4">
<h5 id=3D"jvm-garbage-collection-problems">Garbage Collection Problems</h5>
<div class=3D"paragraph">
<p>One symptom of a cluster of JVM related memory issues is the OOM excepti=
on accompanied by a message such as <code>java.lang.OutOfMemoryError: reque=
sted xxxx bytes for xxx.
Out of swap space?</code></p>
</div>
<div class=3D"paragraph">
<p><a href=3D"http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=3D4697804"=
>Oracle bug 4697804</a> describes how this can happen in the scenario when =
the garbage collector needs to allocate a bit more space during its run and=
 tries to resize the heap, but fails because the machine is out of swap spa=
ce.
One suggested work around is to ensure that the JVM never tries to resize t=
he heap, by setting min heap size to max heap size:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-text" data-lang=3D"text">j=
ava -Xmx1024m -Xms1024m</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Another workaround is to ensure you have configured sufficient swap spac=
e on your device to accommodate all programs you are running concurrently.<=
/p>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"direct-byte-buffers">Direct ByteBuffers</h5>
<div class=3D"paragraph">
<p>Exhausting native memory is another issue related to JVM bugs.
The symptoms to look out for are the process size growing, but heap use rem=
aining relatively constant.
Both the JIT compiler and nio ByteBuffers can consume native memory.
<a href=3D"http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=3D6210541">Or=
acle bug 6210541</a> discusses a still-unsolved problem whereby the JVM its=
elf allocates a direct ByteBuffer in some circumstances while the system ne=
ver garbage collects, effectively eating native memory.
Guy Korland=E2=80=99s blog discusses this problem <a href=3D"http://www.jro=
ller.com/gkorland/entry/java_s_memory_isn_t">here</a> and <a href=3D"http:/=
/www.jroller.com/gkorland/entry/java_s_memory_managment_is">here.</a>
As the JIT compiler consumes native memory, the lack of available memory ma=
y manifest itself in the JIT as OutOfMemory exceptions such as <code>Except=
ion in thread "CompilerThread0" java.lang.OutOfMemoryError: requested xxx b=
ytes for ChunkPool::allocate. Out of swap
      space?</code></p>
</div>
<div class=3D"paragraph">
<p>By default, Jetty allocates and manages its own pool of direct ByteBuffe=
rs for io if you configure the nio SelectChannelConnector.
It also allocates MappedByteBuffers to memory-map static files via the Defa=
ultServlet settings.
However, you could be vulnerable to this JVM ByteBuffer allocation problem =
if you have disabled either of these options.
For example, if you=E2=80=99re on Windows, you may have disabled the use of=
 memory-mapped buffers for the static file cache on the DefaultServlet to a=
void the file-locking problem.</p>
</div>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"troubleshooting-slow-deployment">Troubleshooting Slow Deployment<=
/h3>
<div class=3D"paragraph">
<p>After upgrading to a version of Jetty that supports Servlet Spec 3.0 or =
above, enabling some new modules, or introducing some new jars to your weba=
pp, you notice that your deployment time is increased.
This could be due to scanning for classes caused by a ServletContainerIniti=
alizer.</p>
</div>
<div class=3D"paragraph">
<p>As documented in the section on <a href=3D"file:///home/tian/Downloads/b=
60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/in=
dex.html#using-annotations">Using Annotations</a>, even if your webapp has =
set <code>metadata-complete=3Dtrue</code> in web.xml, all jars within your =
webapp may still be scanned due to one or more ServletContainerInitializers=
 that have a <a href=3D"http://docs.oracle.com/javaee/6/api/javax/servlet/a=
nnotation/HandlesTypes.html">@HandlesTypes</a> annotation listing the names=
 of classes in which it is interested.</p>
</div>
<div class=3D"paragraph">
<p>There are 3 ways to speed up deployment time:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>limit which ServletContainerInitializers to include</p>
</li>
<li>
<p>limit which jars to scan</p>
</li>
<li>
<p>limit the scan to the first deployment only</p>
</li>
</ul>
</div>
<div class=3D"sect3">
<h4 id=3D"_remedies">Remedies</h4>
<div class=3D"sect4">
<h5 id=3D"_limit_which_servletcontainerinitializers_to_execute">Limit Which=
 ServletContainerInitializers to Execute</h5>
<div class=3D"paragraph">
<p>As documented in the section <a href=3D"file:///home/tian/Downloads/b60/=
ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index=
.html#excluding-scis">Excluding ServletContainerInitializers</a>, you can p=
rovide a context attribute that defines a pattern of ServletContainerInitia=
lizer (SCI) class names to ignore.
These SCIs will not be examined for <a href=3D"http://docs.oracle.com/javae=
e/6/api/javax/servlet/annotation/HandlesTypes.html">@HandlesTypes</a> and w=
ill not be executed.
This is useful if you have included a 3rd party jar that has a SCI on which=
 your code does not rely.</p>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_limit_which_jars_to_scan">Limit Which Jars to Scan</h5>
<div class=3D"paragraph">
<p>As documented in the section <a href=3D"file:///home/tian/Downloads/b60/=
ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index=
.html#jars-scanned-for-annotations">Jars Scanned for Annotations</a>, you c=
an explicitly define which jars to include in the scanning process.
This is helpful if you have a lot of jars in your webapp, and you know that=
 they do not contain any classes referenced by an @HandlesTypes annotation =
on a ServletContainerInitializer that will be executed.</p>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_limit_scanning_to_first_deployment_only_quickstart">Limit Scanni=
ng to First Deployment Only (Quickstart)</h5>
<div class=3D"paragraph">
<p>The <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty=
-9.4.x/jetty-documentation/src/main/asciidoc/index.html#quickstart-webapp">=
quickstart mechanism</a> will do a normal deployment - obeying any limits o=
n SCIs and jars to scan as documented here - the first time the webapp is d=
eployed only.
Subsequent deployments will re-use the information discovered during the fi=
rst deployment.
This is useful if you cannot limit the scan significantly by using any of t=
he mechanisms described here, but you don=E2=80=99t want to incur the cost =
of scanning on every redeployment.
The <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.=
4.x/jetty-documentation/src/main/asciidoc/index.html#quickstart-webapp">qui=
ckstart mechanism</a> and how to use it is described <a href=3D"file:///hom=
e/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/sr=
c/main/asciidoc/index.html#quickstart-webapp">here</a>.</p>
</div>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"security-reports">Jetty Security Reports</h3>
<div class=3D"paragraph">
<p>The following sections provide information about Jetty security issues.<=
/p>
</div>
<div class=3D"paragraph">
<p>If you would like to report a security issue please follow these <a href=
=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-d=
ocumentation/src/main/asciidoc/index.html#security-reporting">instructions<=
/a>.</p>
</div>
<table class=3D"tableblock frame-all grid-all" style=3D"width: 99%;">
<caption class=3D"title">Table 23. Resolved Issues</caption>
<colgroup>
<col style=3D"width: 11%;">
<col style=3D"width: 19%;">
<col style=3D"width: 14%;">
<col style=3D"width: 9%;">
<col style=3D"width: 14%;">
<col style=3D"width: 14%;">
<col style=3D"width: 19%;">
</colgroup>
<thead>
<tr>
<th class=3D"tableblock halign-left valign-top">yyyy/mm/dd</th>
<th class=3D"tableblock halign-left valign-top">ID</th>
<th class=3D"tableblock halign-left valign-top">Exploitable</th>
<th class=3D"tableblock halign-left valign-top">Severity</th>
<th class=3D"tableblock halign-left valign-top">Affects</th>
<th class=3D"tableblock halign-left valign-top">Fixed Version</th>
<th class=3D"tableblock halign-left valign-top">Comment</th>
</tr>
</thead>
<tbody>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">201=
6/05/31</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">CVE=
-2016-4800</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">hig=
h</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">hig=
h</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">&gt=
;=3D 9.3.0, &lt; =3D 9.3.8</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">9.3=
.9</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><a =
href=3D"http://www.ocert.org/advisories/ocert-2016-001.html">Alias vulnerab=
ility allowing access to protected resources within a webapp on Windows.</a=
></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">201=
5/02/24</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">CVE=
-2015-2080</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">hig=
h</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">hig=
h</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">&gt=
;=3D9.2.3 &lt;9.2.9</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">9.2=
.9</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><a =
href=3D"http://blog.gdssecurity.com/labs/2015/2/25/jetleak-vulnerability-re=
mote-leakage-of-shared-buffers-in-je.html">JetLeak exposure of past buffers=
 during HttpParser error</a></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">201=
3/11/27</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><a =
href=3D"http://en.securitylab.ru/lab/PT-2013-65">PT-2013-65</a></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">med=
ium</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">hig=
h</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">&gt=
;=3D9.0.0 &lt;9.0.5</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">9.0=
.6
<a href=3D"https://bugs.eclipse.org/bugs/show_bug.cgi?id=3D418014">418014</=
a></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Ali=
as checking disabled by NTFS errors on Windows.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">201=
3/07/24</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><a =
href=3D"https://bugs.eclipse.org/bugs/show_bug.cgi?id=3D413684">413684</a><=
/p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">low=
</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">med=
ium</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">&gt=
;=3D7.6.9 &lt;9.0.5</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">7.6=
.13,8.1.13,9.0.5
<a href=3D"https://bugs.eclipse.org/bugs/show_bug.cgi?id=3D413684">413684</=
a></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Con=
straints bypassed if Unix symlink alias checker used on Windows.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">201=
1/12/29</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><a =
href=3D"http://www.ocert.org/advisories/ocert-2011-003.html">CERT2011-003</=
a> <a href=3D"http://web.nvd.nist.gov/view/vuln/detail?vulnId=3DCVE-2011-44=
61">CVE-2011-4461</a></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">hig=
h</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">med=
ium</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">All=
 versions</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">7.6=
.0.RCO
<a href=3D"https://bugs.eclipse.org/bugs/show_bug.cgi?id=3D367638">Jetty-36=
7638</a></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Add=
ed ContextHandler.setMaxFormKeys (intkeys) to limit the number of parameter=
s (default 1000).</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">200=
9/11/05</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><a =
href=3D"http://www.kb.cert.org/vuls/id/120541">CERT2011-003</a> <a href=3D"=
http://cve.mitre.org/cgi-bin/cvename.cgi?name=3DCVE-2009-3555">CERT2011-003=
</a></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">med=
ium</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">hig=
h</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">JVM=
&lt;1.6u19</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">jet=
ty-7.01.v20091125, jetty-6.1.22</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Wor=
k
around by turning off SSL renegotiation in Jetty. If using JVM &gt; 1.6u19
setAllowRenegotiate(true) may be called on connectors.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">200=
9/06/18</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><a =
href=3D"http://jira.codehaus.org/browse/JETTY-1042">Jetty-1042</a></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">low=
</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">hig=
h</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">&lt=
; =3D 6.1.18, &lt; =3D 7.0.0.M4</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">6.1=
.19, 7.0.0.Rc0</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Coo=
kie leak between
requests sharing a connection.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">200=
9/04/30</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><a =
href=3D"http://www.kb.cert.org/vuls/id/402580">CERT402580</a></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">med=
ium</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">hig=
h</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">&lt=
; =3D 6.1.16, &lt; =3D 7.0.0.M2</p></td>
<td class=3D"tableblock halign-left valign-top"><div><div class=3D"paragrap=
h">
<p>5.1.15, 6.1.18, 7.0.0.M2</p>
</div>
<div class=3D"paragraph">
<p><a href=3D"http://jira.codehaus.org/browse/JETTY-1004">Jetty-1004</a></p=
>
</div></div></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Vie=
w arbitrary disk content in some specific configurations.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">200=
7/12/22</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><a =
href=3D"http://www.kb.cert.org/vuls/id/553235">CERT553235</a> <a href=3D"ht=
tp://web.nvd.nist.gov/view/vuln/detail?vulnId=3DCVE-2007-6672">CVE-2007-667=
2</a></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">hig=
h</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">med=
ium</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">6.1=
.rrc0-6.1.6</p></td>
<td class=3D"tableblock halign-left valign-top"><div><div class=3D"paragrap=
h">
<p>6.1.7</p>
</div>
<div class=3D"paragraph">
<p><a href=3D"http://jira.codehaus.org/browse/JETTY-386">CERT553235</a></p>
</div></div></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Sta=
tic content visible in WEB-INF and past security constraints.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">200=
7/11/05</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><a =
href=3D"http://www.kb.cert.org/vuls/id/438616">CERT438616</a> <a href=3D"ht=
tp://cve.mitre.org/cgi-bin/cvename.cgi?name=3DCVE-2007-5614">CVE-2007-5614<=
/a></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">low=
</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">low=
</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">&lt=
;6.1.6</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">6.1=
.6rc1 (patch in CVS for jetty5)</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Sin=
gle quote in
cookie name.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">200=
7/11/05</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><a =
href=3D"http://www.kb.cert.org/vuls/id/237888">CERT237888&gt;</a> <a href=
=3D"http://cve.mitre.org/cgi-bin/cvename.cgi?name=3DCVE-2007-5613">CVE-2007=
-5613</a></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">low=
</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">low=
</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">&lt=
;6.1.6</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">6.1=
.6rc0 (patch in CVS for jetty5)</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">XSS=
 in demo dup
servlet.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">200=
7/11/03</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><a =
href=3D"http://www.kb.cert.org/vuls/id/212984">CERT212984
&gt;</a> <a href=3D"http://cve.mitre.org/cgi-bin/cvename.cgi?name=3DCVE-200=
7-5615">CVE-2007-5615</a></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">med=
ium</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">med=
ium</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">&lt=
;6.1.6</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">6.1=
.6rc0 (patch in CVS for jetty5)</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">CRL=
F
Response splitting.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">200=
6/11/22</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><a =
href=3D"http://cve.mitre.org/cgi-bin/cvename.cgi?name=3DCVE-2006-6969">CVE-=
2006-6969</a></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">low=
</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">hig=
h</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">&lt=
;6.1.0, &lt;6.0.2, &lt;5.1.12, &lt;4.2.27</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">6.1=
.0pre3, 6.0.2, 5.1.12,
4.2.27</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Ses=
sion ID predictability.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">200=
6/06/01</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><a =
href=3D"http://cve.mitre.org/cgi-bin/cvename.cgi?name=3DCVE-2006-2759">CVE-=
2006-2759</a></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">med=
ium</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">med=
ium</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">&lt=
;6.0.*, &lt;6.0.0Beta17</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">6.0=
.0Beta17</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">JSP=
 source
visibility.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">200=
6/01/05</p></td>
<td class=3D"tableblock halign-left valign-top"></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">med=
ium</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">med=
ium</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">&lt=
;5.1.10</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">5.1=
.10</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Fix=
ed //security
constraint bypass on Windows.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">200=
5/11/18</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><a =
href=3D"http://cve.mitre.org/cgi-bin/cvename.cgi?name=3DCVE-2006-2758">CVE-=
2006-2758</a></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">med=
ium</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">med=
ium</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">&lt=
;5.1.6</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">5.1=
.6, 6.0.0Beta4</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">JSP=
 source visibility.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">200=
4/02/04</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">JSS=
E 1.0.3_01</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">med=
ium</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">med=
ium</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">&lt=
;4.2.7</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">4.2=
.7</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Upg=
raded JSSE
to obtain downstream security fix.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">200=
2/09/22</p></td>
<td class=3D"tableblock halign-left valign-top"></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">hig=
h</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">hig=
h</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">&lt=
;4.1.0</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">4.1=
.0</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Fix=
ed CGI servlet remove
exploit.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">200=
2/03/12</p></td>
<td class=3D"tableblock halign-left valign-top"></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">med=
ium</p></td>
<td class=3D"tableblock halign-left valign-top"></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">&lt=
;3.1.7</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">4.0=
.RC2, 3.1.7</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Fix=
ed // security
constraint bypass.</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">200=
1/10/21</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">med=
ium</p></td>
<td class=3D"tableblock halign-left valign-top"></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">hig=
h</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">&lt=
;3.1.3</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">3.1=
.3</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Fix=
ed trailing null security
constraint bypass.</p></td>
</tr>
</tbody>
</table>
</div>
<div class=3D"sect2">
<h3 id=3D"watchservice">Java WatchService</h3>
<div class=3D"paragraph">
<p>The JVM <a href=3D"https://docs.oracle.com/javase/7/docs/api/java/nio/fi=
le/WatchService.html"><code>WatchService</code></a> is in place to monitor =
objects like a directory for changes, and then update it=E2=80=99s contents=
 and notify the application of those changes.
This service is useful for features like <a href=3D"file:///home/tian/Downl=
oads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/ascii=
doc/index.html#hot-deployment">Hot Deployment</a>.
When a change is detected, the <code>WatchService</code> will enter a "quie=
t time" where it is waiting for the change (or changes) to be made and comp=
leted before notifying the application of the change.</p>
</div>
<div class=3D"paragraph">
<p>Example:
A new war file is copied into <code>/webapps</code>.
The <code>WatchService</code> can (depending on implementation) see that th=
e file was created (which is registered as an event!, and that its growing =
in size (another event).
With the quiet time, each of the events are gated behind that timeout befor=
e the aggregated events are sent to the application.</p>
</div>
<div class=3D"paragraph">
<p>While some operating systems such as Windows have a native value for thi=
s quiet time, not all do, notably OSX.
At the core this is a limitation of the JVM=E2=80=99s FileSystem-specific i=
mplementation, but one that has been raised to the <a href=3D"https://bugs.=
openjdk.java.net/browse/JDK-7133447">attention of the project.</a></p>
</div>
<div class=3D"sect3">
<h4 id=3D"_remedy_2">Remedy</h4>
<div class=3D"paragraph">
<p>To help offset the delay in systems like OSX, Jetty defaults the value f=
or non-native implementations to a <a href=3D"file:///home/tian/Downloads/b=
60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/%7=
BGITBROWSEURL%7D/jetty-util/src/main/java/org/eclipse/jetty/util/PathWatche=
r.java#L1431">time of 5000ms.</a>
Using values lower than 5000ms is not recommended and has shown to frequent=
ly fail.</p>
</div>
</div>
</div>
</div>
</div>
<div class=3D"sect1">
<h2 id=3D"advanced-debugging">Debugging</h2>
<div class=3D"sectionbody">
<div class=3D"sect2">
<h3 id=3D"_options">Options</h3>
<div class=3D"paragraph">
<p>Given how flexible Jetty is in how it can be configured and deployed int=
o development and production, there exists a wealth of different options fo=
r debugging your application in you favorite environment.
In this section we will gather up some of these different options available=
 and explain how you can use them.
If you would like to contribute to this section simply fork the repository =
and contribute the information, or open a github issue with the information=
 and we=E2=80=99ll bring it over.</p>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"enable-remote-debugging">Enable remote debugging</h3>
<div class=3D"sect3">
<h4 id=3D"remote-debugging">Remote Debugging</h4>
<div class=3D"paragraph">
<p>If you have a web application deployed into Jetty you can interact with =
it remotely from a debugging perspective easily.
The basics are that you must start up the remote JVM with additional parame=
ters and then start up a remote debugging session in Eclipse for the webapp=
 in question.
This is easily accomplished.</p>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Note</div>
</td>
<td class=3D"content">
This example assumes you are deploying your web application into the jetty-=
distribution.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
<div class=3D"sect4">
<h5 id=3D"_starting_jetty">Starting Jetty</h5>
<div class=3D"paragraph">
<p>Assuming you have your webapp deployed into jetty, there are two differe=
nt ways to approach this:</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">Via command line</dt>
<dd>
<p>Add the required parameters on the commandline like so.</p>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">$ java -Xdebug -agentlib:jdwp=3Dtransport=3Ddt_socket,address=3D9999,ser=
ver=3Dy,suspend=3Dn -jar start.jar</code></pre>
</div>
</div>
</dd>
<dt class=3D"hdlist1">Via <code>start.ini</code></dt>
<dd>
<p>This approach is best used if you want to debug a particular jetty-distr=
ibution and not have to remember the commandline incantations.</p>
<div class=3D"olist arabic">
<ol class=3D"arabic">
<li>
<p>Edit the <code>start.ini</code> and uncomment the --exec line, this is r=
equired if you are adding jvm options to the start.ini file as jetty-start =
must generate the classpath required and fork a new jvm.</p>
</li>
<li>
<p>Add the parameters mentioned above in the Command Line option so your st=
art.ini looks like this:</p>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-plain" data-lang=3D"plain"=
>#=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D
# Configure JVM arguments.
# If JVM args are include in an ini file then --exec is needed
# to start a new JVM from start.jar with the extra args.
# If you wish to avoid an extra JVM running, place JVM args
# on the normal command line and do not use --exec
#-----------------------------------------------------------
--exec
-Xdebug
-agentlib:jdwp=3Dtransport=3Ddt_socket,address=3D9999,server=3Dy,suspend=3D=
n
# -Xmx2000m
# -Xmn512m
# -XX:+UseConcMarkSweepGC
# -XX:ParallelCMSThreads=3D2
# -XX:+CMSClassUnloadingEnabled
# -XX:+UseCMSCompactAtFullCollection
# -XX:CMSInitiatingOccupancyFraction=3D80
# -verbose:gc
# -XX:+PrintGCDateStamps
# -XX:+PrintGCTimeStamps
# -XX:+PrintGCDetails
# -XX:+PrintTenuringDistribution
# -XX:+PrintCommandLineFlags
# -XX:+DisableExplicitGC</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Uncomment any other jvm environmental options you so desire for your deb=
ugging session.</p>
</div>
</li>
<li>
<p>Regardless of the option chosen, you should see the following lines at t=
he top of your jetty-distribution startup.</p>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-plain" data-lang=3D"plain"=
>Listening for transport dt_socket at address: 9999</code></pre>
</div>
</div>
</li>
</ol>
</div>
</dd>
</dl>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_linking_with_your_ide">Linking with your IDE</h5>
<div class=3D"paragraph">
<p>Refer to the documentation for your ide:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p><a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/index.html#debugging-with-intellij=
">Debugging With IntelliJ</a></p>
</li>
<li>
<p><a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4=
.x/jetty-documentation/src/main/asciidoc/index.html#debugging-with-eclipse"=
>Debugging With Eclipse</a></p>
</li>
</ul>
</div>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"debugging-with-intellij">Debugging With IntelliJ</h3>
<div class=3D"paragraph">
<p>There are a number of options available to debug your application in Int=
elliJ.</p>
</div>
<div class=3D"paragraph">
<p>If not done already prepare your application for remote debugging as des=
cribed here: <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project=
-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#enable-remote=
-debugging">Enable remote debugging</a></p>
</div>
<div class=3D"sect3">
<h4 id=3D"_linking_with_intellij">Linking with IntelliJ</h4>
<div class=3D"paragraph">
<p>Next we need to link the IntelliJ project with the deployed webapp.</p>
</div>
<div class=3D"olist arabic">
<ol class=3D"arabic">
<li>
<p>Within IntelliJ, open the project containing the webapp deployed into je=
tty that you want to debug. Select<strong>Run =E2=86=92 Edit Configurations=
</strong>.
Add a new configuration by clicking the "+" icon. Choose <strong>Remote</st=
rong>.
Make sure the port you choose is the same as the one you added in <a href=
=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-d=
ocumentation/src/main/asciidoc/index.html#enable-remote-debugging">Enable r=
emote debugging</a>.</p>
<div class=3D"paragraph">
<p><span class=3D"image"><img src=3D"file:///home/tian/Downloads/b60/ebook/=
jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/images/inte=
llij_new_remote_config.png" alt=3D"image" width=3D"800"></span></p>
</div>
</li>
<li>
<p>Next in your webapp you can set a breakpoint within a servlet which when=
 it is tripped will halt the remote jvm=E2=80=99s processing thread to awai=
t for debugging commands from your IntelliJ instance.
To set a breakpoint, simply open the servlet or any other class you want to=
 debug and click left to the line you want to set the breakpoint at (where =
the red dot is on the next screenshot).
The red dot and red background on the line mark the breakpoint.</p>
<div class=3D"paragraph">
<p><span class=3D"image"><img src=3D"file:///home/tian/Downloads/b60/ebook/=
jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/images/inte=
llij_set_breakpoint.png" alt=3D"image" width=3D"800"></span></p>
</div>
</li>
<li>
<p>Accessing that servlet within your browser, pointed at your remote debug=
 configured jetty-distribution, should transition your IntelliJ instance to=
 the standard debugger view.</p>
<div class=3D"paragraph">
<p><span class=3D"image"><img src=3D"file:///home/tian/Downloads/b60/ebook/=
jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/images/inte=
llij_debug_view.png" alt=3D"image" width=3D"800"></span></p>
</div>
</li>
</ol>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"intellij-within-intellij">Within IntelliJ</h4>
<div class=3D"paragraph">
<p>Since Jetty can be incredibly simple to embed, many people choose to cre=
ate a small <code>main</code> method which they can launch directly within =
IntelliJ in order to more easily debug their entire application.
The best place to get started on this approach is to look through <a href=
=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-d=
ocumentation/src/main/asciidoc/index.html#embedding-jetty">Embedding Jetty<=
/a> and the <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-=
jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#embedded-examp=
les">Embedded Examples</a> sections.</p>
</div>
<div class=3D"paragraph">
<p>Once you have a main method defined in order to launch your application,=
 open the source file and right-click the main method.
Select <strong>Debug</strong> or simply hit CTRL+SHIFT+D.
In your <strong>Console</strong> tab within IntelliJ you should see your ap=
plication startup and once it has completed startup you should be able to c=
onfigure breakpoints and hit the Jetty instance as normal via your web brow=
ser.
The same thing works for unit tests.
Instead of the main method run debug on the test method you want to debug.<=
/p>
</div>
<div class=3D"paragraph">
<p><span class=3D"image"><img src=3D"file:///home/tian/Downloads/b60/ebook/=
jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/images/inte=
llij_select_debug.png" alt=3D"image" width=3D"800"></span></p>
</div>
<div class=3D"paragraph">
<p>Debugging in IntelliJ is extremely powerful.
For example it=E2=80=99s possible to have conditional breakpoints that only=
 trigger a break if the configured conditions are met.
Have a look at the various tutorials in the internet or the <a href=3D"http=
://www.jetbrains.com/idea/webhelp/getting-help.html">IntelliJ documentation=
</a> for further details.</p>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock tip">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Tip</div>
</td>
<td class=3D"content">
You can easily configure logging through a <code>jetty-logging.properties</=
code> file.
If this file is on your classpath then Jetty will use it for configuring lo=
gging, we use this approach extensively throughout Jetty development and it=
 makes life ever so much easier.
You can see this in action in the <a href=3D"file:///home/tian/Downloads/b6=
0/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/ind=
ex.html#configuring-jetty-stderrlog">The jetty-logging.properties file</a> =
section.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"debugging-with-eclipse">Debugging With Eclipse</h3>
<div class=3D"paragraph">
<p>There are a number of options available to debug your application in Ecl=
ipse.</p>
</div>
<div class=3D"paragraph">
<p>If not done already prepare your application for remote debugging as des=
cribed here: <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project=
-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#enable-remote=
-debugging">Enable remote debugging</a></p>
</div>
<div class=3D"sect3">
<h4 id=3D"_linking_with_eclipse">Linking with Eclipse</h4>
<div class=3D"paragraph">
<p>Next we need to link the Eclipse project with the deployed webapp.</p>
</div>
<div class=3D"olist arabic">
<ol class=3D"arabic">
<li>
<p>Within Eclipse, right-click on the project containing the webapp deploye=
d into jetty and select <strong>Debug =E2=86=92 Debug Configurations</stron=
g> and create a new configuration of <strong>Remote Java Application</stron=
g>.
Make sure the port you choose is the same as the one you added in <a href=
=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-d=
ocumentation/src/main/asciidoc/index.html#enable-remote-debugging">Enable r=
emote debugging</a>.</p>
<div class=3D"paragraph">
<p><span class=3D"image"><img src=3D"file:///home/tian/Downloads/b60/ebook/=
jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/images/debu=
g-eclipse-1.png" alt=3D"image" width=3D"576"></span></p>
</div>
</li>
<li>
<p>Next in your webapp you can set a breakpoint within a servlet which when=
 it is tripped will halt the remote jvm=E2=80=99s processing thread to awai=
t for debugging commands from your Eclipse instance.</p>
<div class=3D"paragraph">
<p><span class=3D"image"><img src=3D"file:///home/tian/Downloads/b60/ebook/=
jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/images/debu=
g-eclipse-2.png" alt=3D"image" width=3D"576"></span></p>
</div>
</li>
<li>
<p>Accessing that servlet within your browser, pointed at your remote debug=
 configurated jetty-distribution, should transition your Eclipse instance t=
o the standard Debug view.</p>
<div class=3D"paragraph">
<p><span class=3D"image"><img src=3D"file:///home/tian/Downloads/b60/ebook/=
jetty.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/images/debu=
g-eclipse-3.png" alt=3D"image" width=3D"576"></span></p>
</div>
</li>
</ol>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"eclipse-within-eclipse">Within Eclipse</h4>
<div class=3D"paragraph">
<p>Since Jetty can be incredibly simple to embed, many people choose to cre=
ate a small <code>main</code> method which they can launch directly within =
Eclipse in order to more easily debug their entire application.
The best place to get started on this approach is to look through <a href=
=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-d=
ocumentation/src/main/asciidoc/index.html#embedding-jetty">Embedding Jetty<=
/a> and the <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-=
jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#embedded-examp=
les">Embedded Examples</a> sections.</p>
</div>
<div class=3D"paragraph">
<p>Once you have a main method defined in order to launch your application,=
 right-click on the source file and select<strong>Debug As =E2=86=92 Java A=
pplication</strong>.
In your <strong>Console</strong> tab within Eclipse you should see your app=
lication startup and once it has completed startup you should be able to co=
nfigure breakpoints and hit the Jetty instance as normal via your web brows=
er.</p>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock tip">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Tip</div>
</td>
<td class=3D"content">
You can easily configure logging through a <code>jetty-logging.properties</=
code>
file. If this file is on your classpath then Jetty will use it for
configuring logging, we use this approach extensively throughout Jetty
development and it makes life ever so much easier. You can see this in
action in the <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.projec=
t-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#configuring-=
jetty-stderrlog">The jetty-logging.properties file</a> section.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
</div>
</div>
</div>
</div>
<div class=3D"sect1">
<h2 id=3D"advanced-contributing">Contributing to Jetty</h2>
<div class=3D"sectionbody">
<div class=3D"paragraph">
<p>There are many ways to contribute to Jetty, from hardened developers loo=
king to sharpen their skills to neophytes interested in working with an ope=
n source project for the first time.
Here we show ways to interact with the Jetty community, give feedback to th=
e developers and contribute patches to both core Jetty code and even this d=
ocument.</p>
</div>
<div class=3D"sect2">
<h3 id=3D"community">Community</h3>
<div class=3D"paragraph">
<p>Developers and users alike are welcome to engage the Jetty community.
We all have day jobs here so don=E2=80=99t just ask questions on IRC and fr=
ustrated if no one answers right away.
Stick around to hear an answer, one is likely coming at some point!</p>
</div>
<div class=3D"sect3">
<h4 id=3D"community-mailing-lists">Mailing Lists</h4>
<div class=3D"paragraph">
<p>We have a number of options for people that wish to subscribe to our mai=
ling lists.</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>Jetty Developers List</p>
<div class=3D"ulist">
<ul>
<li>
<p>Join - <a href=3D"https://dev.eclipse.org/mailman/listinfo/jetty-dev" cl=
ass=3D"bare">https://dev.eclipse.org/mailman/listinfo/jetty-dev</a></p>
</li>
<li>
<p>Archives - <a href=3D"http://dev.eclipse.org/mhonarc/lists/jetty-dev/" c=
lass=3D"bare">http://dev.eclipse.org/mhonarc/lists/jetty-dev/</a></p>
</li>
</ul>
</div>
</li>
<li>
<p>Jetty Users List</p>
<div class=3D"ulist">
<ul>
<li>
<p>Join - <a href=3D"https://dev.eclipse.org/mailman/listinfo/jetty-users" =
class=3D"bare">https://dev.eclipse.org/mailman/listinfo/jetty-users</a></p>
</li>
<li>
<p>Archives - <a href=3D"http://dev.eclipse.org/mhonarc/lists/jetty-users/"=
 class=3D"bare">http://dev.eclipse.org/mhonarc/lists/jetty-users/</a></p>
</li>
</ul>
</div>
</li>
<li>
<p>Jetty Announcements List</p>
<div class=3D"ulist">
<ul>
<li>
<p>Join - <a href=3D"https://dev.eclipse.org/mailman/listinfo/jetty-announc=
e" class=3D"bare">https://dev.eclipse.org/mailman/listinfo/jetty-announce</=
a></p>
</li>
<li>
<p>Archives - <a href=3D"http://dev.eclipse.org/mhonarc/lists/jetty-announc=
e/" class=3D"bare">http://dev.eclipse.org/mhonarc/lists/jetty-announce/</a>=
</p>
</li>
</ul>
</div>
</li>
<li>
<p>Jetty Commit List</p>
<div class=3D"ulist">
<ul>
<li>
<p>Join - <a href=3D"https://dev.eclipse.org/mailman/listinfo/jetty-commit"=
 class=3D"bare">https://dev.eclipse.org/mailman/listinfo/jetty-commit</a></=
p>
</li>
<li>
<p>Archives - <a href=3D"http://dev.eclipse.org/mhonarc/lists/jetty-commit/=
" class=3D"bare">http://dev.eclipse.org/mhonarc/lists/jetty-commit/</a></p>
</li>
</ul>
</div>
</li>
</ul>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"community-irc">Internet Relay Chat - IRC</h4>
<div class=3D"paragraph">
<p>Much of our conversations about Jetty occur on IRC in one location or an=
other.
Users are always welcome to come join our IRC channels and talk with us, ot=
her users, or just lurk.</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">irc.freenode.org - #jetty</dt>
<dd>
<p>Our primary location, we recommend that if your looking to find folks on=
 IRC you try here.
We also have commit notifications coming to this channel on the bottom and =
top of the hour.</p>
</dd>
<dt class=3D"hdlist1">irc.codehaus.org - #jetty</dt>
<dd>
<p>Our prior location before the move to the eclipse foundation.
We are idle on here.</p>
</dd>
</dl>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"contributing-documentation">Documentation</h3>
<div class=3D"paragraph">
<p>This document is produced using a combination of maven, git, and asciido=
c.
We welcome anyone and everyone to contribute to the content of this book.
Below is the information on how to obtain the source of this book and to bu=
ild it as well as information on how to contribute back to it.</p>
</div>
<div class=3D"paragraph">
<p>Note: All contributions to this documentation are under the EPLv1 and th=
e copyright is assigned to Mort Bay.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"_tools">Tools</h4>
<div class=3D"paragraph">
<p>You will need:</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">git</dt>
<dd>
<p>This documentation is part of the Jetty project so all contributions mus=
t be through the normal Jetty contribution process.</p>
<div class=3D"paragraph">
<p>You can go one of two ways for using git, if you are familiar with SCM=
=E2=80=99s and the command line interface feel free to install and use git =
from there.
Otherwise we would recommend you use the github client itself as it will he=
lp with some of the workflow involved with working with git.
All contributions much be signed and can be pulled into Jetty through the n=
ormal pull request process.</p>
</div>
</dd>
<dt class=3D"hdlist1">maven 3</dt>
<dd>
<p>We build the documentation with maven 3 which can be found at <a href=3D=
"http://maven.apache.org/">Apache Maven</a>.</p>
</dd>
</dl>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_render_chain">Render Chain</h4>
<div class=3D"paragraph">
<p>The Jetty documentation is all written in asciidoc which is used as the =
origin format.
The maven build uses the asciidoctor-maven-plugin to process all of the .ad=
oc files into a single docbook file which is then used to produce the final=
 output.
We use this intermediary step in order to primarily produce chunked html wh=
ich we then deploy to the Eclipse Jetty website.
However we can also use this docbook output to produce pdf files, epub book=
s or even Eclipse Help files should we so desire.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_getting_started_cli">Getting Started (cli)</h4>
<div class=3D"paragraph">
<p>First you need to obtain the source of the documentation project.</p>
</div>
<div class=3D"paragraph">
<p>Clone the repository:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">$ git clone https://github.com/eclipse/jetty.project.git</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>You will now have a local directory with all of jetty, including the jet=
ty-documentation.
Now we move on to building it.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">$ cd jetty.project/jetty-documentation
$ mvn install</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>While maven is running you may see a lot of files being downloaded.
If you are not familiar with maven, then what you are seeing is maven setti=
ng up the execution environment for generating the documentation.
This build will first produce docbook xml and then through the docbkx-maven=
-plugin generate the chunked html output.
The downloads are all of the java dependencies that are required to make th=
is build work.
After a while the downloading will stop and you should see the execution of=
 the asciidoctor-maven-plugin followed by the docbkx-maven-plugin.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">[INFO] --- asciidoctor-maven-plugin:1.5.3:process-asciidoc (output-html)=
 @ jetty-documentation ---
[INFO] Rendered /Users/jesse/src/projects/jetty/jetty-docs/src/main/asciido=
c/index.adoc
[INFO]

[INFO] Processing input file: index.xml
[INFO] Applying customization parameters
[INFO] Chunking output.
[INFO] See /Users/jesse/src/projects/jetty/jetty-docs/target/docbkx/html/in=
dex for generated file(s)</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The build is finished once you see a message akin to this:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">[INFO] -----------------------------------------------------------------=
-------
[INFO] BUILD SUCCESS
[INFO] --------------------------------------------------------------------=
----
[INFO] Total time: 7.014s
[INFO] Finished at: Tue Oct 25 14:15:37 CDT 2011
[INFO] Final Memory: 14M/229M
[INFO] --------------------------------------------------------------------=
----</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>You may now open your web browser and browse to the first page of the ht=
ml output to see what you have produced!
Generally you can do this with File =E2=86=92 Open File =E2=86=92 which wil=
l open a file system browsing screen, navigate to your jetty-documentation =
directory and then further into target/docbkx/html/index/index.html which i=
s the first page of the produced documentation.</p>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock tip">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Tip</div>
</td>
<td class=3D"content">
If the build is broken, feel free to notify us.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_making_changes">Making Changes</h4>
<div class=3D"paragraph">
<p>Now that you have built the documentation, you want to edit it and make =
some changes.
We=E2=80=99ll now have to take a bit of as step back and look at how git an=
d github works.
In the above example you have cloned directly from our canonical documentat=
ion repository.
Obviously we can not allow anyone immediate access to this repository so yo=
u must make a fork of it for your own and then issue back pull requests to =
build up documentation karma.
In English that means that you would go to the url of the documentation in =
github:</p>
</div>
<div class=3D"literalblock">
<div class=3D"content">
<pre>https://github.com/eclipse/jetty.project</pre>
</div>
</div>
<div class=3D"paragraph">
<p>When you are on this page you will see a little button called <em>Fork</=
em> which you can click and you will be taken back to your main page on git=
hub where you have a new repository.
When you checkout this repository you are free to commit to your heart=E2=
=80=99s delight all the changes you so direly wish to see in the Jetty docu=
mentation.
You can clone it to your local machine and build it the same way as above.
So let=E2=80=99s start small with a little example.
Find some paragraph in the documentation that you think needs changed. Loca=
te that in the local checkout and make the change.
Now follow the process to push that change back into Jetty proper.
Do make sure the change works and the build isn=E2=80=99t broken though so =
make sure you run maven and check the output.
Then commit the change.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">$ git commit -s -m "Tweaked the introduction to fix a horrid misspelled =
word." src/main/asciidoc/quickstart/introduction/topic.xml</code></pre>
</div>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Note</div>
</td>
<td class=3D"content">
In order for us to accept your commit into the Jetty repository you must ha=
ve an Eclipse CLA on file and sign your commit.
Please check out the <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty=
.project-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#contr=
ibuting-cla">patches</a> section for more information.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
<div class=3D"paragraph">
<p>This will commit the change in your local repository.
You can then push the change up to your repository on github.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">$ git push</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Now you=E2=80=99ll see some output showing that your change has been pro=
pagated to your repository on github.
In fact if you navigate to that repository at the top of the files list you=
 should see your comment there.
Success, your change is now positioned for notifying us about it!
If you click on the commit message itself you=E2=80=99ll be taken to a scre=
en that shows what files were changed in that commit. In the upper right co=
rner is a button for <em>Pull Request</em>.
When you select this and follow the workflow we will then be notified of yo=
ur contribution and will be able to apply it to our git repository upon rev=
iew.</p>
</div>
<div class=3D"paragraph">
<p>Thats it! You have successfully contributed to the documentation efforts=
 of the Jetty project.
After enough of these sorts of contributions and building up good community=
 karma, you may be asked to join us as a committer on the documentation.</p=
>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_conventions">Conventions</h4>
<div class=3D"paragraph">
<p>Below is list of conventions that should be followed when developing doc=
umentation within this framework.
These are not set in stone and should be updated as we learn more.</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">ventilated prose</dt>
<dd>
<p>Each sentence should be on its own line with a hard return at the end of=
 the line.
Asciidoc rendering does not treat this style as separate lines and will pro=
duce paragraphs correctly.
The primary benefit is that you can easily see changes between scm versions=
 of files, and it makes it trivial to quickly look through a pull request.
Additional benefits are the ability to comment out a sentence mid paragraph=
 or move sentences around within a paragraph.
Enabling Soft Line Wrap in your favorite editor can make this a bit easier =
to stomach.</p>
</dd>
<dt class=3D"hdlist1">id=E2=80=99s</dt>
<dd>
<p>Critically important for being able to generate url=E2=80=99s that can b=
e used in a persistent fashion.
Without sane id=E2=80=99s the chapters and sections will have generated id =
which are rooted in some obscure location based
voodoo.
A url using these <em>e12c8673</em> type links will not be durable across g=
enerations of the documentation.
These id=E2=80=99s need to be used on chapters and sections two deep, and a=
nywhere that you intend to cross link deeper.</p>
<div class=3D"paragraph">
<p>The id values go into a global namespace so they must be unique across t=
he entire document or the last example will win and any cross links will go=
 there.
Below is an example of an id.</p>
</div>
</dd>
</dl>
</div>
<div class=3D"literalblock">
<div class=3D"content">
<pre>[[this-id-an-id]]</pre>
</div>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">link vs xref</dt>
<dd>
<p>The <code>link:</code> item should be generally used for linking around =
the document when you want to choose the text that will be rendered in the =
link itself.
However if you are linking to a section and want to use the title itself as=
 the link text, use the <code>xref:</code> tag without the hashmark in fron=
t of the link id.</p>
</dd>
<dt class=3D"hdlist1">version differences</dt>
<dd>
<p>In general differences in functionality within a release should go into =
nested sections and use titles like <em>Prior to: <mark></mark></em> or <em=
>In version: </em>.</p>
</dd>
<dt class=3D"hdlist1">license blocks</dt>
<dd>
<p>Each adoc file should contain the license block that exists in the index=
.adoc file and a copy has been added to the bottom of this page as well for=
 reference.</p>
</dd>
</dl>
</div>
<div class=3D"literalblock">
<div class=3D"content">
<pre>//  =3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D
//  Copyright (c) 1995-2017 Mort Bay Consulting Pty. Ltd.
//  =3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D
//  All rights reserved. This program and the accompanying materials
//  are made available under the terms of the Eclipse Public License v1.0
//  and Apache License v2.0 which accompanies this distribution.
//
//      The Eclipse Public License is available at
//      http://www.eclipse.org/legal/epl-v10.html
//
//      The Apache License v2.0 is available at
//      http://www.opensource.org/licenses/apache2.0.php
//
//  You may elect to redistribute this code under either of these licenses.
//  =3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D</p=
re>
</div>
</div>
<div class=3D"paragraph">
<p>Some admonition examples:</p>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Note</div>
</td>
<td class=3D"content">
A note about the previous case to be aware of.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock important">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Important</div>
</td>
<td class=3D"content">
Important notes are marked with an icon.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock tip">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Tip</div>
</td>
<td class=3D"content">
Tips that make your life easier.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock caution">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Caution</div>
</td>
<td class=3D"content">
Places where you have to be careful what you are doing.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock warning">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Warning</div>
</td>
<td class=3D"content">
Where extreme care has to be taken. Data corruption or other nasty
things may occur if these warnings are ignored.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_oddities">Oddities</h4>
<div class=3D"ulist">
<ul>
<li>
<p>If an included file ends with a list entry, it needs to have two empty l=
ines at the end of the file in order for the section rendering to work corr=
ectly.</p>
</li>
</ul>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"contributing-source-build">Source Control and Building</h3>
<div class=3D"paragraph">
<p>If you want to contribute to the development of jetty, you will need to =
work with a handful of technologies.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"contributing-source">Source Control</h4>
<div class=3D"paragraph">
<p>Jetty uses several development trunks for its artifacts.
They are mirrored on github through <a href=3D"http://github.com/eclipse" c=
lass=3D"bare">http://github.com/eclipse</a>, or you can look through them v=
ia the Eclipse setup at the URLs below.</p>
</div>
<div class=3D"sect4">
<h5 id=3D"_primary_interest_scm_urls">Primary Interest SCM URLs</h5>
<div class=3D"paragraph">
<p>These are the URLs to the GIT repositories for the Jetty code.
They are for people who are working on the Jetty project, as well as for pe=
ople who are interested in examining or modifying the Jetty code for their =
own projects.</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">Jetty Project Repository</dt>
<dd>
<p><a href=3D"https://github.com/eclipse/jetty.project" class=3D"bare">http=
s://github.com/eclipse/jetty.project</a></p>
</dd>
</dl>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_build_and_project_infrastructure_scm_urls">Build and Project Inf=
rastructure SCM URLs</h5>
<div class=3D"paragraph">
<p>These are the URLs for Jetty-related code and metadata.
These are not needed to use Jetty; these are primarily of use for people wh=
o are working with Jetty-the-project (as opposed to using Jetty-the-server =
in their own projects).</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">Administrative pom.xml file</dt>
<dd>
<p><a href=3D"https://github.com/eclipse/jetty.parent" class=3D"bare">https=
://github.com/eclipse/jetty.parent</a></p>
</dd>
<dt class=3D"hdlist1">Build related artifacts that release separately, comm=
on assembly descriptors, remote resources, etc.</dt>
<dd>
<p><a href=3D"https://github.com/eclipse/jetty.toolchain" class=3D"bare">ht=
tps://github.com/eclipse/jetty.toolchain</a></p>
</dd>
<dt class=3D"hdlist1">Files associated with the development of Jetty=E2=80=
=89=E2=80=94=E2=80=89code styles, formatting, iplogs, etc.</dt>
<dd>
<p><a href=3D"http://git.eclipse.org/c/jetty/org.eclipse.jetty.admin.git" c=
lass=3D"bare">http://git.eclipse.org/c/jetty/org.eclipse.jetty.admin.git</a=
></p>
</dd>
</dl>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_build">Build</h4>
<div class=3D"paragraph">
<p>Jetty requires the use of Java 7 and the latest releases are always reco=
mmended to build.</p>
</div>
<div class=3D"paragraph">
<p>Jetty uses <a href=3D"http://maven.apache.org/">Apache Maven 3</a> for m=
anaging its build and primary project metadata.</p>
</div>
<div class=3D"paragraph">
<p>Building Jetty should simply be a matter of changing into the relevant d=
irectory and executing the following commands:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">$ git clone https://github.com/eclipse/jetty.project.git
$ cd jetty.project
$ mvn install</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>All relevant dependencies will be downloaded into your local repository =
automatically.</p>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Note</div>
</td>
<td class=3D"content">
Jetty has a great many test cases that run through the course of its build.
Periodically we find some test cases to be more time dependent than they sh=
ould be and this results in intermittent test failures.
You can help track these down by opening a bug report.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_import_into_eclipse">Import into Eclipse</h4>
<div class=3D"paragraph">
<p>Jetty is a Maven project. To develop Jetty in Eclipse, follow these dire=
ctions:</p>
</div>
<div class=3D"sect4">
<h5 id=3D"_install_m2e_plugin">Install m2e plugin</h5>
<div class=3D"olist arabic">
<ol class=3D"arabic">
<li>
<p>From the Eclipse menu at the top of the screen, select <em>Help &gt; Ecl=
ipse Marketplace.</em></p>
</li>
<li>
<p>Search for <em>m2e</em>.</p>
</li>
<li>
<p>Install the <em>Maven Integration for Eclipse</em></p>
</li>
</ol>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_clone_the_git_repository">Clone the git repository</h5>
<div class=3D"paragraph">
<p>Using either the egit plugin or git on the commandline (as in the build =
section above), obtain the jetty source.</p>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_import_the_maven_projects">Import the Maven Projects</h5>
<div class=3D"olist arabic">
<ol class=3D"arabic">
<li>
<p>From the Eclipse menu, select <em>File &gt; Import</em></p>
</li>
<li>
<p>From the Maven folder, select <em>Existing Maven Projects.</em></p>
</li>
<li>
<p>Click <em>Next</em>.</p>
</li>
<li>
<p>In the Import Maven projects pane, click <em>Browse</em> and select the =
top folder of the jetty source tree.</p>
</li>
<li>
<p>Click <em>Next/Finish</em> to import all of jetty into Eclipse.</p>
</li>
<li>
<p>Wait for Eclipse and m2e to compilie and set up the project.</p>
</li>
</ol>
</div>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"coding-standards">Coding Standards</h3>
<div class=3D"paragraph">
<p>Jetty uses number of conventions for its source code.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"_code_formatting">Code Formatting</h4>
<div class=3D"paragraph">
<p>Jetty uses the code formatting the following project specifies.</p>
</div>
<div class=3D"paragraph">
<p><a href=3D"http://git.eclipse.org/c/jetty/org.eclipse.jetty.admin.git/tr=
ee/jetty-eclipse-java-format.xml">Eclipse Java Formatting</a></p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_code_templates">Code Templates</h4>
<div class=3D"paragraph">
<p>Jetty specifies the following code templates for use by the project deve=
lopers.</p>
</div>
<div class=3D"paragraph">
<p><a href=3D"http://git.eclipse.org/c/jetty/org.eclipse.jetty.admin.git/tr=
ee/jetty-eclipse-codetemplates.xml">Eclipse Code Templates</a></p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_code_conventions">Code Conventions</h4>
<div class=3D"paragraph">
<p>The following is an example of the Java formatting and naming styles to =
apply to Jetty:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-java" data-lang=3D"java">i=
mport some.exact.ClassName;      // GOOD
import some.wildcard.package.*;   // BAD!

package org.always.have.a.package;

/* --------------------------------------------------------- */
/** Always have some javadoc
 */
class MyClassName
{
    // indent by 4 spaces.
    // use spaced to indent
    // The code must format OK with default tabsize of 8.

    private static final int ALL_CAPS_FOR_PUBLIC_CONSTANTS=3D1;

    // Field prefixed with __ for static of _ for normal fields.
    // This convention is no longer mandatory, but any given
    // class should either consistently use this style or not.
    private static String __staticField;
    private Object _privateField;


    // use getters and setters rather than public fields.
    public void setPrivateField(Object privateField)
    {
        _privateField=3DprivateField;
    }

    public Object getPrivateField()
    {
        return _privateField;
    }

    public void doSomething()
        throws SomeException
    {
        Object local_variable =3D _privateField;
        if (local_variable=3D=3Dnull)
        {
             // do Something
        }
    }
}</code></pre>
</div>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"bugs">Issues, Features, and Bugs</h3>
<div class=3D"paragraph">
<p>As with any constantly evolving software project, there will be issues, =
features, and bugs.
We want to know whats bugging you!</p>
</div>
<div class=3D"paragraph">
<p>File bugs as Issues in our Github repository <a href=3D"http://github.co=
m/eclipse/jetty.project">Issues at Github</a></p>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"contributing-patches">Contributing Patches</h3>
<div class=3D"paragraph">
<p>We love seeing people contribute patches to the Jetty project and the pr=
ocess is relatively simple.
The requirements to commit are modest but very important to the Eclipse Fou=
ndation and the intellectual property of the open source project.
The following is the general process by which we operate.</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>You must have a signed Eclipse Contributor Agreement.</p>
</li>
<li>
<p>This agreement must be under the <em>same</em> email address as the Git =
pull request originates from.</p>
</li>
<li>
<p>The commit must be signed.</p>
</li>
<li>
<p>When the pull request is made, a git-hook will validate the email addres=
s.</p>
<div class=3D"ulist">
<ul>
<li>
<p>If the result is a green checkbox then the Jetty committers can review t=
he pull request.</p>
</li>
<li>
<p>If the result is a red X then there is absolutely nothing the Jetty comm=
itters can do to accept the commit at this point.</p>
</li>
</ul>
</div>
</li>
<li>
<p>This may not be the final form a commit will take, there may be some bac=
k and forth and you may be asked to re-issue a pull request.</p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>Not everything is specifically relevant since we are at GitHub but the c=
rux of things are detailed there.
The CLA is <strong>critically</strong> important to the process.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"contributing-cla">Sign a CLA</h4>
<div class=3D"paragraph">
<p>The Eclipse Foundation has a strong Intellectual Property policy which t=
racks contributions in detail to ensure that:</p>
</div>
<div class=3D"olist arabic">
<ol class=3D"arabic">
<li>
<p>Did the contributor author 100% of the content?</p>
</li>
<li>
<p>Does the contributor have the rights to contribute this content to Eclip=
se?</p>
</li>
<li>
<p>Is the contribution under the project=E2=80=99s license(s) (e.g. EPL)</p=
>
</li>
</ol>
</div>
<div class=3D"paragraph">
<p>A contributor needs to e-sign a Contributor Licence Agreement (for more =
explanation see the <a href=3D"http://www.eclipse.org/legal/clafaq.php">Ecl=
ipse CLA FAQ</a> ) regardless of how their contribution patch is provided.
You can familiarize yourself with the Eclipse wiki page at <a href=3D"http:=
//wiki.eclipse.org/Development_Resources/Contributing_via_Git">Contributing=
 via Git</a>.
In order to have a pull request accepted by any Eclipse project you must co=
mplete this agreement.</p>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock tip">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Tip</div>
</td>
<td class=3D"content">
Log into the <a href=3D"https://projects.eclipse.org/user/login/sso">Eclips=
e projects forge</a> (you will need to create an account with the Eclipse F=
oundation if you have not already done so); click on "Contributor License A=
greement"; and Complete the form.
Be sure to use the <em>same email address</em> when you create any Git comm=
it records.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"contributing-git-config">Configuring Git</h4>
<div class=3D"paragraph">
<p>GitHub has copious amounts of quality documentation on how to interact w=
ith the system and you will minimally need to configure the user.email prop=
erty.
Check out the following <a href=3D"https://help.github.com/articles/setting=
-your-email-in-git">guide on GitHub</a> for more information.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"contributing-making-the-commit">Making the Commit</h4>
<div class=3D"paragraph">
<p>When making the commit for the pull request it is  <em>vital</em> that y=
ou "sign-off" on the commit using "git commit -s" option.
Without this sign-off, your patch cannot be applied to the Jetty repository=
 because it will be rejected.</p>
</div>
<div class=3D"paragraph">
<p>You can check out the <a href=3D"https://help.github.com/articles/signin=
g-tags-using-gpg">guide at Github</a> for more information.</p>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock tip">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Tip</div>
</td>
<td class=3D"content">
One way to think of this is that when you sign the CLA you are indicating t=
hat you are free to contribute to eclipse, but that doesn=E2=80=99t mean ev=
erything you ever do can be contributed.
Using the commit signing mechanism indicates that your commit is under the =
auspices of your agreement.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
<div class=3D"paragraph">
<p>If a pull request is for a particular issue in our repository then the f=
ormat of the commit message is important.
The message should follow the form "Issue #123 &lt;description of the commi=
t&gt;".
When the Jetty project runs releases we have an automated process that scan=
s for commits with this format for inclusion in our VERSION.txt file.</p>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"paragraph">
<p>git commit -s -m "Issue #123 resolving the issue by adding widget"</p>
</div>
</blockquote>
</div>
</blockquote>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"contributing-the-pull-request">The Pull Request</h4>
<div class=3D"paragraph">
<p>Pull requests are very much a GitHub process so best <a href=3D"https://=
help.github.com/articles/creating-a-pull-request">explained by Github</a>.<=
/p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"contributing-our-policies">Our Policies</h4>
<div class=3D"paragraph">
<p>We wholeheartedly welcome contributions to Jetty and will do our best to=
 process them in a timely fashion.
While not every contribution will be accepted as is our commitment is to wo=
rk with interested parties on the things they care about.
With that in mind, short of some simple contributions we can only handle pu=
ll requests with actively engaged parties.
We reserve the right to abandon pull requests whose authors do no respond i=
n a timely fashion.
We will generally adhere to the following time frames for contributions.</p=
>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>Invalid Pull Requests - 1 week</p>
<div class=3D"ulist">
<ul>
<li>
<p>These pull requests do not follow the contribution requirements for some=
 reason, be it missing contributor agreement or the wrong email.</p>
</li>
<li>
<p>We will try and follow up with the pull request author to resolve the is=
sue but much of this is out of our hands and are between committer and the =
Eclipse Foundation.</p>
</li>
<li>
<p>If we do not hear from the contributor after a week we will close the pu=
ll request.</p>
</li>
</ul>
</div>
</li>
<li>
<p>Valid Pull Requests - 2 weeks</p>
<div class=3D"ulist">
<ul>
<li>
<p>These pull requests have a green check mark after the commit title.</p>
</li>
<li>
<p>If the pull request can be immediately applied we will do so.</p>
</li>
<li>
<p>There may need to be some conversation on the issue in which case a comm=
itter will follow up with the author in the pull request.</p>
</li>
<li>
<p>If the original contributor does not respond within 2 weeks we may close=
 the commit.</p>
</li>
<li>
<p>If we see value in the commit yet the author has not responded after 2 w=
eeks we may make some variation of the commit ourselves.</p>
</li>
</ul>
</div>
</li>
</ul>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"security-reporting">Reporting Security Issues</h3>
<div class=3D"paragraph">
<p>There are a number of avenues for reporting security issues to the Jetty=
 project available.
If the issue is directly related to Jetty itself then reporting to the Jett=
y developers is encouraged.
The most direct method is to mail <em>security@webtide.com</em>.
Since Webtide is comprised of the active committers of the Jetty project th=
is is our preferred reporting method.
We are generally flexible in how we work with reporters of security issues =
but we reserve the right to act in the interests of the Jetty project in al=
l circumstances.</p>
</div>
<div class=3D"paragraph">
<p>If the issue is related to Eclipse or its Jetty integration then we enco=
urage you to reach out to <em>security@eclipse.org</em>.</p>
</div>
<div class=3D"paragraph">
<p>If the issue is related to integrations with Jetty we are happy to work =
with you to identify the proper entity and either of the approaches above i=
s fine.</p>
</div>
<div class=3D"paragraph">
<p>We prefer that security issues are reported directly to Jetty developers=
 as opposed through GitHub Issues since it has no facility to tag issues as=
 <em>private</em>.</p>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"releasing-jetty">Releasing Jetty</h3>
<div class=3D"paragraph">
<p>There are a number of steps to releasing jetty.
It is not just limited to running a couple of maven commands and then movin=
g onto bigger and better things.
There are a number of process related issues once the fun maven bits have b=
een completed.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"releasing-process">Building and Staging a Releasable Version</h4>
<div class=3D"paragraph">
<p>This release script is for jetty-9 (to release jetty-7 or jetty-8 see ol=
der documentation).</p>
</div>
<div class=3D"olist arabic">
<ol class=3D"arabic">
<li>
<p>Pick your version identification strings.</p>
<div class=3D"paragraph">
<p>These follow a strict format and will be used when prompted during step =
<a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/=
jetty-documentation/src/main/asciidoc/index.html#prepare-release-step">list=
item_title</a> below.</p>
</div>
<div class=3D"literalblock">
<div class=3D"content">
<pre>Release Version                : 9.0.0.v20130322  (v[year][month][day]=
)
Next Development Version       : 9.0.1-SNAPSHOT
Tag Name                       : jetty-9.9.0.v20130322</pre>
</div>
</div>
</li>
<li>
<p>We use the <em>release-9</em> branch to avoid problems with other develo=
pers actively working on the master branch.</p>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">// Get all of the remotes
$ git pull origin
// Create a local tracking branch (if you haven't already)
$ git branch --track release-9 refs/remotes/origin/release-9
// Check out your local tracking branch.
$ git checkout release-9
// Merge from master into the branch (this becomes your point in time
// from master that you will be releasing from)
$ git merge --no-ff master</code></pre>
</div>
</div>
</li>
<li>
<p>Update the VERSION.txt with changes from the git logs, this populates th=
e resolves issues since the last release.</p>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">$ mvn -N -Pupdate-version</code></pre>
</div>
</div>
</li>
<li>
<p>Edit the VERSION.txt file to set the <em>Release Version</em> at the top=
 alongside the Date of this release.</p>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">$ vi VERSION.txt</code></pre>
</div>
</div>
</li>
<li>
<p>Make sure everything is commit=E2=80=99d and pushed to github.com/eclips=
e/jetty.project</p>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">$ git commit -m "Updating VERSION.txt top section" VERSION.txt
$ git push origin release-9</code></pre>
</div>
</div>
</li>
<li>
<p>Prepare the Release</p>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Note</div>
</td>
<td class=3D"content">
This step updates the &lt;version&gt; elements in the pom.xml files, does a=
 test build with these new versions, and then commits the pom.xml changes t=
o your local git repo.
The <code>eclipse-release</code> profile is required on the prepare in orde=
r to bring in the jetty aggregates as that profile defines a module which i=
s ignored otherwise.
</td>
</tr>
</tbody></table>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">$ mvn release:prepare -DreleaseVersion=3D9.0.0.v20130322 \
                      -DdevelopmentVersion=3D9.0.1-SNAPSHOT \
                      -Dtag=3Djetty-9.0.0.v20130322 \
                      -Peclipse-release</code></pre>
</div>
</div>
</li>
<li>
<p>Perform the Release</p>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Note</div>
</td>
<td class=3D"content">
This step performs the release and deploys it to a oss.sonatype.org staging=
 repository.
</td>
</tr>
</tbody></table>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">$ mvn release:perform</code></pre>
</div>
</div>
</li>
<li>
<p>Set up files for next development versions.</p>
<div class=3D"paragraph">
<p>Edit <code>VERSION.txt</code> for <em>Next Development Version</em> at t=
he top.
Do not date this line.</p>
</div>
<div class=3D"paragraph">
<p>Make sure everything is commit=E2=80=99d and pushed to github.com/eclips=
e/jetty.project</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">$ vi VERSION.txt
$ git commit -m "Updating VERSION.txt top section" VERSION.txt
$ git push origin release-9</code></pre>
</div>
</div>
</li>
<li>
<p>Close the staging repository on oss.sonatype.org</p>
</li>
<li>
<p>Announce stage to the mailing list for testing.</p>
</li>
<li>
<p>Once the staged repository has been approved by the rest of the committe=
rs.</p>
<div class=3D"ulist">
<ul>
<li>
<p>Release the staging repository to maven central on oss.sonatype.org</p>
</li>
<li>
<p>Merge back the changes in release-9 to master</p>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">$ git checkout master
$ git merge --no-ff release-9
$ git push origin master</code></pre>
</div>
</div>
</li>
</ul>
</div>
</li>
</ol>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"releasing-aggregates">Building and Deploying Aggregate Javadoc an=
d Xref</h4>
<div class=3D"paragraph">
<p>Define the jetty.eclipse.website server entry in your .m2/settings.xml f=
ile.
You=E2=80=99ll need to have access to the dev.eclipse.org machine to perfor=
m these actions.
If you don=E2=80=99t know if you have access to this then you probably don=
=E2=80=99t and will need to ask a project leader for help.</p>
</div>
<div class=3D"paragraph">
<p>To build and deploy the aggregate javadoc and jxr bits:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">$ cd target/checkout
$ mvn -Paggregate-site javadoc:aggregate jxr:jxr
$ mvn -N site:deploy</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>This will generate the aggregate docs and deploy them to the <code>/home=
/www/jetty/&lt;project version&gt;/jetty-project</code> directory on downlo=
ad.eclipse.org.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"releasing-distributions">Deploying Distribution Files</h4>
<div class=3D"paragraph">
<p>Since we also provide alternative locations to download jetty distributi=
ons we need to copy these into place.
There are a couple of scripts that will take care of this although they nee=
d to be localized to your particular execution environment and you need to =
have authorization to put stuff where it needs to go.
These scripts are located at:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p><a href=3D"http://git.eclipse.org/c/jetty/org.eclipse.jetty.admin.git/tr=
ee/release-scripts" class=3D"bare">http://git.eclipse.org/c/jetty/org.eclip=
se.jetty.admin.git/tree/release-scripts</a>.</p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>To localize the scripts to your environment:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>ensure you have "curl" installed</p>
</li>
<li>
<p>edit the scripts and replace all ssh login lines with your own login id<=
/p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>Once these are setup you can deploy a release to eclipse with the follow=
ing incantation:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">$ ./promote-to-eclipse.sh 9.0.0.v20130322</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Each of these scripts will download all of the relevant files from maven=
 central and then copy them into the correct location on eclipse infrastruc=
ture.
On the eclipse side of it they will also adjust the xref and javadoc docume=
ntation links if they remain broken as well as regenerate all of the html f=
iles on the eclipse download site.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"releasing-stable-links">Updating Stable Links</h4>
<div class=3D"paragraph">
<p>Since we are not allowed to have symbolic links on the download site we =
have to log into the machine manually and remove the previous stable direct=
ory and update it with a new release.
Maintaining the conventions we use on the site will allow all <em>stable</e=
m> links to be stable and not needed to update to the latest major Jetty bu=
ild version:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">$ ssh <user>@build.eclipse.org
$ cd ~downloads/jetty/
$ rm -Rf stable-9
$ cp -r <version> stable-9
$ ./index.sh</version></user></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>This needs to be done for all Eclipse Jetty releases (regardless of vers=
ion). In addition we have to work to reduce the footprint of jetty on the p=
rimary eclipse download resources so we want to move older releases to the =
eclipse archive site.</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">$ cd ~/downloads/jetty
$ mv <old release=3D""> /home/data/httpd/archive.eclipse.org/jetty/
$ ./index.sh</old></code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>Periodically we need to do the same for the osgi P2 repositories to keep=
 the size of our downloads directory at a reasonable size.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_building_an_osgi_p2_repository">Building an OSGi P2 Repository</=
h4>
<div class=3D"paragraph">
<p>Most of the jetty jars are also osgi bundles, plus we release some speci=
fic bundles that <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.pro=
ject-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#framework=
-jetty-osgi">integrate jetty closely with osgi</a>.
To do this, we use a Hudson job on the eclipse infrastructure. You will nee=
d to have permission to access <a href=3D"https://hudson.eclipse.org/hudson=
/view/Jetty-RT/" class=3D"bare">https://hudson.eclipse.org/hudson/view/Jett=
y-RT/</a></p>
</div>
<div class=3D"paragraph">
<p>There are Hudson jobs that build osgi p2 repos for each of the major rel=
eases of jetty:7 (jetty-rt-bundles-7), 8 (jetty-rt-bundles-8) and 9 (jetty-=
rt-bundles-9).
You will need to start a manual build of the job that matches the version o=
f jetty that you are releasing.
You will be prompted to supply some parameters to the build:</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">pack_and_sign</dt>
<dd>
<p>By default, this is ticked. Leave it ticked.</p>
</dd>
<dt class=3D"hdlist1">jetty_release-version</dt>
<dd>
<p>Enter the version number of the release, eg 9.2.6.v20141205</p>
</dd>
<dt class=3D"hdlist1">force_context_qualifier</dt>
<dd>
<p>Leave this blank.</p>
</dd>
<dt class=3D"hdlist1">set_pom_version</dt>
<dd>
<p>Enter the major.minor.point release number, eg 9.2.6</p>
</dd>
<dt class=3D"hdlist1">delete_tycho_meta</dt>
<dd>
<p>This is ticked by default. Leave it ticked</p>
</dd>
<dt class=3D"hdlist1">BRANCH_NAME</dt>
<dd>
<p>This is not the branch of the jetty release. Rather it refers to the bra=
nch structure of the project that drives the jetty p2 release.
It will already be set correctly for the selected job, so don=E2=80=99t cha=
nge it unless you have an extremely good reason.</p>
</dd>
</dl>
</div>
<div class=3D"paragraph">
<p>Once you have supplied the necessary parameters, the build job will comm=
ence and the bundles and update site zips will generated and automatically =
placed in the <code>/home/data/httpd/downlaod.eclipse.org/jetty/updates/jet=
ty-bundles-[MAJOR.VERSION].x</code>, where [MAJOR.VERSION] matches the majo=
r version number of the jetty release you are doing.
These files will then be visible from <a href=3D"http://download.eclipse.or=
g/jetty/updates/jetty-bundles-">MAJOR.VERSION</a>.x, where [MAJOR.VERSION] =
corresponds to the major version of the jetty release you are doing.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"releasing-documentation">Release Documentation</h4>
<div class=3D"paragraph">
<p>There are two git repositories you need to be aware of for releasing jet=
ty-documentation. The jetty-documentation is located in our github reposito=
ry and the jetty-website is located at eclipse.</p>
</div>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">jetty-documentation</dt>
<dd>
<p><a href=3D"https://github.com/jetty-project/jetty-documentation" class=
=3D"bare">https://github.com/jetty-project/jetty-documentation</a></p>
</dd>
<dt class=3D"hdlist1">jetty-website</dt>
<dd>
<p><a href=3D"http://git.eclipse.org/c/www.eclipse.org/jetty.git" class=3D"=
bare">http://git.eclipse.org/c/www.eclipse.org/jetty.git</a></p>
</dd>
</dl>
</div>
<div class=3D"paragraph">
<p>Do the following steps to publish documentation for the release:</p>
</div>
<div class=3D"olist arabic">
<ol class=3D"arabic">
<li>
<p>Checkout the jetty-documentation repository.</p>
</li>
<li>
<p>Edit the &lt;version&gt; of the jetty-documentation pom.xml and change i=
t <em>locally</em> to be the release number, eg 9.2.6.v20141205</p>
</li>
<li>
<p>Build the documentation with mvn clean install</p>
</li>
<li>
<p>Checkout the jetty-website</p>
</li>
<li>
<p>Inside the documentation/ directory, make a directory named the same as =
the release number, eg 9.2.6.v20141205/</p>
</li>
<li>
<p>Copy the built <code>documentation</code> from jetty-documentation/targe=
t/docbkx/html/jetty into the new directory</p>
</li>
<li>
<p>Edit the <code>index.html</code> file in the <code>documentation</code> =
directory and add the newly released documentation url.
Make sure you follow the other examples and include the <code>rel=3D"nofoll=
ow"</code> attribute on the link so that search engines do not crawl newly =
created documentation, otherwise we are subject to duplicate content penalt=
ies in SEO.</p>
</li>
<li>
<p>Commit the changes to the jetty-website project</p>
</li>
</ol>
</div>
<div class=3D"quoteblock">
<blockquote>
<div class=3D"admonitionblock note">
<table>
<tbody><tr>
<td class=3D"icon">
<div class=3D"title">Note</div>
</td>
<td class=3D"content">
There is a separate Jenkins build job that publishes documentation to <a hr=
ef=3D"http://www.eclipse.org/jetty/documentation/current" class=3D"bare">ht=
tp://www.eclipse.org/jetty/documentation/current</a> triggered by a push of=
 changed files to the jetty-documentation project.
If you commit your change to the &lt;version&gt; number from step 2, then t=
hese builds will use the same release version number.
It is preferable if you <em>don=E2=80=99t</em> commit that version number c=
hange, or better yet, ensure that it is set to the next -SNAPSHOT version n=
umber for your jetty major release number.
</td>
</tr>
</tbody></table>
</div>
</blockquote>
</div>
</div>
</div>
<div class=3D"sect2">
<h3 id=3D"release-testing">Testing a Jetty Release</h3>
<div class=3D"paragraph">
<p>To test a Jetty release, complete the following steps for each release y=
ou want to test:</p>
</div>
<div class=3D"olist arabic">
<ol class=3D"arabic">
<li>
<p>Download the staged release:</p>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n"> wget https://oss.sonatype.org/content/repositories/jetty-[reponumber]/o=
rg/eclipse/jetty/jetty-distribution/[jetty-version]/jetty-distribution-9.[j=
etty-minor-version].tar.gz</code></pre>
</div>
</div>
</li>
<li>
<p>Extract to a directory of your choice.</p>
</li>
<li>
<p>Start jetty:</p>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n"> cd [installdir] ; java -jar start.jar</code></pre>
</div>
</div>
</li>
<li>
<p>If there are no exceptions, proceed. Otherwise, investigate.</p>
</li>
<li>
<p>Open <a href=3D"http://localhost:8080/" class=3D"bare">http://localhost:=
8080/</a> in a browser. In the examples section click "Test Jetty Webapp". =
You should see the <code>test.war</code> webapp.</p>
</li>
<li>
<p>Go through ALL the tests and verify that everything works as expected.</=
p>
</li>
<li>
<p>In the examples section click "JAAS Test" and verify that everything wor=
ks as expected.</p>
</li>
<li>
<p>In the examples section click "JNDI Test" and verify that everything wor=
ks as expected.</p>
</li>
<li>
<p>In the examples section click "Servlet 3.1 Test" and verify that everyth=
ing works as expected.</p>
</li>
<li>
<p>Verify that hot deployment works.</p>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n"> cd [installdir] ;
 touch [pathToJettyDistribution]/webapps.demo/test.xml</code></pre>
</div>
</div>
</li>
<li>
<p>Verify that <code>test.war</code> gets redeployed in <code>STDOUT</code>=
.</p>
</li>
<li>
<p>Verify that the spdy example webapp and spdy-proxy do work</p>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n"> cd jetty_src/jetty-spdy/spdy-example-webapp
 mvn jetty:run-forked</code></pre>
</div>
</div>
</li>
<li>
<p>Browse to <a href=3D"https://localhost:8443/" class=3D"bare">https://loc=
alhost:8443</a> and verify that all looks ok</p>
</li>
<li>
<p>Stop the server with CTRL+C and restart it in proxy mode:</p>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n"> mvn -Pproxy jetty:run-forked</code></pre>
</div>
</div>
</li>
<li>
<p>Browse to <a href=3D"http://localhost:8080/" class=3D"bare">http://local=
host:8080</a> and <a href=3D"https://localhost:8443/" class=3D"bare">https:=
//localhost:8443</a> and verify that all looks ok</p>
</li>
</ol>
</div>
<div class=3D"sect3">
<h4 id=3D"testing-cometd">Testing CometD</h4>
<div class=3D"olist arabic">
<ol class=3D"arabic">
<li>
<p>Clone CometD.</p>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n"> clone git://github.com/cometd/cometd.git
 git clone git://github.com/cometd/cometd.git</code></pre>
</div>
</div>
</li>
<li>
<p>Edit <code>pom.xml</code> and update <code>jetty-version.</code></p>
<div class=3D"literalblock">
<div class=3D"content">
<pre>    &lt;properties&gt;
        &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceE=
ncoding&gt;
        &lt;jetty-version&gt;7.6.2.v20120308&lt;/jetty-version&gt;
        &lt;jetty-plugin-version&gt;${jetty-version}&lt;/jetty-plugin-versi=
on&gt;
        &lt;slf4j-version&gt;1.6.4&lt;/slf4j-version&gt;
        &lt;spring-version&gt;3.1.0.RELEASE&lt;/spring-version&gt;
    &lt;/properties&gt;
    &lt;repositories&gt;
    &lt;repository&gt;
      &lt;id&gt;Jetty Staging&lt;/id&gt;
      &lt;url&gt;https://oss.sonatype.org/content/repositories/jetty-988/&l=
t;/url&gt;
    &lt;/repository&gt;
  &lt;/repositories&gt;</pre>
</div>
</div>
</li>
<li>
<p>Build Cometd:</p>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n"> mvn clean install</code></pre>
</div>
</div>
</li>
<li>
<p>Be patient.</p>
</li>
<li>
<p>Run the loadtest as it is described here: <a href=3D"http://cometd.org/d=
ocumentation/2.x/howtos/loadtesting" class=3D"bare">http://cometd.org/docum=
entation/2.x/howtos/loadtesting</a>.
Keep the default values, but make sure that you raise the clients setting t=
o 1000.
Run the loadtest until <em>'JIT compilation time</em>' is close to a value =
of zero (about 10k calls).</p>
</li>
<li>
<p>Make sure that the performance results are reasonably fast.
On a MacBook Pro i7 2.6ghz dualcore produces the following:</p>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n"> =3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D
Statistics Started at Fri Mar 09 13:44:35 CET 2012
Operative System: Mac OS X 10.7.3 amd64
JVM : Oracle Corporation Java HotSpot(TM) 64-Bit Server VM runtime 23.0-b16=
 1.7.0_04-ea-b14
Processors: 4
System Memory: 99.583336% used of 30.0 GiB
Used Heap Size: 36.490677 MiB
Max Heap Size: 1920.0 MiB
Young Generation Heap Size: 896.0 MiB
- - - - - - - - - - - - - - - - - - - -
Testing 1000 clients in 100 rooms, 10 rooms/client
Sending 1000 batches of 10x50 bytes messages every 10000 ?s
[GC [PSYoungGen: 786432K-&gt;8736K(917504K)] 823650K-&gt;45954K(1966080K), =
0.0309940 secs] [Times: user=3D0.09 sys=3D0.00, real=3D0.03 secs]
[GC [PSYoungGen: 795168K-&gt;11424K(917504K)] 832386K-&gt;48642K(1966080K),=
 0.0513360 secs] [Times: user=3D0.13 sys=3D0.00, real=3D0.05 secs]
[GC [PSYoungGen: 797856K-&gt;14560K(917504K)] 835074K-&gt;51778K(1966080K),=
 0.0432940 secs] [Times: user=3D0.12 sys=3D0.00, real=3D0.05 secs]
[GC [PSYoungGen: 800992K-&gt;15680K(917504K)] 838210K-&gt;52898K(1966080K),=
 0.0491200 secs] [Times: user=3D0.14 sys=3D0.00, real=3D0.05 secs]
[GC [PSYoungGen: 802112K-&gt;17568K(917504K)] 839330K-&gt;54786K(1966080K),=
 0.0484950 secs] [Times: user=3D0.14 sys=3D0.00, real=3D0.05 secs]
[GC [PSYoungGen: 804000K-&gt;17600K(917504K)] 841218K-&gt;54818K(1966080K),=
 0.0456460 secs] [Times: user=3D0.14 sys=3D0.01, real=3D0.05 secs]
[GC [PSYoungGen: 804032K-&gt;19488K(917504K)] 841250K-&gt;56706K(1966080K),=
 0.0542000 secs] [Times: user=3D0.15 sys=3D0.00, real=3D0.05 secs]
[GC [PSYoungGen: 805920K-&gt;20224K(917504K)] 843138K-&gt;57442K(1966080K),=
 0.0486350 secs] [Times: user=3D0.16 sys=3D0.00, real=3D0.05 secs]
[GC [PSYoungGen: 806656K-&gt;20192K(917504K)] 843874K-&gt;57410K(1966080K),=
 0.0566690 secs] [Times: user=3D0.15 sys=3D0.00, real=3D0.06 secs]
[GC [PSYoungGen: 806624K-&gt;21152K(917504K)] 843842K-&gt;58370K(1966080K),=
 0.0536740 secs] [Times: user=3D0.16 sys=3D0.00, real=3D0.06 secs]
[GC [PSYoungGen: 807584K-&gt;21088K(917504K)] 844802K-&gt;58306K(1966080K),=
 0.0576060 secs] [Times: user=3D0.18 sys=3D0.00, real=3D0.06 secs]
[GC [PSYoungGen: 807520K-&gt;22080K(917504K)] 844738K-&gt;59298K(1966080K),=
 0.0663300 secs] [Times: user=3D0.19 sys=3D0.01, real=3D0.06 secs]
- - - - - - - - - - - - - - - - - - - -
Statistics Ended at Fri Mar 09 13:45:21 CET 2012
Elapsed time: 45826 ms
    Time in JIT compilation: 52 ms
    Time in Young Generation GC: 606 ms (12 collections)
    Time in Old Generation GC: 0 ms (0 collections)
Garbage Generated in Young Generation: 9036.513 MiB
Garbage Generated in Survivor Generation: 21.65625 MiB
Garbage Generated in Old Generation: 0.0 MiB
Average CPU Load: 156.54865/400
----------------------------------------

Outgoing: Elapsed =3D 45820 ms | Rate =3D 218 messages/s - 21 requests/s - =
~0.083 Mib/s
Waiting for messages to arrive 996960/999045
All messages arrived 999045/999045
Messages - Success/Expected =3D 999045/999045
Incoming - Elapsed =3D 45945 ms | Rate =3D 21743 messages/s - 9496 response=
s/s(43.68%) - ~8.295 Mib/s
Messages - Wall Latency Distribution Curve (X axis: Frequency, Y axis: Late=
ncy):
 @                    _  24 ms (8765, 0.88%)
       @              _  45 ms (58952, 5.90%)
          @           _  67 ms (87065, 8.71%)
             @        _  88 ms (113786, 11.39%)
                   @  _  109 ms (167426, 16.76%)
                   @  _  131 ms (176163, 17.63%) ^50%
              @       _  152 ms (123182, 12.33%)
          @           _  174 ms (90918, 9.10%)
        @             _  195 ms (67209, 6.73%) ^85%
     @                _  216 ms (46989, 4.70%)
   @                  _  238 ms (24975, 2.50%) ^95%
  @                   _  259 ms (16509, 1.65%)
 @                    _  281 ms (8454, 0.85%) ^99%
@                     _  302 ms (4324, 0.43%)
@                     _  323 ms (2955, 0.30%)
@                     _  345 ms (957, 0.10%) ^99.9%
@                     _  366 ms (204, 0.02%)
@                     _  388 ms (144, 0.01%)
@                     _  409 ms (25, 0.00%)
@                     _  430 ms (43, 0.00%)
Messages - Wall Latency 50th%/99th% =3D 117/275 ms
Messages - Wall Latency Min/Ave/Max =3D 2/123/430 ms
Messages - Network Latency Min/Ave/Max =3D 1/114/417 ms
Thread Pool - Concurrent Threads max =3D 239 | Queue Size max =3D 1002 | Qu=
eue Latency avg/max =3D 12/101 ms</code></pre>
</div>
</div>
</li>
<li>
<p>Deploy <code>cometd.war</code> to the <code>webapps</code> directory of =
the jetty-distribution tested above.</p>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n"> cp cometd-demo/target/cometd-demo-[version].war [pathToJetty]/jetty-dis=
tribution-[jetty-version]/webapps/</code></pre>
</div>
</div>
</li>
<li>
<p>Start jetty and make sure there are no exceptions.</p>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n"> cd [pathToJetty] &amp;&amp; java -jar start.jar</code></pre>
</div>
</div>
</li>
<li>
<p>Go through all pages of the demo and test them:</p>
<div class=3D"literalblock">
<div class=3D"content">
<pre> http://localhost:8080/cometd-demo-2.4.1-SNAPSHOT/</pre>
</div>
</div>
</li>
</ol>
</div>
<div class=3D"paragraph">
<p>If all tests are green, you are done!</p>
</div>
</div>
</div>
</div>
</div>
<div class=3D"sect1">
<h2 id=3D"upgrading-jetty">Upgrading Jetty</h2>
<div class=3D"sectionbody">
<div class=3D"sect2">
<h3 id=3D"_upgrading_from_jetty_9_3_x_to_jetty_9_4_0">Upgrading from Jetty =
9.3.x to Jetty 9.4.0</h3>
<div class=3D"paragraph">
<p>The purpose of this guide is to assist users migrating from Jetty 9.3.x =
to 9.4.0.
It is not comprehensive, but covers many of the major changes included in t=
he release that may prove as problem areas for users.</p>
</div>
<div class=3D"sect3">
<h4 id=3D"_the_jetty_sh_script">The jetty.sh Script</h4>
<div class=3D"paragraph">
<p>The file <code>jetty.sh</code>, typically used to start Jetty as a servi=
ce in Linux/Unix machines underwent only small changes, such as the additio=
n of <a href=3D"https://wiki.debian.org/LSBInitScripts">LSB tags</a>.</p>
</div>
<div class=3D"paragraph">
<p>You can safely replace the <code>jetty.sh</code> file packaged with Jett=
y 9.3 with the version found in Jetty 9.4.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_removed_classes">Removed Classes</h4>
<div class=3D"paragraph">
<p><code>ConcurrentArrayQueue</code> was removed from use in Jetty 9.3 and =
the class has been removed entirely as part of Jetty 9.4.</p>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_module_changes_in_jetty_9_4">Module Changes in Jetty 9.4</h4>
<table class=3D"tableblock frame-all grid-all spread">
<colgroup>
<col style=3D"width: 50%;">
<col style=3D"width: 50%;">
</colgroup>
<thead>
<tr>
<th class=3D"tableblock halign-left valign-top">Jetty 9.3 Module</th>
<th class=3D"tableblock halign-left valign-top">Jetty 9.4 Module</th>
</tr>
</thead>
<tbody>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>logging</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>console-capture</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>infinispan</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>session-store-infinispan-embedded</code> or <code>session-store-infinisp=
an-remote</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>jdbc-sessions</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>session-store-jdbc</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>gcloud-memcached-sessions</code>, <code>gcloud-session-idmgr</code> and =
<code>gcloud-sessions</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>session-store-gcloud</code> and <code>session-store-cache</code></p></td=
>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>nosql</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>session-store-mongo</code></p></td>
</tr>
</tbody>
</table>
<div class=3D"sect4">
<h5 id=3D"_logging_modules">Logging Modules</h5>
<div class=3D"paragraph">
<p>The module <code>logging</code> is no longer available in Jetty 9.4.</p>
</div>
<div class=3D"paragraph">
<p>The logging module structure present in Jetty 9.3 has been replaced with=
 a more fine-grained structure in Jetty 9.4, so that you have now more choi=
ces available that are also easier to configure.</p>
</div>
<div class=3D"paragraph">
<p>The migration path is different depending on whether you have completely=
 customized this module or not.</p>
</div>
<div class=3D"paragraph">
<p>If you have a Jetty 9.3 installation, and you have both <code>$jetty.bas=
e/modules/logging.mod</code> and <code>$jetty.base/etc/jetty-logging.xml</c=
ode>, then this module is local to your <code>$jetty.base</code> setup and =
will be used by Jetty 9.4 as before.
No changes are required for your implementation.</p>
</div>
<div class=3D"paragraph">
<p>If either <code>$jetty.base/modules/logging.mod</code> or <code>$jetty.b=
ase/etc/jetty-logging.xml</code> are missing, then you were relying on thos=
e present in <code>$jetty.home</code>, which were present in Jetty 9.3, but=
 are no longer available in Jetty 9.4.</p>
</div>
<div class=3D"paragraph">
<p>The Jetty 9.3 <code>logging</code> module has been renamed to <code>cons=
ole-capture</code> in Jetty 9.4.
You need to open your Jetty 9.3 <code>start.ini</code> and replace the refe=
rences to the <code>logging</code> modules with <code>console-capture</code=
>.</p>
</div>
<div class=3D"paragraph">
<p>For example, in an existing Jetty 9.3 <code>start.ini</code> file the mo=
dule declaration for logging would look like this:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">--module=3Dlogging
jetty.logging.retainDays=3D7</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>In 9.4, it should be replaced by:</p>
</div>
<div class=3D"listingblock">
<div class=3D"content">
<pre class=3D"highlight"><code class=3D"language-screen" data-lang=3D"scree=
n">--module=3Dconsole-capture
jetty.console-capture.retainDays=3D7</code></pre>
</div>
</div>
<div class=3D"paragraph">
<p>The properties that may be present in your Jetty 9.3=E2=80=99s <code>sta=
rt.ini</code>, such as <code>jetty.logging.retainDays</code> will still be =
working in Jetty 9.4, but a warning will be printed at Jetty 9.4 startup, s=
aying to replace them with correspondent <code>jetty.console-capture.*</cod=
e> properties such as <code>jetty.console-capture.retainDays</code>.</p>
</div>
<div class=3D"paragraph">
<p>For information on logging modules in the Jetty 9.4 architecture please =
see the section on <a href=3D"file:///home/tian/Downloads/b60/ebook/jetty.p=
roject-jetty-9.4.x/jetty-documentation/src/main/asciidoc/index.html#configu=
ring-logging-modules">configuring logging modules.</a></p>
</div>
</div>
</div>
<div class=3D"sect3">
<h4 id=3D"_session_management">Session Management</h4>
<div class=3D"paragraph">
<p>Session management received a significant overhaul in Jetty 9.4.
Session functionality has been refactored to promote code-reuse, easier con=
figuration and easier customization.
Whereas previously users needed to edit xml configuration files, in Jetty 9=
.4 all session behavior is controlled by properties that are exposed by the=
 various session modules.
Users now configure session management by selecting a composition of sessio=
n modules.</p>
</div>
<div class=3D"sect4">
<h5 id=3D"_change_overview">Change Overview</h5>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">SessionIdManager</dt>
<dd>
<p>Previously there was a different class of SessionIdManager - with differ=
ent configuration options - depending upon which type of clustering technol=
ogy chosen.
In Jetty 9.4, there is only one type, the <a href=3D"file:///home/tian/Down=
loads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/asci=
idoc/%7BJDURL%7D/org/eclipse/jetty/server/session/DefaultSessionIdManager.h=
tml">org.eclipse.jetty.server.session.DefaultSessionIdManager</a>.</p>
</dd>
<dt class=3D"hdlist1">SessionManager</dt>
<dd>
<p>Previously, there was a different class of SessionManager depending upon=
 which the type of clustering technology chosen.
In Jetty 9.4 we have removed the SessionManager class and split its functio=
nality into different, more easily extensible and composable classes:</p>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">General setters</dt>
<dd>
<p>All of the common setup of sessions such as the maxInactiveInterval and =
session cookie-related configuration has been moved to the <a href=3D"file:=
///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentat=
ion/src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/server/session/SessionH=
andler.html">org.eclipse.jetty.server.session.SessionHandler</a></p>
</dd>
</dl>
</div>
</dd>
</dl>
</div>
<table class=3D"tableblock frame-all grid-all spread">
<colgroup>
<col style=3D"width: 50%;">
<col style=3D"width: 50%;">
</colgroup>
<thead>
<tr>
<th class=3D"tableblock halign-left valign-top">9.3 SessionManager</th>
<th class=3D"tableblock halign-left valign-top">9.4 SessionHandler</th>
</tr>
</thead>
<tbody>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>setMaxInactiveInterval(sec)</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>setMaxInactiveInterval(sec)</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>setSessionCookie(String)</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>setSessionCookie(String)</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>setRefreshCookieAge(sec)</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>setRefreshCookieAge(sec)</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>setSecureRequestOnly(boolean)</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>setSecureRequestOnly(boolean)</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>setSessionIdPathParameterName(String)</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>setSessionIdPathParameterName(String)</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>setSessionTrackingModes(Set&lt;SessionTrackingMode&gt;)</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>setSessionTrackingModes(Set&lt;SessionTrackingMode&gt;)</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>setHttpOnly(boolean)</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>setHttpOnly(boolean)</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>setUsingCookies(boolean)</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>setUsingCookies(boolean)</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>setCheckingRemoteSessionIdEncoding(boolean)</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>setCheckingRemoteSessionIdEncoding(boolean)</code></p></td>
</tr>
</tbody>
</table>
<div class=3D"dlist">
<dl>
<dt class=3D"hdlist1">Persistence</dt>
<dd>
<p>In Jetty 9.3 <code>SessionManagers</code> (and sometimes <code>SessionId=
Managers</code>) implemented the persistence mechanism.
In Jetty 9.4 we have moved this functionality into the <a href=3D"file:///h=
ome/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/=
src/main/asciidoc/%7BJDURL%7D/org/eclipse/jetty/server/session/SessionDataS=
tore.html"><code>org.eclipse.jetty.server.session.SessionDataStore</code></=
a>.</p>
</dd>
<dt class=3D"hdlist1">Session cache</dt>
<dd>
<p>In Jetty 9.3 the <code>SessionManager</code> held a map of session objec=
ts in memory.
In Jetty 9.4 this has been moved into the new <a href=3D"file:///home/tian/=
Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documentation/src/main/=
asciidoc/%7BJDURL%7D/org/eclipse/jetty/server/session/SessionCache.html"><c=
ode>org.eclipse.jetty.server.session.SessionCache</code></a> interface.</p>
</dd>
</dl>
</div>
<div class=3D"paragraph">
<p>For more information, please refer to the documentation on <a href=3D"fi=
le:///home/tian/Downloads/b60/ebook/jetty.project-jetty-9.4.x/jetty-documen=
tation/src/main/asciidoc/index.html#jetty-sessions-architecture">Jetty Sess=
ion Architecture.</a></p>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_default_sessions">Default Sessions</h5>
<div class=3D"paragraph">
<p>As with earlier versions of Jetty, if you do not explicitly configure an=
y session modules, the default session infrastructure will be enabled.
In previous versions of Jetty this was referred to as "hash" session manage=
ment.
The new default provides similar features to the old hash session managemen=
t:</p>
</div>
<div class=3D"ulist">
<ul>
<li>
<p>A session scavenger thread that runs every 10mins and removes expired se=
ssions</p>
</li>
<li>
<p>A session id manager that generates unique session ids and handles sessi=
on id sharing during context forwarding</p>
</li>
<li>
<p>An in-memory cache of session objects.</p>
</li>
</ul>
</div>
<div class=3D"paragraph">
<p>Requests for the same session in the same context share the same session=
 object.
Session objects remain in the cache until they expire or are explicitly inv=
alidated.</p>
</div>
<div class=3D"paragraph">
<p>If you wish to configure the default setup further, enable the <code>ses=
sion-cache-hash</code> module.</p>
</div>
<div class=3D"paragraph">
<p><strong>Compatibility</strong></p>
</div>
<div class=3D"paragraph">
<p>As Session objects do not persist beyond a server restart, there are no =
compatibility issues.</p>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_sessions_using_the_filesystem">Sessions using the Filesystem</h5=
>
<div class=3D"paragraph">
<p>In earlier versions of Jetty, persisting sessions to the local filesyste=
m was an option of the "hash" session manager.
In Jetty 9.4 this has been refactored to its own configurable module <code>=
session-store-file</code>.</p>
</div>
<div class=3D"paragraph">
<p><strong>Compatibility</strong></p>
</div>
<div class=3D"paragraph">
<p>Sessions stored to files by earlier versions of jetty are not compatible=
 with jetty-9.4 sessions.
Here is a comparison of file formats, note that the file contents are liste=
d in order of file output:</p>
</div>
<table class=3D"tableblock frame-all grid-all spread">
<colgroup>
<col style=3D"width: 50%;">
<col style=3D"width: 50%;">
</colgroup>
<thead>
<tr>
<th class=3D"tableblock halign-left valign-top">Jetty 9.3</th>
<th class=3D"tableblock halign-left valign-top">Jetty 9.4</th>
</tr>
</thead>
<tbody>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Fil=
e name: <code>sessionid</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Fil=
e name: <code>expirytime_contextpath_vhost_sessionid</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>sessionid  (utf)</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>sessionid (utf)</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>contextpath (utf)</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>vhost (utf)</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>nodeid  (utf)</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>lastnode (utf)</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>createtime (long)</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>createtime (long)</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>accessed (long)</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>accessed (long)</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>lastaccessed (long)</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>cookiesettime (long)</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>expiry (long)</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>requests (int)</code></p></td>
<td class=3D"tableblock halign-left valign-top"></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>maxInactive (long)</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>attributes size (int)</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>attributes size (int)</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>attributes serialized (obj)</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>attributes serialized (obj)</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><co=
de>maxInactive (long)</code></p></td>
<td class=3D"tableblock halign-left valign-top"></td>
</tr>
</tbody>
</table>
</div>
<div class=3D"sect4">
<h5 id=3D"_jdbc_sessions">JDBC Sessions</h5>
<div class=3D"paragraph">
<p>As with earlier versions of Jetty, sessions may be persisted to a relati=
onal database.
Enable the <code>session-store-jdbc</code> module.</p>
</div>
<div class=3D"paragraph">
<p><strong>Compatibility</strong></p>
</div>
<div class=3D"paragraph">
<p>Sessions stored to the database by earlier versions of jetty are not com=
patible with jetty-9.4 sessions.
The incompatibility is minor:  in jetty-9.4 the <code>rowid</code> primary =
key column is no longer used, and the primary key is a composite of <code>(=
sessionid,contextpath,vhost)</code> columns.</p>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_nosql_sessions">NoSQL Sessions</h5>
<div class=3D"paragraph">
<p>As with earlier versions of Jetty, sessions may be persisted to a docume=
nt database.
Jetty supports the Mongo document database.
Enable the <code>session-store-mongo</code> module.</p>
</div>
<div class=3D"paragraph">
<p><strong>Compatibility</strong></p>
</div>
<div class=3D"paragraph">
<p>Sessions stored to mongo by earlier versions of jetty are not compatible=
 with jetty-9.4 sessions.
The key for each subdocument that represents the session information for a =
context is different between jetty-9.3 and 9.4:</p>
</div>
<table class=3D"tableblock frame-all grid-all spread">
<colgroup>
<col style=3D"width: 50%;">
<col style=3D"width: 50%;">
</colgroup>
<thead>
<tr>
<th class=3D"tableblock halign-left valign-top">Jetty 9.3</th>
<th class=3D"tableblock halign-left valign-top">Jetty 9.4</th>
</tr>
</thead>
<tbody>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Eac=
h context key is: vhost+context+path, where empty vhosts=3D"::" and root co=
ntext =3D "*" and / is replaced by _</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Eac=
h context key is: vhost:contextpath, where empty vhosts=3D"0_0_0_0" and roo=
t context =3D "" and / replaced by _</p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">eg =
"::/contextA"</p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">eg =
" 0_0_0_0:_contextA"</p></td>
</tr>
</tbody>
</table>
</div>
<div class=3D"sect4">
<h5 id=3D"_infinispan_sessions">Infinispan Sessions</h5>
<div class=3D"paragraph">
<p>As with earlier versions of Jetty, sessions may be clustered via Infinis=
pan to either an in-process or remote infinispan instance.
Enable the <code>session-store-infinispan</code> module.</p>
</div>
<div class=3D"paragraph">
<p><strong>Compatibility</strong></p>
</div>
<div class=3D"paragraph">
<p>Sessions stored in infinispan by jetty-9.3 are incompatible with jetty-9=
.4.
In Jetty 9.3 the serialized object stored to represent the session data was=
 <code>org.eclipse.jetty.session.infinispan.SerializableSessionData</code>.
In Jetty 9.4 the serialized object is <code>org.eclipse.jetty.serer.session=
.SessionData</code>.</p>
</div>
</div>
<div class=3D"sect4">
<h5 id=3D"_gcloud_datastore">GCloud Datastore</h5>
<div class=3D"paragraph">
<p>As with earlier versions of Jetty, sessions may be persisted to Google=
=E2=80=99s GCloud Datastore.
Enable the <code>session-store-gcloud</code> module.</p>
</div>
<div class=3D"paragraph">
<p><strong>Compatibility</strong></p>
</div>
<div class=3D"paragraph">
<p>Sessions stored into GCloud Datastore by Jetty 9.3 are <strong>incompati=
ble</strong> with Jetty 9.4, although the incompatibility is trivial: the n=
ame of the session id entity property has changed:</p>
</div>
<table class=3D"tableblock frame-all grid-all spread">
<colgroup>
<col style=3D"width: 50%;">
<col style=3D"width: 50%;">
</colgroup>
<thead>
<tr>
<th class=3D"tableblock halign-left valign-top">Jetty 9.3</th>
<th class=3D"tableblock halign-left valign-top">Jetty 9.4</th>
</tr>
</thead>
<tbody>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Kin=
d: <code>GCloudSession</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">Kin=
d: <code>GCloudSession</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">key=
: <code>contextpath_vhost_sessionid</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">key=
: <code>contextpath_vhost_sessionid</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><st=
rong>"clusterId"</strong>: <code>sessionId</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock"><st=
rong>"id"</strong>: <code>sessionId</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">"co=
ntextPath" : <code>contextpath</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">"co=
ntextPath": <code>contextpath</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">"vh=
ost" : <code>vhost</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">"vh=
ost": <code>vhost</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">"ac=
cessed": <code>accesstime</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">"ac=
cessed": <code>accesstime</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">"la=
stAccessed": <code>lastaccesstime</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">"la=
stAccessed": <code>lastaccesstime</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">"cr=
eateTime": <code>createtime</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">"cr=
eateTime": <code>createtime</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">"co=
okieSetTime": <code>cookiesettime</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">"co=
okieSetTime": <code>cookiesettime</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">"la=
stNode": <code>lastnode</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">"la=
stNode": <code>lastnode</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">"ex=
piry": <code>expiry</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">"ex=
piry": <code>expiry</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">"ma=
xInactive": <code>maxInactive</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">"ma=
xInactive": <code>maxInactive</code></p></td>
</tr>
<tr>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">"at=
tributes": <code>blob</code></p></td>
<td class=3D"tableblock halign-left valign-top"><p class=3D"tableblock">"at=
tributes": <code>blob</code></p></td>
</tr>
</tbody>
</table>
</div>
<div class=3D"sect4">
<h5 id=3D"_gcloud_datastore_with_memcached">GCloud Datastore with Memcached=
</h5>
<div class=3D"paragraph">
<p>As with earlier versions of Jetty, sessions can be both persisted to Goo=
gle=E2=80=99s GCloud Datastore, and cached into Memcached for faster access=
.
Enable the <code>session-store-gcloud</code> and <code>session-store-cache<=
/code> modules.</p>
</div>
<div class=3D"paragraph">
<p><strong>Compatibility</strong></p>
</div>
<div class=3D"paragraph">
<p>Sessions stored into Memcached by earlier versions of jetty are incompat=
ible with Jetty 9.4. Previous versions of jetty stored <code>org.eclipse.je=
tty.gcloud.memcached.session.SerializableSessionData</code> whereas Jetty 9=
.4 stores <code>org.eclipse.jetty.server.session.SessionData</code>.</p>
</div>
</div>
</div>
</div>
</div>
</div>
</code></div><code class=3D"language-xml" data-lang=3D"xml">
<div id=3D"footer">
<div id=3D"footer-text">
Version {VERSION}<br>
Last updated 2017-01-24 04:46:11 CST
</div>
</div>

</code></div></div></code></div></body></html>
------MultipartBoundary--kNTC2G33TKXM0ZeBhbnnHiSRImEoCfPtQPV8fXqcOt----
Content-Type: font/woff2
Content-Transfer-Encoding: base64
Content-Location: https://fonts.gstatic.com/s/droidsansmono/v7/ns-m2xQYezAtqh7ai59hJYdJ2JT0J65PSe7wdxAnx_I.woff2

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
------MultipartBoundary--kNTC2G33TKXM0ZeBhbnnHiSRImEoCfPtQPV8fXqcOt----
Content-Type: font/woff2
Content-Transfer-Encoding: base64
Content-Location: https://fonts.gstatic.com/s/notoserif/v4/eCpfeMZI7q4jLksXVRWPQ_k_vArhqVIZ0nv9q090hN8.woff2

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
CdUC7ZF0pQT94K50EwAAAA==
------MultipartBoundary--kNTC2G33TKXM0ZeBhbnnHiSRImEoCfPtQPV8fXqcOt----
Content-Type: font/woff2
Content-Transfer-Encoding: base64
Content-Location: https://fonts.gstatic.com/s/notoserif/v4/lJAvZoKA5NttpPc9yc6lPYWiMMZ7xLd792ULpGE4W_Y.woff2

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
dDLBO9gM6xGBoPMNweAD3AoD
------MultipartBoundary--kNTC2G33TKXM0ZeBhbnnHiSRImEoCfPtQPV8fXqcOt----
Content-Type: font/woff2
Content-Transfer-Encoding: base64
Content-Location: https://fonts.gstatic.com/s/notoserif/v4/HQXBIwLHsOJCNEQeX9kNz-gdm0LZdjqr5-oayXSOefg.woff2

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
------MultipartBoundary--kNTC2G33TKXM0ZeBhbnnHiSRImEoCfPtQPV8fXqcOt----
Content-Type: font/woff2
Content-Transfer-Encoding: base64
Content-Location: https://fonts.gstatic.com/s/notoserif/v4/Wreg0Be4tcFGM2t6VWytvHNuWYKPzoeKl5tYj8yhly0.woff2

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
235S3LGXxA==
------MultipartBoundary--kNTC2G33TKXM0ZeBhbnnHiSRImEoCfPtQPV8fXqcOt----
Content-Type: font/woff2
Content-Transfer-Encoding: base64
Content-Location: https://fonts.gstatic.com/s/opensans/v13/DXI1ORHCpsQm3Vp6mXoaTegdm0LZdjqr5-oayXSOefg.woff2

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
0yC4//TZ82AQn91fwKdfRCBS9T4A
------MultipartBoundary--kNTC2G33TKXM0ZeBhbnnHiSRImEoCfPtQPV8fXqcOt----
Content-Type: font/woff2
Content-Transfer-Encoding: base64
Content-Location: https://fonts.gstatic.com/s/opensans/v13/MTP_ySUJH_bn48VBG8sNSugdm0LZdjqr5-oayXSOefg.woff2

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
------MultipartBoundary--kNTC2G33TKXM0ZeBhbnnHiSRImEoCfPtQPV8fXqcOt----
Content-Type: font/woff2
Content-Transfer-Encoding: base64
Content-Location: https://fonts.gstatic.com/s/opensans/v13/PRmiXeptR36kaC0GEAetxko2lTMeWA_kmIyWrkNCwPc.woff2

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
qX32LI7Hnj1/Ea9pS2Isbyr1MQA=
------MultipartBoundary--kNTC2G33TKXM0ZeBhbnnHiSRImEoCfPtQPV8fXqcOt----
Content-Type: font/woff2
Content-Transfer-Encoding: base64
Content-Location: https://fonts.gstatic.com/s/opensans/v13/PRmiXeptR36kaC0GEAetxl2umOyRU7PgRiv8DXcgJjk.woff2

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
AAAAAA==
------MultipartBoundary--kNTC2G33TKXM0ZeBhbnnHiSRImEoCfPtQPV8fXqcOt----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://fonts.googleapis.com/css?family=Open+Sans:300,300italic,400,400italic,600,600italic%7CNoto+Serif:400,400italic,700,700italic%7CDroid+Sans+Mono:400,700

@charset "utf-8";

@font-face { font-family: "Droid Sans Mono"; font-style: normal; font-weigh=
t: 400; src: local("Droid Sans Mono"), local("DroidSansMono"), url("https:/=
/fonts.gstatic.com/s/droidsansmono/v7/ns-m2xQYezAtqh7ai59hJYdJ2JT0J65PSe7wd=
xAnx_I.woff2") format("woff2"); unicode-range: U+0-FF, U+131, U+152-153, U+=
2C6, U+2DA, U+2DC, U+2000-206F, U+2074, U+20AC, U+2212, U+2215; }

@font-face { font-family: "Noto Serif"; font-style: normal; font-weight: 40=
0; src: local("Noto Serif"), local("NotoSerif"), url("https://fonts.gstatic=
.com/s/notoserif/v4/Q47Ro23nlKqZrOLipd3-SyEAvth_LlrfE80CYdSH47w.woff2") for=
mat("woff2"); unicode-range: U+460-52F, U+20B4, U+2DE0-2DFF, U+A640-A69F; }

@font-face { font-family: "Noto Serif"; font-style: normal; font-weight: 40=
0; src: local("Noto Serif"), local("NotoSerif"), url("https://fonts.gstatic=
.com/s/notoserif/v4/qkE6YsKPRiYUugBb1_QwHCEAvth_LlrfE80CYdSH47w.woff2") for=
mat("woff2"); unicode-range: U+400-45F, U+490-491, U+4B0-4B1, U+2116; }

@font-face { font-family: "Noto Serif"; font-style: normal; font-weight: 40=
0; src: local("Noto Serif"), local("NotoSerif"), url("https://fonts.gstatic=
.com/s/notoserif/v4/N2U74xxQEyaTBF6QLZRr1CEAvth_LlrfE80CYdSH47w.woff2") for=
mat("woff2"); unicode-range: U+1F00-1FFF; }

@font-face { font-family: "Noto Serif"; font-style: normal; font-weight: 40=
0; src: local("Noto Serif"), local("NotoSerif"), url("https://fonts.gstatic=
.com/s/notoserif/v4/1_daFS3X6gkNOcmGmHl7UiEAvth_LlrfE80CYdSH47w.woff2") for=
mat("woff2"); unicode-range: U+370-3FF; }

@font-face { font-family: "Noto Serif"; font-style: normal; font-weight: 40=
0; src: local("Noto Serif"), local("NotoSerif"), url("https://fonts.gstatic=
.com/s/notoserif/v4/G-mm5mDezDSs-RvEL7XAECEAvth_LlrfE80CYdSH47w.woff2") for=
mat("woff2"); unicode-range: U+102-103, U+1EA0-1EF9, U+20AB; }

@font-face { font-family: "Noto Serif"; font-style: normal; font-weight: 40=
0; src: local("Noto Serif"), local("NotoSerif"), url("https://fonts.gstatic=
.com/s/notoserif/v4/fVu1p3782bqS2z-CaJvp9iEAvth_LlrfE80CYdSH47w.woff2") for=
mat("woff2"); unicode-range: U+100-24F, U+1E00-1EFF, U+20A0-20AB, U+20AD-20=
CF, U+2C60-2C7F, U+A720-A7FF; }

@font-face { font-family: "Noto Serif"; font-style: normal; font-weight: 40=
0; src: local("Noto Serif"), local("NotoSerif"), url("https://fonts.gstatic=
.com/s/notoserif/v4/eCpfeMZI7q4jLksXVRWPQ_k_vArhqVIZ0nv9q090hN8.woff2") for=
mat("woff2"); unicode-range: U+0-FF, U+131, U+152-153, U+2C6, U+2DA, U+2DC,=
 U+2000-206F, U+2074, U+20AC, U+2212, U+2215; }

@font-face { font-family: "Noto Serif"; font-style: normal; font-weight: 70=
0; src: local("Noto Serif Bold"), local("NotoSerif-Bold"), url("https://fon=
ts.gstatic.com/s/notoserif/v4/lJAvZoKA5NttpPc9yc6lPede9INZm0R8ZMJUtfOsxrw.w=
off2") format("woff2"); unicode-range: U+460-52F, U+20B4, U+2DE0-2DFF, U+A6=
40-A69F; }

@font-face { font-family: "Noto Serif"; font-style: normal; font-weight: 70=
0; src: local("Noto Serif Bold"), local("NotoSerif-Bold"), url("https://fon=
ts.gstatic.com/s/notoserif/v4/lJAvZoKA5NttpPc9yc6lPbpHcMS0zZe4mIYvDKG2oeM.w=
off2") format("woff2"); unicode-range: U+400-45F, U+490-491, U+4B0-4B1, U+2=
116; }

@font-face { font-family: "Noto Serif"; font-style: normal; font-weight: 70=
0; src: local("Noto Serif Bold"), local("NotoSerif-Bold"), url("https://fon=
ts.gstatic.com/s/notoserif/v4/lJAvZoKA5NttpPc9yc6lPRquHyap-BLkxbFhcQRhghg.w=
off2") format("woff2"); unicode-range: U+1F00-1FFF; }

@font-face { font-family: "Noto Serif"; font-style: normal; font-weight: 70=
0; src: local("Noto Serif Bold"), local("NotoSerif-Bold"), url("https://fon=
ts.gstatic.com/s/notoserif/v4/lJAvZoKA5NttpPc9yc6lPTyJJ3dJfU6-XWVNf-DPRbs.w=
off2") format("woff2"); unicode-range: U+370-3FF; }

@font-face { font-family: "Noto Serif"; font-style: normal; font-weight: 70=
0; src: local("Noto Serif Bold"), local("NotoSerif-Bold"), url("https://fon=
ts.gstatic.com/s/notoserif/v4/lJAvZoKA5NttpPc9yc6lPTh33M2A-6X0bdu871ruAGs.w=
off2") format("woff2"); unicode-range: U+102-103, U+1EA0-1EF9, U+20AB; }

@font-face { font-family: "Noto Serif"; font-style: normal; font-weight: 70=
0; src: local("Noto Serif Bold"), local("NotoSerif-Bold"), url("https://fon=
ts.gstatic.com/s/notoserif/v4/lJAvZoKA5NttpPc9yc6lPRHJTnCUrjaAm2S9z52xC3Y.w=
off2") format("woff2"); unicode-range: U+100-24F, U+1E00-1EFF, U+20A0-20AB,=
 U+20AD-20CF, U+2C60-2C7F, U+A720-A7FF; }

@font-face { font-family: "Noto Serif"; font-style: normal; font-weight: 70=
0; src: local("Noto Serif Bold"), local("NotoSerif-Bold"), url("https://fon=
ts.gstatic.com/s/notoserif/v4/lJAvZoKA5NttpPc9yc6lPYWiMMZ7xLd792ULpGE4W_Y.w=
off2") format("woff2"); unicode-range: U+0-FF, U+131, U+152-153, U+2C6, U+2=
DA, U+2DC, U+2000-206F, U+2074, U+20AC, U+2212, U+2215; }

@font-face { font-family: "Noto Serif"; font-style: italic; font-weight: 40=
0; src: local("Noto Serif Italic"), local("NotoSerif-Italic"), url("https:/=
/fonts.gstatic.com/s/notoserif/v4/HQXBIwLHsOJCNEQeX9kNz6-j2U0lmluP9RWlSytm3=
ho.woff2") format("woff2"); unicode-range: U+460-52F, U+20B4, U+2DE0-2DFF, =
U+A640-A69F; }

@font-face { font-family: "Noto Serif"; font-style: italic; font-weight: 40=
0; src: local("Noto Serif Italic"), local("NotoSerif-Italic"), url("https:/=
/fonts.gstatic.com/s/notoserif/v4/HQXBIwLHsOJCNEQeX9kNz5X5f-9o1vgP2EXwfjgl7=
AY.woff2") format("woff2"); unicode-range: U+400-45F, U+490-491, U+4B0-4B1,=
 U+2116; }

@font-face { font-family: "Noto Serif"; font-style: italic; font-weight: 40=
0; src: local("Noto Serif Italic"), local("NotoSerif-Italic"), url("https:/=
/fonts.gstatic.com/s/notoserif/v4/HQXBIwLHsOJCNEQeX9kNzxWV49_lSm1NYrwo-zkhi=
vY.woff2") format("woff2"); unicode-range: U+1F00-1FFF; }

@font-face { font-family: "Noto Serif"; font-style: italic; font-weight: 40=
0; src: local("Noto Serif Italic"), local("NotoSerif-Italic"), url("https:/=
/fonts.gstatic.com/s/notoserif/v4/HQXBIwLHsOJCNEQeX9kNz6aRobkAwv3vxw3jMhVEN=
GA.woff2") format("woff2"); unicode-range: U+370-3FF; }

@font-face { font-family: "Noto Serif"; font-style: italic; font-weight: 40=
0; src: local("Noto Serif Italic"), local("NotoSerif-Italic"), url("https:/=
/fonts.gstatic.com/s/notoserif/v4/HQXBIwLHsOJCNEQeX9kNz_8zf_FOSsgRmwsS7Aa9k=
2w.woff2") format("woff2"); unicode-range: U+102-103, U+1EA0-1EF9, U+20AB; =
}

@font-face { font-family: "Noto Serif"; font-style: italic; font-weight: 40=
0; src: local("Noto Serif Italic"), local("NotoSerif-Italic"), url("https:/=
/fonts.gstatic.com/s/notoserif/v4/HQXBIwLHsOJCNEQeX9kNzz0LW-43aMEzIO6XUTLja=
d8.woff2") format("woff2"); unicode-range: U+100-24F, U+1E00-1EFF, U+20A0-2=
0AB, U+20AD-20CF, U+2C60-2C7F, U+A720-A7FF; }

@font-face { font-family: "Noto Serif"; font-style: italic; font-weight: 40=
0; src: local("Noto Serif Italic"), local("NotoSerif-Italic"), url("https:/=
/fonts.gstatic.com/s/notoserif/v4/HQXBIwLHsOJCNEQeX9kNz-gdm0LZdjqr5-oayXSOe=
fg.woff2") format("woff2"); unicode-range: U+0-FF, U+131, U+152-153, U+2C6,=
 U+2DA, U+2DC, U+2000-206F, U+2074, U+20AC, U+2212, U+2215; }

@font-face { font-family: "Noto Serif"; font-style: italic; font-weight: 70=
0; src: local("Noto Serif Bold Italic"), local("NotoSerif-BoldItalic"), url=
("https://fonts.gstatic.com/s/notoserif/v4/Wreg0Be4tcFGM2t6VWytvLPaLDTSXeXF=
RL0dx0NiHII.woff2") format("woff2"); unicode-range: U+460-52F, U+20B4, U+2D=
E0-2DFF, U+A640-A69F; }

@font-face { font-family: "Noto Serif"; font-style: italic; font-weight: 70=
0; src: local("Noto Serif Bold Italic"), local("NotoSerif-BoldItalic"), url=
("https://fonts.gstatic.com/s/notoserif/v4/Wreg0Be4tcFGM2t6VWytvNkZ6ofoXFVR=
94fBb90XSvU.woff2") format("woff2"); unicode-range: U+400-45F, U+490-491, U=
+4B0-4B1, U+2116; }

@font-face { font-family: "Noto Serif"; font-style: italic; font-weight: 70=
0; src: local("Noto Serif Bold Italic"), local("NotoSerif-BoldItalic"), url=
("https://fonts.gstatic.com/s/notoserif/v4/Wreg0Be4tcFGM2t6VWytvO0TTzR8Cjc_=
q-rx2cfsDws.woff2") format("woff2"); unicode-range: U+1F00-1FFF; }

@font-face { font-family: "Noto Serif"; font-style: italic; font-weight: 70=
0; src: local("Noto Serif Bold Italic"), local("NotoSerif-BoldItalic"), url=
("https://fonts.gstatic.com/s/notoserif/v4/Wreg0Be4tcFGM2t6VWytvLY42KghHoOJ=
T8APv0kV5JI.woff2") format("woff2"); unicode-range: U+370-3FF; }

@font-face { font-family: "Noto Serif"; font-style: italic; font-weight: 70=
0; src: local("Noto Serif Bold Italic"), local("NotoSerif-BoldItalic"), url=
("https://fonts.gstatic.com/s/notoserif/v4/Wreg0Be4tcFGM2t6VWytvBleLRUdNWOt=
q4SldHKv7HI.woff2") format("woff2"); unicode-range: U+102-103, U+1EA0-1EF9,=
 U+20AB; }

@font-face { font-family: "Noto Serif"; font-style: italic; font-weight: 70=
0; src: local("Noto Serif Bold Italic"), local("NotoSerif-BoldItalic"), url=
("https://fonts.gstatic.com/s/notoserif/v4/Wreg0Be4tcFGM2t6VWytvOIaMZP5eRGv=
EWe_CNIU_oY.woff2") format("woff2"); unicode-range: U+100-24F, U+1E00-1EFF,=
 U+20A0-20AB, U+20AD-20CF, U+2C60-2C7F, U+A720-A7FF; }

@font-face { font-family: "Noto Serif"; font-style: italic; font-weight: 70=
0; src: local("Noto Serif Bold Italic"), local("NotoSerif-BoldItalic"), url=
("https://fonts.gstatic.com/s/notoserif/v4/Wreg0Be4tcFGM2t6VWytvHNuWYKPzoeK=
l5tYj8yhly0.woff2") format("woff2"); unicode-range: U+0-FF, U+131, U+152-15=
3, U+2C6, U+2DA, U+2DC, U+2000-206F, U+2074, U+20AC, U+2212, U+2215; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 300=
; src: local("Open Sans Light"), local("OpenSans-Light"), url("https://font=
s.gstatic.com/s/opensans/v13/DXI1ORHCpsQm3Vp6mXoaTa-j2U0lmluP9RWlSytm3ho.wo=
ff2") format("woff2"); unicode-range: U+460-52F, U+20B4, U+2DE0-2DFF, U+A64=
0-A69F; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 300=
; src: local("Open Sans Light"), local("OpenSans-Light"), url("https://font=
s.gstatic.com/s/opensans/v13/DXI1ORHCpsQm3Vp6mXoaTZX5f-9o1vgP2EXwfjgl7AY.wo=
ff2") format("woff2"); unicode-range: U+400-45F, U+490-491, U+4B0-4B1, U+21=
16; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 300=
; src: local("Open Sans Light"), local("OpenSans-Light"), url("https://font=
s.gstatic.com/s/opensans/v13/DXI1ORHCpsQm3Vp6mXoaTRWV49_lSm1NYrwo-zkhivY.wo=
ff2") format("woff2"); unicode-range: U+1F00-1FFF; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 300=
; src: local("Open Sans Light"), local("OpenSans-Light"), url("https://font=
s.gstatic.com/s/opensans/v13/DXI1ORHCpsQm3Vp6mXoaTaaRobkAwv3vxw3jMhVENGA.wo=
ff2") format("woff2"); unicode-range: U+370-3FF; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 300=
; src: local("Open Sans Light"), local("OpenSans-Light"), url("https://font=
s.gstatic.com/s/opensans/v13/DXI1ORHCpsQm3Vp6mXoaTf8zf_FOSsgRmwsS7Aa9k2w.wo=
ff2") format("woff2"); unicode-range: U+102-103, U+1EA0-1EF9, U+20AB; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 300=
; src: local("Open Sans Light"), local("OpenSans-Light"), url("https://font=
s.gstatic.com/s/opensans/v13/DXI1ORHCpsQm3Vp6mXoaTT0LW-43aMEzIO6XUTLjad8.wo=
ff2") format("woff2"); unicode-range: U+100-24F, U+1E00-1EFF, U+20A0-20AB, =
U+20AD-20CF, U+2C60-2C7F, U+A720-A7FF; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 300=
; src: local("Open Sans Light"), local("OpenSans-Light"), url("https://font=
s.gstatic.com/s/opensans/v13/DXI1ORHCpsQm3Vp6mXoaTegdm0LZdjqr5-oayXSOefg.wo=
ff2") format("woff2"); unicode-range: U+0-FF, U+131, U+152-153, U+2C6, U+2D=
A, U+2DC, U+2000-206F, U+2074, U+20AC, U+2212, U+2215; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 400=
; src: local("Open Sans"), local("OpenSans"), url("https://fonts.gstatic.co=
m/s/opensans/v13/K88pR3goAWT7BTt32Z01mxJtnKITppOI_IvcXXDNrsc.woff2") format=
("woff2"); unicode-range: U+460-52F, U+20B4, U+2DE0-2DFF, U+A640-A69F; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 400=
; src: local("Open Sans"), local("OpenSans"), url("https://fonts.gstatic.co=
m/s/opensans/v13/RjgO7rYTmqiVp7vzi-Q5URJtnKITppOI_IvcXXDNrsc.woff2") format=
("woff2"); unicode-range: U+400-45F, U+490-491, U+4B0-4B1, U+2116; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 400=
; src: local("Open Sans"), local("OpenSans"), url("https://fonts.gstatic.co=
m/s/opensans/v13/LWCjsQkB6EMdfHrEVqA1KRJtnKITppOI_IvcXXDNrsc.woff2") format=
("woff2"); unicode-range: U+1F00-1FFF; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 400=
; src: local("Open Sans"), local("OpenSans"), url("https://fonts.gstatic.co=
m/s/opensans/v13/xozscpT2726on7jbcb_pAhJtnKITppOI_IvcXXDNrsc.woff2") format=
("woff2"); unicode-range: U+370-3FF; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 400=
; src: local("Open Sans"), local("OpenSans"), url("https://fonts.gstatic.co=
m/s/opensans/v13/59ZRklaO5bWGqF5A9baEERJtnKITppOI_IvcXXDNrsc.woff2") format=
("woff2"); unicode-range: U+102-103, U+1EA0-1EF9, U+20AB; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 400=
; src: local("Open Sans"), local("OpenSans"), url("https://fonts.gstatic.co=
m/s/opensans/v13/u-WUoqrET9fUeobQW7jkRRJtnKITppOI_IvcXXDNrsc.woff2") format=
("woff2"); unicode-range: U+100-24F, U+1E00-1EFF, U+20A0-20AB, U+20AD-20CF,=
 U+2C60-2C7F, U+A720-A7FF; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 400=
; src: local("Open Sans"), local("OpenSans"), url("https://fonts.gstatic.co=
m/s/opensans/v13/cJZKeOuBrn4kERxqtaUH3VtXRa8TVwTICgirnJhmVJw.woff2") format=
("woff2"); unicode-range: U+0-FF, U+131, U+152-153, U+2C6, U+2DA, U+2DC, U+=
2000-206F, U+2074, U+20AC, U+2212, U+2215; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 600=
; src: local("Open Sans Semibold"), local("OpenSans-Semibold"), url("https:=
//fonts.gstatic.com/s/opensans/v13/MTP_ySUJH_bn48VBG8sNSq-j2U0lmluP9RWlSytm=
3ho.woff2") format("woff2"); unicode-range: U+460-52F, U+20B4, U+2DE0-2DFF,=
 U+A640-A69F; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 600=
; src: local("Open Sans Semibold"), local("OpenSans-Semibold"), url("https:=
//fonts.gstatic.com/s/opensans/v13/MTP_ySUJH_bn48VBG8sNSpX5f-9o1vgP2EXwfjgl=
7AY.woff2") format("woff2"); unicode-range: U+400-45F, U+490-491, U+4B0-4B1=
, U+2116; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 600=
; src: local("Open Sans Semibold"), local("OpenSans-Semibold"), url("https:=
//fonts.gstatic.com/s/opensans/v13/MTP_ySUJH_bn48VBG8sNShWV49_lSm1NYrwo-zkh=
ivY.woff2") format("woff2"); unicode-range: U+1F00-1FFF; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 600=
; src: local("Open Sans Semibold"), local("OpenSans-Semibold"), url("https:=
//fonts.gstatic.com/s/opensans/v13/MTP_ySUJH_bn48VBG8sNSqaRobkAwv3vxw3jMhVE=
NGA.woff2") format("woff2"); unicode-range: U+370-3FF; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 600=
; src: local("Open Sans Semibold"), local("OpenSans-Semibold"), url("https:=
//fonts.gstatic.com/s/opensans/v13/MTP_ySUJH_bn48VBG8sNSv8zf_FOSsgRmwsS7Aa9=
k2w.woff2") format("woff2"); unicode-range: U+102-103, U+1EA0-1EF9, U+20AB;=
 }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 600=
; src: local("Open Sans Semibold"), local("OpenSans-Semibold"), url("https:=
//fonts.gstatic.com/s/opensans/v13/MTP_ySUJH_bn48VBG8sNSj0LW-43aMEzIO6XUTLj=
ad8.woff2") format("woff2"); unicode-range: U+100-24F, U+1E00-1EFF, U+20A0-=
20AB, U+20AD-20CF, U+2C60-2C7F, U+A720-A7FF; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 600=
; src: local("Open Sans Semibold"), local("OpenSans-Semibold"), url("https:=
//fonts.gstatic.com/s/opensans/v13/MTP_ySUJH_bn48VBG8sNSugdm0LZdjqr5-oayXSO=
efg.woff2") format("woff2"); unicode-range: U+0-FF, U+131, U+152-153, U+2C6=
, U+2DA, U+2DC, U+2000-206F, U+2074, U+20AC, U+2212, U+2215; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 300=
; src: local("Open Sans Light Italic"), local("OpenSansLight-Italic"), url(=
"https://fonts.gstatic.com/s/opensans/v13/PRmiXeptR36kaC0GEAetxhgVThLs8Y7ET=
JzDCYFCSLE.woff2") format("woff2"); unicode-range: U+460-52F, U+20B4, U+2DE=
0-2DFF, U+A640-A69F; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 300=
; src: local("Open Sans Light Italic"), local("OpenSansLight-Italic"), url(=
"https://fonts.gstatic.com/s/opensans/v13/PRmiXeptR36kaC0GEAetxpiMaisvaUVUs=
YyVzOmndek.woff2") format("woff2"); unicode-range: U+400-45F, U+490-491, U+=
4B0-4B1, U+2116; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 300=
; src: local("Open Sans Light Italic"), local("OpenSansLight-Italic"), url(=
"https://fonts.gstatic.com/s/opensans/v13/PRmiXeptR36kaC0GEAetxrBAWGjcah5Ky=
0jbCgIwDB8.woff2") format("woff2"); unicode-range: U+1F00-1FFF; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 300=
; src: local("Open Sans Light Italic"), local("OpenSansLight-Italic"), url(=
"https://fonts.gstatic.com/s/opensans/v13/PRmiXeptR36kaC0GEAetxv14vlcfyPYlA=
cQy2UfDRm4.woff2") format("woff2"); unicode-range: U+370-3FF; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 300=
; src: local("Open Sans Light Italic"), local("OpenSansLight-Italic"), url(=
"https://fonts.gstatic.com/s/opensans/v13/PRmiXeptR36kaC0GEAetxqfJul7RR1X4p=
oJgi27uS4w.woff2") format("woff2"); unicode-range: U+102-103, U+1EA0-1EF9, =
U+20AB; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 300=
; src: local("Open Sans Light Italic"), local("OpenSansLight-Italic"), url(=
"https://fonts.gstatic.com/s/opensans/v13/PRmiXeptR36kaC0GEAetxqvyPXdneeGd2=
6m9EmFSSWg.woff2") format("woff2"); unicode-range: U+100-24F, U+1E00-1EFF, =
U+20A0-20AB, U+20AD-20CF, U+2C60-2C7F, U+A720-A7FF; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 300=
; src: local("Open Sans Light Italic"), local("OpenSansLight-Italic"), url(=
"https://fonts.gstatic.com/s/opensans/v13/PRmiXeptR36kaC0GEAetxko2lTMeWA_km=
IyWrkNCwPc.woff2") format("woff2"); unicode-range: U+0-FF, U+131, U+152-153=
, U+2C6, U+2DA, U+2DC, U+2000-206F, U+2074, U+20AC, U+2212, U+2215; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 400=
; src: local("Open Sans Italic"), local("OpenSans-Italic"), url("https://fo=
nts.gstatic.com/s/opensans/v13/xjAJXh38I15wypJXxuGMBjTOQ_MqJVwkKsUn0wKzc2I.=
woff2") format("woff2"); unicode-range: U+460-52F, U+20B4, U+2DE0-2DFF, U+A=
640-A69F; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 400=
; src: local("Open Sans Italic"), local("OpenSans-Italic"), url("https://fo=
nts.gstatic.com/s/opensans/v13/xjAJXh38I15wypJXxuGMBjUj_cnvWIuuBMVgbX098Mw.=
woff2") format("woff2"); unicode-range: U+400-45F, U+490-491, U+4B0-4B1, U+=
2116; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 400=
; src: local("Open Sans Italic"), local("OpenSans-Italic"), url("https://fo=
nts.gstatic.com/s/opensans/v13/xjAJXh38I15wypJXxuGMBkbcKLIaa1LC45dFaAfauRA.=
woff2") format("woff2"); unicode-range: U+1F00-1FFF; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 400=
; src: local("Open Sans Italic"), local("OpenSans-Italic"), url("https://fo=
nts.gstatic.com/s/opensans/v13/xjAJXh38I15wypJXxuGMBmo_sUJ8uO4YLWRInS22T3Y.=
woff2") format("woff2"); unicode-range: U+370-3FF; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 400=
; src: local("Open Sans Italic"), local("OpenSans-Italic"), url("https://fo=
nts.gstatic.com/s/opensans/v13/xjAJXh38I15wypJXxuGMBr6up8jxqWt8HVA3mDhkV_0.=
woff2") format("woff2"); unicode-range: U+102-103, U+1EA0-1EF9, U+20AB; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 400=
; src: local("Open Sans Italic"), local("OpenSans-Italic"), url("https://fo=
nts.gstatic.com/s/opensans/v13/xjAJXh38I15wypJXxuGMBiYE0-AqJ3nfInTTiDXDjU4.=
woff2") format("woff2"); unicode-range: U+100-24F, U+1E00-1EFF, U+20A0-20AB=
, U+20AD-20CF, U+2C60-2C7F, U+A720-A7FF; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 400=
; src: local("Open Sans Italic"), local("OpenSans-Italic"), url("https://fo=
nts.gstatic.com/s/opensans/v13/xjAJXh38I15wypJXxuGMBo4P5ICox8Kq3LLUNMylGO4.=
woff2") format("woff2"); unicode-range: U+0-FF, U+131, U+152-153, U+2C6, U+=
2DA, U+2DC, U+2000-206F, U+2074, U+20AC, U+2212, U+2215; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 600=
; src: local("Open Sans Semibold Italic"), local("OpenSans-SemiboldItalic")=
, url("https://fonts.gstatic.com/s/opensans/v13/PRmiXeptR36kaC0GEAetxmgpAmO=
CqD37_tyH_8Ri5MM.woff2") format("woff2"); unicode-range: U+460-52F, U+20B4,=
 U+2DE0-2DFF, U+A640-A69F; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 600=
; src: local("Open Sans Semibold Italic"), local("OpenSans-SemiboldItalic")=
, url("https://fonts.gstatic.com/s/opensans/v13/PRmiXeptR36kaC0GEAetxsPNMTL=
bnS9uQzHQlYieHUU.woff2") format("woff2"); unicode-range: U+400-45F, U+490-4=
91, U+4B0-4B1, U+2116; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 600=
; src: local("Open Sans Semibold Italic"), local("OpenSans-SemiboldItalic")=
, url("https://fonts.gstatic.com/s/opensans/v13/PRmiXeptR36kaC0GEAetxgyhumQ=
nPMBCoGYhRaNxyyY.woff2") format("woff2"); unicode-range: U+1F00-1FFF; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 600=
; src: local("Open Sans Semibold Italic"), local("OpenSans-SemiboldItalic")=
, url("https://fonts.gstatic.com/s/opensans/v13/PRmiXeptR36kaC0GEAetxhUVAXE=
dVvYDDqrz3aeR0Yc.woff2") format("woff2"); unicode-range: U+370-3FF; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 600=
; src: local("Open Sans Semibold Italic"), local("OpenSans-SemiboldItalic")=
, url("https://fonts.gstatic.com/s/opensans/v13/PRmiXeptR36kaC0GEAetxlf4y_3=
s5bcYyyLIFUSWYUU.woff2") format("woff2"); unicode-range: U+102-103, U+1EA0-=
1EF9, U+20AB; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 600=
; src: local("Open Sans Semibold Italic"), local("OpenSans-SemiboldItalic")=
, url("https://fonts.gstatic.com/s/opensans/v13/PRmiXeptR36kaC0GEAetxnywqdt=
BbUHn3VPgzuFrCy8.woff2") format("woff2"); unicode-range: U+100-24F, U+1E00-=
1EFF, U+20A0-20AB, U+20AD-20CF, U+2C60-2C7F, U+A720-A7FF; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 600=
; src: local("Open Sans Semibold Italic"), local("OpenSans-SemiboldItalic")=
, url("https://fonts.gstatic.com/s/opensans/v13/PRmiXeptR36kaC0GEAetxl2umOy=
RU7PgRiv8DXcgJjk.woff2") format("woff2"); unicode-range: U+0-FF, U+131, U+1=
52-153, U+2C6, U+2DA, U+2DC, U+2000-206F, U+2074, U+20AC, U+2212, U+2215; }
------MultipartBoundary--kNTC2G33TKXM0ZeBhbnnHiSRImEoCfPtQPV8fXqcOt------
